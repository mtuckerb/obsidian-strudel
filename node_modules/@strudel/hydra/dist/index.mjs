import { getDrawContext as r } from "@strudel/draw";
import { controls as i, reify as m, getTime as c } from "@strudel/core";
let a, t;
async function u(e = {}) {
  if (a && JSON.stringify(a) !== JSON.stringify(e) && document.getElementById("hydra-canvas")?.remove(), a = e, !document.getElementById("hydra-canvas")) {
    const {
      src: o = "https://unpkg.com/hydra-synth",
      feedStrudel: d = !1,
      contextType: l = "webgl",
      pixelRatio: y = 1,
      pixelated: h = !0,
      ...n
    } = {
      detectAudio: !1,
      ...e
    }, { canvas: f } = r("hydra-canvas", { contextType: l, pixelRatio: y, pixelated: h });
    if (n.canvas = f, await import(
      /* @vite-ignore */
      o
    ), t = new Hydra(n), d) {
      const { canvas: s } = r();
      s.style.display = "none", t.synth.s0.init({ src: s });
    }
  }
}
function v() {
  t && t.hush(), globalThis.s0?.clear(), document.getElementById("hydra-canvas")?.remove(), globalThis.speed = i.speed, globalThis.shape = i.shape;
}
const x = (e) => () => m(e).queryArc(c(), c())[0].value;
export {
  x as H,
  v as clearHydra,
  u as initHydra
};
