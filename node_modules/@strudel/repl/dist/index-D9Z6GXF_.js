typeof BigInt > "u" && (BigInt = function(t) {
  if (isNaN(t)) throw new Error("");
  return t;
});
const Re = BigInt(0), Ge = BigInt(1), yo = BigInt(2), up = BigInt(5), In = BigInt(10), KD = 2e3, ve = {
  s: Ge,
  n: Re,
  d: Ge
};
function yi(t, e) {
  try {
    t = BigInt(t);
  } catch {
    throw Li();
  }
  return t * e;
}
function Lr(t) {
  return typeof t == "bigint" ? t : Math.floor(t);
}
function Lt(t, e) {
  if (e === Re)
    throw $f();
  const n = Object.create(_t.prototype);
  n.s = t < Re ? -Ge : Ge, t = t < Re ? -t : t;
  const r = ys(t, e);
  return n.n = t / r, n.d = e / r, n;
}
function Ws(t) {
  const e = {};
  let n = t, r = yo, i = up - Ge;
  for (; i <= n; ) {
    for (; n % r === Re; )
      n /= r, e[r] = (e[r] || Re) + Ge;
    i += Ge + yo * r++;
  }
  return n !== t ? n > 1 && (e[n] = (e[n] || Re) + Ge) : e[t] = (e[t] || Re) + Ge, e;
}
const bn = function(t, e) {
  let n = Re, r = Ge, i = Ge;
  if (t != null) if (e !== void 0) {
    if (typeof t == "bigint")
      n = t;
    else {
      if (isNaN(t))
        throw Li();
      if (t % 1 !== 0)
        throw Sm();
      n = BigInt(t);
    }
    if (typeof e == "bigint")
      r = e;
    else {
      if (isNaN(e))
        throw Li();
      if (e % 1 !== 0)
        throw Sm();
      r = BigInt(e);
    }
    i = n * r;
  } else if (typeof t == "object") {
    if ("d" in t && "n" in t)
      n = BigInt(t.n), r = BigInt(t.d), "s" in t && (n *= BigInt(t.s));
    else if (0 in t)
      n = BigInt(t[0]), 1 in t && (r = BigInt(t[1]));
    else if (typeof t == "bigint")
      n = t;
    else
      throw Li();
    i = n * r;
  } else if (typeof t == "number") {
    if (isNaN(t))
      throw Li();
    if (t < 0 && (i = -Ge, t = -t), t % 1 === 0)
      n = BigInt(t);
    else if (t > 0) {
      let s = 1, a = 0, o = 1, l = 1, c = 1, h = 1e7;
      for (t >= 1 && (s = 10 ** Math.floor(1 + Math.log10(t)), t /= s); o <= h && c <= h; ) {
        let f = (a + l) / (o + c);
        if (t === f) {
          o + c <= h ? (n = a + l, r = o + c) : c > o ? (n = l, r = c) : (n = a, r = o);
          break;
        } else
          t > f ? (a += l, o += c) : (l += a, c += o), o > h ? (n = l, r = c) : (n = a, r = o);
      }
      n = BigInt(n) * BigInt(s), r = BigInt(r);
    }
  } else if (typeof t == "string") {
    let s = 0, a = Re, o = Re, l = Re, c = Ge, h = Ge, f = t.replace(/_/g, "").match(/\d+|./g);
    if (f === null)
      throw Li();
    if (f[s] === "-" ? (i = -Ge, s++) : f[s] === "+" && s++, f.length === s + 1 ? o = yi(f[s++], i) : f[s + 1] === "." || f[s] === "." ? (f[s] !== "." && (a = yi(f[s++], i)), s++, (s + 1 === f.length || f[s + 1] === "(" && f[s + 3] === ")" || f[s + 1] === "'" && f[s + 3] === "'") && (o = yi(f[s], i), c = In ** BigInt(f[s].length), s++), (f[s] === "(" && f[s + 2] === ")" || f[s] === "'" && f[s + 2] === "'") && (l = yi(f[s + 1], i), h = In ** BigInt(f[s + 1].length) - Ge, s += 3)) : f[s + 1] === "/" || f[s + 1] === ":" ? (o = yi(f[s], i), c = yi(f[s + 2], Ge), s += 3) : f[s + 3] === "/" && f[s + 1] === " " && (a = yi(f[s], i), o = yi(f[s + 2], i), c = yi(f[s + 4], Ge), s += 5), f.length <= s)
      r = c * h, i = /* void */
      n = l + r * a + h * o;
    else
      throw Li();
  } else if (typeof t == "bigint")
    n = t, i = t, r = Ge;
  else
    throw Li();
  if (r === Re)
    throw $f();
  ve.s = i < Re ? -Ge : Ge, ve.n = n < Re ? -n : n, ve.d = r < Re ? -r : r;
};
function JD(t, e, n) {
  let r = Ge;
  for (; e > Re; t = t * t % n, e >>= Ge)
    e & Ge && (r = r * t % n);
  return r;
}
function eP(t, e) {
  for (; e % yo === Re; e /= yo)
    ;
  for (; e % up === Re; e /= up)
    ;
  if (e === Ge)
    return Re;
  let n = In % e, r = 1;
  for (; n !== Ge; r++)
    if (n = n * In % e, r > KD)
      return Re;
  return BigInt(r);
}
function tP(t, e, n) {
  let r = Ge, i = JD(In, n, e);
  for (let s = 0; s < 300; s++) {
    if (r === i)
      return BigInt(s);
    r = r * In % e, i = i * In % e;
  }
  return 0;
}
function ys(t, e) {
  if (!t)
    return e;
  if (!e)
    return t;
  for (; ; ) {
    if (t %= e, !t)
      return e;
    if (e %= t, !e)
      return t;
  }
}
function _t(t, e) {
  if (bn(t, e), this instanceof _t)
    t = ys(ve.d, ve.n), this.s = ve.s, this.n = ve.n / t, this.d = ve.d / t;
  else
    return Lt(ve.s * ve.n, ve.d);
}
var $f = function() {
  return new Error("Division by Zero");
}, Li = function() {
  return new Error("Invalid argument");
}, Sm = function() {
  return new Error("Parameters must be integer");
};
_t.prototype = {
  s: Ge,
  n: Re,
  d: Ge,
  /**
   * Calculates the absolute value
   *
   * Ex: new Fraction(-4).abs() => 4
   **/
  abs: function() {
    return Lt(this.n, this.d);
  },
  /**
   * Inverts the sign of the current fraction
   *
   * Ex: new Fraction(-4).neg() => 4
   **/
  neg: function() {
    return Lt(-this.s * this.n, this.d);
  },
  /**
   * Adds two rational numbers
   *
   * Ex: new Fraction({n: 2, d: 3}).add("14.9") => 467 / 30
   **/
  add: function(t, e) {
    return bn(t, e), Lt(
      this.s * this.n * ve.d + ve.s * this.d * ve.n,
      this.d * ve.d
    );
  },
  /**
   * Subtracts two rational numbers
   *
   * Ex: new Fraction({n: 2, d: 3}).add("14.9") => -427 / 30
   **/
  sub: function(t, e) {
    return bn(t, e), Lt(
      this.s * this.n * ve.d - ve.s * this.d * ve.n,
      this.d * ve.d
    );
  },
  /**
   * Multiplies two rational numbers
   *
   * Ex: new Fraction("-17.(345)").mul(3) => 5776 / 111
   **/
  mul: function(t, e) {
    return bn(t, e), Lt(
      this.s * ve.s * this.n * ve.n,
      this.d * ve.d
    );
  },
  /**
   * Divides two rational numbers
   *
   * Ex: new Fraction("-17.(345)").inverse().div(3)
   **/
  div: function(t, e) {
    return bn(t, e), Lt(
      this.s * ve.s * this.n * ve.d,
      this.d * ve.n
    );
  },
  /**
   * Clones the actual object
   *
   * Ex: new Fraction("-17.(345)").clone()
   **/
  clone: function() {
    return Lt(this.s * this.n, this.d);
  },
  /**
   * Calculates the modulo of two rational numbers - a more precise fmod
   *
   * Ex: new Fraction('4.(3)').mod([7, 8]) => (13/3) % (7/8) = (5/6)
   * Ex: new Fraction(20, 10).mod().equals(0) ? "is Integer"
   **/
  mod: function(t, e) {
    if (t === void 0)
      return Lt(this.s * this.n % this.d, Ge);
    if (bn(t, e), Re === ve.n * this.d)
      throw $f();
    return Lt(
      this.s * (ve.d * this.n) % (ve.n * this.d),
      ve.d * this.d
    );
  },
  /**
   * Calculates the fractional gcd of two rational numbers
   *
   * Ex: new Fraction(5,8).gcd(3,7) => 1/56
   */
  gcd: function(t, e) {
    return bn(t, e), Lt(ys(ve.n, this.n) * ys(ve.d, this.d), ve.d * this.d);
  },
  /**
   * Calculates the fractional lcm of two rational numbers
   *
   * Ex: new Fraction(5,8).lcm(3,7) => 15
   */
  lcm: function(t, e) {
    return bn(t, e), ve.n === Re && this.n === Re ? Lt(Re, Ge) : Lt(ve.n * this.n, ys(ve.n, this.n) * ys(ve.d, this.d));
  },
  /**
   * Gets the inverse of the fraction, means numerator and denominator are exchanged
   *
   * Ex: new Fraction([-3, 4]).inverse() => -4 / 3
   **/
  inverse: function() {
    return Lt(this.s * this.d, this.n);
  },
  /**
   * Calculates the fraction to some integer exponent
   *
   * Ex: new Fraction(-1,2).pow(-3) => -8
   */
  pow: function(t, e) {
    if (bn(t, e), ve.d === Ge)
      return ve.s < Re ? Lt((this.s * this.d) ** ve.n, this.n ** ve.n) : Lt((this.s * this.n) ** ve.n, this.d ** ve.n);
    if (this.s < Re) return null;
    let n = Ws(this.n), r = Ws(this.d), i = Ge, s = Ge;
    for (let a in n)
      if (a !== "1") {
        if (a === "0") {
          i = Re;
          break;
        }
        if (n[a] *= ve.n, n[a] % ve.d === Re)
          n[a] /= ve.d;
        else return null;
        i *= BigInt(a) ** n[a];
      }
    for (let a in r)
      if (a !== "1") {
        if (r[a] *= ve.n, r[a] % ve.d === Re)
          r[a] /= ve.d;
        else return null;
        s *= BigInt(a) ** r[a];
      }
    return ve.s < Re ? Lt(s, i) : Lt(i, s);
  },
  /**
   * Calculates the logarithm of a fraction to a given rational base
   *
   * Ex: new Fraction(27, 8).log(9, 4) => 3/2
   */
  log: function(t, e) {
    if (bn(t, e), this.s <= Re || ve.s <= Re) return null;
    const n = {}, r = Ws(ve.n), i = Ws(ve.d), s = Ws(this.n), a = Ws(this.d);
    for (const c in i)
      r[c] = (r[c] || Re) - i[c];
    for (const c in a)
      s[c] = (s[c] || Re) - a[c];
    for (const c in r)
      c !== "1" && (n[c] = !0);
    for (const c in s)
      c !== "1" && (n[c] = !0);
    let o = null, l = null;
    for (const c in n) {
      const h = r[c] || Re, f = s[c] || Re;
      if (h === Re) {
        if (f !== Re)
          return null;
        continue;
      }
      let m = f, y = h;
      const x = ys(m, y);
      if (m /= x, y /= x, o === null && l === null)
        o = m, l = y;
      else if (m * l !== o * y)
        return null;
    }
    return o !== null && l !== null ? Lt(o, l) : null;
  },
  /**
   * Check if two rational numbers are the same
   *
   * Ex: new Fraction(19.6).equals([98, 5]);
   **/
  equals: function(t, e) {
    return bn(t, e), this.s * this.n * ve.d === ve.s * ve.n * this.d;
  },
  /**
   * Check if this rational number is less than another
   *
   * Ex: new Fraction(19.6).lt([98, 5]);
   **/
  lt: function(t, e) {
    return bn(t, e), this.s * this.n * ve.d < ve.s * ve.n * this.d;
  },
  /**
   * Check if this rational number is less than or equal another
   *
   * Ex: new Fraction(19.6).lt([98, 5]);
   **/
  lte: function(t, e) {
    return bn(t, e), this.s * this.n * ve.d <= ve.s * ve.n * this.d;
  },
  /**
   * Check if this rational number is greater than another
   *
   * Ex: new Fraction(19.6).lt([98, 5]);
   **/
  gt: function(t, e) {
    return bn(t, e), this.s * this.n * ve.d > ve.s * ve.n * this.d;
  },
  /**
   * Check if this rational number is greater than or equal another
   *
   * Ex: new Fraction(19.6).lt([98, 5]);
   **/
  gte: function(t, e) {
    return bn(t, e), this.s * this.n * ve.d >= ve.s * ve.n * this.d;
  },
  /**
   * Compare two rational numbers
   * < 0 iff this < that
   * > 0 iff this > that
   * = 0 iff this = that
   *
   * Ex: new Fraction(19.6).compare([98, 5]);
   **/
  compare: function(t, e) {
    bn(t, e);
    let n = this.s * this.n * ve.d - ve.s * ve.n * this.d;
    return (Re < n) - (n < Re);
  },
  /**
   * Calculates the ceil of a rational number
   *
   * Ex: new Fraction('4.(3)').ceil() => (5 / 1)
   **/
  ceil: function(t) {
    return t = In ** BigInt(t || 0), Lt(
      Lr(this.s * t * this.n / this.d) + (t * this.n % this.d > Re && this.s >= Re ? Ge : Re),
      t
    );
  },
  /**
   * Calculates the floor of a rational number
   *
   * Ex: new Fraction('4.(3)').floor() => (4 / 1)
   **/
  floor: function(t) {
    return t = In ** BigInt(t || 0), Lt(
      Lr(this.s * t * this.n / this.d) - (t * this.n % this.d > Re && this.s < Re ? Ge : Re),
      t
    );
  },
  /**
   * Rounds a rational numbers
   *
   * Ex: new Fraction('4.(3)').round() => (4 / 1)
   **/
  round: function(t) {
    return t = In ** BigInt(t || 0), Lt(
      Lr(this.s * t * this.n / this.d) + this.s * ((this.s >= Re ? Ge : Re) + yo * (t * this.n % this.d) > this.d ? Ge : Re),
      t
    );
  },
  /**
    * Rounds a rational number to a multiple of another rational number
    *
    * Ex: new Fraction('0.9').roundTo("1/8") => 7 / 8
    **/
  roundTo: function(t, e) {
    bn(t, e);
    const n = this.n * ve.d, r = this.d * ve.n, i = n % r;
    let s = Lr(n / r);
    return i + i >= r && s++, Lt(this.s * s * ve.n, ve.d);
  },
  /**
   * Check if two rational numbers are divisible
   *
   * Ex: new Fraction(19.6).divisible(1.5);
   */
  divisible: function(t, e) {
    return bn(t, e), !(!(ve.n * this.d) || this.n * ve.d % (ve.n * this.d));
  },
  /**
   * Returns a decimal representation of the fraction
   *
   * Ex: new Fraction("100.'91823'").valueOf() => 100.91823918239183
   **/
  valueOf: function() {
    return Number(this.s * this.n) / Number(this.d);
  },
  /**
   * Creates a string representation of a fraction with all digits
   *
   * Ex: new Fraction("100.'91823'").toString() => "100.(91823)"
   **/
  toString: function(t) {
    let e = this.n, n = this.d;
    t = t || 15;
    let r = eP(e, n), i = tP(e, n, r), s = this.s < Re ? "-" : "";
    if (s += Lr(e / n), e %= n, e *= In, e && (s += "."), r) {
      for (let a = i; a--; )
        s += Lr(e / n), e %= n, e *= In;
      s += "(";
      for (let a = r; a--; )
        s += Lr(e / n), e %= n, e *= In;
      s += ")";
    } else
      for (let a = t; e && a--; )
        s += Lr(e / n), e %= n, e *= In;
    return s;
  },
  /**
   * Returns a string-fraction representation of a Fraction object
   *
   * Ex: new Fraction("1.'3'").toFraction() => "4 1/3"
   **/
  toFraction: function(t) {
    let e = this.n, n = this.d, r = this.s < Re ? "-" : "";
    if (n === Ge)
      r += e;
    else {
      let i = Lr(e / n);
      t && i > Re && (r += i, r += " ", e %= n), r += e, r += "/", r += n;
    }
    return r;
  },
  /**
   * Returns a latex representation of a Fraction object
   *
   * Ex: new Fraction("1.'3'").toLatex() => "\frac{4}{3}"
   **/
  toLatex: function(t) {
    let e = this.n, n = this.d, r = this.s < Re ? "-" : "";
    if (n === Ge)
      r += e;
    else {
      let i = Lr(e / n);
      t && i > Re && (r += i, e %= n), r += "\\frac{", r += e, r += "}{", r += n, r += "}";
    }
    return r;
  },
  /**
   * Returns an array of continued fraction elements
   *
   * Ex: new Fraction("7/8").toContinued() => [0,1,7]
   */
  toContinued: function() {
    let t = this.n, e = this.d, n = [];
    do {
      n.push(Lr(t / e));
      let r = t % e;
      t = e, e = r;
    } while (t !== Ge);
    return n;
  },
  simplify: function(t) {
    const e = BigInt(1 / (t || 1e-3) | 0), n = this.abs(), r = n.toContinued();
    for (let i = 1; i < r.length; i++) {
      let s = Lt(r[i - 1], Ge);
      for (let o = i - 2; o >= 0; o--)
        s = s.inverse().add(r[o]);
      let a = s.sub(n);
      if (a.n * e < a.d)
        return s.mul(this.s);
    }
    return this;
  }
};
const Zf = "strudel.log";
let nP = 1e3, Am, Dm;
function En(t, e, n = {}) {
  let r = performance.now();
  Am === t && r - Dm < nP || (Am = t, Dm = r, console.log(`%c${t}`, "background-color: black;color:white;border-radius:15px"), typeof document < "u" && typeof CustomEvent < "u" && document.dispatchEvent(
    new CustomEvent(Zf, {
      detail: {
        message: t,
        type: e,
        data: n
      }
    })
  ));
}
En.key = Zf;
const rP = (t) => /^[a-gA-G][#bs]*[0-9]$/.test(t), fc = (t) => /^[a-gA-G][#bsf]*[0-9]?$/.test(t), ub = (t) => {
  if (typeof t != "string")
    return [];
  const [e, n = "", r] = t.match(/^([a-gA-G])([#bsf]*)([0-9]*)$/)?.slice(1) || [];
  return e ? [e, n, r ? Number(r) : void 0] : [];
}, iP = { c: 0, d: 2, e: 4, f: 5, g: 7, a: 9, b: 11 }, sP = { "#": 1, b: -1, s: 1, f: -1 }, _s = (t, e = 3) => {
  const [n, r, i = e] = ub(t);
  if (!n)
    throw new Error('not a note: "' + t + '"');
  const s = iP[n.toLowerCase()], a = r?.split("").reduce((o, l) => o + sP[l], 0) || 0;
  return (Number(i) + 1) * 12 + s + a;
}, Es = (t) => Math.pow(2, (t - 69) / 12) * 440, Lf = (t) => 12 * Math.log(t / 440) / Math.LN2 + 69, cb = (t, e) => {
  if (typeof t != "object")
    throw new Error("valueToMidi: expected object value");
  let { freq: n, note: r } = t;
  if (typeof n == "number")
    return Lf(n);
  if (typeof r == "string")
    return _s(r);
  if (typeof r == "number")
    return r;
  if (!e)
    throw new Error("valueToMidi: expected freq or note to be set");
  return e;
}, aP = (t, e) => (t - e) * 1e3, hb = (t) => Es(typeof t == "number" ? t : _s(t)), oP = ["C", "Db", "D", "Eb", "E", "F", "Gb", "G", "Ab", "A", "Bb", "B"], lP = (t) => {
  const e = Math.floor(t / 12) - 1;
  return oP[t % 12] + e;
}, Zo = (t, e) => (t % e + e) % e, pb = (t) => t.reduce((e, n) => e + n) / t.length;
function fb(t, e = 0) {
  return isNaN(Number(t)) ? (En(`"${t}" is not a number, falling back to ${e}`, "warning"), e) : t;
}
const uP = (t, e) => Zo(Math.round(fb(t ?? 0, 0)), e), cP = (t) => {
  let { value: e, context: n } = t, r = e;
  if (typeof r == "object" && !Array.isArray(r) && (r = r.note || r.n || r.value, r === void 0))
    throw new Error(`cannot find a playable note for ${JSON.stringify(e)}`);
  if (typeof r == "number" && n.type !== "frequency")
    r = Es(t.value);
  else if (typeof r == "number" && n.type === "frequency")
    r = t.value;
  else if (typeof r != "string" || !fc(r))
    throw new Error("not a note: " + JSON.stringify(r));
  return r;
}, db = (t) => {
  let { value: e, context: n } = t;
  if (typeof e == "object")
    return e.freq ? e.freq : hb(e.note || e.n || e.value);
  if (typeof e == "number" && n.type !== "frequency")
    e = Es(t.value);
  else if (typeof e == "string" && fc(e))
    e = Es(_s(t.value));
  else if (typeof e != "number")
    throw new Error("not a note or frequency: " + e);
  return e;
}, mb = (t, e) => t.slice(e).concat(t.slice(0, e)), gb = (...t) => t.reduce(
  (e, n) => (...r) => e(n(...r)),
  (e) => e
), hP = (...t) => gb(...t.reverse()), Pa = (t) => t.filter((e) => e != null), wi = (t) => [].concat(...t), Hs = (t) => t, pP = (t, e) => t, If = (t, e) => Array.from({ length: e - t + 1 }, (n, r) => r + t);
function Ke(t, e, n = t.length) {
  const r = function i(...s) {
    if (s.length >= n)
      return t.apply(this, s);
    {
      const a = function(...o) {
        return i.apply(this, s.concat(o));
      };
      return e && e(a, s), a;
    }
  };
  return e && e(r, []), r;
}
function Nf(t) {
  const e = Number(t);
  if (!isNaN(e))
    return e;
  if (fc(t))
    return _s(t);
  throw new Error(`cannot parse as numeral: "${t}"`);
}
function Vf(t, e) {
  return (...n) => t(...n.map(e));
}
function ar(t) {
  return Vf(t, Nf);
}
function bb(t) {
  const e = Number(t);
  if (!isNaN(e))
    return e;
  const n = {
    pi: Math.PI,
    w: 1,
    h: 0.5,
    q: 0.25,
    e: 0.125,
    s: 0.0625,
    t: 1 / 3,
    f: 0.2,
    x: 1 / 6
  }[t];
  if (typeof n < "u")
    return n;
  throw new Error(`cannot parse as fractional: "${t}"`);
}
const fP = (t) => Vf(t, bb), Xf = function(t, e) {
  return [e.slice(0, t), e.slice(t)];
}, Wf = (t, e, n) => e.map((r, i) => t(r, n[i])), yb = function(t) {
  const e = [];
  for (let n = 0; n < t.length - 1; ++n)
    e.push([t[n], t[n + 1]]);
  return e;
}, dc = (t, e, n) => Math.min(Math.max(t, e), n), dP = ["Do", "Reb", "Re", "Mib", "Mi", "Fa", "Solb", "Sol", "Lab", "La", "Sib", "Si"], mP = [
  "Sa",
  "Re",
  "Ga",
  "Ma",
  "Pa",
  "Dha",
  "Ni"
], gP = ["C", "Db", "D", "Eb", "E", "F", "Gb", "G", "Ab", "A", "Hb", "H"], bP = [
  "Ni",
  "Pab",
  "Pa",
  "Voub",
  "Vou",
  "Ga",
  "Dib",
  "Di",
  "Keb",
  "Ke",
  "Zob",
  "Zo"
], yP = [
  "I",
  "Ro",
  "Ha",
  "Ni",
  "Ho",
  "He",
  "To"
], OP = ["C", "Db", "D", "Eb", "E", "F", "Gb", "G", "Ab", "A", "Bb", "B"], vP = (t, e = "letters") => {
  const r = (e === "solfeggio" ? dP : e === "indian" ? mP : e === "german" ? gP : e === "byzantine" ? bP : e === "japanese" ? yP : OP)[t % 12], i = Math.floor(t / 12) - 1;
  return r + i;
};
function xP(t) {
  var e = {};
  return t.filter(function(n) {
    return e.hasOwn(n) ? !1 : e[n] = !0;
  });
}
function kP(t) {
  return t.sort().filter(function(e, n, r) {
    return !n || e != r[n - 1];
  });
}
function Ob(t) {
  return t.sort((e, n) => e.compare(n)).filter(function(e, n, r) {
    return !n || e.ne(r[n - 1]);
  });
}
function vb(t) {
  const e = new TextEncoder().encode(t);
  return btoa(String.fromCharCode(...e));
}
function xb(t) {
  const e = new Uint8Array(
    atob(t).split("").map((r) => r.charCodeAt(0))
  );
  return new TextDecoder().decode(e);
}
function wP(t) {
  return encodeURIComponent(vb(t));
}
function CP(t) {
  return xb(decodeURIComponent(t));
}
function kb(t, e) {
  return Array.isArray(t) ? t.map(e) : Object.fromEntries(Object.entries(t).map(([n, r], i) => [n, e(r, n, i)]));
}
function cp(t, e) {
  return t / e;
}
class wb {
  constructor({
    getTargetClockTime: e = AP,
    weight: n = 16,
    offsetDelta: r = 5e-3,
    checkAfterTime: i = 2,
    resetAfterTime: s = 8
  }) {
    this.offsetTime, this.timeAtPrevOffsetSample, this.prevOffsetTimes = [], this.getTargetClockTime = e, this.weight = n, this.offsetDelta = r, this.checkAfterTime = i, this.resetAfterTime = s, this.reset = () => {
      this.prevOffsetTimes = [], this.offsetTime = null, this.timeAtPrevOffsetSample = null;
    };
  }
  calculateOffset(e) {
    const n = this.getTargetClockTime(), r = n - this.timeAtPrevOffsetSample, i = n - e;
    if (r > this.resetAfterTime && this.reset(), this.offsetTime == null && (this.offsetTime = i), this.prevOffsetTimes.push(i), this.prevOffsetTimes.length > this.weight && this.prevOffsetTimes.shift(), this.timeAtPrevOffsetSample == null || r > this.checkAfterTime) {
      this.timeAtPrevOffsetSample = n;
      const s = pb(this.prevOffsetTimes);
      Math.abs(s - this.offsetTime) > this.offsetDelta && (this.offsetTime = s);
    }
    return this.offsetTime;
  }
  calculateTimestamp(e, n) {
    return this.calculateOffset(e) + n;
  }
}
function SP() {
  return performance.now() * 1e-3;
}
function AP() {
  return Date.now() * 1e-3;
}
const Cb = /* @__PURE__ */ new Map([
  ["control", "Control"],
  ["ctrl", "Control"],
  ["alt", "Alt"],
  ["shift", "Shift"],
  ["down", "ArrowDown"],
  ["up", "ArrowUp"],
  ["left", "ArrowLeft"],
  ["right", "ArrowRight"]
]);
let qa;
function Sb() {
  if (qa == null) {
    if (typeof window > "u")
      return;
    qa = {}, window.addEventListener("keydown", (t) => {
      qa[t.key] = !0;
    }), window.addEventListener("keyup", (t) => {
      qa[t.key] = !1;
    });
  }
  return { ...qa };
}
_t.prototype.sam = function() {
  return this.floor();
};
_t.prototype.nextSam = function() {
  return this.sam().add(1);
};
_t.prototype.wholeCycle = function() {
  return new nn(this.sam(), this.nextSam());
};
_t.prototype.cyclePos = function() {
  return this.sub(this.sam());
};
_t.prototype.lt = function(t) {
  return this.compare(t) < 0;
};
_t.prototype.gt = function(t) {
  return this.compare(t) > 0;
};
_t.prototype.lte = function(t) {
  return this.compare(t) <= 0;
};
_t.prototype.gte = function(t) {
  return this.compare(t) >= 0;
};
_t.prototype.eq = function(t) {
  return this.compare(t) == 0;
};
_t.prototype.ne = function(t) {
  return this.compare(t) != 0;
};
_t.prototype.max = function(t) {
  return this.gt(t) ? this : t;
};
_t.prototype.maximum = function(...t) {
  return t = t.map((e) => new _t(e)), t.reduce((e, n) => n.max(e), this);
};
_t.prototype.min = function(t) {
  return this.lt(t) ? this : t;
};
_t.prototype.mulmaybe = function(t) {
  return t !== void 0 ? this.mul(t) : void 0;
};
_t.prototype.divmaybe = function(t) {
  return t !== void 0 ? this.div(t) : void 0;
};
_t.prototype.addmaybe = function(t) {
  return t !== void 0 ? this.add(t) : void 0;
};
_t.prototype.submaybe = function(t) {
  return t !== void 0 ? this.sub(t) : void 0;
};
_t.prototype.show = function() {
  return this.s * this.n + "/" + this.d;
};
_t.prototype.or = function(t) {
  return this.eq(0) ? t : this;
};
const me = (t) => _t(t), DP = (...t) => {
  if (t = Pa(t), t.length !== 0)
    return t.reduce((e, n) => e.gcd(n), me(1));
}, Xr = (...t) => {
  if (t = Pa(t), t.length === 0)
    return;
  const e = t.pop();
  return t.reduce(
    (n, r) => n === void 0 || r === void 0 ? void 0 : n.lcm(r),
    e
  );
};
me._original = _t;
class nn {
  constructor(e, n) {
    this.begin = me(e), this.end = me(n);
  }
  get spanCycles() {
    const e = [];
    var n = this.begin;
    const r = this.end, i = r.sam();
    if (n.equals(r))
      return [new nn(n, r)];
    for (; r.gt(n); ) {
      if (n.sam().equals(i)) {
        e.push(new nn(n, this.end));
        break;
      }
      const s = n.nextSam();
      e.push(new nn(n, s)), n = s;
    }
    return e;
  }
  get duration() {
    return this.end.sub(this.begin);
  }
  cycleArc() {
    const e = this.begin.cyclePos(), n = e.add(this.duration);
    return new nn(e, n);
  }
  withTime(e) {
    return new nn(e(this.begin), e(this.end));
  }
  withEnd(e) {
    return new nn(this.begin, e(this.end));
  }
  withCycle(e) {
    const n = this.begin.sam(), r = n.add(e(this.begin.sub(n))), i = n.add(e(this.end.sub(n)));
    return new nn(r, i);
  }
  intersection(e) {
    const n = this.begin.max(e.begin), r = this.end.min(e.end);
    if (!n.gt(r) && !(n.equals(r) && (n.equals(this.end) && this.begin.lt(this.end) || n.equals(e.end) && e.begin.lt(e.end))))
      return new nn(n, r);
  }
  intersection_e(e) {
    const n = this.intersection(e);
    if (n == null)
      throw "TimeSpans do not intersect";
    return n;
  }
  midpoint() {
    return this.begin.add(this.duration.div(me(2)));
  }
  equals(e) {
    return this.begin.equals(e.begin) && this.end.equals(e.end);
  }
  show() {
    return this.begin.show() + " → " + this.end.show();
  }
}
class Gt {
  /*
        Event class, representing a value active during the timespan
        'part'. This might be a fragment of an event, in which case the
        timespan will be smaller than the 'whole' timespan, otherwise the
        two timespans will be the same. The 'part' must never extend outside of the
        'whole'. If the event represents a continuously changing value
        then the whole will be returned as None, in which case the given
        value will have been sampled from the point halfway between the
        start and end of the 'part' timespan.
        The context is to store a list of source code locations causing the event.
  
        The word 'Event' is more or less a reserved word in javascript, hence this
        class is named called 'Hap'.
        */
  constructor(e, n, r, i = {}, s = !1) {
    this.whole = e, this.part = n, this.value = r, this.context = i, this.stateful = s, s && console.assert(typeof this.value == "function", "Stateful values must be functions");
  }
  get duration() {
    let e;
    return typeof this.value?.duration == "number" ? e = me(this.value.duration) : e = this.whole.end.sub(this.whole.begin), typeof this.value?.clip == "number" ? e.mul(this.value.clip) : e;
  }
  get endClipped() {
    return this.whole.begin.add(this.duration);
  }
  isActive(e) {
    return this.whole.begin <= e && this.endClipped >= e;
  }
  isInPast(e) {
    return e > this.endClipped;
  }
  isInNearPast(e, n) {
    return n - e <= this.endClipped;
  }
  isInFuture(e) {
    return e < this.whole.begin;
  }
  isInNearFuture(e, n) {
    return n < this.whole.begin && n > this.whole.begin - e;
  }
  isWithinTime(e, n) {
    return this.whole.begin <= n && this.endClipped >= e;
  }
  wholeOrPart() {
    return this.whole ? this.whole : this.part;
  }
  withSpan(e) {
    const n = this.whole ? e(this.whole) : void 0;
    return new Gt(n, e(this.part), this.value, this.context);
  }
  withValue(e) {
    return new Gt(this.whole, this.part, e(this.value), this.context);
  }
  hasOnset() {
    return this.whole != null && this.whole.begin.equals(this.part.begin);
  }
  hasTag(e) {
    return this.context.tags?.includes(e);
  }
  resolveState(e) {
    if (this.stateful && this.hasOnset()) {
      console.log("stateful");
      const n = this.value, [r, i] = n(e);
      return [r, new Gt(this.whole, this.part, i, this.context, !1)];
    }
    return [e, this];
  }
  spanEquals(e) {
    return this.whole == null && e.whole == null || this.whole.equals(e.whole);
  }
  equals(e) {
    return this.spanEquals(e) && this.part.equals(e.part) && // TODO would == be better ??
    this.value === e.value;
  }
  show(e = !1) {
    const n = typeof this.value == "object" ? e ? JSON.stringify(this.value).slice(1, -1).replaceAll('"', "").replaceAll(",", " ") : JSON.stringify(this.value) : this.value;
    var r = "";
    if (this.whole == null)
      r = "~" + this.part.show;
    else {
      var i = this.whole.begin.equals(this.part.begin) && this.whole.end.equals(this.part.end);
      this.whole.begin.equals(this.part.begin) || (r = this.whole.begin.show() + " ⇜ "), i || (r += "("), r += this.part.show(), i || (r += ")"), this.whole.end.equals(this.part.end) || (r += " ⇝ " + this.whole.end.show());
    }
    return "[ " + r + " | " + n + " ]";
  }
  showWhole(e = !1) {
    return `${this.whole == null ? "~" : this.whole.show()}: ${typeof this.value == "object" ? e ? JSON.stringify(this.value).slice(1, -1).replaceAll('"', "").replaceAll(",", " ") : JSON.stringify(this.value) : this.value}`;
  }
  combineContext(e) {
    const n = this;
    return { ...n.context, ...e.context, locations: (n.context.locations || []).concat(e.context.locations || []) };
  }
  setContext(e) {
    return new Gt(this.whole, this.part, this.value, e);
  }
  ensureObjectValue() {
    if (typeof this.value != "object")
      throw new Error(
        `expected hap.value to be an object, but got "${this.value}". Hint: append .note() or .s() to the end`,
        "error"
      );
  }
}
class da {
  constructor(e, n = {}) {
    this.span = e, this.controls = n;
  }
  // Returns new State with different span
  setSpan(e) {
    return new da(e, this.controls);
  }
  withSpan(e) {
    return this.setSpan(e(this.span));
  }
  // Returns new State with different controls
  setControls(e) {
    return new da(this.span, e);
  }
}
function PP(t, e, n) {
  if (e?.value !== void 0 && Object.keys(e).length === 1)
    return En("[warn]: Can't do arithmetic on control pattern."), t;
  const r = Object.keys(t).filter((i) => Object.keys(e).includes(i));
  return Object.assign({}, t, e, Object.fromEntries(r.map((i) => [i, n(t[i], e[i])])));
}
Ke((t, e) => t * e);
Ke((t, e) => e.map(t));
function Ab(t, e = 60) {
  let n = 0, r = me(0), i = [""], s = "";
  for (; i[0].length < e; ) {
    const a = t.queryArc(n, n + 1), o = a.filter((h) => h.hasOnset()).map((h) => h.duration), l = DP(...o), c = l.inverse();
    i = i.map((h) => h + "|"), s += "|";
    for (let h = 0; h < c; h++) {
      const [f, m] = [r, r.add(l)], y = a.filter((C) => C.whole.begin.lte(f) && C.whole.end.gte(m)), x = y.length - i.length;
      x > 0 && (i = i.concat(Array(x).fill(s))), i = i.map((C, S) => {
        const M = y[S];
        if (M) {
          const q = M.whole.begin.eq(f) ? "" + M.value : "-";
          return C + q;
        }
        return C + ".";
      }), s += ".", r = r.add(l);
    }
    n++;
  }
  return i.join(`
`);
}
let hp, Wr = !0;
const EP = function(t) {
  Wr = !!t;
}, Db = (t) => hp = t;
let de = class xn {
  /**
   * Create a pattern. As an end user, you will most likely not create a Pattern directly.
   *
   * @param {function} query - The function that maps a `State` to an array of `Hap`.
   * @noAutocomplete
   */
  constructor(e, n = void 0) {
    this.query = e, this._Pattern = !0, this._steps = n;
  }
  get _steps() {
    return this.__steps;
  }
  set _steps(e) {
    this.__steps = e === void 0 ? void 0 : me(e);
  }
  setSteps(e) {
    return this._steps = e, this;
  }
  withSteps(e) {
    return Wr ? new xn(this.query, this._steps === void 0 ? void 0 : e(this._steps)) : this;
  }
  get hasSteps() {
    return this._steps !== void 0;
  }
  //////////////////////////////////////////////////////////////////////
  // Haskell-style functor, applicative and monadic operations
  /**
   * Returns a new pattern, with the function applied to the value of
   * each hap. It has the alias `fmap`.
   * @synonyms fmap
   * @param {Function} func to to apply to the value
   * @returns Pattern
   * @example
   * "0 1 2".withValue(v => v + 10).log()
   */
  withValue(e) {
    const n = new xn((r) => this.query(r).map((i) => i.withValue(e)));
    return n._steps = this._steps, n;
  }
  // runs func on query state
  withState(e) {
    return this.withHaps((n, r) => (e(r), n));
  }
  /**
   * see `withValue`
   * @noAutocomplete
   */
  fmap(e) {
    return this.withValue(e);
  }
  /**
   * Assumes 'this' is a pattern of functions, and given a function to
   * resolve wholes, applies a given pattern of values to that
   * pattern of functions.
   * @param {Function} whole_func
   * @param {Function} func
   * @noAutocomplete
   * @returns Pattern
   */
  appWhole(e, n) {
    const r = this, i = function(s) {
      const a = r.query(s), o = n.query(s), l = function(c, h) {
        const f = c.part.intersection(h.part);
        if (f != null)
          return new Gt(
            e(c.whole, h.whole),
            f,
            c.value(h.value),
            h.combineContext(c)
          );
      };
      return wi(
        a.map((c) => Pa(o.map((h) => l(c, h))))
      );
    };
    return new xn(i);
  }
  /**
   * When this method is called on a pattern of functions, it matches its haps
   * with those in the given pattern of values.  A new pattern is returned, with
   * each matching value applied to the corresponding function.
   *
   * In this `_appBoth` variant, where timespans of the function and value haps
   * are not the same but do intersect, the resulting hap has a timespan of the
   * intersection. This applies to both the part and the whole timespan.
   * @param {Pattern} pat_val
   * @noAutocomplete
   * @returns Pattern
   */
  appBoth(e) {
    const n = this, r = function(s, a) {
      if (!(s == null || a == null))
        return s.intersection_e(a);
    }, i = n.appWhole(r, e);
    return Wr && (i._steps = Xr(e._steps, n._steps)), i;
  }
  /**
   * As with `appBoth`, but the `whole` timespan is not the intersection,
   * but the timespan from the function of patterns that this method is called
   * on. In practice, this means that the pattern structure, including onsets,
   * are preserved from the pattern of functions (often referred to as the left
   * hand or inner pattern).
   * @param {Pattern} pat_val
   * @noAutocomplete
   * @returns Pattern
   */
  appLeft(e) {
    const n = this, r = function(s) {
      const a = [];
      for (const o of n.query(s)) {
        const l = e.query(s.setSpan(o.wholeOrPart()));
        for (const c of l) {
          const h = o.whole, f = o.part.intersection(c.part);
          if (f) {
            const m = o.value(c.value), y = c.combineContext(o), x = new Gt(h, f, m, y);
            a.push(x);
          }
        }
      }
      return a;
    }, i = new xn(r);
    return i._steps = this._steps, i;
  }
  /**
   * As with `appLeft`, but `whole` timespans are instead taken from the
   * pattern of values, i.e. structure is preserved from the right hand/outer
   * pattern.
   * @param {Pattern} pat_val
   * @noAutocomplete
   * @returns Pattern
   */
  appRight(e) {
    const n = this, r = function(s) {
      const a = [];
      for (const o of e.query(s)) {
        const l = n.query(s.setSpan(o.wholeOrPart()));
        for (const c of l) {
          const h = o.whole, f = c.part.intersection(o.part);
          if (f) {
            const m = c.value(o.value), y = o.combineContext(c), x = new Gt(h, f, m, y);
            a.push(x);
          }
        }
      }
      return a;
    }, i = new xn(r);
    return i._steps = e._steps, i;
  }
  bindWhole(e, n) {
    const r = this, i = function(s) {
      const a = function(l, c) {
        return new Gt(
          e(l.whole, c.whole),
          c.part,
          c.value,
          Object.assign({}, l.context, c.context, {
            locations: (l.context.locations || []).concat(c.context.locations || [])
          })
        );
      }, o = function(l) {
        return n(l.value).query(s.setSpan(l.part)).map((c) => a(l, c));
      };
      return wi(r.query(s).map((l) => o(l)));
    };
    return new xn(i);
  }
  bind(e) {
    const n = function(r, i) {
      if (!(r == null || i == null))
        return r.intersection_e(i);
    };
    return this.bindWhole(n, e);
  }
  join() {
    return this.bind(Hs);
  }
  outerBind(e) {
    return this.bindWhole((n) => n, e).setSteps(this._steps);
  }
  outerJoin() {
    return this.outerBind(Hs);
  }
  innerBind(e) {
    return this.bindWhole((n, r) => r, e);
  }
  innerJoin() {
    return this.innerBind(Hs);
  }
  // Flatterns patterns of patterns, by retriggering/resetting inner patterns at onsets of outer pattern haps
  resetJoin(e = !1) {
    const n = this;
    return new xn((r) => n.discreteOnly().query(r).map((i) => i.value.late(e ? i.whole.begin : i.whole.begin.cyclePos()).query(r).map(
      (s) => new Gt(
        // Supports continuous haps in the inner pattern
        s.whole ? s.whole.intersection(i.whole) : void 0,
        s.part.intersection(i.part),
        s.value
      ).setContext(i.combineContext(s))
    ).filter((s) => s.part)).flat());
  }
  restartJoin() {
    return this.resetJoin(!0);
  }
  // Like the other joins above, joins a pattern of patterns of values, into a flatter
  // pattern of values. In this case it takes whole cycles of the inner pattern to fit each event
  // in the outer pattern.
  squeezeJoin() {
    const e = this;
    function n(r) {
      const i = e.discreteOnly().query(r);
      function s(o) {
        const c = o.value._focusSpan(o.wholeOrPart()).query(r.setSpan(o.part));
        function h(f, m) {
          let y;
          if (m.whole && f.whole && (y = m.whole.intersection(f.whole), !y))
            return;
          const x = m.part.intersection(f.part);
          if (!x)
            return;
          const C = m.combineContext(f);
          return new Gt(y, x, m.value, C);
        }
        return c.map((f) => h(o, f));
      }
      return wi(i.map(s)).filter((o) => o);
    }
    return new xn(n);
  }
  squeezeBind(e) {
    return this.fmap(e).squeezeJoin();
  }
  polyJoin = function() {
    const e = this;
    return e.fmap((n) => n.extend(e._steps.div(n._steps))).outerJoin();
  };
  polyBind(e) {
    return this.fmap(e).polyJoin();
  }
  //////////////////////////////////////////////////////////////////////
  // Utility methods mainly for internal use
  /**
   * Query haps inside the given time span.
   *
   * @param {Fraction | number} begin from time
   * @param {Fraction | number} end to time
   * @returns Hap[]
   * @example
   * const pattern = sequence('a', ['b', 'c'])
   * const haps = pattern.queryArc(0, 1)
   * console.log(haps)
   * silence
   * @noAutocomplete
   */
  queryArc(e, n, r = {}) {
    try {
      return this.query(new da(new nn(e, n), r));
    } catch (i) {
      return En(`[query]: ${i.message}`, "error"), [];
    }
  }
  /**
   * Returns a new pattern, with queries split at cycle boundaries. This makes
   * some calculations easier to express, as all haps are then constrained to
   * happen within a cycle.
   * @returns Pattern
   * @noAutocomplete
   */
  splitQueries() {
    const e = this, n = (r) => wi(r.span.spanCycles.map((i) => e.query(r.setSpan(i))));
    return new xn(n);
  }
  /**
   * Returns a new pattern, where the given function is applied to the query
   * timespan before passing it to the original pattern.
   * @param {Function} func the function to apply
   * @returns Pattern
   * @noAutocomplete
   */
  withQuerySpan(e) {
    return new xn((n) => this.query(n.withSpan(e)));
  }
  withQuerySpanMaybe(e) {
    const n = this;
    return new xn((r) => {
      const i = r.withSpan(e);
      return i.span ? n.query(i) : [];
    });
  }
  /**
   * As with `withQuerySpan`, but the function is applied to both the
   * begin and end time of the query timespan.
   * @param {Function} func the function to apply
   * @returns Pattern
   * @noAutocomplete
   */
  withQueryTime(e) {
    return new xn((n) => this.query(n.withSpan((r) => r.withTime(e))));
  }
  /**
   * Similar to `withQuerySpan`, but the function is applied to the timespans
   * of all haps returned by pattern queries (both `part` timespans, and where
   * present, `whole` timespans).
   * @param {Function} func
   * @returns Pattern
   * @noAutocomplete
   */
  withHapSpan(e) {
    return new xn((n) => this.query(n).map((r) => r.withSpan(e)));
  }
  /**
   * As with `withHapSpan`, but the function is applied to both the
   * begin and end time of the hap timespans.
   * @param {Function} func the function to apply
   * @returns Pattern
   * @noAutocomplete
   */
  withHapTime(e) {
    return this.withHapSpan((n) => n.withTime(e));
  }
  /**
   * Returns a new pattern with the given function applied to the list of haps returned by every query.
   * @param {Function} func
   * @returns Pattern
   * @noAutocomplete
   */
  withHaps(e) {
    const n = new xn((r) => e(this.query(r), r));
    return n._steps = this._steps, n;
  }
  /**
   * As with `withHaps`, but applies the function to every hap, rather than every list of haps.
   * @param {Function} func
   * @returns Pattern
   * @noAutocomplete
   */
  withHap(e) {
    return this.withHaps((n) => n.map(e));
  }
  /**
   * Returns a new pattern with the context field set to every hap set to the given value.
   * @param {*} context
   * @returns Pattern
   * @noAutocomplete
   */
  setContext(e) {
    return this.withHap((n) => n.setContext(e));
  }
  /**
   * Returns a new pattern with the given function applied to the context field of every hap.
   * @param {Function} func
   * @returns Pattern
   * @noAutocomplete
   */
  withContext(e) {
    const n = this.withHap((r) => r.setContext(e(r.context)));
    return this.__pure !== void 0 && (n.__pure = this.__pure, n.__pure_loc = this.__pure_loc), n;
  }
  /**
   * Returns a new pattern with the context field of every hap set to an empty object.
   * @returns Pattern
   * @noAutocomplete
   */
  stripContext() {
    return this.withHap((e) => e.setContext({}));
  }
  /**
   * Returns a new pattern with the given location information added to the
   * context of every hap.
   * @param {Number} start start offset
   * @param {Number} end end offset
   * @returns Pattern
   * @noAutocomplete
   */
  withLoc(e, n) {
    const r = {
      start: e,
      end: n
    }, i = this.withContext((s) => {
      const a = (s.locations || []).concat([r]);
      return { ...s, locations: a };
    });
    return this.__pure && (i.__pure = this.__pure, i.__pure_loc = r), i;
  }
  /**
   * Returns a new Pattern, which only returns haps that meet the given test.
   * @param {Function} hap_test - a function which returns false for haps to be removed from the pattern
   * @returns Pattern
   * @noAutocomplete
   */
  filterHaps(e) {
    return new xn((n) => this.query(n).filter(e));
  }
  /**
   * As with `filterHaps`, but the function is applied to values
   * inside haps.
   * @param {Function} value_test
   * @returns Pattern
   * @noAutocomplete
   */
  filterValues(e) {
    return new xn((n) => this.query(n).filter((r) => e(r.value))).setSteps(this._steps);
  }
  /**
   * Returns a new pattern, with haps containing undefined values removed from
   * query results.
   * @returns Pattern
   * @noAutocomplete
   */
  removeUndefineds() {
    return this.filterValues((e) => e != null);
  }
  /**
   * Returns a new pattern, with all haps without onsets filtered out. A hap
   * with an onset is one with a `whole` timespan that begins at the same time
   * as its `part` timespan.
   * @returns Pattern
   * @noAutocomplete
   */
  onsetsOnly() {
    return this.filterHaps((e) => e.hasOnset());
  }
  /**
   * Returns a new pattern, with 'continuous' haps (those without 'whole'
   * timespans) removed from query results.
   * @returns Pattern
   * @noAutocomplete
   */
  discreteOnly() {
    return this.filterHaps((e) => e.whole);
  }
  /**
   * Combines adjacent haps with the same value and whole.  Only
   * intended for use in tests.
   * @noAutocomplete
   */
  defragmentHaps() {
    return this.discreteOnly().withHaps((n) => {
      const r = [];
      for (var i = 0; i < n.length; ++i) {
        for (var s = !0, a = n[i]; s; ) {
          const c = JSON.stringify(n[i].value);
          for (var o = !1, l = i + 1; l < n.length; l++) {
            const h = n[l];
            if (a.whole.equals(h.whole)) {
              if (a.part.begin.eq(h.part.end)) {
                if (c === JSON.stringify(h.value)) {
                  a = new Gt(a.whole, new nn(h.part.begin, a.part.end), a.value), n.splice(l, 1), o = !0;
                  break;
                }
              } else if (h.part.begin.eq(a.part.end) && c == JSON.stringify(h.value)) {
                a = new Gt(a.whole, new nn(a.part.begin, h.part.end), a.value), n.splice(l, 1), o = !0;
                break;
              }
            }
          }
          s = o;
        }
        r.push(a);
      }
      return r;
    });
  }
  /**
   * Queries the pattern for the first cycle, returning Haps. Mainly of use when
   * debugging a pattern.
   * @param {Boolean} with_context - set to true, otherwise the context field
   * will be stripped from the resulting haps.
   * @returns [Hap]
   * @noAutocomplete
   */
  firstCycle(e = !1) {
    var n = this;
    return e || (n = n.stripContext()), n.query(new da(new nn(me(0), me(1))));
  }
  /**
   * Accessor for a list of values returned by querying the first cycle.
   * @noAutocomplete
   */
  get firstCycleValues() {
    return this.firstCycle().map((e) => e.value);
  }
  /**
   * More human-readable version of the `firstCycleValues` accessor.
   * @noAutocomplete
   */
  get showFirstCycle() {
    return this.firstCycle().map(
      (e) => `${e.value}: ${e.whole.begin.toFraction()} - ${e.whole.end.toFraction()}`
    );
  }
  /**
   * Returns a new pattern, which returns haps sorted in temporal order. Mainly
   * of use when comparing two patterns for equality, in tests.
   * @returns Pattern
   * @noAutocomplete
   */
  sortHapsByPart() {
    return this.withHaps(
      (e) => e.sort(
        (n, r) => n.part.begin.sub(r.part.begin).or(n.part.end.sub(r.part.end)).or(n.whole.begin.sub(r.whole.begin).or(n.whole.end.sub(r.whole.end)))
      )
    );
  }
  asNumber() {
    return this.fmap(Nf);
  }
  //////////////////////////////////////////////////////////////////////
  // Operators - see 'make composers' later..
  _opIn(e, n) {
    return this.fmap(n).appLeft(Oe(e));
  }
  _opOut(e, n) {
    return this.fmap(n).appRight(Oe(e));
  }
  _opMix(e, n) {
    return this.fmap(n).appBoth(Oe(e));
  }
  _opSqueeze(e, n) {
    const r = Oe(e);
    return this.fmap((i) => r.fmap((s) => n(i)(s))).squeezeJoin();
  }
  _opSqueezeOut(e, n) {
    const r = this;
    return Oe(e).fmap((s) => r.fmap((a) => n(a)(s))).squeezeJoin();
  }
  _opReset(e, n) {
    return Oe(e).fmap((i) => this.fmap((s) => n(s)(i))).resetJoin();
  }
  _opRestart(e, n) {
    return Oe(e).fmap((i) => this.fmap((s) => n(s)(i))).restartJoin();
  }
  _opPoly(e, n) {
    const r = Oe(e);
    return this.fmap((i) => r.fmap((s) => n(s)(i))).polyJoin();
  }
  //////////////////////////////////////////////////////////////////////
  // End-user methods.
  // Those beginning with an underscore (_) are 'patternified',
  // i.e. versions are created without the underscore, that are
  // magically transformed to accept patterns for all their arguments.
  //////////////////////////////////////////////////////////////////////
  // Methods without corresponding toplevel functions
  /**
   * Layers the result of the given function(s). Like `superimpose`, but without the original pattern:
   * @name layer
   * @memberof Pattern
   * @synonyms apply
   * @returns Pattern
   * @example
   * "<0 2 4 6 ~ 4 ~ 2 0!3 ~!5>*8"
   *   .layer(x=>x.add("0,2"))
   *   .scale('C minor').note()
   */
  layer(...e) {
    return Nt(...e.map((n) => n(this)));
  }
  /**
   * Superimposes the result of the given function(s) on top of the original pattern:
   * @name superimpose
   * @memberof Pattern
   * @returns Pattern
   * @example
   * "<0 2 4 6 ~ 4 ~ 2 0!3 ~!5>*8"
   *   .superimpose(x=>x.add(2))
   *   .scale('C minor').note()
   */
  superimpose(...e) {
    return this.stack(...e.map((n) => n(this)));
  }
  //////////////////////////////////////////////////////////////////////
  // Multi-pattern functions
  stack(...e) {
    return Nt(this, ...e);
  }
  sequence(...e) {
    return Er(this, ...e);
  }
  seq(...e) {
    return Er(this, ...e);
  }
  cat(...e) {
    return Mb(this, ...e);
  }
  fastcat(...e) {
    return Yn(this, ...e);
  }
  slowcat(...e) {
    return ss(this, ...e);
  }
  //////////////////////////////////////////////////////////////////////
  // Context methods - ones that deal with metadata
  onTrigger(e, n = !0) {
    return this.withHap(
      (r) => r.setContext({
        ...r.context,
        onTrigger: (...i) => {
          r.context.onTrigger?.(...i), e(...i);
        },
        // if dominantTrigger is set to true, the default output (webaudio) will be disabled
        // when using multiple triggers, you cannot flip this flag to false again!
        // example: x.csound('CooLSynth').log() as well as x.log().csound('CooLSynth') should work the same
        dominantTrigger: r.context.dominantTrigger || n
      })
    );
  }
  log(e = (r, i) => `[hap] ${i.showWhole(!0)}`, n = (r, i) => ({ hap: i })) {
    return this.onTrigger((...r) => {
      En(e(...r), void 0, n(...r));
    }, !1);
  }
  logValues(e = Hs) {
    return this.log((n, r) => e(r.value));
  }
  //////////////////////////////////////////////////////////////////////
  // Visualisation
  drawLine() {
    return console.log(Ab(this)), this;
  }
};
function FP(t, e) {
  let n = [];
  return e.forEach((r) => {
    const i = n.findIndex(([s]) => t(r, s));
    i === -1 ? n.push([r]) : n[i].push(r);
  }), n;
}
const BP = (t, e) => t.spanEquals(e);
de.prototype.collect = function() {
  return this.withHaps(
    (t) => FP(BP, t).map((e) => new Gt(e[0].whole, e[0].part, e, {}))
  );
};
de.prototype.arpWith = function(t) {
  return this.collect().fmap((e) => Oe(t(e))).innerJoin().withHap((e) => new Gt(e.whole, e.part, e.value.value, e.combineContext(e.value)));
};
de.prototype.arp = function(t) {
  return this.arpWith((e) => t.fmap((n) => e[n % e.length]));
};
function kl(t) {
  return !Array.isArray(t) && typeof t == "object";
}
function MP(t, e, n) {
  return kl(t) || kl(e) ? (kl(t) || (t = { value: t }), kl(e) || (e = { value: e }), PP(t, e, n)) : n(t, e);
}
(function() {
  const t = {
    set: [(n, r) => r],
    keep: [(n) => n],
    keepif: [(n, r) => r ? n : void 0],
    // numerical functions
    /**
     *
     * Assumes a pattern of numbers. Adds the given number to each item in the pattern.
     * @name add
     * @memberof Pattern
     * @example
     * // Here, the triad 0, 2, 4 is shifted by different amounts
     * n("0 2 4".add("<0 3 4 0>")).scale("C:major")
     * // Without add, the equivalent would be:
     * // n("<[0 2 4] [3 5 7] [4 6 8] [0 2 4]>").scale("C:major")
     * @example
     * // You can also use add with notes:
     * note("c3 e3 g3".add("<0 5 7 0>"))
     * // Behind the scenes, the notes are converted to midi numbers:
     * // note("48 52 55".add("<0 5 7 0>"))
     */
    add: [ar((n, r) => n + r)],
    // support string concatenation
    /**
     *
     * Like add, but the given numbers are subtracted.
     * @name sub
     * @memberof Pattern
     * @example
     * n("0 2 4".sub("<0 1 2 3>")).scale("C4:minor")
     * // See add for more information.
     */
    sub: [ar((n, r) => n - r)],
    /**
     *
     * Multiplies each number by the given factor.
     * @name mul
     * @memberof Pattern
     * @example
     * "<1 1.5 [1.66, <2 2.33>]>*4".mul(150).freq()
     */
    mul: [ar((n, r) => n * r)],
    /**
     *
     * Divides each number by the given factor.
     * @name div
     * @memberof Pattern
     */
    div: [ar((n, r) => n / r)],
    mod: [ar(Zo)],
    pow: [ar(Math.pow)],
    log2: [ar(Math.log2)],
    band: [ar((n, r) => n & r)],
    bor: [ar((n, r) => n | r)],
    bxor: [ar((n, r) => n ^ r)],
    blshift: [ar((n, r) => n << r)],
    brshift: [ar((n, r) => n >> r)],
    // TODO - force numerical comparison if both look like numbers?
    lt: [(n, r) => n < r],
    gt: [(n, r) => n > r],
    lte: [(n, r) => n <= r],
    gte: [(n, r) => n >= r],
    eq: [(n, r) => n == r],
    eqt: [(n, r) => n === r],
    ne: [(n, r) => n != r],
    net: [(n, r) => n !== r],
    and: [(n, r) => n && r],
    or: [(n, r) => n || r],
    //  bitwise ops
    func: [(n, r) => r(n)]
  }, e = ["In", "Out", "Mix", "Squeeze", "SqueezeOut", "Reset", "Restart", "Poly"];
  for (const [n, [r, i]] of Object.entries(t)) {
    de.prototype["_" + n] = function(s) {
      return this.fmap((a) => r(a, s));
    }, Object.defineProperty(de.prototype, n, {
      // a getter that returns a function, so 'pat' can be
      // accessed by closures that are methods of that function..
      get: function() {
        const s = this, a = (...o) => s[n].in(...o);
        for (const o of e)
          a[o.toLowerCase()] = function(...l) {
            var c = s;
            l = Er(l), i && (c = i(c), l = i(l));
            var h;
            return n === "keepif" ? (h = c["_op" + o](l, (f) => (m) => r(f, m)), h = h.removeUndefineds()) : h = c["_op" + o](l, (f) => (m) => MP(f, m, r)), h;
          };
        return a.squeezein = a.squeeze, a;
      }
    });
    for (const s of e)
      de.prototype[s.toLowerCase()] = function(...a) {
        return this.set[s.toLowerCase()](a);
      };
  }
  de.prototype.struct = function(...n) {
    return this.keepif.out(...n);
  }, de.prototype.structAll = function(...n) {
    return this.keep.out(...n);
  }, de.prototype.mask = function(...n) {
    return this.keepif.in(...n);
  }, de.prototype.maskAll = function(...n) {
    return this.keep.in(...n);
  }, de.prototype.reset = function(...n) {
    return this.keepif.reset(...n);
  }, de.prototype.resetAll = function(...n) {
    return this.keep.reset(...n);
  }, de.prototype.restart = function(...n) {
    return this.keepif.restart(...n);
  }, de.prototype.restartAll = function(...n) {
    return this.keep.restart(...n);
  };
})();
const QP = Nt, TP = Nt, jP = gc, Ea = (t) => new de(() => [], t), St = Ea(1), cr = Ea(0);
function hn(t) {
  function e(r) {
    return r.span.spanCycles.map((i) => new Gt(me(i.begin).wholeCycle(), i, t));
  }
  const n = new de(e, 1);
  return n.__pure = t, n;
}
function mc(t) {
  return t instanceof de || t?._Pattern;
}
function Oe(t) {
  return mc(t) ? t : hp && typeof t == "string" ? hp(t) : hn(t);
}
function Pb(t) {
  let e = hn([]);
  for (const n of t)
    e = e.bind((r) => n.fmap((i) => r.concat([i])));
  return e;
}
function Nt(...t) {
  t = t.map((r) => Array.isArray(r) ? Er(...r) : Oe(r));
  const e = (r) => wi(t.map((i) => i.query(r))), n = new de(e);
  return Wr && (n._steps = Xr(...t.map((r) => r._steps))), n;
}
function qf(t, e) {
  if (e = e.map((s) => Array.isArray(s) ? Er(...s) : Oe(s)), e.length === 0)
    return St;
  if (e.length === 1)
    return e[0];
  const [n, ...r] = e.map((s) => s._steps), i = Wr ? n.maximum(...r) : void 0;
  return Nt(...t(i, e));
}
function Eb(...t) {
  return qf(
    (e, n) => n.map((r) => r._steps.eq(e) ? r : Gn(r, Ea(e.sub(r._steps)))),
    t
  );
}
function Fb(...t) {
  return qf(
    (e, n) => n.map((r) => r._steps.eq(e) ? r : Gn(Ea(e.sub(r._steps)), r)),
    t
  );
}
function Bb(...t) {
  return qf(
    (e, n) => n.map((r) => {
      if (r._steps.eq(e))
        return r;
      const i = Ea(e.sub(r._steps).div(2));
      return Gn(i, r, i);
    }),
    t
  );
}
function _P(t, ...e) {
  const [n, ...r] = e.map((a) => a._steps), i = n.maximum(...r), s = {
    centre: Bb,
    left: Eb,
    right: Fb,
    expand: Nt,
    repeat: (...a) => gc(...a).steps(i)
  };
  return t.inhabit(s).fmap((a) => a(...e)).innerJoin().setSteps(i);
}
function ss(...t) {
  if (t = t.map((r) => Array.isArray(r) ? Yn(...r) : Oe(r)), t.length == 1)
    return t[0];
  const e = function(r) {
    const i = r.span, s = Zo(i.begin.sam(), t.length), a = t[s];
    if (!a)
      return [];
    const o = i.begin.floor().sub(i.begin.div(t.length).floor());
    return a.withHapTime((l) => l.add(o)).query(r.setSpan(i.withTime((l) => l.sub(o))));
  }, n = Wr ? Xr(...t.map((r) => r._steps)) : void 0;
  return new de(e).splitQueries().setSteps(n);
}
function Uf(...t) {
  t = t.map(Oe);
  const e = function(n) {
    const r = Math.floor(n.span.begin) % t.length;
    return t[r]?.query(n) || [];
  };
  return new de(e).splitQueries();
}
function Mb(...t) {
  return ss(...t);
}
function RP(...t) {
  const e = t.reduce((n, [r]) => n + r, 0);
  return t = t.map(([n, r]) => [n, r.fast(n)]), Gn(...t).slow(e);
}
function $P(...t) {
  let e = me(0);
  for (let n of t)
    n.length == 2 && n.unshift(e), e = n[1];
  return Nt(
    ...t.map(
      ([n, r, i]) => hn(Oe(i)).compress(me(n).div(e), me(r).div(e))
    )
  ).slow(e).innerJoin();
}
function Yn(...t) {
  let e = ss(...t);
  return t.length > 1 && (e = e._fast(t.length), e._steps = t.length), t.length == 1 && t[0].__steps_source && (t._steps = t[0]._steps), e;
}
function Er(...t) {
  return Yn(...t);
}
function Qb(...t) {
  return Yn(...t);
}
function pp(t) {
  return Array.isArray(t) ? t.length == 0 ? [St, 0] : t.length == 1 ? pp(t[0]) : [Yn(...t.map((e) => pp(e)[0])), t.length] : [Oe(t), 1];
}
const ZP = Ke((t, e) => Oe(e).mask(t)), LP = Ke((t, e) => Oe(e).struct(t)), IP = Ke((t, e) => Oe(e).superimpose(...t)), NP = Ke((t, e) => Oe(e).withValue(t)), VP = Ke((t, e) => Oe(e).bind(t)), XP = Ke((t, e) => Oe(e).innerBind(t)), WP = Ke((t, e) => Oe(e).outerBind(t)), qP = Ke((t, e) => Oe(e).squeezeBind(t)), UP = Ke((t, e) => Oe(e).stepBind(t)), GP = Ke((t, e) => Oe(e).polyBind(t)), zP = Ke((t, e) => Oe(e).set(t)), HP = Ke((t, e) => Oe(e).keep(t)), YP = Ke((t, e) => Oe(e).keepif(t)), KP = Ke((t, e) => Oe(e).add(t)), JP = Ke((t, e) => Oe(e).sub(t)), e3 = Ke((t, e) => Oe(e).mul(t)), t3 = Ke((t, e) => Oe(e).div(t)), n3 = Ke((t, e) => Oe(e).mod(t)), r3 = Ke((t, e) => Oe(e).pow(t)), i3 = Ke((t, e) => Oe(e).band(t)), s3 = Ke((t, e) => Oe(e).bor(t)), a3 = Ke((t, e) => Oe(e).bxor(t)), o3 = Ke((t, e) => Oe(e).blshift(t)), l3 = Ke((t, e) => Oe(e).brshift(t)), u3 = Ke((t, e) => Oe(e).lt(t)), c3 = Ke((t, e) => Oe(e).gt(t)), h3 = Ke((t, e) => Oe(e).lte(t)), p3 = Ke((t, e) => Oe(e).gte(t)), f3 = Ke((t, e) => Oe(e).eq(t)), d3 = Ke((t, e) => Oe(e).eqt(t)), m3 = Ke((t, e) => Oe(e).ne(t)), g3 = Ke((t, e) => Oe(e).net(t)), b3 = Ke((t, e) => Oe(e).and(t)), y3 = Ke((t, e) => Oe(e).or(t)), O3 = Ke((t, e) => Oe(e).func(t));
function le(t, e, n = !0, r = !1, i = (s) => s.innerJoin()) {
  if (Array.isArray(t)) {
    const o = {};
    for (const l of t)
      o[l] = le(l, e, n, r, i);
    return o;
  }
  const s = e.length;
  var a;
  return n ? a = function(...o) {
    o = o.map(Oe);
    const l = o[o.length - 1];
    let c;
    if (s === 1)
      c = e(l);
    else {
      const h = o.slice(0, -1);
      if (h.every((f) => f.__pure != null)) {
        const f = h.map((y) => y.__pure), m = h.filter((y) => y.__pure_loc).map((y) => y.__pure_loc);
        c = e(...f, l), c = c.withContext((y) => {
          const x = (y.locations || []).concat(m);
          return { ...y, locations: x };
        });
      } else {
        const [f, ...m] = h;
        let y = (...x) => e(...x, l);
        y = Ke(y, null, s - 1), c = i(m.reduce((x, C) => x.appLeft(C), f.fmap(y)));
      }
    }
    return r && (c._steps = l._steps), c;
  } : a = function(...o) {
    o = o.map(Oe);
    const l = e(...o);
    return r && (l._steps = o[o.length - 1]._steps), l;
  }, de.prototype[t] = function(...o) {
    if (s === 2 && o.length !== 1)
      o = [Er(...o)];
    else if (s !== o.length + 1)
      throw new Error(`.${t}() expects ${s - 1} inputs but got ${o.length}.`);
    return o = o.map(Oe), a(...o, this);
  }, s > 1 && (de.prototype["_" + t] = function(...o) {
    const l = e(...o, this);
    return r && l.setSteps(this._steps), l;
  }), Ke(a, null, s);
}
function Lo(t, e, n = !0, r = !1, i = (s) => s.stepJoin()) {
  return le(t, e, n, r, i);
}
const v3 = le("round", function(t) {
  return t.asNumber().fmap((e) => Math.round(e));
}), x3 = le("floor", function(t) {
  return t.asNumber().fmap((e) => Math.floor(e));
}), k3 = le("ceil", function(t) {
  return t.asNumber().fmap((e) => Math.ceil(e));
}), w3 = le("toBipolar", function(t) {
  return t.fmap((e) => e * 2 - 1);
}), C3 = le("fromBipolar", function(t) {
  return t.fmap((e) => (e + 1) / 2);
}), S3 = le("range", function(t, e, n) {
  return n.mul(e - t).add(t);
}), A3 = le("rangex", function(t, e, n) {
  return n._range(Math.log(t), Math.log(e)).fmap(Math.exp);
}), D3 = le("range2", function(t, e, n) {
  return n.fromBipolar()._range(t, e);
}), P3 = le(
  "ratio",
  (t) => t.fmap((e) => Array.isArray(e) ? e.slice(1).reduce((n, r) => n / r, e[0]) : e)
), E3 = le("compress", function(t, e, n) {
  return t = me(t), e = me(e), t.gt(e) || t.gt(1) || e.gt(1) || t.lt(0) || e.lt(0) ? St : n._fastGap(me(1).div(e.sub(t)))._late(t);
}), { compressSpan: F3, compressspan: B3 } = le(["compressSpan", "compressspan"], function(t, e) {
  return e._compress(t.begin, t.end);
}), { fastGap: M3, fastgap: Q3 } = le(["fastGap", "fastgap"], function(t, e) {
  const n = function(i) {
    const s = i.begin.sam(), a = i.begin.sub(s).mul(t).min(1), o = i.end.sub(s).mul(t).min(1);
    if (!(a >= 1))
      return new nn(s.add(a), s.add(o));
  }, r = function(i) {
    const s = i.part.begin, a = i.part.end, o = s.sam(), l = s.sub(o).div(t).min(1), c = a.sub(o).div(t).min(1), h = new nn(o.add(l), o.add(c)), f = i.whole ? new nn(
      h.begin.sub(s.sub(i.whole.begin).div(t)),
      h.end.add(i.whole.end.sub(a).div(t))
    ) : void 0;
    return new Gt(f, h, i.value, i.context);
  };
  return e.withQuerySpanMaybe(n).withHap(r).splitQueries();
}), T3 = le("focus", function(t, e, n) {
  return t = me(t), e = me(e), n._early(t.sam())._fast(me(1).div(e.sub(t)))._late(t);
}), { focusSpan: j3, focusspan: _3 } = le(["focusSpan", "focusspan"], function(t, e) {
  return e._focus(t.begin, t.end);
}), R3 = le("ply", function(t, e) {
  const n = e.fmap((r) => hn(r)._fast(t)).squeezeJoin();
  return Wr && (n._steps = me(t).mulmaybe(e._steps)), n;
}), { fast: $3, density: r$ } = le(
  ["fast", "density"],
  function(t, e) {
    return t === 0 ? St : (t = me(t), e.withQueryTime((r) => r.mul(t)).withHapTime((r) => r.div(t)).setSteps(e._steps));
  },
  !0,
  !0
), Z3 = le("hurry", function(t, e) {
  return e._fast(t).mul(hn({ speed: t }));
}), { slow: L3, sparsity: I3 } = le(["slow", "sparsity"], function(t, e) {
  return t === 0 ? St : e._fast(me(1).div(t));
}), N3 = le("inside", function(t, e, n) {
  return e(n._slow(t))._fast(t);
}), V3 = le("outside", function(t, e, n) {
  return e(n._fast(t))._slow(t);
}), X3 = le("lastOf", function(t, e, n) {
  const r = Array(t - 1).fill(n);
  return r.push(e(n)), Uf(...r);
}), { firstOf: W3, every: q3 } = le(["firstOf", "every"], function(t, e, n) {
  const r = Array(t - 1).fill(n);
  return r.unshift(e(n)), Uf(...r);
}), U3 = le("apply", function(t, e) {
  return t(e);
}), G3 = le("cpm", function(t, e) {
  return e._fast(t / 60 / 1);
}), z3 = le(
  "early",
  function(t, e) {
    return t = me(t), e.withQueryTime((n) => n.add(t)).withHapTime((n) => n.sub(t));
  },
  !0,
  !0
), Tb = le(
  "late",
  function(t, e) {
    return t = me(t), e._early(me(0).sub(t));
  },
  !0,
  !0
), H3 = le("zoom", function(t, e, n) {
  if (e = me(e), t = me(t), t.gte(e))
    return cr;
  const r = e.sub(t), i = Wr ? n._steps?.mulmaybe(r) : void 0;
  return n.withQuerySpan((s) => s.withCycle((a) => a.mul(r).add(t))).withHapSpan((s) => s.withCycle((a) => a.sub(t).div(r))).splitQueries().setSteps(i);
}), { zoomArc: Y3, zoomarc: K3 } = le(["zoomArc", "zoomarc"], function(t, e) {
  return e.zoom(t.begin, t.end);
}), J3 = le(
  "bite",
  (t, e, n) => e.fmap((r) => (i) => {
    const s = me(r).div(i).mod(1), a = s.add(me(1).div(i));
    return n.zoom(s, a);
  }).appLeft(t).squeezeJoin(),
  !1
), e5 = le(
  "linger",
  function(t, e) {
    return t == 0 ? St : t < 0 ? e._zoom(t.add(1), 1)._slow(t) : e._zoom(0, t)._slow(t);
  },
  !0,
  !0
), { segment: t5, seg: n5 } = le(["segment", "seg"], function(t, e) {
  return e.struct(hn(!0)._fast(t)).setSteps(t);
}), r5 = le("swingBy", (t, e, n) => n.inside(e, Tb(Qb(0, t / 2)))), i5 = le("swing", (t, e) => e.swingBy(1 / 3, t)), { invert: s5, inv: a5 } = le(
  ["invert", "inv"],
  function(t) {
    return t.fmap((e) => !e);
  },
  !0,
  !0
), o5 = le("when", function(t, e, n) {
  return t ? e(n) : n;
}), l5 = le("off", function(t, e, n) {
  return Nt(n, e(n.late(t)));
}), u5 = le("brak", function(t) {
  return t.when(ss(!1, !0), (e) => Yn(e, St)._late(0.25));
}), jb = le(
  "rev",
  function(t) {
    const e = function(n) {
      const r = n.span, i = r.begin.sam(), s = r.begin.nextSam(), a = function(l) {
        const c = l.withTime((f) => i.add(s.sub(f))), h = c.begin;
        return c.begin = c.end, c.end = h, c;
      };
      return t.query(n.setSpan(a(r))).map((l) => l.withSpan(a));
    };
    return new de(e).splitQueries();
  },
  !1,
  !0
), c5 = le("pressBy", function(t, e) {
  return e.fmap((n) => hn(n).compress(t, 1)).squeezeJoin();
}), h5 = le("press", function(t) {
  return t._pressBy(0.5);
});
de.prototype.hush = function() {
  return St;
};
const p5 = le(
  "palindrome",
  function(t) {
    return t.lastOf(2, jb);
  },
  !0,
  !0
), { juxBy: f5, juxby: d5 } = le(["juxBy", "juxby"], function(t, e, n) {
  t /= 2;
  const r = function(a, o, l) {
    return o in a ? a[o] : l;
  }, i = n.withValue((a) => Object.assign({}, a, { pan: r(a, "pan", 0.5) - t })), s = e(n.withValue((a) => Object.assign({}, a, { pan: r(a, "pan", 0.5) + t })));
  return Nt(i, s).setSteps(Wr ? Xr(i._steps, s._steps) : void 0);
}), m5 = le("jux", function(t, e) {
  return e._juxBy(1, t, e);
}), { echoWith: g5, echowith: b5, stutWith: y5, stutwith: O5 } = le(
  ["echoWith", "echowith", "stutWith", "stutwith"],
  function(t, e, n, r) {
    return Nt(...If(0, t - 1).map((i) => n(r.late(me(e).mul(i)), i)));
  }
), v5 = le("echo", function(t, e, n, r) {
  return r._echoWith(t, e, (i, s) => i.gain(Math.pow(n, s)));
}), x5 = le("stut", function(t, e, n, r) {
  return r._echoWith(t, n, (i, s) => i.gain(Math.pow(e, s)));
}), Gf = function(t, e, n = !1) {
  return t = me(t), ss(
    ...If(0, t.sub(1)).map(
      (r) => n ? e.late(me(r).div(t)) : e.early(me(r).div(t))
    )
  );
}, k5 = le(
  "iter",
  function(t, e) {
    return Gf(t, e, !1);
  },
  !0,
  !0
), { iterBack: w5, iterback: C5 } = le(
  ["iterBack", "iterback"],
  function(t, e) {
    return Gf(t, e, !0);
  },
  !0,
  !0
), { repeatCycles: S5 } = le(
  "repeatCycles",
  function(t, e) {
    return new de(function(n) {
      const r = n.span.begin.sam(), i = r.div(t).sam(), s = r.sub(i);
      return n = n.withSpan((a) => a.withTime((o) => o.sub(s))), e.query(n).map((a) => a.withSpan((o) => o.withTime((l) => l.add(s))));
    }).splitQueries();
  },
  !0,
  !0
), zf = function(t, e, n, r = !1, i = !1) {
  const s = Array(t - 1).fill(!1);
  s.unshift(!0);
  const a = Gf(t, Er(...s), !r);
  return i || (n = n.repeatCycles(t)), n.when(a, e);
}, { chunk: A5, slowchunk: D5, slowChunk: P5 } = le(["chunk", "slowchunk", "slowChunk"], function(t, e, n) {
  return zf(t, e, n, !1, !1);
}), { chunkBack: E5, chunkback: F5 } = le(["chunkBack", "chunkback"], function(t, e, n) {
  return zf(t, e, n, !0);
}), { fastchunk: B5, fastChunk: M5 } = le(["fastchunk", "fastChunk"], function(t, e, n) {
  return zf(t, e, n, !1, !0);
}), Q5 = le(
  "bypass",
  function(t, e) {
    return t = !!parseInt(t), t ? St : e;
  },
  !0,
  !0
), { ribbon: T5, rib: j5 } = le(
  ["ribbon", "rib"],
  (t, e, n) => n.early(t).restart(hn(1).slow(e))
), _5 = le("hsla", (t, e, n, r, i) => i.color(`hsla(${t}turn,${e * 100}%,${n * 100}%,${r})`)), R5 = le("hsl", (t, e, n, r) => r.color(`hsl(${t}turn,${e * 100}%,${n * 100}%)`));
de.prototype.tag = function(t) {
  return this.withContext((e) => ({ ...e, tags: (e.tags || []).concat([t]) }));
};
const $5 = le("filter", (t, e) => e.withHaps((n) => n.filter(t))), Z5 = le("filterWhen", (t, e) => e.filter((n) => t(n.whole.begin))), L5 = le(
  "within",
  (t, e, n, r) => Nt(
    n(r.filterWhen((i) => i.cyclePos() >= t && i.cyclePos() <= e)),
    r.filterWhen((i) => i.cyclePos() < t || i.cyclePos() > e)
  )
);
de.prototype.stepJoin = function() {
  const t = this, e = Gn(...fp(dp(t.queryArc(0, 1))))._steps, n = function(r) {
    const s = t.early(r.span.begin.sam()).query(r.setSpan(new nn(me(0), me(1))));
    return Gn(...fp(dp(s))).query(r);
  };
  return new de(n, e);
};
de.prototype.stepBind = function(t) {
  return this.fmap(t).stepJoin();
};
function fp(t) {
  const e = t.filter((s, a) => a.hasSteps).reduce((s, a) => s.add(a), me(0)), n = Pa(t.map((s, a) => a._steps)).reduce(
    (s, a) => s.add(a),
    me(0)
  ), r = e.eq(0) ? void 0 : n.div(e);
  function i(s, a) {
    return a._steps === void 0 ? [s.mulmaybe(r), a] : [a._steps, a];
  }
  return t.map((s) => i(...s));
}
function dp(t) {
  const e = wi(t.map((i) => [i.part.begin, i.part.end])), n = Ob([me(0), me(1), ...e]);
  return yb(n).map((i) => [
    i[1].sub(i[0]),
    Nt(..._b(new nn(...i), t).map((s) => s.value.withHap((a) => a.setContext(a.combineContext(s)))))
  ]);
}
function _b(t, e) {
  return Pa(e.map((n) => Rb(t, n)));
}
function Rb(t, e) {
  const n = t.intersection(e.part);
  if (n != null)
    return new Gt(e.whole, n, e.value, e.context);
}
const $b = le("pace", function(t, e) {
  return e._steps === void 0 ? e : e._steps.eq(me(0)) ? cr : e._fast(me(t).div(e._steps)).setSteps(t);
});
function Zb(t, ...e) {
  const n = e.map((i) => pp(i));
  if (n.length == 0)
    return St;
  t == 0 && (t = n[0][1]);
  const r = [];
  for (const i of n)
    i[1] != 0 && (t == i[1] ? r.push(i[0]) : r.push(i[0]._fast(me(t).div(me(i[1])))));
  return Nt(...r);
}
function gc(...t) {
  if (Array.isArray(t[0]))
    return Zb(0, ...t);
  if (t = t.filter((r) => r.hasSteps), t.length == 0)
    return St;
  const e = Xr(...t.map((r) => r._steps));
  if (e.eq(me(0)))
    return cr;
  const n = Nt(...t.map((r) => r.pace(e)));
  return n._steps = e, n;
}
function Gn(...t) {
  if (t.length === 0)
    return cr;
  const e = (a) => Array.isArray(a) ? a : [a._steps, a];
  if (t = t.map(e), t.find((a) => a[0] === void 0)) {
    const a = t.map((l) => l[0]).filter((l) => l !== void 0);
    if (a.length === 0)
      return Yn(...t.map((l) => l[1]));
    if (a.length === t.length)
      return cr;
    const o = a.reduce((l, c) => l.add(c), me(0)).div(a.length);
    for (let l of t)
      l[0] === void 0 && (l[0] = o);
  }
  if (t.length == 1)
    return Oe(t[0][1]).withSteps((o) => t[0][0]);
  const n = t.map((a) => a[0]).reduce((a, o) => a.add(o), me(0));
  let r = me(0);
  const i = [];
  for (const [a, o] of t) {
    if (me(a).eq(0))
      continue;
    const l = r.add(a);
    i.push(Oe(o)._compress(r.div(n), l.div(n))), r = l;
  }
  const s = Nt(...i);
  return s._steps = n, s;
}
function Lb(...t) {
  t = t.map((i) => Array.isArray(i) ? i.map(Oe) : [Oe(i)]);
  const e = Xr(...t.map((i) => me(i.length)));
  let n = [];
  for (let i = 0; i < e; ++i)
    n.push(...t.map((s) => s.length == 0 ? St : s[i % s.length]));
  n = n.filter((i) => i.hasSteps && i._steps > 0);
  const r = n.reduce((i, s) => i.add(s._steps), me(0));
  return n = Gn(...n), n._steps = r, n;
}
const Ib = Lo("take", function(t, e) {
  if (!e.hasSteps || e._steps.lte(0) || (t = me(t), t.eq(0)))
    return cr;
  const n = t < 0;
  n && (t = t.abs());
  const r = t.div(e._steps);
  return r.lte(0) ? cr : r.gte(1) ? e : n ? e.zoom(me(1).sub(r), 1) : e.zoom(0, r);
}), Nb = Lo("drop", function(t, e) {
  return e.hasSteps ? (t = me(t), t.lt(0) ? e.take(e._steps.add(t)) : e.take(me(0).sub(e._steps.sub(t)))) : cr;
}), Vb = Lo("extend", function(t, e) {
  return e.fast(t).expand(t);
}), Xb = Lo("expand", function(t, e) {
  return e.withSteps((n) => n.mul(me(t)));
}), Wb = Lo("contract", function(t, e) {
  return e.withSteps((n) => n.div(me(t)));
});
de.prototype.shrinklist = function(t) {
  const e = this;
  if (!e.hasSteps)
    return [e];
  let [n, r] = Array.isArray(t) ? t : [t, e._steps];
  if (n = me(n), r === 0 || n === 0)
    return [e];
  const i = n > 0, s = [];
  if (i) {
    const a = me(1).div(e._steps).mul(n);
    for (let o = 0; o < r; ++o) {
      const l = a.mul(o);
      if (l.gt(1))
        break;
      s.push([l, 1]);
    }
  } else {
    n = me(0).sub(n);
    const a = me(1).div(e._steps).mul(n);
    for (let o = 0; o < r; ++o) {
      const l = me(1).sub(a.mul(o));
      if (l.lt(0))
        break;
      s.push([me(0), l]);
    }
  }
  return s.map((a) => e.zoom(...a));
};
const qb = (t, e) => e.shrinklist(t), Ub = le(
  "shrink",
  function(t, e) {
    if (!e.hasSteps)
      return cr;
    const n = e.shrinklist(t), r = Gn(...n);
    return r._steps = n.reduce((i, s) => i.add(s._steps), me(0)), r;
  },
  !0,
  !1,
  (t) => t.stepJoin()
), I5 = le(
  "grow",
  function(t, e) {
    if (!e.hasSteps)
      return cr;
    const n = e.shrinklist(me(0).sub(t));
    n.reverse();
    const r = Gn(...n);
    return r._steps = n.reduce((i, s) => i.add(s._steps), me(0)), r;
  },
  !0,
  !1,
  (t) => t.stepJoin()
), Gb = function(t, ...e) {
  return t.tour(...e);
};
de.prototype.tour = function(...t) {
  return Gn(
    ...[].concat(
      ...t.map((e, n) => [...t.slice(0, t.length - n), this, ...t.slice(t.length - n)]),
      this,
      ...t
    )
  );
};
const zb = function(...t) {
  t = t.filter((r) => r.hasSteps);
  const e = ss(...t.map((r) => r._slow(r._steps))), n = Xr(...t.map((r) => r._steps));
  return e._fast(n).setSteps(n);
}, N5 = Gn, Hf = Gn, V5 = Gn, X5 = Lb, W5 = gc;
de.prototype.s_polymeter = de.prototype.polymeter;
const q5 = Ub;
de.prototype.s_taper = de.prototype.shrink;
const U5 = qb;
de.prototype.s_taperlist = de.prototype.shrinklist;
const G5 = Ib;
de.prototype.s_add = de.prototype.take;
const z5 = Nb;
de.prototype.s_sub = de.prototype.drop;
const H5 = Xb;
de.prototype.s_expand = de.prototype.expand;
const Y5 = Vb;
de.prototype.s_extend = de.prototype.extend;
const K5 = Wb;
de.prototype.s_contract = de.prototype.contract;
const J5 = Gb;
de.prototype.s_tour = de.prototype.tour;
const eE = zb;
de.prototype.s_zip = de.prototype.zip;
const tE = $b;
de.prototype.steps = de.prototype.pace;
const nE = le("chop", function(t, e) {
  const r = Array.from({ length: t }, (a, o) => o).map((a) => ({ begin: a / t, end: (a + 1) / t })), i = function(a, o) {
    if ("begin" in a && "end" in a && a.begin !== void 0 && a.end !== void 0) {
      const l = a.end - a.begin;
      o = { begin: a.begin + o.begin * l, end: a.begin + o.end * l };
    }
    return Object.assign({}, a, o);
  }, s = function(a) {
    return Er(r.map((o) => i(a, o)));
  };
  return e.squeezeBind(s).setSteps(Wr ? me(t).mulmaybe(e._steps) : void 0);
}), rE = le("striate", function(t, e) {
  const r = Array.from({ length: t }, (s, a) => a).map((s) => ({ begin: s / t, end: (s + 1) / t })), i = ss(...r);
  return e.set(i)._fast(t).setSteps(Wr ? me(t).mulmaybe(e._steps) : void 0);
}), Hb = function(t, e, n = 0.5) {
  return e.speed(1 / t * n).unit("c").slow(t);
}, Yb = le(
  "slice",
  function(t, e, n) {
    return t.innerBind(
      (r) => e.outerBind(
        (i) => n.outerBind((s) => {
          s = s instanceof Object ? s : { s };
          const a = Array.isArray(r) ? r[i] : i / r, o = Array.isArray(r) ? r[i + 1] : (i + 1) / r;
          return hn({ begin: a, end: o, _slices: r, ...s });
        })
      )
    ).setSteps(e._steps);
  },
  !1
  // turns off auto-patternification
), iE = le(
  "splice",
  function(t, e, n) {
    const r = Yb(t, e, n);
    return new de((i) => {
      const s = i.controls._cps || 1;
      return r.query(i).map(
        (o) => o.withValue((l) => ({
          speed: s / l._slices / o.whole.duration * (l.speed || 1),
          unit: "c",
          ...l
        }))
      );
    }).setSteps(e._steps);
  },
  !1
  // turns off auto-patternification
), { loopAt: sE, loopat: aE } = le(["loopAt", "loopat"], function(t, e) {
  const n = e._steps ? e._steps.div(t) : void 0;
  return new de((r) => Hb(t, e, r.controls._cps).query(r), n);
}), oE = le(
  "fit",
  (t) => t.withHaps(
    (e, n) => e.map(
      (r) => r.withValue((i) => {
        const s = ("end" in i ? i.end : 1) - ("begin" in i ? i.begin : 0);
        return {
          ...i,
          speed: (n.controls._cps || 1) / r.whole.duration * s,
          unit: "c"
        };
      })
    )
  )
), { loopAtCps: lE, loopatcps: uE } = le(["loopAtCps", "loopatcps"], function(t, e, n) {
  return Hb(t, n, e);
}), Kb = (t) => hn(1).withValue(() => Oe(t())).innerJoin();
let Pm = (t) => t < 0.5 ? 1 : 1 - (t - 0.5) / 0.5, Jb = (t, e, n) => {
  e = Oe(e), t = Oe(t), n = Oe(n);
  let r = e.fmap((s) => ({ gain: Pm(s) })), i = e.fmap((s) => ({ gain: Pm(1 - s) }));
  return Nt(t.mul(r), n.mul(i));
};
de.prototype.xfade = function(t, e) {
  return Jb(this, t, e);
};
const cE = (t) => (e, n, r) => {
  e = me(e).mod(n), n = me(n);
  const i = e.div(n), s = e.add(1).div(n);
  return t(r.fmap((a) => hn(a)._compress(i, s)));
}, { beat: hE } = le(
  ["beat"],
  cE((t) => t.innerJoin())
);
function bc(t) {
  let e = Array.isArray(t);
  t = e ? t : [t];
  const n = t[0], r = (a) => {
    let o;
    if (typeof a == "object" && a.value !== void 0 && (o = { ...a }, a = a.value, delete o.value), e && Array.isArray(a)) {
      const l = o || {};
      return a.forEach((c, h) => {
        h < t.length && (l[t[h]] = c);
      }), l;
    } else return o ? (o[n] = a, o) : { [n]: a };
  }, i = (...a) => Er(...a).withValue(r), s = function(...a) {
    return a.length ? this.set(i(...a)) : this.fmap(r);
  };
  return de.prototype[n] = s, i;
}
const mp = /* @__PURE__ */ new Map();
function W(t, ...e) {
  const n = Array.isArray(t) ? t[0] : t;
  let r = {};
  return r[n] = bc(t), e.forEach((i) => {
    r[i] = r[n], mp.set(i, n), de.prototype[i] = de.prototype[n];
  }), r;
}
const { s: ey, sound: ty } = W(["s", "n", "gain"], "sound"), { source: ny, src: ry } = W("source", "src"), { n: iy } = W("n"), { note: sy } = W(["note", "n"]), { accelerate: ay } = W("accelerate"), { velocity: oy } = W("velocity"), { gain: ly } = W("gain"), { postgain: uy } = W("postgain"), { amp: cy } = W("amp"), { attack: hy, att: py } = W("attack", "att"), { fmh: fy } = W(["fmh", "fmi"], "fmh"), { fmi: dy, fm: my } = W(["fmi", "fmh"], "fm"), { fmenv: gy } = W("fmenv"), { fmattack: by } = W("fmattack"), { fmdecay: yy } = W("fmdecay"), { fmsustain: Oy } = W("fmsustain"), { fmrelease: vy } = W("fmrelease"), { fmvelocity: xy } = W("fmvelocity"), { bank: ky } = W("bank"), { analyze: wy } = W("analyze"), { fft: Cy } = W("fft"), { decay: Sy, dec: Ay } = W("decay", "dec"), { sustain: Dy, sus: Py } = W("sustain", "sus"), { release: Ey, rel: Fy } = W("release", "rel"), { hold: By } = W("hold"), { bandf: My, bpf: Qy, bp: Ty } = W(["bandf", "bandq", "bpenv"], "bpf", "bp"), { bandq: jy, bpq: _y } = W("bandq", "bpq"), { begin: Ry } = W("begin"), { end: $y } = W("end"), { loop: Zy } = W("loop"), { loopBegin: Ly, loopb: Iy } = W("loopBegin", "loopb"), { loopEnd: Ny, loope: Vy } = W("loopEnd", "loope"), { crush: Xy } = W("crush"), { coarse: Wy } = W("coarse"), { drive: qy } = W("drive"), { channels: Uy, ch: Gy } = W("channels", "ch"), { phaserrate: zy, ph: Hy, phaser: Yy } = W(
  ["phaserrate", "phaserdepth", "phasercenter", "phasersweep"],
  "ph",
  "phaser"
), { phasersweep: Ky, phs: Jy } = W("phasersweep", "phs"), { phasercenter: e1, phc: t1 } = W("phasercenter", "phc"), { phaserdepth: n1, phd: r1, phasdp: i1 } = W("phaserdepth", "phd", "phasdp"), { channel: s1 } = W("channel"), { cut: a1 } = W("cut"), { cutoff: o1, ctf: l1, lpf: u1, lp: c1 } = W(["cutoff", "resonance", "lpenv"], "ctf", "lpf", "lp"), { lpenv: h1, lpe: p1 } = W("lpenv", "lpe"), { hpenv: f1, hpe: d1 } = W("hpenv", "hpe"), { bpenv: m1, bpe: g1 } = W("bpenv", "bpe"), { lpattack: b1, lpa: y1 } = W("lpattack", "lpa"), { hpattack: O1, hpa: v1 } = W("hpattack", "hpa"), { bpattack: x1, bpa: k1 } = W("bpattack", "bpa"), { lpdecay: w1, lpd: C1 } = W("lpdecay", "lpd"), { hpdecay: S1, hpd: A1 } = W("hpdecay", "hpd"), { bpdecay: D1, bpd: P1 } = W("bpdecay", "bpd"), { lpsustain: E1, lps: F1 } = W("lpsustain", "lps"), { hpsustain: B1, hps: M1 } = W("hpsustain", "hps"), { bpsustain: Q1, bps: T1 } = W("bpsustain", "bps"), { lprelease: j1, lpr: _1 } = W("lprelease", "lpr"), { hprelease: R1, hpr: $1 } = W("hprelease", "hpr"), { bprelease: Z1, bpr: L1 } = W("bprelease", "bpr"), { ftype: I1 } = W("ftype"), { fanchor: N1 } = W("fanchor"), { vib: V1, vibrato: X1, v: W1 } = W(["vib", "vibmod"], "vibrato", "v"), { noise: q1 } = W("noise"), { vibmod: U1, vmod: G1 } = W(["vibmod", "vib"], "vmod"), { hcutoff: z1, hpf: H1, hp: Y1 } = W(["hcutoff", "hresonance", "hpenv"], "hpf", "hp"), { hresonance: K1, hpq: J1 } = W("hresonance", "hpq"), { resonance: eO, lpq: tO } = W("resonance", "lpq"), { djf: nO } = W("djf"), { delay: rO } = W(["delay", "delaytime", "delayfeedback"]), { delayfeedback: iO, delayfb: sO, dfb: aO } = W("delayfeedback", "delayfb", "dfb"), { delaytime: oO, delayt: lO, dt: uO } = W("delaytime", "delayt", "dt"), { lock: cO } = W("lock"), { detune: hO, det: pO } = W("detune", "det"), { unison: fO } = W("unison"), { spread: dO } = W("spread"), { dry: mO } = W("dry"), { fadeTime: gO, fadeOutTime: bO } = W("fadeTime", "fadeOutTime"), { fadeInTime: yO } = W("fadeInTime"), { freq: OO } = W("freq"), { pattack: vO, patt: xO } = W("pattack", "patt"), { pdecay: kO, pdec: wO } = W("pdecay", "pdec"), { psustain: CO, psus: SO } = W("psustain", "psus"), { prelease: AO, prel: DO } = W("prelease", "prel"), { penv: PO } = W("penv"), { pcurve: EO } = W("pcurve"), { panchor: FO } = W("panchor"), { gate: BO, gat: MO } = W("gate", "gat"), { leslie: QO } = W("leslie"), { lrate: TO } = W("lrate"), { lsize: jO } = W("lsize"), { activeLabel: _O } = W("activeLabel"), { label: RO } = W(["label", "activeLabel"]), { degree: $O } = W("degree"), { mtranspose: ZO } = W("mtranspose"), { ctranspose: LO } = W("ctranspose"), { harmonic: IO } = W("harmonic"), { stepsPerOctave: NO } = W("stepsPerOctave"), { octaveR: VO } = W("octaveR"), { nudge: XO } = W("nudge"), { octave: WO } = W("octave"), { orbit: qO } = W("orbit"), { overgain: UO } = W("overgain"), { overshape: GO } = W("overshape"), { pan: zO } = W("pan"), { panspan: HO } = W("panspan"), { pansplay: YO } = W("pansplay"), { panwidth: KO } = W("panwidth"), { panorient: JO } = W("panorient"), { rate: ev } = W("rate"), { slide: tv } = W("slide"), { semitone: nv } = W("semitone"), { voice: rv } = W("voice"), { chord: iv } = W("chord"), { dictionary: sv, dict: av } = W("dictionary", "dict"), { anchor: ov } = W("anchor"), { offset: lv } = W("offset"), { octaves: uv } = W("octaves"), { mode: cv } = W(["mode", "anchor"]), { room: hv } = W(["room", "size"]), { roomlp: pv, rlp: fv } = W("roomlp", "rlp"), { roomdim: dv, rdim: mv } = W("roomdim", "rdim"), { roomfade: gv, rfade: bv } = W("roomfade", "rfade"), { ir: yv, iresponse: Ov } = W(["ir", "i"], "iresponse"), { roomsize: vv, size: xv, sz: kv, rsize: wv } = W("roomsize", "size", "sz", "rsize"), { shape: Cv } = W(["shape", "shapevol"]), { distort: Sv, dist: Av } = W(["distort", "distortvol"], "dist"), { compressor: Dv } = W([
  "compressor",
  "compressorRatio",
  "compressorKnee",
  "compressorAttack",
  "compressorRelease"
]), { compressorKnee: Pv } = W("compressorKnee"), { compressorRatio: Ev } = W("compressorRatio"), { compressorAttack: Fv } = W("compressorAttack"), { compressorRelease: Bv } = W("compressorRelease"), { speed: Yf } = W("speed"), { stretch: Mv } = W("stretch"), { unit: Qv } = W("unit"), { squiz: Tv } = W("squiz"), { vowel: jv } = W("vowel"), { waveloss: _v } = W("waveloss"), { density: pE } = W("density"), { expression: Rv } = W("expression"), { sustainpedal: $v } = W("sustainpedal"), { tremolodepth: Zv, tremdp: Lv } = W("tremolodepth", "tremdp"), { tremolorate: Iv, tremr: Nv } = W("tremolorate", "tremr"), { fshift: Vv } = W("fshift"), { fshiftnote: Xv } = W("fshiftnote"), { fshiftphase: Wv } = W("fshiftphase"), { triode: qv } = W("triode"), { krush: Uv } = W("krush"), { kcutoff: Gv } = W("kcutoff"), { octer: zv } = W("octer"), { octersub: Hv } = W("octersub"), { octersubsub: Yv } = W("octersubsub"), { ring: Kv } = W("ring"), { ringf: Jv } = W("ringf"), { ringdf: ex } = W("ringdf"), { freeze: tx } = W("freeze"), { xsdelay: nx } = W("xsdelay"), { tsdelay: rx } = W("tsdelay"), { real: ix } = W("real"), { imag: sx } = W("imag"), { enhance: ax } = W("enhance"), { partials: ox } = W("partials"), { comb: lx } = W("comb"), { smear: ux } = W("smear"), { scram: cx } = W("scram"), { binshift: hx } = W("binshift"), { hbrick: px } = W("hbrick"), { lbrick: fx } = W("lbrick"), { frameRate: dx } = W("frameRate"), { frames: mx } = W("frames"), { hours: gx } = W("hours"), { minutes: bx } = W("minutes"), { seconds: yx } = W("seconds"), { songPtr: Ox } = W("songPtr"), { uid: vx } = W("uid"), { val: xx } = W("val"), { cps: kx } = W("cps"), { clip: wx, legato: Cx } = W("clip", "legato"), { duration: Sx, dur: Ax } = W("duration", "dur"), { zrand: Dx } = W("zrand"), { curve: Px } = W("curve"), { deltaSlide: Ex } = W("deltaSlide"), { pitchJump: Fx } = W("pitchJump"), { pitchJumpTime: Bx } = W("pitchJumpTime"), { lfo: Mx, repeatTime: Qx } = W("lfo", "repeatTime"), { znoise: Tx } = W("znoise"), { zmod: jx } = W("zmod"), { zcrush: _x } = W("zcrush"), { zdelay: Rx } = W("zdelay"), { tremolo: $x } = W("tremolo"), { zzfx: Zx } = W("zzfx"), { color: Lx, colour: Ix } = W(["color", "colour"]);
let Kf = (...t) => t.reduce((e, n) => Object.assign(e, { [n]: bc(n) }), {});
const Nx = le("adsr", (t, e) => {
  t = Array.isArray(t) ? t : [t];
  const [n, r, i, s] = t;
  return e.set({ attack: n, decay: r, sustain: i, release: s });
}), Vx = le("ad", (t, e) => {
  t = Array.isArray(t) ? t : [t];
  const [n, r = n] = t;
  return e.attack(n).decay(r);
}), Xx = le("ds", (t, e) => {
  t = Array.isArray(t) ? t : [t];
  const [n, r = 0] = t;
  return e.set({ decay: n, sustain: r });
}), Wx = le("ar", (t, e) => {
  t = Array.isArray(t) ? t : [t];
  const [n, r = n] = t;
  return e.set({ attack: n, release: r });
}), { midichan: qx } = W("midichan"), { midimap: Ux } = W("midimap"), { midiport: Gx } = W("midiport"), { midicmd: zx } = W("midicmd"), Hx = le("control", (t, e) => {
  if (!Array.isArray(t))
    throw new Error("control expects an array of [ccn, ccv]");
  const [n, r] = t;
  return e.ccn(n).ccv(r);
}), { ccn: Yx } = W("ccn"), { ccv: Kx } = W("ccv"), { ctlNum: Jx } = W("ctlNum"), { nrpnn: ek } = W("nrpnn"), { nrpv: tk } = W("nrpv"), { progNum: nk } = W("progNum"), rk = le("sysex", (t, e) => {
  if (!Array.isArray(t))
    throw new Error("sysex expects an array of [id, data]");
  const [n, r] = t;
  return e.sysexid(n).sysexdata(r);
}), { sysexid: ik } = W("sysexid"), { sysexdata: sk } = W("sysexdata"), { midibend: ak } = W("midibend"), { miditouch: ok } = W("miditouch"), { polyTouch: lk } = W("polyTouch"), Jf = (t) => mp.has(t) ? mp.get(t) : t, uk = le("as", (t, e) => (t = Array.isArray(t) ? t : [t], e.fmap((n) => (n = Array.isArray(n) ? n : [n], n = Object.fromEntries(t.map((r, i) => [Jf(r), n[i]])), n)))), ck = le(
  "scrub",
  (t, e) => t.outerBind((n) => {
    Array.isArray(n) || (n = [n]);
    const [r, i = 1] = n;
    return e.begin(r).mul(Yf(i)).clip(1);
  }),
  !1
), fE = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  accelerate: ay,
  activeLabel: _O,
  ad: Vx,
  adsr: Nx,
  amp: cy,
  analyze: wy,
  anchor: ov,
  ar: Wx,
  as: uk,
  att: py,
  attack: hy,
  bandf: My,
  bandq: jy,
  bank: ky,
  begin: Ry,
  binshift: hx,
  bp: Ty,
  bpa: k1,
  bpattack: x1,
  bpd: P1,
  bpdecay: D1,
  bpe: g1,
  bpenv: m1,
  bpf: Qy,
  bpq: _y,
  bpr: L1,
  bprelease: Z1,
  bps: T1,
  bpsustain: Q1,
  ccn: Yx,
  ccv: Kx,
  ch: Gy,
  channel: s1,
  channels: Uy,
  chord: iv,
  clip: wx,
  coarse: Wy,
  color: Lx,
  colour: Ix,
  comb: lx,
  compressor: Dv,
  compressorAttack: Fv,
  compressorKnee: Pv,
  compressorRatio: Ev,
  compressorRelease: Bv,
  control: Hx,
  cps: kx,
  createParam: bc,
  createParams: Kf,
  crush: Xy,
  ctf: l1,
  ctlNum: Jx,
  ctranspose: LO,
  curve: Px,
  cut: a1,
  cutoff: o1,
  dec: Ay,
  decay: Sy,
  degree: $O,
  delay: rO,
  delayfb: sO,
  delayfeedback: iO,
  delayt: lO,
  delaytime: oO,
  deltaSlide: Ex,
  density: pE,
  det: pO,
  detune: hO,
  dfb: aO,
  dict: av,
  dictionary: sv,
  dist: Av,
  distort: Sv,
  djf: nO,
  drive: qy,
  dry: mO,
  ds: Xx,
  dt: uO,
  dur: Ax,
  duration: Sx,
  end: $y,
  enhance: ax,
  expression: Rv,
  fadeInTime: yO,
  fadeOutTime: bO,
  fadeTime: gO,
  fanchor: N1,
  fft: Cy,
  fm: my,
  fmattack: by,
  fmdecay: yy,
  fmenv: gy,
  fmh: fy,
  fmi: dy,
  fmrelease: vy,
  fmsustain: Oy,
  fmvelocity: xy,
  frameRate: dx,
  frames: mx,
  freeze: tx,
  freq: OO,
  fshift: Vv,
  fshiftnote: Xv,
  fshiftphase: Wv,
  ftype: I1,
  gain: ly,
  gat: MO,
  gate: BO,
  getControlName: Jf,
  harmonic: IO,
  hbrick: px,
  hcutoff: z1,
  hold: By,
  hours: gx,
  hp: Y1,
  hpa: v1,
  hpattack: O1,
  hpd: A1,
  hpdecay: S1,
  hpe: d1,
  hpenv: f1,
  hpf: H1,
  hpq: J1,
  hpr: $1,
  hprelease: R1,
  hps: M1,
  hpsustain: B1,
  hresonance: K1,
  imag: sx,
  ir: yv,
  iresponse: Ov,
  kcutoff: Gv,
  krush: Uv,
  label: RO,
  lbrick: fx,
  legato: Cx,
  leslie: QO,
  lfo: Mx,
  lock: cO,
  loop: Zy,
  loopBegin: Ly,
  loopEnd: Ny,
  loopb: Iy,
  loope: Vy,
  lp: c1,
  lpa: y1,
  lpattack: b1,
  lpd: C1,
  lpdecay: w1,
  lpe: p1,
  lpenv: h1,
  lpf: u1,
  lpq: tO,
  lpr: _1,
  lprelease: j1,
  lps: F1,
  lpsustain: E1,
  lrate: TO,
  lsize: jO,
  midibend: ak,
  midichan: qx,
  midicmd: zx,
  midimap: Ux,
  midiport: Gx,
  miditouch: ok,
  minutes: bx,
  mode: cv,
  mtranspose: ZO,
  n: iy,
  noise: q1,
  note: sy,
  nrpnn: ek,
  nrpv: tk,
  nudge: XO,
  octave: WO,
  octaveR: VO,
  octaves: uv,
  octer: zv,
  octersub: Hv,
  octersubsub: Yv,
  offset: lv,
  orbit: qO,
  overgain: UO,
  overshape: GO,
  pan: zO,
  panchor: FO,
  panorient: JO,
  panspan: HO,
  pansplay: YO,
  panwidth: KO,
  partials: ox,
  patt: xO,
  pattack: vO,
  pcurve: EO,
  pdec: wO,
  pdecay: kO,
  penv: PO,
  ph: Hy,
  phasdp: i1,
  phaser: Yy,
  phasercenter: e1,
  phaserdepth: n1,
  phaserrate: zy,
  phasersweep: Ky,
  phc: t1,
  phd: r1,
  phs: Jy,
  pitchJump: Fx,
  pitchJumpTime: Bx,
  polyTouch: lk,
  postgain: uy,
  prel: DO,
  prelease: AO,
  progNum: nk,
  psus: SO,
  psustain: CO,
  rate: ev,
  rdim: mv,
  real: ix,
  registerControl: W,
  rel: Fy,
  release: Ey,
  repeatTime: Qx,
  resonance: eO,
  rfade: bv,
  ring: Kv,
  ringdf: ex,
  ringf: Jv,
  rlp: fv,
  room: hv,
  roomdim: dv,
  roomfade: gv,
  roomlp: pv,
  roomsize: vv,
  rsize: wv,
  s: ey,
  scram: cx,
  scrub: ck,
  seconds: yx,
  semitone: nv,
  shape: Cv,
  size: xv,
  slide: tv,
  smear: ux,
  songPtr: Ox,
  sound: ty,
  source: ny,
  speed: Yf,
  spread: dO,
  squiz: Tv,
  src: ry,
  stepsPerOctave: NO,
  stretch: Mv,
  sus: Py,
  sustain: Dy,
  sustainpedal: $v,
  sysex: rk,
  sysexdata: sk,
  sysexid: ik,
  sz: kv,
  tremdp: Lv,
  tremolo: $x,
  tremolodepth: Zv,
  tremolorate: Iv,
  tremr: Nv,
  triode: qv,
  tsdelay: rx,
  uid: vx,
  unison: fO,
  unit: Qv,
  v: W1,
  val: xx,
  velocity: oy,
  vib: V1,
  vibmod: U1,
  vibrato: X1,
  vmod: G1,
  voice: rv,
  vowel: jv,
  waveloss: _v,
  xsdelay: nx,
  zcrush: _x,
  zdelay: Rx,
  zmod: jx,
  znoise: Tx,
  zrand: Dx,
  zzfx: Zx
}, Symbol.toStringTag, { value: "Module" })), dE = function(t, e) {
  const [n, r] = t, [i, s] = e, [a, o] = Xf(r, i);
  return [
    [r, n - r],
    [Wf((l, c) => l.concat(c), a, s), o]
  ];
}, mE = function(t, e) {
  const [n, r] = t, [i, s] = e, [a, o] = Xf(n, s);
  return [
    [n, r - n],
    [Wf((c, h) => c.concat(h), i, a), o]
  ];
}, hk = function(t, e) {
  const [n, r] = t;
  return Math.min(n, r) <= 1 ? [t, e] : hk(...n > r ? dE(t, e) : mE(t, e));
}, pk = function(t, e) {
  const n = t < 0;
  t = Math.abs(t);
  const r = e - t, i = Array(t).fill([1]), s = Array(r).fill([0]), a = hk([t, r], [i, s]), o = wi(a[1][0]).concat(wi(a[1][1]));
  return n ? o.map((l) => l === 0 ? 1 : 0) : o;
}, ed = function(t, e, n) {
  const r = pk(t, e);
  return n ? mb(r, -n) : r;
}, gE = le("euclid", function(t, e, n) {
  return n.struct(ed(t, e, 0));
}), { euclidrot: bE, euclidRot: yE } = le(["euclidrot", "euclidRot"], function(t, e, n, r) {
  return r.struct(ed(t, e, n));
}), fk = function(t, e, n, r) {
  if (t < 1)
    return St;
  const s = ed(t, e, n).join("").split("1").slice(1).map((a) => [a.length + 1, !0]);
  return r.struct(Hf(...s));
}, OE = le(["euclidLegato"], function(t, e, n) {
  return fk(t, e, 0, n);
}), vE = le(["euclidLegatoRot"], function(t, e, n, r) {
  return fk(t, e, n, r);
});
function dk(t, e, n = 0.05, r = 0.1, i = 0.1, s = globalThis.setInterval, a = globalThis.clearInterval, o = !0) {
  let l = 0, c = 0, h = 10 ** 4, f = 0.01;
  const m = (_) => n = _(n);
  i = i || r / 2;
  const y = () => {
    const _ = t(), B = _ + r + i;
    for (c === 0 && (c = _ + f); c < B; )
      c = o ? Math.round(c * h) / h : c, e(c, n, l, _), c += n, l++;
  };
  let x;
  const C = () => {
    S(), y(), x = s(y, r * 1e3);
  }, S = () => {
    x !== void 0 && a(x), x = void 0;
  };
  return { setDuration: m, start: C, stop: () => {
    l = 0, c = 0, S();
  }, pause: () => S(), duration: n, interval: r, getPhase: () => c, minLatency: f };
}
function xE(t) {
  return new de((e) => [new Gt(void 0, e.span, t)]);
}
const Br = (t) => {
  const e = (n) => [new Gt(void 0, n.span, t(n.span.begin))];
  return new de(e);
}, Io = Br((t) => t % 1), td = Io.toBipolar(), yc = Br((t) => 1 - t % 1), nd = yc.toBipolar(), rd = Br((t) => Math.sin(Math.PI * 2 * t)), mk = rd.fromBipolar(), kE = mk._early(me(1).div(4)), wE = rd._early(me(1).div(4)), gk = Br((t) => Math.floor(t * 2 % 2)), CE = gk.toBipolar(), SE = Yn(Io, yc), AE = Yn(td, nd), DE = Yn(yc, Io), PE = Yn(nd, td), bk = Br(Hs);
let id = 0, sd = 0;
typeof window < "u" && document.addEventListener("mousemove", (t) => {
  id = t.clientY / document.body.clientHeight, sd = t.clientX / document.body.clientWidth;
});
const EE = Br(() => id), FE = Br(() => id), BE = Br(() => sd), ME = Br(() => sd), yk = (t) => {
  const e = t << 13 ^ t, n = e >> 17 ^ e;
  return n << 5 ^ n;
}, QE = (t) => t - Math.trunc(t), Ok = (t) => yk(Math.trunc(QE(t / 300) * 536870912)), vk = (t) => t % 536870912 / 536870912, gp = (t) => Math.abs(vk(Ok(t))), TE = (t, e) => {
  const n = [];
  for (let r = 0; r < e; ++r)
    n.push(vk(t)), t = yk(t);
  return n;
}, jE = (t, e) => TE(Ok(t), e), xk = (t) => Io.range(0, t).round().segment(t), _E = (t) => {
  const e = Oe(t).log2(0).floor().add(1);
  return kk(t, e);
}, kk = (t, e = 16) => {
  e = Oe(e);
  const n = xk(e).mul(-1).add(e.sub(1));
  return Oe(t).segment(e).brshift(n).band(hn(1));
}, wk = (t) => Br((e) => {
  const r = jE(e.floor().add(0.5), t).map((s, a) => [s, a]).sort((s, a) => s[0] > a[0] - s[0] < a[0]).map((s) => s[1]), i = e.cyclePos().mul(t).floor() % t;
  return r[i];
})._segment(t), Ck = (t, e, n) => {
  const r = [...Array(e).keys()].map((i) => n.zoom(me(i).div(e), me(i + 1).div(e)));
  return t.fmap((i) => r[i].repeatCycles(e)._fast(e)).innerJoin();
}, RE = le("shuffle", (t, e) => Ck(wk(t), t, e)), $E = le("scramble", (t, e) => Ck(od(t)._segment(t), t, e)), zn = Br(gp), ZE = zn.toBipolar(), ad = (t) => zn.fmap((e) => e < t), LE = (t) => Oe(t).fmap(ad).innerJoin(), IE = ad(0.5), od = (t) => zn.fmap((e) => Math.trunc(e * t)), NE = (t) => Oe(t).fmap(od).innerJoin(), ld = (t, e) => (e = e.map(Oe), e.length == 0 ? St : t.range(0, e.length).fmap((n) => {
  const r = Math.min(Math.max(Math.floor(n), 0), e.length - 1);
  return e[r];
})), Oc = (t, e) => ld(t, e).outerJoin(), ud = (t, e) => ld(t, e).innerJoin(), VE = (...t) => Oc(zn, t);
de.prototype.choose = function(...t) {
  return Oc(this, t);
};
de.prototype.choose2 = function(...t) {
  return Oc(this.fromBipolar(), t);
};
const Sk = (...t) => ud(zn.segment(1), t), XE = Sk, Ak = function(t, ...e) {
  const n = e.map((o) => Oe(o[0])), r = [];
  let i = hn(0);
  for (const o of e)
    i = i.add(o[1]), r.push(i);
  const s = Pb(r), a = function(o) {
    const l = i.mul(o);
    return s.fmap((c) => (h) => n[c.findIndex((f) => f > h, c)]).appLeft(l);
  };
  return t.bind(a);
}, WE = (...t) => Ak(...t).outerJoin(), qE = (...t) => WE(zn, ...t), Dk = (...t) => Ak(zn.segment(1), ...t).innerJoin(), UE = Dk, Pk = (t) => {
  const e = t.fmap(Math.floor), n = t.fmap((s) => Math.floor(s) + 1), r = (s) => 6 * s ** 5 - 15 * s ** 4 + 10 * s ** 3, i = (s) => (a) => (o) => a + r(s) * (o - a);
  return t.sub(e).fmap(i).appBoth(e.fmap(gp)).appBoth(n.fmap(gp));
}, GE = Pk(bk.fmap((t) => Number(t))), zE = le(
  "degradeByWith",
  (t, e, n) => n.fmap((r) => (i) => r).appLeft(t.filterValues((r) => r > e)),
  !0,
  !0
), HE = le(
  "degradeBy",
  function(t, e) {
    return e._degradeByWith(zn, t);
  },
  !0,
  !0
), YE = le("degrade", (t) => t._degradeBy(0.5), !0, !0), KE = le(
  "undegradeBy",
  function(t, e) {
    return e._degradeByWith(
      zn.fmap((n) => 1 - n),
      t
    );
  },
  !0,
  !0
), JE = le("undegrade", (t) => t._undegradeBy(0.5), !0, !0), eF = le("sometimesBy", function(t, e, n) {
  return Oe(t).fmap((r) => Nt(n._degradeBy(r), e(n._undegradeBy(1 - r)))).innerJoin();
}), tF = le("sometimes", function(t, e) {
  return e._sometimesBy(0.5, t);
}), nF = le("someCyclesBy", function(t, e, n) {
  return Oe(t).fmap(
    (r) => Nt(
      n._degradeByWith(zn._segment(1), r),
      e(n._degradeByWith(zn.fmap((i) => 1 - i)._segment(1), 1 - r))
    )
  ).innerJoin();
}), rF = le("someCycles", function(t, e) {
  return e._someCyclesBy(0.5, t);
}), iF = le("often", function(t, e) {
  return e.sometimesBy(0.75, t);
}), sF = le("rarely", function(t, e) {
  return e.sometimesBy(0.25, t);
}), aF = le("almostNever", function(t, e) {
  return e.sometimesBy(0.1, t);
}), oF = le("almostAlways", function(t, e) {
  return e.sometimesBy(0.9, t);
}), lF = le("never", function(t, e) {
  return e;
}), uF = le("always", function(t, e) {
  return t(e);
});
function cd(t) {
  Array.isArray(t) === !1 && (t = [t]);
  const e = Sb();
  return t.every((n) => {
    const r = Cb.get(n) ?? n;
    return e[r];
  });
}
const cF = le("whenKey", function(t, e, n) {
  return n.when(cd(t), e);
}), hF = le("keyDown", function(t) {
  return t.fmap(cd);
}), pi = function(t, e, n = !0) {
  const r = Array.isArray(t), i = Object.keys(t).length;
  return t = kb(t, Oe), i === 0 ? St : e.fmap((s) => {
    let a = s;
    return r && (a = n ? Math.round(a) % i : dc(Math.round(a), 0, t.length - 1)), t[a];
  });
}, Ek = function(t, e) {
  return Array.isArray(e) && ([e, t] = [t, e]), pF(t, e);
}, pF = le("pick", function(t, e) {
  return pi(t, e, !1).innerJoin();
}), Fk = le("pickmod", function(t, e) {
  return pi(t, e, !0).innerJoin();
}), fF = le("pickF", function(t, e, n) {
  return n.apply(Ek(t, e));
}), dF = le("pickmodF", function(t, e, n) {
  return n.apply(Fk(t, e));
}), mF = le("pickOut", function(t, e) {
  return pi(t, e, !1).outerJoin();
}), gF = le("pickmodOut", function(t, e) {
  return pi(t, e, !0).outerJoin();
}), bF = le("pickRestart", function(t, e) {
  return pi(t, e, !1).restartJoin();
}), yF = le("pickmodRestart", function(t, e) {
  return pi(t, e, !0).restartJoin();
}), OF = le("pickReset", function(t, e) {
  return pi(t, e, !1).resetJoin();
}), vF = le("pickmodReset", function(t, e) {
  return pi(t, e, !0).resetJoin();
}), { inhabit: xF, pickSqueeze: kF } = le(["inhabit", "pickSqueeze"], function(t, e) {
  return pi(t, e, !1).squeezeJoin();
}), { inhabitmod: wF, pickmodSqueeze: CF } = le(["inhabitmod", "pickmodSqueeze"], function(t, e) {
  return pi(t, e, !0).squeezeJoin();
}), SF = (t, e) => (e = e.map(Oe), e.length == 0 ? St : t.fmap((n) => {
  const r = Zo(Math.round(n), e.length);
  return e[r];
}).squeezeJoin());
let fu;
try {
  fu = window?.speechSynthesis;
} catch {
  console.warn("cannot use window: not in browser?");
}
let Em = fu?.getVoices();
function AF(t, e, n) {
  fu.cancel();
  const r = new SpeechSynthesisUtterance(t);
  r.lang = e, Em = fu.getVoices();
  const i = Em.filter((s) => s.lang.includes(e));
  typeof n == "number" ? r.voice = i[n % i.length] : typeof n == "string" && (r.voice = i.find((s) => s.name === s)), speechSynthesis.speak(r);
}
const DF = le("speak", function(t, e, n) {
  return n.onTrigger((r, i) => {
    AF(i.value, t, e);
  });
}), hd = async (...t) => {
  const e = await Promise.allSettled(t), n = e.filter((r) => r.status === "fulfilled").map((r) => r.value);
  return e.forEach((r, i) => {
    r.status === "rejected" && console.warn(`evalScope: module with index ${i} could not be loaded:`, r.reason);
  }), n.forEach((r) => {
    Object.entries(r).forEach(([i, s]) => {
      globalThis[i] = s;
    });
  }), n;
};
function PF(t, e = {}) {
  const { wrapExpression: n = !0, wrapAsync: r = !0 } = e;
  n && (t = `{${t}}`), r && (t = `(async ()=>${t})()`);
  const i = `"use strict";return (${t})`;
  return Function(i)();
}
const Bk = async (t, e, n) => {
  let r = {};
  if (e) {
    const a = e(t, n);
    t = a.output, r = a;
  }
  return { mode: "javascript", pattern: await PF(t, { wrapExpression: !!e }), meta: r };
};
class EF {
  constructor({ onTrigger: e, onToggle: n, getTime: r }) {
    this.started = !1, this.cps = 0.5, this.lastTick = 0, this.getTime = r, this.time_at_last_tick_message = 0, this.collator = new wb({ getTargetClockTime: r }), this.onToggle = n, this.latency = 0.1, this.cycle = 0, this.id = Math.round(Date.now() * Math.random()), this.worker = new SharedWorker(new URL(
      /* @vite-ignore */
      "" + new URL("assets/clockworker-ZDiUtESR.js", import.meta.url).href,
      import.meta.url
    )), this.worker.port.start(), this.channel = new BroadcastChannel("strudeltick");
    const i = (a) => {
      const { cps: o, begin: l, end: c, cycle: h, time: f } = a;
      this.cps = o, this.cycle = h;
      const m = this.collator.calculateOffset(f) + f;
      s(l, c, m), this.time_at_last_tick_message = m;
    }, s = (a, o, l) => {
      if (this.started === !1)
        return;
      this.pattern.queryArc(a, o, { _cps: this.cps }).forEach((h) => {
        if (h.hasOnset()) {
          const m = cp(h.whole.begin - this.cycle, this.cps) + l + this.latency, y = cp(h.duration, this.cps);
          e?.(h, 0, y, this.cps, m);
        }
      });
    };
    this.channel.onmessage = (a) => {
      if (!this.started)
        return;
      const { payload: o, type: l } = a.data;
      switch (l) {
        case "tick":
          i(o);
      }
    };
  }
  sendMessage(e, n) {
    this.worker.port.postMessage({ type: e, payload: n, id: this.id });
  }
  now() {
    const e = (this.getTime() - this.time_at_last_tick_message) * this.cps;
    return this.cycle + e;
  }
  setCps(e = 1) {
    this.sendMessage("cpschange", { cps: e });
  }
  setCycle(e) {
    this.sendMessage("setcycle", { cycle: e });
  }
  setStarted(e) {
    this.sendMessage("toggle", { started: e }), this.started = e, this.onToggle?.(e);
  }
  start() {
    En("[cyclist] start"), this.setStarted(!0);
  }
  stop() {
    En("[cyclist] stop"), this.collator.reset(), this.setStarted(!1);
  }
  setPattern(e, n = !1) {
    this.pattern = e, n && !this.started && this.start();
  }
  log(e, n, r) {
    const i = r.filter((s) => s.hasOnset());
    console.log(`${e.toFixed(4)} - ${n.toFixed(4)} ${Array(i.length).fill("I").join("")}`);
  }
}
class Mk {
  constructor({
    interval: e,
    onTrigger: n,
    onToggle: r,
    onError: i,
    getTime: s,
    latency: a = 0.1,
    setInterval: o,
    clearInterval: l,
    beforeStart: c
  }) {
    this.started = !1, this.beforeStart = c, this.cps = 0.5, this.num_ticks_since_cps_change = 0, this.lastTick = 0, this.lastBegin = 0, this.lastEnd = 0, this.getTime = s, this.num_cycles_at_cps_change = 0, this.seconds_at_cps_change, this.onToggle = r, this.latency = a, this.clock = dk(
      s,
      // called slightly before each cycle
      (h, f, m, y) => {
        this.num_ticks_since_cps_change === 0 && (this.num_cycles_at_cps_change = this.lastEnd, this.seconds_at_cps_change = h), this.num_ticks_since_cps_change++;
        const C = this.num_ticks_since_cps_change * f * this.cps;
        try {
          const S = this.lastEnd;
          this.lastBegin = S;
          const M = this.num_cycles_at_cps_change + C;
          if (this.lastEnd = M, this.lastTick = h, h < y) {
            console.log("skip query: too late");
            return;
          }
          this.pattern.queryArc(S, M, { _cps: this.cps }).forEach((q) => {
            if (q.hasOnset()) {
              const _ = (q.whole.begin - this.num_cycles_at_cps_change) / this.cps + this.seconds_at_cps_change + a, B = q.duration / this.cps, $ = _ - h;
              n?.(q, $, B, this.cps, _), q.value.cps !== void 0 && this.cps != q.value.cps && (this.cps = q.value.cps, this.num_ticks_since_cps_change = 0);
            }
          });
        } catch (S) {
          En(`[cyclist] error: ${S.message}`), i?.(S);
        }
      },
      e,
      // duration of each cycle
      0.1,
      0.1,
      o,
      l
    );
  }
  now() {
    if (!this.started)
      return 0;
    const e = this.getTime() - this.lastTick - this.clock.duration;
    return this.lastBegin + e * this.cps;
  }
  setStarted(e) {
    this.started = e, this.onToggle?.(e);
  }
  async start() {
    if (await this.beforeStart?.(), this.num_ticks_since_cps_change = 0, this.num_cycles_at_cps_change = 0, !this.pattern)
      throw new Error("Scheduler: no pattern set! call .setPattern first.");
    En("[cyclist] start"), this.clock.start(), this.setStarted(!0);
  }
  pause() {
    En("[cyclist] pause"), this.clock.pause(), this.setStarted(!1);
  }
  stop() {
    En("[cyclist] stop"), this.clock.stop(), this.lastEnd = 0, this.setStarted(!1);
  }
  async setPattern(e, n = !1) {
    this.pattern = e, n && !this.started && await this.start();
  }
  setCps(e = 0.5) {
    this.cps !== e && (this.cps = e, this.num_ticks_since_cps_change = 0);
  }
  log(e, n, r) {
    const i = r.filter((s) => s.hasOnset());
    console.log(`${e.toFixed(4)} - ${n.toFixed(4)} ${Array(i.length).fill("I").join("")}`);
  }
}
let bp;
function yp() {
  if (!bp)
    throw new Error("no time set! use setTime to define a time source");
  return bp();
}
function Op(t) {
  bp = t;
}
function Qk({
  defaultOutput: t,
  onEvalError: e,
  beforeEval: n,
  beforeStart: r,
  afterEval: i,
  getTime: s,
  transpiler: a,
  onToggle: o,
  editPattern: l,
  onUpdateState: c,
  sync: h = !1,
  setInterval: f,
  clearInterval: m,
  id: y
}) {
  const x = {
    schedulerError: void 0,
    evalError: void 0,
    code: "// LOADING",
    activeCode: "// LOADING",
    pattern: void 0,
    miniLocations: [],
    widgets: [],
    pending: !1,
    started: !1
  }, C = {
    id: y
  }, S = (xe) => {
    Object.assign(x, xe), x.isDirty = x.code !== x.activeCode, x.error = x.evalError || x.schedulerError, c?.(x);
  }, M = {
    onTrigger: Tk({ defaultOutput: t, getTime: s }),
    getTime: s,
    onToggle: (xe) => {
      S({ started: xe }), o?.(xe);
    },
    setInterval: f,
    clearInterval: m,
    beforeStart: r
  }, Z = h && typeof SharedWorker < "u" ? new EF(M) : new Mk(M);
  let q = {}, _ = 0, B, $;
  const N = function() {
    return q = {}, _ = 0, B = void 0, $ = void 0, St;
  }, U = async (xe, je = !0) => (xe = l?.(xe) || xe, await Z.setPattern(xe, je), xe);
  Op(() => Z.now());
  const se = () => Z.stop(), K = () => Z.start(), ce = () => Z.pause(), H = () => Z.toggle(), ie = (xe) => Z.setCps(xe), fe = (xe) => Z.setCps(xe / 60), De = function(xe) {
    return B = xe, St;
  }, Ee = function(xe) {
    return $ = xe, St;
  }, re = () => {
    de.prototype.p = function(je) {
      return typeof je == "string" && (je.startsWith("_") || je.endsWith("_")) ? St : (je === "$" && (je = `$${_}`, _++), q[je] = this, this);
    }, de.prototype.q = function(je) {
      return St;
    };
    try {
      for (let je = 1; je < 10; ++je)
        Object.defineProperty(de.prototype, `d${je}`, {
          get() {
            return this.p(je);
          },
          configurable: !0
        }), Object.defineProperty(de.prototype, `p${je}`, {
          get() {
            return this.p(je);
          },
          configurable: !0
        }), de.prototype[`q${je}`] = St;
    } catch (je) {
      console.warn("injectPatternMethods: error:", je);
    }
    const xe = le("cpm", function(je, he) {
      return he._fast(je / 60 / Z.cps);
    });
    return hd({
      all: De,
      each: Ee,
      hush: N,
      cpm: xe,
      setCps: ie,
      setcps: ie,
      setCpm: fe,
      setcpm: fe
    });
  };
  return { scheduler: Z, evaluate: async (xe, je = !0, he = !0) => {
    if (!xe)
      throw new Error("no code to evaluate");
    try {
      S({ code: xe, pending: !0 }), await re(), Op(() => Z.now()), await n?.({ code: xe }), he && N();
      let { pattern: Pe, meta: Pt } = await Bk(xe, a, C);
      if (Object.keys(q).length) {
        let lt = Object.values(q);
        $ && (lt = lt.map((We) => $(We))), Pe = Nt(...lt);
      } else $ && (Pe = $(Pe));
      if (B && (Pe = B(Pe)), !mc(Pe)) {
        const lt = `got "${typeof evaluated}" instead of pattern`;
        throw new Error(lt + (typeof evaluated == "function" ? ", did you forget to call a function?" : "."));
      }
      return En("[eval] code updated"), Pe = await U(Pe, je), S({
        miniLocations: Pt?.miniLocations || [],
        widgets: Pt?.widgets || [],
        activeCode: xe,
        pattern: Pe,
        evalError: void 0,
        schedulerError: void 0,
        pending: !1
      }), i?.({ code: xe, pattern: Pe, meta: Pt }), Pe;
    } catch (Pe) {
      En(`[eval] error: ${Pe.message}`, "error"), console.error(Pe), S({ evalError: Pe, pending: !1 }), e?.(Pe);
    }
  }, start: K, stop: se, pause: ce, setCps: ie, setPattern: U, setCode: (xe) => S({ code: xe }), toggle: H, state: x };
}
const Tk = ({ getTime: t, defaultOutput: e }) => async (n, r, i, s, a) => {
  try {
    (!n.context.onTrigger || !n.context.dominantTrigger) && await e(n, r, i, s, a), n.context.onTrigger && await n.context.onTrigger(t() + r, n, t(), s, a);
  } catch (o) {
    En(`[cyclist] error: ${o.message}`, "error");
  }
}, FF = function(t, e = {}) {
  const n = document.getElementById("code"), r = "background-image:url(" + t + ");background-size:contain;";
  n.style = r;
  const { className: i } = n, s = (l, c) => {
    ({
      style: () => n.style = r + ";" + c,
      className: () => n.className = c + " " + i
    })[l]();
  }, a = Object.entries(e).filter(([l, c]) => typeof c == "function");
  Object.entries(e).filter(([l, c]) => typeof c == "string").forEach(([l, c]) => s(l, c)), a.length;
}, BF = () => {
  const t = document.getElementById("code");
  t && (t.style = "");
};
En("🌀 @strudel/core loaded 🌀");
globalThis._strudelLoaded && console.warn(
  `@strudel/core was loaded more than once...
This might happen when you have multiple versions of strudel installed. 
Please check with "npm ls @strudel/core".`
);
globalThis._strudelLoaded = !0;
const jk = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ClockCollator: wb,
  Cyclist: Mk,
  Fraction: me,
  Hap: Gt,
  Pattern: de,
  State: da,
  TimeSpan: nn,
  __chooseWith: ld,
  _brandBy: ad,
  _fitslice: _b,
  _irand: od,
  _keyDown: cd,
  _match: Rb,
  _mod: Zo,
  _polymeterListSteps: Zb,
  _retime: fp,
  _slices: dp,
  accelerate: ay,
  activeLabel: _O,
  ad: Vx,
  add: KP,
  adsr: Nx,
  almostAlways: oF,
  almostNever: aF,
  always: uF,
  amp: cy,
  analyze: wy,
  anchor: ov,
  and: b3,
  apply: U3,
  ar: Wx,
  arrange: RP,
  as: uk,
  att: py,
  attack: hy,
  averageArray: pb,
  backgroundImage: FF,
  band: i3,
  bandf: My,
  bandq: jy,
  bank: ky,
  base64ToUnicode: xb,
  beat: hE,
  begin: Ry,
  binary: _E,
  binaryN: kk,
  bind: VP,
  binshift: hx,
  bite: J3,
  bjork: pk,
  blshift: o3,
  bor: s3,
  bp: Ty,
  bpa: k1,
  bpattack: x1,
  bpd: P1,
  bpdecay: D1,
  bpe: g1,
  bpenv: m1,
  bpf: Qy,
  bpq: _y,
  bpr: L1,
  bprelease: Z1,
  bps: T1,
  bpsustain: Q1,
  brak: u5,
  brand: IE,
  brandBy: LE,
  brshift: l3,
  bxor: a3,
  bypass: Q5,
  calculateSteps: EP,
  cat: Mb,
  ccn: Yx,
  ccv: Kx,
  ceil: k3,
  ch: Gy,
  channel: s1,
  channels: Uy,
  choose: VE,
  chooseCycles: Sk,
  chooseInWith: ud,
  chooseWith: Oc,
  chop: nE,
  chord: iv,
  chunk: A5,
  chunkBack: E5,
  chunkback: F5,
  clamp: dc,
  cleanupUi: BF,
  clip: wx,
  coarse: Wy,
  code2hash: wP,
  color: Lx,
  colour: Ix,
  comb: lx,
  compose: hP,
  compress: E3,
  compressSpan: F3,
  compressor: Dv,
  compressorAttack: Fv,
  compressorKnee: Pv,
  compressorRatio: Ev,
  compressorRelease: Bv,
  compressspan: B3,
  constant: pP,
  contract: Wb,
  control: Hx,
  controls: fE,
  cosine: kE,
  cosine2: wE,
  cpm: G3,
  cps: kx,
  createClock: dk,
  createParam: bc,
  createParams: Kf,
  crush: Xy,
  ctf: l1,
  ctlNum: Jx,
  ctranspose: LO,
  curry: Ke,
  curve: Px,
  cut: a1,
  cutoff: o1,
  cycleToSeconds: cp,
  dec: Ay,
  decay: Sy,
  degrade: YE,
  degradeBy: HE,
  degradeByWith: zE,
  degree: $O,
  delay: rO,
  delayfb: sO,
  delayfeedback: iO,
  delayt: lO,
  delaytime: oO,
  deltaSlide: Ex,
  det: pO,
  detune: hO,
  dfb: aO,
  dict: av,
  dictionary: sv,
  dist: Av,
  distort: Sv,
  div: t3,
  djf: nO,
  drawLine: Ab,
  drive: qy,
  drop: Nb,
  dry: mO,
  ds: Xx,
  dt: uO,
  dur: Ax,
  duration: Sx,
  early: z3,
  echo: v5,
  echoWith: g5,
  echowith: b5,
  end: $y,
  enhance: ax,
  eq: f3,
  eqt: d3,
  euclid: gE,
  euclidLegato: OE,
  euclidLegatoRot: vE,
  euclidRot: yE,
  euclidrot: bE,
  evalScope: hd,
  evaluate: Bk,
  every: q3,
  expand: Xb,
  expression: Rv,
  extend: Vb,
  fadeInTime: yO,
  fadeOutTime: bO,
  fadeTime: gO,
  fanchor: N1,
  fast: $3,
  fastChunk: M5,
  fastGap: M3,
  fastcat: Yn,
  fastchunk: B5,
  fastgap: Q3,
  fft: Cy,
  filter: $5,
  filterWhen: Z5,
  firstOf: W3,
  fit: oE,
  flatten: wi,
  floor: x3,
  fm: my,
  fmattack: by,
  fmdecay: yy,
  fmenv: gy,
  fmh: fy,
  fmi: dy,
  fmrelease: vy,
  fmsustain: Oy,
  fmvelocity: xy,
  focus: T3,
  focusSpan: j3,
  focusspan: _3,
  fractionalArgs: fP,
  frameRate: dx,
  frames: mx,
  freeze: tx,
  freq: OO,
  freqToMidi: Lf,
  fromBipolar: C3,
  fshift: Vv,
  fshiftnote: Xv,
  fshiftphase: Wv,
  ftype: I1,
  func: O3,
  gain: ly,
  gap: Ea,
  gat: MO,
  gate: BO,
  getControlName: Jf,
  getCurrentKeyboardState: Sb,
  getEventOffsetMs: aP,
  getFreq: hb,
  getFrequency: db,
  getPerformanceTimeSeconds: SP,
  getPlayableNoteValue: cP,
  getSoundIndex: uP,
  getTime: yp,
  getTrigger: Tk,
  grow: I5,
  gt: c3,
  gte: p3,
  harmonic: IO,
  hash2code: CP,
  hbrick: px,
  hcutoff: z1,
  hold: By,
  hours: gx,
  hp: Y1,
  hpa: v1,
  hpattack: O1,
  hpd: A1,
  hpdecay: S1,
  hpe: d1,
  hpenv: f1,
  hpf: H1,
  hpq: J1,
  hpr: $1,
  hprelease: R1,
  hps: M1,
  hpsustain: B1,
  hresonance: K1,
  hsl: R5,
  hsla: _5,
  hurry: Z3,
  id: Hs,
  imag: sx,
  inhabit: xF,
  inhabitmod: wF,
  innerBind: XP,
  inside: N3,
  inv: a5,
  invert: s5,
  ir: yv,
  irand: NE,
  iresponse: Ov,
  isNote: fc,
  isNoteWithOctave: rP,
  isPattern: mc,
  isaw: yc,
  isaw2: nd,
  iter: k5,
  iterBack: w5,
  iterback: C5,
  itri: DE,
  itri2: PE,
  jux: m5,
  juxBy: f5,
  juxby: d5,
  kcutoff: Gv,
  keep: HP,
  keepif: YP,
  keyAlias: Cb,
  keyDown: hF,
  krush: Uv,
  label: RO,
  lastOf: X3,
  late: Tb,
  lbrick: fx,
  legato: Cx,
  leslie: QO,
  lfo: Mx,
  linger: e5,
  listRange: If,
  lock: cO,
  logKey: Zf,
  logger: En,
  loop: Zy,
  loopAt: sE,
  loopAtCps: lE,
  loopBegin: Ly,
  loopEnd: Ny,
  loopat: aE,
  loopatcps: uE,
  loopb: Iy,
  loope: Vy,
  lp: c1,
  lpa: y1,
  lpattack: b1,
  lpd: C1,
  lpdecay: w1,
  lpe: p1,
  lpenv: h1,
  lpf: u1,
  lpq: tO,
  lpr: _1,
  lprelease: j1,
  lps: F1,
  lpsustain: E1,
  lrate: TO,
  lsize: jO,
  lt: u3,
  lte: h3,
  mapArgs: Vf,
  mask: ZP,
  midi2note: lP,
  midiToFreq: Es,
  midibend: ak,
  midichan: qx,
  midicmd: zx,
  midimap: Ux,
  midiport: Gx,
  miditouch: ok,
  minutes: bx,
  mod: n3,
  mode: cv,
  mouseX: ME,
  mouseY: FE,
  mousex: BE,
  mousey: EE,
  mtranspose: ZO,
  mul: e3,
  n: iy,
  nanFallback: fb,
  ne: m3,
  net: g3,
  never: lF,
  noise: q1,
  note: sy,
  noteToMidi: _s,
  nothing: cr,
  nrpnn: ek,
  nrpv: tk,
  nudge: XO,
  numeralArgs: ar,
  objectMap: kb,
  octave: WO,
  octaveR: VO,
  octaves: uv,
  octer: zv,
  octersub: Hv,
  octersubsub: Yv,
  off: l5,
  offset: lv,
  often: iF,
  or: y3,
  orbit: qO,
  outerBind: WP,
  outside: V3,
  overgain: UO,
  overshape: GO,
  pace: $b,
  pairs: yb,
  palindrome: p5,
  pan: zO,
  panchor: FO,
  panorient: JO,
  panspan: HO,
  pansplay: YO,
  panwidth: KO,
  parseFractional: bb,
  parseNumeral: Nf,
  partials: ox,
  patt: xO,
  pattack: vO,
  pcurve: EO,
  pdec: wO,
  pdecay: kO,
  penv: PO,
  perlin: GE,
  perlinWith: Pk,
  ph: Hy,
  phasdp: i1,
  phaser: Yy,
  phasercenter: e1,
  phaserdepth: n1,
  phaserrate: zy,
  phasersweep: Ky,
  phc: t1,
  phd: r1,
  phs: Jy,
  pick: Ek,
  pickF: fF,
  pickOut: mF,
  pickReset: OF,
  pickRestart: bF,
  pickSqueeze: kF,
  pickmod: Fk,
  pickmodF: dF,
  pickmodOut: gF,
  pickmodReset: vF,
  pickmodRestart: yF,
  pickmodSqueeze: CF,
  pipe: gb,
  pitchJump: Fx,
  pitchJumpTime: Bx,
  ply: R3,
  pm: jP,
  polyBind: GP,
  polyTouch: lk,
  polymeter: gc,
  polyrhythm: QP,
  postgain: uy,
  pow: r3,
  pr: TP,
  prel: DO,
  prelease: AO,
  press: h5,
  pressBy: c5,
  progNum: nk,
  psus: SO,
  psustain: CO,
  pure: hn,
  rand: zn,
  rand2: ZE,
  randcat: XE,
  randrun: wk,
  range: S3,
  range2: D3,
  rangex: A3,
  rarely: sF,
  rate: ev,
  ratio: P3,
  rdim: mv,
  real: ix,
  ref: Kb,
  register: le,
  registerControl: W,
  reify: Oe,
  rel: Fy,
  release: Ey,
  removeUndefineds: Pa,
  repeatCycles: S5,
  repeatTime: Qx,
  repl: Qk,
  resonance: eO,
  rev: jb,
  rfade: bv,
  rib: j5,
  ribbon: T5,
  ring: Kv,
  ringdf: ex,
  ringf: Jv,
  rlp: fv,
  room: hv,
  roomdim: dv,
  roomfade: gv,
  roomlp: pv,
  roomsize: vv,
  rotate: mb,
  round: v3,
  rsize: wv,
  run: xk,
  s: ey,
  s_add: G5,
  s_alt: X5,
  s_cat: V5,
  s_contract: K5,
  s_expand: H5,
  s_extend: Y5,
  s_polymeter: W5,
  s_sub: z5,
  s_taper: q5,
  s_taperlist: U5,
  s_tour: J5,
  s_zip: eE,
  saw: Io,
  saw2: td,
  scram: cx,
  scramble: $E,
  scrub: ck,
  seconds: yx,
  seg: n5,
  segment: t5,
  semitone: nv,
  seq: Qb,
  seqPLoop: $P,
  sequence: Er,
  sequenceP: Pb,
  set: zP,
  setStringParser: Db,
  setTime: Op,
  shape: Cv,
  shrink: Ub,
  shrinklist: qb,
  shuffle: RE,
  signal: Br,
  silence: St,
  sine: mk,
  sine2: rd,
  size: xv,
  slice: Yb,
  slide: tv,
  slow: L3,
  slowChunk: P5,
  slowcat: ss,
  slowcatPrime: Uf,
  slowchunk: D5,
  smear: ux,
  sol2note: vP,
  someCycles: rF,
  someCyclesBy: nF,
  sometimes: tF,
  sometimesBy: eF,
  songPtr: Ox,
  sound: ty,
  source: ny,
  sparsity: I3,
  speak: DF,
  speed: Yf,
  splice: iE,
  splitAt: Xf,
  spread: dO,
  square: gk,
  square2: CE,
  squeeze: SF,
  squeezeBind: qP,
  squiz: Tv,
  src: ry,
  stack: Nt,
  stackBy: _P,
  stackCentre: Bb,
  stackLeft: Eb,
  stackRight: Fb,
  steady: xE,
  stepBind: UP,
  stepalt: Lb,
  stepcat: Gn,
  steps: tE,
  stepsPerOctave: NO,
  stretch: Mv,
  striate: rE,
  struct: LP,
  stut: x5,
  stutWith: y5,
  stutwith: O5,
  sub: JP,
  superimpose: IP,
  sus: Py,
  sustain: Dy,
  sustainpedal: $v,
  swing: i5,
  swingBy: r5,
  sysex: rk,
  sysexdata: sk,
  sysexid: ik,
  sz: kv,
  take: Ib,
  time: bk,
  timeCat: Hf,
  timecat: N5,
  toBipolar: w3,
  tokenizeNote: ub,
  tour: Gb,
  tremdp: Lv,
  tremolo: $x,
  tremolodepth: Zv,
  tremolorate: Iv,
  tremr: Nv,
  tri: SE,
  tri2: AE,
  triode: qv,
  tsdelay: rx,
  uid: vx,
  undegrade: JE,
  undegradeBy: KE,
  unicodeToBase64: vb,
  uniq: xP,
  uniqsort: kP,
  uniqsortr: Ob,
  unison: fO,
  unit: Qv,
  v: W1,
  val: xx,
  valueToMidi: cb,
  velocity: oy,
  vib: V1,
  vibmod: U1,
  vibrato: X1,
  vmod: G1,
  voice: rv,
  vowel: jv,
  waveloss: _v,
  wchoose: qE,
  wchooseCycles: Dk,
  when: o5,
  whenKey: cF,
  withValue: NP,
  within: L5,
  wrandcat: UE,
  xfade: Jb,
  xsdelay: nx,
  zcrush: _x,
  zdelay: Rx,
  zip: zb,
  zipWith: Wf,
  zmod: jx,
  znoise: Tx,
  zoom: H3,
  zoomArc: Y3,
  zoomarc: K3,
  zrand: Dx,
  zzfx: Zx
}, Symbol.toStringTag, { value: "Module" })), Ti = (t = "test-canvas", e) => {
  let { contextType: n = "2d", pixelated: r = !1, pixelRatio: i = window.devicePixelRatio } = e || {}, s = document.querySelector("#" + t);
  if (!s) {
    s = document.createElement("canvas"), s.id = t, s.width = window.innerWidth * i, s.height = window.innerHeight * i, s.style = "pointer-events:none;width:100%;height:100%;position:fixed;top:0;left:0", r && (s.style.imageRendering = "pixelated"), document.body.prepend(s);
    let a;
    window.addEventListener("resize", () => {
      a && clearTimeout(a), a = setTimeout(() => {
        s.width = window.innerWidth * i, s.height = window.innerHeight * i;
      }, 200);
    });
  }
  return s.getContext(n, { willReadFrequently: !0 });
};
let ta = {};
function _k(t) {
  ta[t] !== void 0 && (cancelAnimationFrame(ta[t]), delete ta[t]);
}
function MF(t) {
  Object.keys(ta).forEach((e) => (!t || e.startsWith(t)) && _k(e));
}
let Oi = {};
de.prototype.draw = function(t, e) {
  if (typeof window > "u")
    return this;
  let { id: n = 1, lookbehind: r = 0, lookahead: i = 0 } = e, s = Math.max(yp(), 0);
  _k(n), r = Math.abs(r), Oi[n] = (Oi[n] || []).filter((c) => !c.isInFuture(s));
  let a = this.queryArc(s, s + i).filter((c) => c.hasOnset());
  Oi[n] = Oi[n].concat(a);
  let o;
  const l = () => {
    const c = yp(), h = c + i;
    Oi[n] = Oi[n].filter((y) => y.isInNearPast(r, c));
    let f = Math.max(o || h, h - 1 / 10);
    const m = this.queryArc(f, h).filter((y) => y.hasOnset());
    Oi[n] = Oi[n].concat(m), o = h, t(Oi[n], c, h, this), ta[n] = requestAnimationFrame(l);
  };
  return ta[n] = requestAnimationFrame(l), this;
};
const Fm = (t = !0, e) => {
  const n = Ti();
  t && n.clearRect(0, 0, n.canvas.width, n.canvas.height), MF(e);
};
de.prototype.onPaint = function(t) {
  return this.withState((e) => {
    e.controls.painters || (e.controls.painters = []), e.controls.painters.push(t);
  });
};
de.prototype.getPainters = function() {
  let t = [];
  return this.queryArc(0, 0, { painters: t }), t;
};
class QF {
  constructor(e, n) {
    this.onFrame = e, this.onError = n;
  }
  start() {
    const e = this;
    let n = requestAnimationFrame(function r(i) {
      try {
        e.onFrame(i);
      } catch (s) {
        e.onError(s);
      }
      n = requestAnimationFrame(r);
    });
    e.cancel = () => {
      cancelAnimationFrame(n);
    };
  }
  stop() {
    this.cancel && this.cancel();
  }
}
class TF {
  constructor(e, n) {
    this.visibleHaps = [], this.lastFrame = null, this.drawTime = n, this.painters = [], this.framer = new QF(
      () => {
        if (!this.scheduler) {
          console.warn("Drawer: no scheduler");
          return;
        }
        const r = Math.abs(this.drawTime[0]), i = this.drawTime[1], s = this.scheduler.now() + i;
        if (this.lastFrame === null) {
          this.lastFrame = s;
          return;
        }
        const a = this.scheduler.pattern.queryArc(Math.max(this.lastFrame, s - 1 / 10), s);
        this.lastFrame = s, this.visibleHaps = (this.visibleHaps || []).filter((l) => l.endClipped >= s - r - i).concat(a.filter((l) => l.hasOnset()));
        const o = s - i;
        e(this.visibleHaps, o, this, this.painters);
      },
      (r) => {
        console.warn("draw error", r);
      }
    );
  }
  setDrawTime(e) {
    this.drawTime = e;
  }
  invalidate(e = this.scheduler, n) {
    if (!e)
      return;
    n = n ?? e.now(), this.scheduler = e;
    let [r, i] = this.drawTime;
    const [s, a] = [Math.max(n, 0), n + i + 0.1];
    this.visibleHaps = this.visibleHaps.filter((l) => l.whole.begin < n), this.painters = [];
    const o = e.pattern.queryArc(s, a, { painters: this.painters });
    this.visibleHaps = this.visibleHaps.concat(o);
  }
  start(e) {
    this.scheduler = e, this.invalidate(), this.framer.start();
  }
  stop() {
    this.framer && this.framer.stop();
  }
}
function i$(t) {
  return typeof window > "u" ? "#fff" : getComputedStyle(document.documentElement).getPropertyValue(t);
}
let Rk = {
  background: "#222",
  foreground: "#75baff",
  caret: "#ffcc00",
  selection: "rgba(128, 203, 196, 0.5)",
  selectionMatch: "#036dd626",
  lineHighlight: "#00000050",
  gutterBackground: "transparent",
  gutterForeground: "#8a919966"
};
function Di() {
  return Rk;
}
function jF(t) {
  Rk = t;
}
let Bm = "#22222210";
de.prototype.animate = function({ callback: t, sync: e = !1, smear: n = 0.5 } = {}) {
  window.frame && cancelAnimationFrame(window.frame);
  const r = Ti();
  let { clientWidth: i, clientHeight: s } = r.canvas;
  i *= window.devicePixelRatio, s *= window.devicePixelRatio;
  let a = n === 0 ? "99" : Number((1 - n) * 100).toFixed(0);
  a = a.length === 1 ? `0${a}` : a, Bm = `#200010${a}`;
  const o = (l) => {
    let c;
    l = Math.round(l), c = this.slow(1e3).queryArc(l, l), r.fillStyle = Bm, r.fillRect(0, 0, i, s), c.forEach((h) => {
      let { x: f, y: m, w: y, h: x, s: C, r: S, angle: M = 0, fill: Z = "darkseagreen" } = h.value;
      if (y *= i, x *= s, S !== void 0 && M !== void 0) {
        const _ = M * 2 * Math.PI, [B, $] = [(i - y) / 2, (s - x) / 2];
        f = B + Math.cos(_) * S * B, m = $ + Math.sin(_) * S * $;
      } else
        f *= i - y, m *= s - x;
      const q = { ...h.value, x: f, y: m, w: y, h: x };
      r.fillStyle = Z, C === "rect" ? r.fillRect(f, m, y, x) : C === "ellipse" && (r.beginPath(), r.ellipse(f + y / 2, m + x / 2, y / 2, x / 2, 0, 0, 2 * Math.PI), r.fill()), t && t(r, q, h);
    }), window.frame = requestAnimationFrame(o);
  };
  return window.frame = requestAnimationFrame(o), St;
};
const { x: $k, y: s$, w: a$, h: o$, angle: l$, r: u$, fill: c$, smear: h$ } = Kf("x", "y", "w", "h", "angle", "r", "fill", "smear"), p$ = le("rescale", function(t, e) {
  return e.mul($k(t).w(t).y(t).h(t));
}), f$ = le("moveXY", function(t, e, n) {
  return n.add($k(t).y(e));
}), d$ = le("zoomIn", function(t, e) {
  const n = hn(1).sub(t).div(2);
  return e.rescale(t).move(n, n);
}), Ua = (t, e, n) => t * (n - e) + e, Mm = (t) => {
  let { value: e } = t;
  typeof t.value != "object" && (e = { value: e });
  let { note: n, n: r, freq: i, s } = e;
  if (i)
    return Lf(i);
  if (n = n ?? r, typeof n == "string")
    try {
      return _s(n);
    } catch {
      return 0;
    }
  return typeof n == "number" ? n : s ? "_" + s : e;
};
de.prototype.pianoroll = function(t = {}) {
  let { cycles: e = 4, playhead: n = 0.5, overscan: r = 0, hideNegative: i = !1, ctx: s = Ti(), id: a = 1 } = t, o = -e * n, l = e * (1 - n);
  const c = (h, f) => (!i || h.whole.begin >= 0) && h.isWithinTime(f + o, f + l);
  return this.draw(
    (h, f) => {
      pd({
        ...t,
        time: f,
        ctx: s,
        haps: h.filter((m) => c(m, f))
      });
    },
    {
      lookbehind: o - r,
      lookahead: l + r,
      id: a
    }
  ), this;
};
function m$(t) {
  return mc(t) ? t.pianoroll() : (e) => e.pianoroll(t);
}
function pd({
  time: t,
  haps: e,
  cycles: n = 4,
  playhead: r = 0.5,
  flipTime: i = 0,
  flipValues: s = 0,
  hideNegative: a = !1,
  inactive: o = Di().foreground,
  active: l = Di().foreground,
  background: c = "transparent",
  smear: h = 0,
  playheadColor: f = Di().foreground,
  minMidi: m = 10,
  maxMidi: y = 90,
  autorange: x = 0,
  timeframe: C,
  fold: S = 1,
  vertical: M = 0,
  labels: Z = !1,
  fill: q = 1,
  fillActive: _ = !1,
  strokeActive: B = !0,
  stroke: $,
  hideInactive: N = 0,
  colorizeInactive: U = 1,
  fontFamily: se,
  ctx: K,
  id: ce
} = {}) {
  const H = K.canvas.width, ie = K.canvas.height;
  let fe = -n * r, De = n * (1 - r);
  ce && (e = e.filter((ze) => ze.hasTag(ce))), C && (console.warn("timeframe is deprecated! use from/to instead"), fe = 0, De = C);
  const Ee = M ? ie : H, re = M ? H : ie;
  let ke = M ? [Ee, 0] : [0, Ee];
  const Le = De - fe, xe = M ? [0, re] : [re, 0];
  let je = y - m + 1, he = re / je, Pe = [];
  i && ke.reverse(), s && xe.reverse();
  const { min: Pt, max: lt, values: We } = e.reduce(
    ({ min: ze, max: xt, values: Bn }, dn) => {
      const Ot = Mm(dn);
      return {
        min: Ot < ze ? Ot : ze,
        max: Ot > xt ? Ot : xt,
        values: Bn.includes(Ot) ? Bn : [...Bn, Ot]
      };
    },
    { min: 1 / 0, max: -1 / 0, values: [] }
  );
  x && (m = Pt, y = lt, je = y - m + 1), Pe = We.sort(
    (ze, xt) => typeof ze == "number" && typeof xt == "number" ? ze - xt : typeof ze == "number" ? 1 : String(ze).localeCompare(String(xt))
  ), he = S ? re / Pe.length : re / je, K.fillStyle = c, K.globalAlpha = 1, h || (K.clearRect(0, 0, H, ie), K.fillRect(0, 0, H, ie)), e.forEach((ze) => {
    const xt = ze.whole.begin <= t && ze.endClipped > t;
    let Bn = $ ?? (B && xt), dn = !xt && q || xt && _;
    if (N && !xt)
      return;
    let Ot = ze.value?.color;
    l = Ot || l, o = U && Ot || o, Ot = xt ? l : o, K.fillStyle = dn ? Ot : "transparent", K.strokeStyle = Ot;
    const { velocity: kt = 1, gain: Et = 1 } = ze.value || {};
    K.globalAlpha = kt * Et;
    const Xt = (ze.whole.begin - (i ? De : fe)) / Le, Kn = Ua(Xt, ...ke);
    let Jn = Ua(ze.duration / Le, 0, Ee);
    const pr = Mm(ze), Mn = S ? Pe.indexOf(pr) / Pe.length : (Number(pr) - m) / je, zt = Ua(Mn, ...xe);
    let _r = 0;
    const er = Ua(t / Le, ...ke);
    let On;
    if (M ? On = [
      zt + 1 - (s ? he : 0),
      // x
      Ee - er + Kn + _r + 1 - (i ? 0 : Jn),
      // y
      he - 2,
      // width
      Jn - 2
      // height
    ] : On = [
      Kn - er + _r + 1 - (i ? Jn : 0),
      // x
      zt + 1 - (s ? 0 : he),
      // y
      Jn - 2,
      // widith
      he - 2
      // height
    ], Bn && K.strokeRect(...On), dn && K.fillRect(...On), Z) {
      const zr = ze.value.note ?? ze.value.s + (ze.value.n ? `:${ze.value.n}` : ""), { label: Ue, activeLabel: Tt } = ze.value, wt = (xt && Tt || Ue) ?? zr;
      let Xe = M ? Jn : he * 0.75;
      K.font = `${Xe}px ${se || "monospace"}`, K.fillStyle = /* isActive &&  */
      dn ? "black" : Ot, K.textBaseline = "top", K.fillText(wt, ...On);
    }
  }), K.globalAlpha = 1;
  const Qt = Ua(-fe / Le, ...ke);
  return K.strokeStyle = f, K.beginPath(), M ? (K.moveTo(0, Qt), K.lineTo(re, Qt)) : (K.moveTo(Qt, 0), K.lineTo(Qt, re)), K.stroke(), this;
}
function Zk(t, e = {}) {
  let [n, r] = t;
  n = Math.abs(n);
  const i = r + n, s = i !== 0 ? n / i : 0;
  return { fold: 1, ...e, cycles: i, playhead: s };
}
const _F = (t = {}) => (e, n, r, i) => pd({ ctx: e, time: n, haps: r, ...Zk(i, t) });
de.prototype.punchcard = function(t) {
  return this.onPaint(_F(t));
};
de.prototype.wordfall = function(t) {
  return this.punchcard({ vertical: 1, labels: 1, stroke: 0, fillActive: 1, active: "white", ...t });
};
function g$(t) {
  const { drawTime: e, ...n } = t;
  pd({ ...Zk(e), ...n });
}
function RF(t, e, n, r) {
  const i = (t - 90) * Math.PI / 180;
  return [n + Math.cos(i) * e, r + Math.sin(i) * e];
}
const Qm = (t, e, n, r, i = 0) => RF((t + i) * 360, e * t, n, r);
function Tm(t) {
  let {
    ctx: e,
    from: n = 0,
    to: r = 3,
    margin: i = 50,
    cx: s = 100,
    cy: a = 100,
    rotate: o = 0,
    thickness: l = i / 2,
    color: c = Di().foreground,
    cap: h = "round",
    stretch: f = 1,
    fromOpacity: m = 1,
    toOpacity: y = 1
  } = t;
  n *= f, r *= f, o *= f, e.lineWidth = l, e.lineCap = h, e.strokeStyle = c, e.globalAlpha = m, e.beginPath();
  let [x, C] = Qm(n, i, s, a, o);
  e.moveTo(x, C);
  const S = 1 / 60;
  let M = n;
  for (; M <= r; ) {
    const [Z, q] = Qm(M, i, s, a, o);
    e.globalAlpha = (M - n) / (r - n) * y, e.lineTo(Z, q), M += S;
  }
  e.stroke();
}
function $F(t) {
  let {
    stretch: e = 1,
    size: n = 80,
    thickness: r = n / 2,
    cap: i = "butt",
    // round butt squar,
    inset: s = 3,
    // start angl,
    playheadColor: a = "#ffffff",
    playheadLength: o = 0.02,
    playheadThickness: l = r,
    padding: c = 0,
    steady: h = 1,
    activeColor: f = Di().foreground,
    inactiveColor: m = Di().gutterForeground,
    colorizeInactive: y = 0,
    fade: x = !0,
    // logSpiral = true,
    ctx: C,
    time: S,
    haps: M,
    drawTime: Z,
    id: q
  } = t;
  q && (M = M.filter((H) => H.hasTag(q)));
  const [_, B] = [C.canvas.width, C.canvas.height];
  C.clearRect(0, 0, _ * 2, B * 2);
  const [$, N] = [_ / 2, B / 2], U = {
    margin: n / e,
    cx: $,
    cy: N,
    stretch: e,
    cap: i,
    thickness: r
  }, se = {
    ...U,
    thickness: l,
    from: s - o,
    to: s,
    color: a
  }, [K] = Z, ce = h * S;
  M.forEach((H) => {
    const ie = H.whole.begin <= S && H.endClipped > S, fe = H.whole.begin - S + s, De = H.endClipped - S + s - c, Ee = H.value?.color || f, re = y || ie ? Ee : m, ke = x ? 1 - Math.abs((H.whole.begin - S) / K) : 1;
    Tm({
      ctx: C,
      ...U,
      from: fe,
      to: De,
      rotate: ce,
      color: re,
      fromOpacity: ke,
      toOpacity: ke
    });
  }), Tm({
    ctx: C,
    ...se,
    rotate: ce
  });
}
de.prototype.spiral = function(t = {}) {
  return this.onPaint((e, n, r, i) => $F({ ctx: e, time: n, haps: r, drawTime: i, ...t }));
};
const ZF = Es(36), jm = (t, e, n, r) => {
  r = r * Math.PI * 2;
  const i = Math.sin(r) * n + t, s = Math.cos(r) * n + e;
  return [i, s];
}, _m = (t, e) => 0.5 - Math.log2(t / e) % 1;
function LF({
  haps: t,
  ctx: e,
  id: n,
  hapcircles: r = 1,
  circle: i = 0,
  edo: s = 12,
  root: a = ZF,
  thickness: o = 3,
  hapRadius: l = 6,
  mode: c = "flake",
  margin: h = 10
} = {}) {
  const f = c === "polygon", m = c === "flake", y = e.canvas.width, x = e.canvas.height;
  e.clearRect(0, 0, y, x);
  const C = Di().foreground, M = Math.min(y, x) / 2 - o / 2 - l - h, Z = y / 2, q = x / 2;
  n && (t = t.filter((B) => B.hasTag(n))), e.strokeStyle = C, e.fillStyle = C, e.globalAlpha = 1, e.lineWidth = o, i && (e.beginPath(), e.arc(Z, q, M, 0, 2 * Math.PI), e.stroke()), s && (Array.from({ length: s }, (B, $) => {
    const N = _m(a * Math.pow(2, $ / s), a), [U, se] = jm(Z, q, M, N);
    e.beginPath(), e.arc(U, se, l, 0, 2 * Math.PI), e.fill();
  }), e.stroke());
  let _ = [];
  e.lineWidth = l, t.forEach((B) => {
    let $;
    try {
      $ = db(B);
    } catch {
      return;
    }
    const N = _m($, a), [U, se] = jm(Z, q, M, N), K = B.value.color || C;
    e.strokeStyle = K, e.fillStyle = K;
    const { velocity: ce = 1, gain: H = 1 } = B.value || {}, ie = ce * H;
    e.globalAlpha = ie, _.push([U, se, N, K, ie]), e.beginPath(), r && (e.moveTo(U + l, se), e.arc(U, se, l, 0, 2 * Math.PI), e.fill()), m && (e.moveTo(Z, q), e.lineTo(U, se)), e.stroke();
  }), e.strokeStyle = C, e.globalAlpha = 1, f && _.length && (_ = _.sort((B, $) => B[2] - $[2]), e.beginPath(), e.moveTo(_[0][0], _[0][1]), _.forEach(([B, $, N, U, se]) => {
    e.strokeStyle = U, e.globalAlpha = se, e.lineTo(B, $);
  }), e.lineTo(_[0][0], _[0][1]), e.stroke());
}
de.prototype.pitchwheel = function(t = {}) {
  let { ctx: e = Ti(), id: n = 1 } = t;
  return this.tag(n).onPaint(
    (r, i, s) => LF({
      ...t,
      time: i,
      ctx: e,
      haps: s.filter((a) => a.isActive(i)),
      id: n
    })
  );
};
function IF(t, e) {
  function n() {
    this.constructor = t;
  }
  n.prototype = e.prototype, t.prototype = new n();
}
function Fs(t, e, n, r) {
  var i = Error.call(this, t);
  return Object.setPrototypeOf && Object.setPrototypeOf(i, Fs.prototype), i.expected = e, i.found = n, i.location = r, i.name = "SyntaxError", i;
}
IF(Fs, Error);
function hh(t, e, n) {
  return n = n || " ", t.length > e ? t : (e -= t.length, n += n.repeat(e), t + n.slice(0, e));
}
Fs.prototype.format = function(t) {
  var e = "Error: " + this.message;
  if (this.location) {
    var n = null, r;
    for (r = 0; r < t.length; r++)
      if (t[r].source === this.location.source) {
        n = t[r].text.split(/\r\n|\n|\r/g);
        break;
      }
    var i = this.location.start, s = this.location.source && typeof this.location.source.offset == "function" ? this.location.source.offset(i) : i, a = this.location.source + ":" + s.line + ":" + s.column;
    if (n) {
      var o = this.location.end, l = hh("", s.line.toString().length, " "), c = n[i.line - 1], h = i.line === o.line ? o.column : c.length + 1, f = h - i.column || 1;
      e += `
 --> ` + a + `
` + l + ` |
` + s.line + " | " + c + `
` + l + " | " + hh("", i.column - 1, " ") + hh("", f, "^");
    } else
      e += `
 at ` + a;
  }
  return e;
};
Fs.buildMessage = function(t, e) {
  var n = {
    literal: function(c) {
      return '"' + i(c.text) + '"';
    },
    class: function(c) {
      var h = c.parts.map(function(f) {
        return Array.isArray(f) ? s(f[0]) + "-" + s(f[1]) : s(f);
      });
      return "[" + (c.inverted ? "^" : "") + h.join("") + "]";
    },
    any: function() {
      return "any character";
    },
    end: function() {
      return "end of input";
    },
    other: function(c) {
      return c.description;
    }
  };
  function r(c) {
    return c.charCodeAt(0).toString(16).toUpperCase();
  }
  function i(c) {
    return c.replace(/\\/g, "\\\\").replace(/"/g, '\\"').replace(/\0/g, "\\0").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\r/g, "\\r").replace(/[\x00-\x0F]/g, function(h) {
      return "\\x0" + r(h);
    }).replace(/[\x10-\x1F\x7F-\x9F]/g, function(h) {
      return "\\x" + r(h);
    });
  }
  function s(c) {
    return c.replace(/\\/g, "\\\\").replace(/\]/g, "\\]").replace(/\^/g, "\\^").replace(/-/g, "\\-").replace(/\0/g, "\\0").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\r/g, "\\r").replace(/[\x00-\x0F]/g, function(h) {
      return "\\x0" + r(h);
    }).replace(/[\x10-\x1F\x7F-\x9F]/g, function(h) {
      return "\\x" + r(h);
    });
  }
  function a(c) {
    return n[c.type](c);
  }
  function o(c) {
    var h = c.map(a), f, m;
    if (h.sort(), h.length > 0) {
      for (f = 1, m = 1; f < h.length; f++)
        h[f - 1] !== h[f] && (h[m] = h[f], m++);
      h.length = m;
    }
    switch (h.length) {
      case 1:
        return h[0];
      case 2:
        return h[0] + " or " + h[1];
      default:
        return h.slice(0, -1).join(", ") + ", or " + h[h.length - 1];
    }
  }
  function l(c) {
    return c ? '"' + i(c) + '"' : "end of input";
  }
  return "Expected " + o(t) + " but " + l(e) + " found.";
};
function Lk(t, e) {
  e = e !== void 0 ? e : {};
  var n = {}, r = e.grammarSource, i = { start: Is }, s = Is, a = ".", o = "-", l = "0", c = ",", h = "|", f = "[", m = "]", y = "{", x = "}", C = "%", S = "<", M = ">", Z = "!", q = "(", _ = ")", B = "/", $ = "*", N = "?", U = ":", se = "..", K = "^", ce = "struct", H = "target", ie = "euclid", fe = "slow", De = "rotL", Ee = "rotR", re = "fast", ke = "scale", Le = "//", xe = "cat", je = "$", he = "setcps", Pe = "setbpm", Pt = "hush", lt = /^[1-9]/, We = /^[eE]/, Qt = /^[+\-]/, ze = /^[0-9]/, xt = /^[ \n\r\t\xA0]/, Bn = /^["']/, dn = /^[#\--.0-9A-Z\^-_a-z~\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376-\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E-\u066F\u0671-\u06D3\u06D5\u06E5-\u06E6\u06EE-\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4-\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F-\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC-\u09DD\u09DF-\u09E1\u09F0-\u09F1\u09FC\u0A05-\u0A0A\u0A0F-\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32-\u0A33\u0A35-\u0A36\u0A38-\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2-\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0-\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F-\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32-\u0B33\u0B35-\u0B39\u0B3D\u0B5C-\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99-\u0B9A\u0B9C\u0B9E-\u0B9F\u0BA3-\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60-\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0-\u0CE1\u0CF1-\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32-\u0E33\u0E40-\u0E46\u0E81-\u0E82\u0E84\u0E87-\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA-\u0EAB\u0EAD-\u0EB0\u0EB2-\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065-\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE-\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5-\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEF\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A-\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7B9\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD-\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5-\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40-\uFB41\uFB43-\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/, Ot = /^[@_]/, kt = /^[^\n]/, Et = Va("number"), Xt = rt(".", !1), Kn = $r([["1", "9"]], !1, !1), Jn = $r(["e", "E"], !1, !1), pr = $r(["+", "-"], !1, !1), Mn = rt("-", !1), zt = rt("0", !1), _r = $r([["0", "9"]], !1, !1), er = Va("whitespace"), On = $r([" ", `
`, "\r", "	", " "], !1, !1), zr = rt(",", !1), Ue = rt("|", !1), Tt = $r(['"', "'"], !1, !1), Se = Va('a letter, a number, "-", "#", ".", "^", "_"'), wt = $r(["#", ["-", "."], ["0", "9"], ["A", "Z"], ["^", "_"], ["a", "z"], "~", "ª", "µ", "º", ["À", "Ö"], ["Ø", "ö"], ["ø", "ˁ"], ["ˆ", "ˑ"], ["ˠ", "ˤ"], "ˬ", "ˮ", ["Ͱ", "ʹ"], ["Ͷ", "ͷ"], ["ͺ", "ͽ"], "Ϳ", "Ά", ["Έ", "Ί"], "Ό", ["Ύ", "Ρ"], ["Σ", "ϵ"], ["Ϸ", "ҁ"], ["Ҋ", "ԯ"], ["Ա", "Ֆ"], "ՙ", ["ՠ", "ֈ"], ["א", "ת"], ["ׯ", "ײ"], ["ؠ", "ي"], ["ٮ", "ٯ"], ["ٱ", "ۓ"], "ە", ["ۥ", "ۦ"], ["ۮ", "ۯ"], ["ۺ", "ۼ"], "ۿ", "ܐ", ["ܒ", "ܯ"], ["ݍ", "ޥ"], "ޱ", ["ߊ", "ߪ"], ["ߴ", "ߵ"], "ߺ", ["ࠀ", "ࠕ"], "ࠚ", "ࠤ", "ࠨ", ["ࡀ", "ࡘ"], ["ࡠ", "ࡪ"], ["ࢠ", "ࢴ"], ["ࢶ", "ࢽ"], ["ऄ", "ह"], "ऽ", "ॐ", ["क़", "ॡ"], ["ॱ", "ঀ"], ["অ", "ঌ"], ["এ", "ঐ"], ["ও", "ন"], ["প", "র"], "ল", ["শ", "হ"], "ঽ", "ৎ", ["ড়", "ঢ়"], ["য়", "ৡ"], ["ৰ", "ৱ"], "ৼ", ["ਅ", "ਊ"], ["ਏ", "ਐ"], ["ਓ", "ਨ"], ["ਪ", "ਰ"], ["ਲ", "ਲ਼"], ["ਵ", "ਸ਼"], ["ਸ", "ਹ"], ["ਖ਼", "ੜ"], "ਫ਼", ["ੲ", "ੴ"], ["અ", "ઍ"], ["એ", "ઑ"], ["ઓ", "ન"], ["પ", "ર"], ["લ", "ળ"], ["વ", "હ"], "ઽ", "ૐ", ["ૠ", "ૡ"], "ૹ", ["ଅ", "ଌ"], ["ଏ", "ଐ"], ["ଓ", "ନ"], ["ପ", "ର"], ["ଲ", "ଳ"], ["ଵ", "ହ"], "ଽ", ["ଡ଼", "ଢ଼"], ["ୟ", "ୡ"], "ୱ", "ஃ", ["அ", "ஊ"], ["எ", "ஐ"], ["ஒ", "க"], ["ங", "ச"], "ஜ", ["ஞ", "ட"], ["ண", "த"], ["ந", "ப"], ["ம", "ஹ"], "ௐ", ["అ", "ఌ"], ["ఎ", "ఐ"], ["ఒ", "న"], ["ప", "హ"], "ఽ", ["ౘ", "ౚ"], ["ౠ", "ౡ"], "ಀ", ["ಅ", "ಌ"], ["ಎ", "ಐ"], ["ಒ", "ನ"], ["ಪ", "ಳ"], ["ವ", "ಹ"], "ಽ", "ೞ", ["ೠ", "ೡ"], ["ೱ", "ೲ"], ["അ", "ഌ"], ["എ", "ഐ"], ["ഒ", "ഺ"], "ഽ", "ൎ", ["ൔ", "ൖ"], ["ൟ", "ൡ"], ["ൺ", "ൿ"], ["අ", "ඖ"], ["ක", "න"], ["ඳ", "ර"], "ල", ["ව", "ෆ"], ["ก", "ะ"], ["า", "ำ"], ["เ", "ๆ"], ["ກ", "ຂ"], "ຄ", ["ງ", "ຈ"], "ຊ", "ຍ", ["ດ", "ທ"], ["ນ", "ຟ"], ["ມ", "ຣ"], "ລ", "ວ", ["ສ", "ຫ"], ["ອ", "ະ"], ["າ", "ຳ"], "ຽ", ["ເ", "ໄ"], "ໆ", ["ໜ", "ໟ"], "ༀ", ["ཀ", "ཇ"], ["ཉ", "ཬ"], ["ྈ", "ྌ"], ["က", "ဪ"], "ဿ", ["ၐ", "ၕ"], ["ၚ", "ၝ"], "ၡ", ["ၥ", "ၦ"], ["ၮ", "ၰ"], ["ၵ", "ႁ"], "ႎ", ["Ⴀ", "Ⴥ"], "Ⴧ", "Ⴭ", ["ა", "ჺ"], ["ჼ", "ቈ"], ["ቊ", "ቍ"], ["ቐ", "ቖ"], "ቘ", ["ቚ", "ቝ"], ["በ", "ኈ"], ["ኊ", "ኍ"], ["ነ", "ኰ"], ["ኲ", "ኵ"], ["ኸ", "ኾ"], "ዀ", ["ዂ", "ዅ"], ["ወ", "ዖ"], ["ዘ", "ጐ"], ["ጒ", "ጕ"], ["ጘ", "ፚ"], ["ᎀ", "ᎏ"], ["Ꭰ", "Ᏽ"], ["ᏸ", "ᏽ"], ["ᐁ", "ᙬ"], ["ᙯ", "ᙿ"], ["ᚁ", "ᚚ"], ["ᚠ", "ᛪ"], ["ᛮ", "ᛸ"], ["ᜀ", "ᜌ"], ["ᜎ", "ᜑ"], ["ᜠ", "ᜱ"], ["ᝀ", "ᝑ"], ["ᝠ", "ᝬ"], ["ᝮ", "ᝰ"], ["ក", "ឳ"], "ៗ", "ៜ", ["ᠠ", "ᡸ"], ["ᢀ", "ᢄ"], ["ᢇ", "ᢨ"], "ᢪ", ["ᢰ", "ᣵ"], ["ᤀ", "ᤞ"], ["ᥐ", "ᥭ"], ["ᥰ", "ᥴ"], ["ᦀ", "ᦫ"], ["ᦰ", "ᧉ"], ["ᨀ", "ᨖ"], ["ᨠ", "ᩔ"], "ᪧ", ["ᬅ", "ᬳ"], ["ᭅ", "ᭋ"], ["ᮃ", "ᮠ"], ["ᮮ", "ᮯ"], ["ᮺ", "ᯥ"], ["ᰀ", "ᰣ"], ["ᱍ", "ᱏ"], ["ᱚ", "ᱽ"], ["ᲀ", "ᲈ"], ["Ა", "Ჺ"], ["Ჽ", "Ჿ"], ["ᳩ", "ᳬ"], ["ᳮ", "ᳱ"], ["ᳵ", "ᳶ"], ["ᴀ", "ᶿ"], ["Ḁ", "ἕ"], ["Ἐ", "Ἕ"], ["ἠ", "ὅ"], ["Ὀ", "Ὅ"], ["ὐ", "ὗ"], "Ὑ", "Ὓ", "Ὕ", ["Ὗ", "ώ"], ["ᾀ", "ᾴ"], ["ᾶ", "ᾼ"], "ι", ["ῂ", "ῄ"], ["ῆ", "ῌ"], ["ῐ", "ΐ"], ["ῖ", "Ί"], ["ῠ", "Ῥ"], ["ῲ", "ῴ"], ["ῶ", "ῼ"], "ⁱ", "ⁿ", ["ₐ", "ₜ"], "ℂ", "ℇ", ["ℊ", "ℓ"], "ℕ", ["ℙ", "ℝ"], "ℤ", "Ω", "ℨ", ["K", "ℭ"], ["ℯ", "ℹ"], ["ℼ", "ℿ"], ["ⅅ", "ⅉ"], "ⅎ", ["Ⅰ", "ↈ"], ["Ⰰ", "Ⱞ"], ["ⰰ", "ⱞ"], ["Ⱡ", "ⳤ"], ["Ⳬ", "ⳮ"], ["Ⳳ", "ⳳ"], ["ⴀ", "ⴥ"], "ⴧ", "ⴭ", ["ⴰ", "ⵧ"], "ⵯ", ["ⶀ", "ⶖ"], ["ⶠ", "ⶦ"], ["ⶨ", "ⶮ"], ["ⶰ", "ⶶ"], ["ⶸ", "ⶾ"], ["ⷀ", "ⷆ"], ["ⷈ", "ⷎ"], ["ⷐ", "ⷖ"], ["ⷘ", "ⷞ"], "ⸯ", ["々", "〇"], ["〡", "〩"], ["〱", "〵"], ["〸", "〼"], ["ぁ", "ゖ"], ["ゝ", "ゟ"], ["ァ", "ヺ"], ["ー", "ヿ"], ["ㄅ", "ㄯ"], ["ㄱ", "ㆎ"], ["ㆠ", "ㆺ"], ["ㇰ", "ㇿ"], ["㐀", "䶵"], ["一", "鿯"], ["ꀀ", "ꒌ"], ["ꓐ", "ꓽ"], ["ꔀ", "ꘌ"], ["ꘐ", "ꘟ"], ["ꘪ", "ꘫ"], ["Ꙁ", "ꙮ"], ["ꙿ", "ꚝ"], ["ꚠ", "ꛯ"], ["ꜗ", "ꜟ"], ["Ꜣ", "ꞈ"], ["Ꞌ", "ꞹ"], ["ꟷ", "ꠁ"], ["ꠃ", "ꠅ"], ["ꠇ", "ꠊ"], ["ꠌ", "ꠢ"], ["ꡀ", "ꡳ"], ["ꢂ", "ꢳ"], ["ꣲ", "ꣷ"], "ꣻ", ["ꣽ", "ꣾ"], ["ꤊ", "ꤥ"], ["ꤰ", "ꥆ"], ["ꥠ", "ꥼ"], ["ꦄ", "ꦲ"], "ꧏ", ["ꧠ", "ꧤ"], ["ꧦ", "ꧯ"], ["ꧺ", "ꧾ"], ["ꨀ", "ꨨ"], ["ꩀ", "ꩂ"], ["ꩄ", "ꩋ"], ["ꩠ", "ꩶ"], "ꩺ", ["ꩾ", "ꪯ"], "ꪱ", ["ꪵ", "ꪶ"], ["ꪹ", "ꪽ"], "ꫀ", "ꫂ", ["ꫛ", "ꫝ"], ["ꫠ", "ꫪ"], ["ꫲ", "ꫴ"], ["ꬁ", "ꬆ"], ["ꬉ", "ꬎ"], ["ꬑ", "ꬖ"], ["ꬠ", "ꬦ"], ["ꬨ", "ꬮ"], ["ꬰ", "ꭚ"], ["ꭜ", "ꭥ"], ["ꭰ", "ꯢ"], ["가", "힣"], ["ힰ", "ퟆ"], ["ퟋ", "ퟻ"], ["豈", "舘"], ["並", "龎"], ["ﬀ", "ﬆ"], ["ﬓ", "ﬗ"], "יִ", ["ײַ", "ﬨ"], ["שׁ", "זּ"], ["טּ", "לּ"], "מּ", ["נּ", "סּ"], ["ףּ", "פּ"], ["צּ", "ﮱ"], ["ﯓ", "ﴽ"], ["ﵐ", "ﶏ"], ["ﶒ", "ﷇ"], ["ﷰ", "ﷻ"], ["ﹰ", "ﹴ"], ["ﹶ", "ﻼ"], ["Ａ", "Ｚ"], ["ａ", "ｚ"], ["ｦ", "ﾾ"], ["ￂ", "ￇ"], ["ￊ", "ￏ"], ["ￒ", "ￗ"], ["ￚ", "ￜ"]], !1, !1), Xe = rt("[", !1), gi = rt("]", !1), fr = rt("{", !1), mn = rt("}", !1), vt = rt("%", !1), He = rt("<", !1), Ye = rt(">", !1), gt = $r(["@", "_"], !1, !1), Ht = rt("!", !1), ut = rt("(", !1), Ze = rt(")", !1), pt = rt("/", !1), Wt = rt("*", !1), vn = rt("?", !1), $i = rt(":", !1), $s = rt("..", !1), O = rt("^", !1), D = rt("struct", !1), A = rt("target", !1), P = rt("euclid", !1), R = rt("slow", !1), J = rt("rotL", !1), ae = rt("rotR", !1), pe = rt("fast", !1), ge = rt("scale", !1), Je = rt("//", !1), Rt = $r([`
`], !0, !1), Yt = rt("cat", !1), dr = rt("$", !1), Zs = rt("setcps", !1), us = rt("setbpm", !1), Qn = rt("hush", !1), Nc = function() {
    return parseFloat(Yr());
  }, nl = function(k) {
    const T = k.join("");
    return T === "." || T === "_";
  }, Vc = function(k) {
    return new zD(k.join(""));
  }, rl = function(k) {
    return k;
  }, Xc = function(k, T) {
    return k.arguments_.stepsPerCycle = T, k;
  }, il = function(k) {
    return k;
  }, La = function(k) {
    return k.arguments_.alignment = "polymeter_slowcat", k;
  }, Wc = function(k) {
    return (T) => T.options_.weight = (T.options_.weight ?? 1) + (k ?? 2) - 1;
  }, Rr = function(k) {
    return (T) => {
      const I = (T.options_.reps ?? 1) + (k ?? 2) - 1;
      T.options_.reps = I, T.options_.ops = T.options_.ops.filter((oe) => oe.type_ !== "replicate"), T.options_.ops.push({ type_: "replicate", arguments_: { amount: I } }), T.options_.weight = I;
    };
  }, qc = function(k, T, I) {
    return (oe) => oe.options_.ops.push({ type_: "bjorklund", arguments_: { pulse: k, step: T, rotation: I } });
  }, sl = function(k) {
    return (T) => T.options_.ops.push({ type_: "stretch", arguments_: { amount: k, type: "slow" } });
  }, al = function(k) {
    return (T) => T.options_.ops.push({ type_: "stretch", arguments_: { amount: k, type: "fast" } });
  }, Uc = function(k) {
    return (T) => T.options_.ops.push({ type_: "degradeBy", arguments_: { amount: k, seed: ch++ } });
  }, ol = function(k) {
    return (T) => T.options_.ops.push({ type_: "tail", arguments_: { element: k } });
  }, Gc = function(k) {
    return (T) => T.options_.ops.push({ type_: "range", arguments_: { element: k } });
  }, zc = function(k, T) {
    const I = new YD(k, { ops: [], weight: 1, reps: 1 });
    for (const oe of T)
      oe(I);
    return I;
  }, tr = function(k, T) {
    return new xl(T, "fastcat", void 0, !!k);
  }, Hc = function(k) {
    return { alignment: "stack", list: k };
  }, Yc = function(k) {
    return { alignment: "rand", list: k, seed: ch++ };
  }, ll = function(k) {
    return { alignment: "feet", list: k, seed: ch++ };
  }, ul = function(k, T) {
    return T && T.list.length > 0 ? new xl([k, ...T.list], T.alignment, T.seed) : k;
  }, Kc = function(k, T) {
    return new xl(T ? [k, ...T.list] : [k], "polymeter");
  }, cl = function(k) {
    return k;
  }, Jc = function(k) {
    return { name: "struct", args: { mini: k } };
  }, hl = function(k) {
    return { name: "target", args: { name: k } };
  }, eh = function(k, T, I) {
    return { name: "bjorklund", args: { pulse: k, step: parseInt(T) } };
  }, th = function(k) {
    return { name: "stretch", args: { amount: k } };
  }, Hr = function(k) {
    return { name: "shift", args: { amount: "-" + k } };
  }, bt = function(k) {
    return { name: "shift", args: { amount: k } };
  }, nh = function(k) {
    return { name: "stretch", args: { amount: "1/" + k } };
  }, cs = function(k) {
    return { name: "scale", args: { scale: k.join("") } };
  }, pl = function(k, T) {
    return T;
  }, hs = function(k, T) {
    return T.unshift(k), new xl(T, "slowcat");
  }, rh = function(k) {
    return k;
  }, ps = function(k, T) {
    return new HD(k.name, k.args, T);
  }, fl = function(k) {
    return k;
  }, dl = function(k) {
    return k;
  }, ih = function(k) {
    return new uh("setcps", { value: k });
  }, Ia = function(k) {
    return new uh("setcps", { value: k / 120 / 2 });
  }, sh = function() {
    return new uh("hush");
  }, L = e.peg$currPos | 0, Ne = L, bi = [{ line: 1, column: 1 }], nr = L, fs = e.peg$maxFailExpected || [], Ce = e.peg$silentFails | 0, ds;
  if (e.startRule) {
    if (!(e.startRule in i))
      throw new Error(`Can't start parsing from rule "` + e.startRule + '".');
    s = i[e.startRule];
  }
  function Yr() {
    return t.substring(Ne, L);
  }
  function Na() {
    return Ls(Ne, L);
  }
  function rt(k, T) {
    return { type: "literal", text: k, ignoreCase: T };
  }
  function $r(k, T, I) {
    return { type: "class", parts: k, inverted: T, ignoreCase: I };
  }
  function ah() {
    return { type: "end" };
  }
  function Va(k) {
    return { type: "other", description: k };
  }
  function ml(k) {
    var T = bi[k], I;
    if (T)
      return T;
    if (k >= bi.length)
      I = bi.length - 1;
    else
      for (I = k; !bi[--I]; )
        ;
    for (T = bi[I], T = {
      line: T.line,
      column: T.column
    }; I < k; )
      t.charCodeAt(I) === 10 ? (T.line++, T.column = 1) : T.column++, I++;
    return bi[k] = T, T;
  }
  function Ls(k, T, I) {
    var oe = ml(k), Qe = ml(T), Zt = {
      source: r,
      start: {
        offset: k,
        line: oe.line,
        column: oe.column
      },
      end: {
        offset: T,
        line: Qe.line,
        column: Qe.column
      }
    };
    return Zt;
  }
  function _e(k) {
    L < nr || (L > nr && (nr = L, fs = []), fs.push(k));
  }
  function gl(k, T, I) {
    return new Fs(
      Fs.buildMessage(k, T),
      k,
      T,
      I
    );
  }
  function Is() {
    var k;
    return k = GD(), k;
  }
  function mr() {
    var k, T;
    return Ce++, k = L, d(), T = p(), T !== n ? (oh(), Xa(), Ne = k, k = Nc()) : (L = k, k = n), Ce--, k === n && Ce === 0 && _e(Et), k;
  }
  function bl() {
    var k;
    return t.charCodeAt(L) === 46 ? (k = a, L++) : (k = n, Ce === 0 && _e(Xt)), k;
  }
  function yl() {
    var k;
    return k = t.charAt(L), lt.test(k) ? L++ : (k = n, Ce === 0 && _e(Kn)), k;
  }
  function Ol() {
    var k;
    return k = t.charAt(L), We.test(k) ? L++ : (k = n, Ce === 0 && _e(Jn)), k;
  }
  function Xa() {
    var k, T, I, oe, Qe;
    if (k = L, T = Ol(), T !== n) {
      if (I = t.charAt(L), Qt.test(I) ? L++ : (I = n, Ce === 0 && _e(pr)), I === n && (I = null), oe = [], Qe = b(), Qe !== n)
        for (; Qe !== n; )
          oe.push(Qe), Qe = b();
      else
        oe = n;
      oe !== n ? (T = [T, I, oe], k = T) : (L = k, k = n);
    } else
      L = k, k = n;
    return k;
  }
  function oh() {
    var k, T, I, oe;
    if (k = L, T = bl(), T !== n) {
      if (I = [], oe = b(), oe !== n)
        for (; oe !== n; )
          I.push(oe), oe = b();
      else
        I = n;
      I !== n ? (T = [T, I], k = T) : (L = k, k = n);
    } else
      L = k, k = n;
    return k;
  }
  function p() {
    var k, T, I, oe;
    if (k = g(), k === n)
      if (k = L, T = yl(), T !== n) {
        for (I = [], oe = b(); oe !== n; )
          I.push(oe), oe = b();
        T = [T, I], k = T;
      } else
        L = k, k = n;
    return k;
  }
  function d() {
    var k;
    return t.charCodeAt(L) === 45 ? (k = o, L++) : (k = n, Ce === 0 && _e(Mn)), k;
  }
  function g() {
    var k;
    return t.charCodeAt(L) === 48 ? (k = l, L++) : (k = n, Ce === 0 && _e(zt)), k;
  }
  function b() {
    var k;
    return k = t.charAt(L), ze.test(k) ? L++ : (k = n, Ce === 0 && _e(_r)), k;
  }
  function v() {
    var k, T;
    for (Ce++, k = [], T = t.charAt(L), xt.test(T) ? L++ : (T = n, Ce === 0 && _e(On)); T !== n; )
      k.push(T), T = t.charAt(L), xt.test(T) ? L++ : (T = n, Ce === 0 && _e(On));
    return Ce--, T = n, Ce === 0 && _e(er), k;
  }
  function w() {
    var k, T, I, oe;
    return k = L, T = v(), t.charCodeAt(L) === 44 ? (I = c, L++) : (I = n, Ce === 0 && _e(zr)), I !== n ? (oe = v(), T = [T, I, oe], k = T) : (L = k, k = n), k;
  }
  function E() {
    var k, T, I, oe;
    return k = L, T = v(), t.charCodeAt(L) === 124 ? (I = h, L++) : (I = n, Ce === 0 && _e(Ue)), I !== n ? (oe = v(), T = [T, I, oe], k = T) : (L = k, k = n), k;
  }
  function Q() {
    var k, T, I, oe;
    return k = L, T = v(), t.charCodeAt(L) === 46 ? (I = a, L++) : (I = n, Ce === 0 && _e(Xt)), I !== n ? (oe = v(), T = [T, I, oe], k = T) : (L = k, k = n), k;
  }
  function j() {
    var k;
    return k = t.charAt(L), Bn.test(k) ? L++ : (k = n, Ce === 0 && _e(Tt)), k;
  }
  function V() {
    var k;
    return Ce++, k = t.charAt(L), dn.test(k) ? L++ : (k = n, Ce === 0 && _e(wt)), Ce--, k === n && Ce === 0 && _e(Se), k;
  }
  function X() {
    var k, T, I, oe;
    if (k = L, v(), T = [], I = V(), I !== n)
      for (; I !== n; )
        T.push(I), I = V();
    else
      T = n;
    return T !== n ? (I = v(), Ne = L, oe = nl(T), oe ? oe = n : oe = void 0, oe !== n ? (Ne = k, k = Vc(T)) : (L = k, k = n)) : (L = k, k = n), k;
  }
  function Y() {
    var k, T, I, oe;
    return k = L, v(), t.charCodeAt(L) === 91 ? (T = f, L++) : (T = n, Ce === 0 && _e(Xe)), T !== n ? (v(), I = Ns(), I !== n ? (v(), t.charCodeAt(L) === 93 ? (oe = m, L++) : (oe = n, Ce === 0 && _e(gi)), oe !== n ? (v(), Ne = k, k = rl(I)) : (L = k, k = n)) : (L = k, k = n)) : (L = k, k = n), k;
  }
  function ee() {
    var k, T, I, oe, Qe;
    return k = L, v(), t.charCodeAt(L) === 123 ? (T = y, L++) : (T = n, Ce === 0 && _e(fr)), T !== n ? (v(), I = vl(), I !== n ? (v(), t.charCodeAt(L) === 125 ? (oe = x, L++) : (oe = n, Ce === 0 && _e(mn)), oe !== n ? (Qe = z(), Qe === n && (Qe = null), v(), Ne = k, k = Xc(I, Qe)) : (L = k, k = n)) : (L = k, k = n)) : (L = k, k = n), k;
  }
  function z() {
    var k, T, I;
    return k = L, t.charCodeAt(L) === 37 ? (T = C, L++) : (T = n, Ce === 0 && _e(vt)), T !== n ? (I = te(), I !== n ? (Ne = k, k = il(I)) : (L = k, k = n)) : (L = k, k = n), k;
  }
  function G() {
    var k, T, I, oe;
    return k = L, v(), t.charCodeAt(L) === 60 ? (T = S, L++) : (T = n, Ce === 0 && _e(He)), T !== n ? (v(), I = vl(), I !== n ? (v(), t.charCodeAt(L) === 62 ? (oe = M, L++) : (oe = n, Ce === 0 && _e(Ye)), oe !== n ? (v(), Ne = k, k = La(I)) : (L = k, k = n)) : (L = k, k = n)) : (L = k, k = n), k;
  }
  function te() {
    var k;
    return k = X(), k === n && (k = Y(), k === n && (k = ee(), k === n && (k = G()))), k;
  }
  function ue() {
    var k;
    return k = $e(), k === n && (k = Ve(), k === n && (k = yt(), k === n && (k = gn(), k === n && (k = Be(), k === n && (k = qt(), k === n && (k = ln(), k === n && (k = it()))))))), k;
  }
  function $e() {
    var k, T, I;
    return k = L, v(), T = t.charAt(L), Ot.test(T) ? L++ : (T = n, Ce === 0 && _e(gt)), T !== n ? (I = mr(), I === n && (I = null), Ne = k, k = Wc(I)) : (L = k, k = n), k;
  }
  function Be() {
    var k, T, I;
    return k = L, v(), t.charCodeAt(L) === 33 ? (T = Z, L++) : (T = n, Ce === 0 && _e(Ht)), T !== n ? (I = mr(), I === n && (I = null), Ne = k, k = Rr(I)) : (L = k, k = n), k;
  }
  function Ve() {
    var k, T, I, oe, Qe, Zt, Zr;
    return k = L, t.charCodeAt(L) === 40 ? (T = q, L++) : (T = n, Ce === 0 && _e(ut)), T !== n ? (v(), I = et(), I !== n ? (v(), oe = w(), oe !== n ? (v(), Qe = et(), Qe !== n ? (v(), w(), v(), Zt = et(), Zt === n && (Zt = null), v(), t.charCodeAt(L) === 41 ? (Zr = _, L++) : (Zr = n, Ce === 0 && _e(Ze)), Zr !== n ? (Ne = k, k = qc(I, Qe, Zt)) : (L = k, k = n)) : (L = k, k = n)) : (L = k, k = n)) : (L = k, k = n)) : (L = k, k = n), k;
  }
  function yt() {
    var k, T, I;
    return k = L, t.charCodeAt(L) === 47 ? (T = B, L++) : (T = n, Ce === 0 && _e(pt)), T !== n ? (I = te(), I !== n ? (Ne = k, k = sl(I)) : (L = k, k = n)) : (L = k, k = n), k;
  }
  function gn() {
    var k, T, I;
    return k = L, t.charCodeAt(L) === 42 ? (T = $, L++) : (T = n, Ce === 0 && _e(Wt)), T !== n ? (I = te(), I !== n ? (Ne = k, k = al(I)) : (L = k, k = n)) : (L = k, k = n), k;
  }
  function qt() {
    var k, T, I;
    return k = L, t.charCodeAt(L) === 63 ? (T = N, L++) : (T = n, Ce === 0 && _e(vn)), T !== n ? (I = mr(), I === n && (I = null), Ne = k, k = Uc(I)) : (L = k, k = n), k;
  }
  function ln() {
    var k, T, I;
    return k = L, t.charCodeAt(L) === 58 ? (T = U, L++) : (T = n, Ce === 0 && _e($i)), T !== n ? (I = te(), I !== n ? (Ne = k, k = ol(I)) : (L = k, k = n)) : (L = k, k = n), k;
  }
  function it() {
    var k, T, I;
    return k = L, t.substr(L, 2) === se ? (T = se, L += 2) : (T = n, Ce === 0 && _e($s)), T !== n ? (I = te(), I !== n ? (Ne = k, k = Gc(I)) : (L = k, k = n)) : (L = k, k = n), k;
  }
  function et() {
    var k, T, I, oe;
    if (k = L, T = te(), T !== n) {
      for (I = [], oe = ue(); oe !== n; )
        I.push(oe), oe = ue();
      Ne = k, k = zc(T, I);
    } else
      L = k, k = n;
    return k;
  }
  function $t() {
    var k, T, I, oe;
    if (k = L, t.charCodeAt(L) === 94 ? (T = K, L++) : (T = n, Ce === 0 && _e(O)), T === n && (T = null), I = [], oe = et(), oe !== n)
      for (; oe !== n; )
        I.push(oe), oe = et();
    else
      I = n;
    return I !== n ? (Ne = k, k = tr(T, I)) : (L = k, k = n), k;
  }
  function Kt() {
    var k, T, I, oe, Qe;
    if (k = L, T = [], I = L, oe = w(), oe !== n ? (Qe = $t(), Qe !== n ? I = Qe : (L = I, I = n)) : (L = I, I = n), I !== n)
      for (; I !== n; )
        T.push(I), I = L, oe = w(), oe !== n ? (Qe = $t(), Qe !== n ? I = Qe : (L = I, I = n)) : (L = I, I = n);
    else
      T = n;
    return T !== n && (Ne = k, T = Hc(T)), k = T, k;
  }
  function Jt() {
    var k, T, I, oe, Qe;
    if (k = L, T = [], I = L, oe = E(), oe !== n ? (Qe = $t(), Qe !== n ? I = Qe : (L = I, I = n)) : (L = I, I = n), I !== n)
      for (; I !== n; )
        T.push(I), I = L, oe = E(), oe !== n ? (Qe = $t(), Qe !== n ? I = Qe : (L = I, I = n)) : (L = I, I = n);
    else
      T = n;
    return T !== n && (Ne = k, T = Yc(T)), k = T, k;
  }
  function gr() {
    var k, T, I, oe, Qe;
    if (k = L, T = [], I = L, oe = Q(), oe !== n ? (Qe = $t(), Qe !== n ? I = Qe : (L = I, I = n)) : (L = I, I = n), I !== n)
      for (; I !== n; )
        T.push(I), I = L, oe = Q(), oe !== n ? (Qe = $t(), Qe !== n ? I = Qe : (L = I, I = n)) : (L = I, I = n);
    else
      T = n;
    return T !== n && (Ne = k, T = ll(T)), k = T, k;
  }
  function Ns() {
    var k, T, I;
    return k = L, T = $t(), T !== n ? (I = Kt(), I === n && (I = Jt(), I === n && (I = gr())), I === n && (I = null), Ne = k, k = ul(T, I)) : (L = k, k = n), k;
  }
  function vl() {
    var k, T, I;
    return k = L, T = $t(), T !== n ? (I = Kt(), I === n && (I = null), Ne = k, k = Kc(T, I)) : (L = k, k = n), k;
  }
  function Wa() {
    var k, T, I, oe;
    return k = L, v(), T = j(), T !== n ? (v(), I = Ns(), I !== n ? (v(), oe = j(), oe !== n ? (Ne = k, k = cl(I)) : (L = k, k = n)) : (L = k, k = n)) : (L = k, k = n), k;
  }
  function BD() {
    var k;
    return k = ZD(), k === n && (k = jD(), k === n && (k = $D(), k === n && (k = QD(), k === n && (k = TD(), k === n && (k = MD(), k === n && (k = RD(), k === n && (k = _D()))))))), k;
  }
  function MD() {
    var k, T, I;
    return k = L, t.substr(L, 6) === ce ? (T = ce, L += 6) : (T = n, Ce === 0 && _e(D)), T !== n ? (v(), I = Vs(), I !== n ? (Ne = k, k = Jc(I)) : (L = k, k = n)) : (L = k, k = n), k;
  }
  function QD() {
    var k, T, I, oe, Qe;
    return k = L, t.substr(L, 6) === H ? (T = H, L += 6) : (T = n, Ce === 0 && _e(A)), T !== n ? (v(), I = j(), I !== n ? (oe = X(), oe !== n ? (Qe = j(), Qe !== n ? (Ne = k, k = hl(oe)) : (L = k, k = n)) : (L = k, k = n)) : (L = k, k = n)) : (L = k, k = n), k;
  }
  function TD() {
    var k, T, I, oe;
    return k = L, t.substr(L, 6) === ie ? (T = ie, L += 6) : (T = n, Ce === 0 && _e(P)), T !== n ? (v(), I = p(), I !== n ? (v(), oe = p(), oe !== n ? (v(), p(), Ne = k, k = eh(I, oe)) : (L = k, k = n)) : (L = k, k = n)) : (L = k, k = n), k;
  }
  function jD() {
    var k, T, I;
    return k = L, t.substr(L, 4) === fe ? (T = fe, L += 4) : (T = n, Ce === 0 && _e(R)), T !== n ? (v(), I = mr(), I !== n ? (Ne = k, k = th(I)) : (L = k, k = n)) : (L = k, k = n), k;
  }
  function _D() {
    var k, T, I;
    return k = L, t.substr(L, 4) === De ? (T = De, L += 4) : (T = n, Ce === 0 && _e(J)), T !== n ? (v(), I = mr(), I !== n ? (Ne = k, k = Hr(I)) : (L = k, k = n)) : (L = k, k = n), k;
  }
  function RD() {
    var k, T, I;
    return k = L, t.substr(L, 4) === Ee ? (T = Ee, L += 4) : (T = n, Ce === 0 && _e(ae)), T !== n ? (v(), I = mr(), I !== n ? (Ne = k, k = bt(I)) : (L = k, k = n)) : (L = k, k = n), k;
  }
  function $D() {
    var k, T, I;
    return k = L, t.substr(L, 4) === re ? (T = re, L += 4) : (T = n, Ce === 0 && _e(pe)), T !== n ? (v(), I = mr(), I !== n ? (Ne = k, k = nh(I)) : (L = k, k = n)) : (L = k, k = n), k;
  }
  function ZD() {
    var k, T, I, oe, Qe;
    if (k = L, t.substr(L, 5) === ke ? (T = ke, L += 5) : (T = n, Ce === 0 && _e(ge)), T !== n)
      if (v(), I = j(), I !== n) {
        if (oe = [], Qe = V(), Qe !== n)
          for (; Qe !== n; )
            oe.push(Qe), Qe = V();
        else
          oe = n;
        oe !== n ? (Qe = j(), Qe !== n ? (Ne = k, k = cs(oe)) : (L = k, k = n)) : (L = k, k = n);
      } else
        L = k, k = n;
    else
      L = k, k = n;
    return k;
  }
  function lh() {
    var k, T, I, oe;
    if (k = L, t.substr(L, 2) === Le ? (T = Le, L += 2) : (T = n, Ce === 0 && _e(Je)), T !== n) {
      for (I = [], oe = t.charAt(L), kt.test(oe) ? L++ : (oe = n, Ce === 0 && _e(Rt)); oe !== n; )
        I.push(oe), oe = t.charAt(L), kt.test(oe) ? L++ : (oe = n, Ce === 0 && _e(Rt));
      T = [T, I], k = T;
    } else
      L = k, k = n;
    return k;
  }
  function LD() {
    var k, T, I, oe, Qe, Zt, Zr, Xs;
    if (k = L, t.substr(L, 3) === xe ? (T = xe, L += 3) : (T = n, Ce === 0 && _e(Yt)), T !== n)
      if (v(), t.charCodeAt(L) === 91 ? (I = f, L++) : (I = n, Ce === 0 && _e(Xe)), I !== n)
        if (v(), oe = Vs(), oe !== n) {
          for (Qe = [], Zt = L, Zr = w(), Zr !== n ? (Xs = Vs(), Xs !== n ? (Ne = Zt, Zt = pl(oe, Xs)) : (L = Zt, Zt = n)) : (L = Zt, Zt = n); Zt !== n; )
            Qe.push(Zt), Zt = L, Zr = w(), Zr !== n ? (Xs = Vs(), Xs !== n ? (Ne = Zt, Zt = pl(oe, Xs)) : (L = Zt, Zt = n)) : (L = Zt, Zt = n);
          Zt = v(), t.charCodeAt(L) === 93 ? (Zr = m, L++) : (Zr = n, Ce === 0 && _e(gi)), Zr !== n ? (Ne = k, k = hs(oe, Qe)) : (L = k, k = n);
        } else
          L = k, k = n;
      else
        L = k, k = n;
    else
      L = k, k = n;
    return k;
  }
  function ID() {
    var k;
    return k = LD(), k === n && (k = Wa()), k;
  }
  function Vs() {
    var k, T, I, oe, Qe;
    if (k = L, T = ID(), T !== n) {
      for (v(), I = [], oe = lh(); oe !== n; )
        I.push(oe), oe = lh();
      Ne = k, k = rh(T);
    } else
      L = k, k = n;
    return k === n && (k = L, T = BD(), T !== n ? (v(), t.charCodeAt(L) === 36 ? (I = je, L++) : (I = n, Ce === 0 && _e(dr)), I !== n ? (oe = v(), Qe = Vs(), Qe !== n ? (Ne = k, k = ps(T, Qe)) : (L = k, k = n)) : (L = k, k = n)) : (L = k, k = n)), k;
  }
  function ND() {
    var k, T;
    return k = L, T = Vs(), T !== n && (Ne = k, T = fl(T)), k = T, k === n && (k = lh()), k;
  }
  function VD() {
    var k;
    return k = ND(), k;
  }
  function XD() {
    var k, T;
    return k = L, v(), T = WD(), T === n && (T = qD(), T === n && (T = UD())), T !== n ? (v(), Ne = k, k = dl(T)) : (L = k, k = n), k;
  }
  function WD() {
    var k, T, I;
    return k = L, t.substr(L, 6) === he ? (T = he, L += 6) : (T = n, Ce === 0 && _e(Zs)), T !== n ? (v(), I = mr(), I !== n ? (Ne = k, k = ih(I)) : (L = k, k = n)) : (L = k, k = n), k;
  }
  function qD() {
    var k, T, I;
    return k = L, t.substr(L, 6) === Pe ? (T = Pe, L += 6) : (T = n, Ce === 0 && _e(us)), T !== n ? (v(), I = mr(), I !== n ? (Ne = k, k = Ia(I)) : (L = k, k = n)) : (L = k, k = n), k;
  }
  function UD() {
    var k, T;
    return k = L, t.substr(L, 4) === Pt ? (T = Pt, L += 4) : (T = n, Ce === 0 && _e(Qn)), T !== n && (Ne = k, T = sh()), k = T, k;
  }
  function GD() {
    var k;
    return k = VD(), k === n && (k = XD()), k;
  }
  var zD = function(k) {
    this.type_ = "atom", this.source_ = k, this.location_ = Na();
  }, xl = function(k, T, I, oe) {
    this.type_ = "pattern", this.arguments_ = { alignment: T, _steps: oe }, I !== void 0 && (this.arguments_.seed = I), this.source_ = k;
  }, HD = function(k, T, I) {
    this.type_ = k, this.arguments_ = T, this.source_ = I;
  }, YD = function(k, T) {
    this.type_ = "element", this.source_ = k, this.options_ = T, this.location_ = Na();
  }, uh = function(k, T) {
    this.type_ = "command", this.name_ = k, this.options_ = T;
  }, ch = 0;
  if (ds = s(), e.peg$library)
    return (
      /** @type {any} */
      {
        peg$result: ds,
        peg$currPos: L,
        peg$FAILED: n,
        peg$maxFailExpected: fs,
        peg$maxFailPos: nr
      }
    );
  if (ds !== n && L === t.length)
    return ds;
  throw ds !== n && L < t.length && _e(ah()), gl(
    fs,
    nr < t.length ? t.charAt(nr) : null,
    nr < t.length ? Ls(nr, nr + 1) : Ls(nr, nr)
  );
}
const NF = [
  "start"
], Ik = 3e-4, VF = (t, e) => (n, r) => {
  const a = t.source_[r].options_?.ops, o = n.__steps_source;
  if (a)
    for (const l of a)
      switch (l.type_) {
        case "stretch": {
          const c = ["fast", "slow"], { type: h, amount: f } = l.arguments_;
          if (!c.includes(h))
            throw new Error(`mini: stretch: type must be one of ${c.join("|")} but got ${h}`);
          n = Oe(n)[h](e(f));
          break;
        }
        case "replicate": {
          const { amount: c } = l.arguments_;
          n = Oe(n), n = n._repeatCycles(c)._fast(c);
          break;
        }
        case "bjorklund": {
          l.arguments_.rotation ? n = n.euclidRot(e(l.arguments_.pulse), e(l.arguments_.step), e(l.arguments_.rotation)) : n = n.euclid(e(l.arguments_.pulse), e(l.arguments_.step));
          break;
        }
        case "degradeBy": {
          n = Oe(n)._degradeByWith(zn.early(Ik * l.arguments_.seed), l.arguments_.amount ?? 0.5);
          break;
        }
        case "tail": {
          const c = e(l.arguments_.element);
          n = n.fmap((h) => (f) => Array.isArray(h) ? [...h, f] : [h, f]).appLeft(c);
          break;
        }
        case "range": {
          const c = e(l.arguments_.element);
          n = Oe(n);
          const h = (m, y, x = 1) => Array.from(
            { length: Math.abs(y - m) / x + 1 },
            (C, S) => m < y ? m + S * x : m - S * x
          );
          n = ((m, y) => m.squeezeBind((x) => y.bind((C) => Yn(...h(x, C)))))(n, c);
          break;
        }
        default:
          console.warn(`operator "${l.type_}" not implemented`);
      }
  return n.__steps_source = n.__steps_source || o, n;
};
function Fa(t, e, n, r = 0) {
  n?.(t);
  const i = (s) => Fa(s, e, n, r);
  switch (t.type_) {
    case "pattern": {
      const s = t.source_.map((c) => i(c)).map(VF(t, i)), a = t.arguments_.alignment, o = s.filter((c) => c.__steps_source);
      let l;
      switch (a) {
        case "stack": {
          l = Nt(...s), o.length && (l._steps = Xr(...o.map((c) => me(c._steps))));
          break;
        }
        case "polymeter_slowcat": {
          l = Nt(...s.map((c) => c._slow(c.__weight))), o.length && (l._steps = Xr(...o.map((c) => me(c._steps))));
          break;
        }
        case "polymeter": {
          const c = t.arguments_.stepsPerCycle ? i(t.arguments_.stepsPerCycle).fmap((f) => me(f)) : hn(me(s.length > 0 ? s[0].__weight : 1)), h = s.map((f) => f.fast(c.fmap((m) => m.div(f.__weight))));
          l = Nt(...h);
          break;
        }
        case "rand": {
          l = ud(zn.early(Ik * t.arguments_.seed).segment(1), s), o.length && (l._steps = Xr(...o.map((c) => me(c._steps))));
          break;
        }
        case "feet": {
          l = Yn(...s);
          break;
        }
        default: {
          if (t.source_.some((h) => !!h.options_?.weight)) {
            const h = t.source_.reduce(
              (f, m) => f.add(m.options_?.weight || me(1)),
              me(0)
            );
            l = Hf(
              ...t.source_.map((f, m) => [f.options_?.weight || me(1), s[m]])
            ), l.__weight = h, l._steps = h, o.length && (l._steps = l._steps.mul(Xr(...o.map((f) => me(f._steps)))));
          } else
            l = Er(...s), l._steps = s.length;
          t.arguments_._steps && (l.__steps_source = !0);
        }
      }
      return o.length && (l.__steps_source = !0), l;
    }
    case "element":
      return i(t.source_);
    case "atom": {
      if (t.source_ === "~" || t.source_ === "-")
        return St;
      if (!t.location_)
        return console.warn("no location for", t), t.source_;
      const s = isNaN(Number(t.source_)) ? t.source_ : Number(t.source_);
      if (r === -1)
        return hn(s);
      const [a, o] = fd(e, t, r);
      return hn(s).withLoc(a, o);
    }
    case "stretch":
      return i(t.source_).slow(i(t.arguments_.amount));
    default:
      return console.warn(`node type "${t.type_}" not implemented -> returning silence`), St;
  }
}
const fd = (t, e, n = 0) => {
  const { start: r, end: i } = e.location_, s = t?.split("").slice(r.offset, i.offset).join(""), [a = 0, o = 0] = s ? s.split(e.source_).map((l) => l.split("").filter((c) => c === " ").length) : [];
  return [r.offset + a + n, i.offset - o + n];
}, No = (t, e = 0, n = t) => {
  try {
    return Lk(t);
  } catch (r) {
    const i = [r.location.start.offset + e, r.location.end.offset + e], s = n.slice(0, i[0]).split(`
`).length;
    throw new Error(`[mini] parse error at line ${s}: ${r.message}`);
  }
}, Nk = (t, e, n) => {
  const r = No(t, e, n);
  let i = [];
  return Fa(
    r,
    t,
    (s) => {
      s.type_ === "atom" && i.push(s);
    },
    -1
  ), i;
}, dd = (t, e = 0, n) => Nk(t, e, n).map((r) => fd(t, r, e)), md = (...t) => {
  const e = t.map((n) => {
    const r = `"${n}"`, i = No(r);
    return Fa(i, r);
  });
  return Er(...e);
}, XF = (t, e) => {
  const n = `"${t}"`, r = No(n);
  return Fa(r, n, null, e);
}, WF = (t) => {
  const e = No(t);
  return Fa(e, t);
};
function qF(t) {
  return typeof t == "string" ? md(t) : Oe(t);
}
function UF() {
  Db(md);
}
const GF = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  StartRules: NF,
  SyntaxError: Fs,
  getLeafLocation: fd,
  getLeafLocations: dd,
  getLeaves: Nk,
  h: WF,
  m: XF,
  mini: md,
  mini2ast: No,
  miniAllStrings: UF,
  minify: qF,
  parse: Lk,
  patternifyAST: Fa
}, Symbol.toStringTag, { value: "Module" }));
var zF = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 7, 9, 32, 4, 318, 1, 80, 3, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 68, 8, 2, 0, 3, 0, 2, 3, 2, 4, 2, 0, 15, 1, 83, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 7, 19, 58, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 343, 9, 54, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 10, 5350, 0, 7, 14, 11465, 27, 2343, 9, 87, 9, 39, 4, 60, 6, 26, 9, 535, 9, 470, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4178, 9, 519, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 245, 1, 2, 9, 726, 6, 110, 6, 6, 9, 4759, 9, 787719, 239], Vk = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 4, 51, 13, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 39, 27, 10, 22, 251, 41, 7, 1, 17, 2, 60, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 31, 9, 2, 0, 3, 0, 2, 37, 2, 0, 26, 0, 2, 0, 45, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 200, 32, 32, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 26, 3994, 6, 582, 6842, 29, 1763, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 433, 44, 212, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 42, 9, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 229, 29, 3, 0, 496, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 16, 621, 2467, 541, 1507, 4938, 6, 4191], HF = "‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛ࢗ-࢟࣊-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄ఼ా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ೳഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ඁ-ඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-໎໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜕ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠏-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᪿ-ᫎᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷿‌‍‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯・꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿･", Xk = "ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࡰ-ࢇࢉ-ࢎࢠ-ࣉऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౝౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೝೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜑᜟ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭌᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲊᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꟍꟐꟑꟓꟕ-Ƛꟲ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ", ph = {
  3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",
  5: "class enum extends super const export import",
  6: "enum",
  strict: "implements interface let package private protected public static yield",
  strictBind: "eval arguments"
}, fh = "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this", YF = {
  5: fh,
  "5module": fh + " export import",
  6: fh + " const class extends export import super"
}, KF = /^in(stanceof)?$/, JF = new RegExp("[" + Xk + "]"), eB = new RegExp("[" + Xk + HF + "]");
function vp(t, e) {
  for (var n = 65536, r = 0; r < e.length; r += 2) {
    if (n += e[r], n > t)
      return !1;
    if (n += e[r + 1], n >= t)
      return !0;
  }
  return !1;
}
function Ei(t, e) {
  return t < 65 ? t === 36 : t < 91 ? !0 : t < 97 ? t === 95 : t < 123 ? !0 : t <= 65535 ? t >= 170 && JF.test(String.fromCharCode(t)) : e === !1 ? !1 : vp(t, Vk);
}
function ma(t, e) {
  return t < 48 ? t === 36 : t < 58 ? !0 : t < 65 ? !1 : t < 91 ? !0 : t < 97 ? t === 95 : t < 123 ? !0 : t <= 65535 ? t >= 170 && eB.test(String.fromCharCode(t)) : e === !1 ? !1 : vp(t, Vk) || vp(t, zF);
}
var ft = function(e, n) {
  n === void 0 && (n = {}), this.label = e, this.keyword = n.keyword, this.beforeExpr = !!n.beforeExpr, this.startsExpr = !!n.startsExpr, this.isLoop = !!n.isLoop, this.isAssign = !!n.isAssign, this.prefix = !!n.prefix, this.postfix = !!n.postfix, this.binop = n.binop || null, this.updateContext = null;
};
function br(t, e) {
  return new ft(t, { beforeExpr: !0, binop: e });
}
var yr = { beforeExpr: !0 }, Zn = { startsExpr: !0 }, gd = {};
function ot(t, e) {
  return e === void 0 && (e = {}), e.keyword = t, gd[t] = new ft(t, e);
}
var F = {
  num: new ft("num", Zn),
  regexp: new ft("regexp", Zn),
  string: new ft("string", Zn),
  name: new ft("name", Zn),
  privateId: new ft("privateId", Zn),
  eof: new ft("eof"),
  // Punctuation token types.
  bracketL: new ft("[", { beforeExpr: !0, startsExpr: !0 }),
  bracketR: new ft("]"),
  braceL: new ft("{", { beforeExpr: !0, startsExpr: !0 }),
  braceR: new ft("}"),
  parenL: new ft("(", { beforeExpr: !0, startsExpr: !0 }),
  parenR: new ft(")"),
  comma: new ft(",", yr),
  semi: new ft(";", yr),
  colon: new ft(":", yr),
  dot: new ft("."),
  question: new ft("?", yr),
  questionDot: new ft("?."),
  arrow: new ft("=>", yr),
  template: new ft("template"),
  invalidTemplate: new ft("invalidTemplate"),
  ellipsis: new ft("...", yr),
  backQuote: new ft("`", Zn),
  dollarBraceL: new ft("${", { beforeExpr: !0, startsExpr: !0 }),
  // Operators. These carry several kinds of properties to help the
  // parser use them properly (the presence of these properties is
  // what categorizes them as operators).
  //
  // `binop`, when present, specifies that this operator is a binary
  // operator, and will refer to its precedence.
  //
  // `prefix` and `postfix` mark the operator as a prefix or postfix
  // unary operator.
  //
  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as
  // binary operators with a very low precedence, that should result
  // in AssignmentExpression nodes.
  eq: new ft("=", { beforeExpr: !0, isAssign: !0 }),
  assign: new ft("_=", { beforeExpr: !0, isAssign: !0 }),
  incDec: new ft("++/--", { prefix: !0, postfix: !0, startsExpr: !0 }),
  prefix: new ft("!/~", { beforeExpr: !0, prefix: !0, startsExpr: !0 }),
  logicalOR: br("||", 1),
  logicalAND: br("&&", 2),
  bitwiseOR: br("|", 3),
  bitwiseXOR: br("^", 4),
  bitwiseAND: br("&", 5),
  equality: br("==/!=/===/!==", 6),
  relational: br("</>/<=/>=", 7),
  bitShift: br("<</>>/>>>", 8),
  plusMin: new ft("+/-", { beforeExpr: !0, binop: 9, prefix: !0, startsExpr: !0 }),
  modulo: br("%", 10),
  star: br("*", 10),
  slash: br("/", 10),
  starstar: new ft("**", { beforeExpr: !0 }),
  coalesce: br("??", 1),
  // Keyword token types.
  _break: ot("break"),
  _case: ot("case", yr),
  _catch: ot("catch"),
  _continue: ot("continue"),
  _debugger: ot("debugger"),
  _default: ot("default", yr),
  _do: ot("do", { isLoop: !0, beforeExpr: !0 }),
  _else: ot("else", yr),
  _finally: ot("finally"),
  _for: ot("for", { isLoop: !0 }),
  _function: ot("function", Zn),
  _if: ot("if"),
  _return: ot("return", yr),
  _switch: ot("switch"),
  _throw: ot("throw", yr),
  _try: ot("try"),
  _var: ot("var"),
  _const: ot("const"),
  _while: ot("while", { isLoop: !0 }),
  _with: ot("with"),
  _new: ot("new", { beforeExpr: !0, startsExpr: !0 }),
  _this: ot("this", Zn),
  _super: ot("super", Zn),
  _class: ot("class", Zn),
  _extends: ot("extends", yr),
  _export: ot("export"),
  _import: ot("import", Zn),
  _null: ot("null", Zn),
  _true: ot("true", Zn),
  _false: ot("false", Zn),
  _in: ot("in", { beforeExpr: !0, binop: 7 }),
  _instanceof: ot("instanceof", { beforeExpr: !0, binop: 7 }),
  _typeof: ot("typeof", { beforeExpr: !0, prefix: !0, startsExpr: !0 }),
  _void: ot("void", { beforeExpr: !0, prefix: !0, startsExpr: !0 }),
  _delete: ot("delete", { beforeExpr: !0, prefix: !0, startsExpr: !0 })
}, Mr = /\r\n?|\n|\u2028|\u2029/, tB = new RegExp(Mr.source, "g");
function Ba(t) {
  return t === 10 || t === 13 || t === 8232 || t === 8233;
}
function Wk(t, e, n) {
  n === void 0 && (n = t.length);
  for (var r = e; r < n; r++) {
    var i = t.charCodeAt(r);
    if (Ba(i))
      return r < n - 1 && i === 13 && t.charCodeAt(r + 1) === 10 ? r + 2 : r + 1;
  }
  return -1;
}
var qk = /[\u1680\u2000-\u200a\u202f\u205f\u3000\ufeff]/, vr = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g, Uk = Object.prototype, nB = Uk.hasOwnProperty, rB = Uk.toString, Ma = Object.hasOwn || function(t, e) {
  return nB.call(t, e);
}, Rm = Array.isArray || function(t) {
  return rB.call(t) === "[object Array]";
}, $m = /* @__PURE__ */ Object.create(null);
function qi(t) {
  return $m[t] || ($m[t] = new RegExp("^(?:" + t.replace(/ /g, "|") + ")$"));
}
function Fi(t) {
  return t <= 65535 ? String.fromCharCode(t) : (t -= 65536, String.fromCharCode((t >> 10) + 55296, (t & 1023) + 56320));
}
var iB = /(?:[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/, Oo = function(e, n) {
  this.line = e, this.column = n;
};
Oo.prototype.offset = function(e) {
  return new Oo(this.line, this.column + e);
};
var vc = function(e, n, r) {
  this.start = n, this.end = r, e.sourceFile !== null && (this.source = e.sourceFile);
};
function Gk(t, e) {
  for (var n = 1, r = 0; ; ) {
    var i = Wk(t, r, e);
    if (i < 0)
      return new Oo(n, e - r);
    ++n, r = i;
  }
}
var xp = {
  // `ecmaVersion` indicates the ECMAScript version to parse. Must be
  // either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10
  // (2019), 11 (2020), 12 (2021), 13 (2022), 14 (2023), or `"latest"`
  // (the latest version the library supports). This influences
  // support for strict mode, the set of reserved words, and support
  // for new syntax features.
  ecmaVersion: null,
  // `sourceType` indicates the mode the code should be parsed in.
  // Can be either `"script"` or `"module"`. This influences global
  // strict mode and parsing of `import` and `export` declarations.
  sourceType: "script",
  // `onInsertedSemicolon` can be a callback that will be called when
  // a semicolon is automatically inserted. It will be passed the
  // position of the inserted semicolon as an offset, and if
  // `locations` is enabled, it is given the location as a `{line,
  // column}` object as second argument.
  onInsertedSemicolon: null,
  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for
  // trailing commas.
  onTrailingComma: null,
  // By default, reserved words are only enforced if ecmaVersion >= 5.
  // Set `allowReserved` to a boolean value to explicitly turn this on
  // an off. When this option has the value "never", reserved words
  // and keywords can also not be used as property names.
  allowReserved: null,
  // When enabled, a return at the top level is not considered an
  // error.
  allowReturnOutsideFunction: !1,
  // When enabled, import/export statements are not constrained to
  // appearing at the top of the program, and an import.meta expression
  // in a script isn't considered an error.
  allowImportExportEverywhere: !1,
  // By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.
  // When enabled, await identifiers are allowed to appear at the top-level scope,
  // but they are still not allowed in non-async functions.
  allowAwaitOutsideFunction: null,
  // When enabled, super identifiers are not constrained to
  // appearing in methods and do not raise an error when they appear elsewhere.
  allowSuperOutsideMethod: null,
  // When enabled, hashbang directive in the beginning of file is
  // allowed and treated as a line comment. Enabled by default when
  // `ecmaVersion` >= 2023.
  allowHashBang: !1,
  // By default, the parser will verify that private properties are
  // only used in places where they are valid and have been declared.
  // Set this to false to turn such checks off.
  checkPrivateFields: !0,
  // When `locations` is on, `loc` properties holding objects with
  // `start` and `end` properties in `{line, column}` form (with
  // line being 1-based and column 0-based) will be attached to the
  // nodes.
  locations: !1,
  // A function can be passed as `onToken` option, which will
  // cause Acorn to call that function with object in the same
  // format as tokens returned from `tokenizer().getToken()`. Note
  // that you are not allowed to call the parser from the
  // callback—that will corrupt its internal state.
  onToken: null,
  // A function can be passed as `onComment` option, which will
  // cause Acorn to call that function with `(block, text, start,
  // end)` parameters whenever a comment is skipped. `block` is a
  // boolean indicating whether this is a block (`/* */`) comment,
  // `text` is the content of the comment, and `start` and `end` are
  // character offsets that denote the start and end of the comment.
  // When the `locations` option is on, two more parameters are
  // passed, the full `{line, column}` locations of the start and
  // end of the comments. Note that you are not allowed to call the
  // parser from the callback—that will corrupt its internal state.
  // When this option has an array as value, objects representing the
  // comments are pushed to it.
  onComment: null,
  // Nodes have their start and end characters offsets recorded in
  // `start` and `end` properties (directly on the node, rather than
  // the `loc` object, which holds line/column data. To also add a
  // [semi-standardized][range] `range` property holding a `[start,
  // end]` array with the same numbers, set the `ranges` option to
  // `true`.
  //
  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678
  ranges: !1,
  // It is possible to parse multiple files into a single AST by
  // passing the tree produced by parsing the first file as
  // `program` option in subsequent parses. This will add the
  // toplevel forms of the parsed file to the `Program` (top) node
  // of an existing parse tree.
  program: null,
  // When `locations` is on, you can pass this to record the source
  // file in every node's `loc` object.
  sourceFile: null,
  // This value, if given, is stored in every node, whether
  // `locations` is on or off.
  directSourceFile: null,
  // When enabled, parenthesized expressions are represented by
  // (non-standard) ParenthesizedExpression nodes
  preserveParens: !1
}, Zm = !1;
function sB(t) {
  var e = {};
  for (var n in xp)
    e[n] = t && Ma(t, n) ? t[n] : xp[n];
  if (e.ecmaVersion === "latest" ? e.ecmaVersion = 1e8 : e.ecmaVersion == null ? (!Zm && typeof console == "object" && console.warn && (Zm = !0, console.warn(`Since Acorn 8.0.0, options.ecmaVersion is required.
Defaulting to 2020, but this will stop working in the future.`)), e.ecmaVersion = 11) : e.ecmaVersion >= 2015 && (e.ecmaVersion -= 2009), e.allowReserved == null && (e.allowReserved = e.ecmaVersion < 5), (!t || t.allowHashBang == null) && (e.allowHashBang = e.ecmaVersion >= 14), Rm(e.onToken)) {
    var r = e.onToken;
    e.onToken = function(i) {
      return r.push(i);
    };
  }
  return Rm(e.onComment) && (e.onComment = aB(e, e.onComment)), e;
}
function aB(t, e) {
  return function(n, r, i, s, a, o) {
    var l = {
      type: n ? "Block" : "Line",
      value: r,
      start: i,
      end: s
    };
    t.locations && (l.loc = new vc(this, a, o)), t.ranges && (l.range = [i, s]), e.push(l);
  };
}
var vo = 1, Qa = 2, bd = 4, zk = 8, Hk = 16, Yk = 32, yd = 64, Kk = 128, Vo = 256, Od = vo | Qa | Vo;
function vd(t, e) {
  return Qa | (t ? bd : 0) | (e ? zk : 0);
}
var du = 0, xd = 1, ji = 2, Jk = 3, e2 = 4, t2 = 5, pn = function(e, n, r) {
  this.options = e = sB(e), this.sourceFile = e.sourceFile, this.keywords = qi(YF[e.ecmaVersion >= 6 ? 6 : e.sourceType === "module" ? "5module" : 5]);
  var i = "";
  e.allowReserved !== !0 && (i = ph[e.ecmaVersion >= 6 ? 6 : e.ecmaVersion === 5 ? 5 : 3], e.sourceType === "module" && (i += " await")), this.reservedWords = qi(i);
  var s = (i ? i + " " : "") + ph.strict;
  this.reservedWordsStrict = qi(s), this.reservedWordsStrictBind = qi(s + " " + ph.strictBind), this.input = String(n), this.containsEsc = !1, r ? (this.pos = r, this.lineStart = this.input.lastIndexOf(`
`, r - 1) + 1, this.curLine = this.input.slice(0, this.lineStart).split(Mr).length) : (this.pos = this.lineStart = 0, this.curLine = 1), this.type = F.eof, this.value = null, this.start = this.end = this.pos, this.startLoc = this.endLoc = this.curPosition(), this.lastTokEndLoc = this.lastTokStartLoc = null, this.lastTokStart = this.lastTokEnd = this.pos, this.context = this.initialContext(), this.exprAllowed = !0, this.inModule = e.sourceType === "module", this.strict = this.inModule || this.strictDirective(this.pos), this.potentialArrowAt = -1, this.potentialArrowInForAwait = !1, this.yieldPos = this.awaitPos = this.awaitIdentPos = 0, this.labels = [], this.undefinedExports = /* @__PURE__ */ Object.create(null), this.pos === 0 && e.allowHashBang && this.input.slice(0, 2) === "#!" && this.skipLineComment(2), this.scopeStack = [], this.enterScope(vo), this.regexpState = null, this.privateNameStack = [];
}, fi = { inFunction: { configurable: !0 }, inGenerator: { configurable: !0 }, inAsync: { configurable: !0 }, canAwait: { configurable: !0 }, allowSuper: { configurable: !0 }, allowDirectSuper: { configurable: !0 }, treatFunctionsAsVar: { configurable: !0 }, allowNewDotTarget: { configurable: !0 }, inClassStaticBlock: { configurable: !0 } };
pn.prototype.parse = function() {
  var e = this.options.program || this.startNode();
  return this.nextToken(), this.parseTopLevel(e);
};
fi.inFunction.get = function() {
  return (this.currentVarScope().flags & Qa) > 0;
};
fi.inGenerator.get = function() {
  return (this.currentVarScope().flags & zk) > 0 && !this.currentVarScope().inClassFieldInit;
};
fi.inAsync.get = function() {
  return (this.currentVarScope().flags & bd) > 0 && !this.currentVarScope().inClassFieldInit;
};
fi.canAwait.get = function() {
  for (var t = this.scopeStack.length - 1; t >= 0; t--) {
    var e = this.scopeStack[t];
    if (e.inClassFieldInit || e.flags & Vo)
      return !1;
    if (e.flags & Qa)
      return (e.flags & bd) > 0;
  }
  return this.inModule && this.options.ecmaVersion >= 13 || this.options.allowAwaitOutsideFunction;
};
fi.allowSuper.get = function() {
  var t = this.currentThisScope(), e = t.flags, n = t.inClassFieldInit;
  return (e & yd) > 0 || n || this.options.allowSuperOutsideMethod;
};
fi.allowDirectSuper.get = function() {
  return (this.currentThisScope().flags & Kk) > 0;
};
fi.treatFunctionsAsVar.get = function() {
  return this.treatFunctionsAsVarInScope(this.currentScope());
};
fi.allowNewDotTarget.get = function() {
  var t = this.currentThisScope(), e = t.flags, n = t.inClassFieldInit;
  return (e & (Qa | Vo)) > 0 || n;
};
fi.inClassStaticBlock.get = function() {
  return (this.currentVarScope().flags & Vo) > 0;
};
pn.extend = function() {
  for (var e = [], n = arguments.length; n--; ) e[n] = arguments[n];
  for (var r = this, i = 0; i < e.length; i++)
    r = e[i](r);
  return r;
};
pn.parse = function(e, n) {
  return new this(n, e).parse();
};
pn.parseExpressionAt = function(e, n, r) {
  var i = new this(r, e, n);
  return i.nextToken(), i.parseExpression();
};
pn.tokenizer = function(e, n) {
  return new this(n, e);
};
Object.defineProperties(pn.prototype, fi);
var $n = pn.prototype, oB = /^(?:'((?:\\[^]|[^'\\])*?)'|"((?:\\[^]|[^"\\])*?)")/;
$n.strictDirective = function(t) {
  if (this.options.ecmaVersion < 5)
    return !1;
  for (; ; ) {
    vr.lastIndex = t, t += vr.exec(this.input)[0].length;
    var e = oB.exec(this.input.slice(t));
    if (!e)
      return !1;
    if ((e[1] || e[2]) === "use strict") {
      vr.lastIndex = t + e[0].length;
      var n = vr.exec(this.input), r = n.index + n[0].length, i = this.input.charAt(r);
      return i === ";" || i === "}" || Mr.test(n[0]) && !(/[(`.[+\-/*%<>=,?^&]/.test(i) || i === "!" && this.input.charAt(r + 1) === "=");
    }
    t += e[0].length, vr.lastIndex = t, t += vr.exec(this.input)[0].length, this.input[t] === ";" && t++;
  }
};
$n.eat = function(t) {
  return this.type === t ? (this.next(), !0) : !1;
};
$n.isContextual = function(t) {
  return this.type === F.name && this.value === t && !this.containsEsc;
};
$n.eatContextual = function(t) {
  return this.isContextual(t) ? (this.next(), !0) : !1;
};
$n.expectContextual = function(t) {
  this.eatContextual(t) || this.unexpected();
};
$n.canInsertSemicolon = function() {
  return this.type === F.eof || this.type === F.braceR || Mr.test(this.input.slice(this.lastTokEnd, this.start));
};
$n.insertSemicolon = function() {
  if (this.canInsertSemicolon())
    return this.options.onInsertedSemicolon && this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc), !0;
};
$n.semicolon = function() {
  !this.eat(F.semi) && !this.insertSemicolon() && this.unexpected();
};
$n.afterTrailingComma = function(t, e) {
  if (this.type === t)
    return this.options.onTrailingComma && this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc), e || this.next(), !0;
};
$n.expect = function(t) {
  this.eat(t) || this.unexpected();
};
$n.unexpected = function(t) {
  this.raise(t ?? this.start, "Unexpected token");
};
var xc = function() {
  this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = this.parenthesizedBind = this.doubleProto = -1;
};
$n.checkPatternErrors = function(t, e) {
  if (t) {
    t.trailingComma > -1 && this.raiseRecoverable(t.trailingComma, "Comma is not permitted after the rest element");
    var n = e ? t.parenthesizedAssign : t.parenthesizedBind;
    n > -1 && this.raiseRecoverable(n, e ? "Assigning to rvalue" : "Parenthesized pattern");
  }
};
$n.checkExpressionErrors = function(t, e) {
  if (!t)
    return !1;
  var n = t.shorthandAssign, r = t.doubleProto;
  if (!e)
    return n >= 0 || r >= 0;
  n >= 0 && this.raise(n, "Shorthand property assignments are valid only in destructuring patterns"), r >= 0 && this.raiseRecoverable(r, "Redefinition of __proto__ property");
};
$n.checkYieldAwaitInDefaultParams = function() {
  this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos) && this.raise(this.yieldPos, "Yield expression cannot be a default value"), this.awaitPos && this.raise(this.awaitPos, "Await expression cannot be a default value");
};
$n.isSimpleAssignTarget = function(t) {
  return t.type === "ParenthesizedExpression" ? this.isSimpleAssignTarget(t.expression) : t.type === "Identifier" || t.type === "MemberExpression";
};
var Me = pn.prototype;
Me.parseTopLevel = function(t) {
  var e = /* @__PURE__ */ Object.create(null);
  for (t.body || (t.body = []); this.type !== F.eof; ) {
    var n = this.parseStatement(null, !0, e);
    t.body.push(n);
  }
  if (this.inModule)
    for (var r = 0, i = Object.keys(this.undefinedExports); r < i.length; r += 1) {
      var s = i[r];
      this.raiseRecoverable(this.undefinedExports[s].start, "Export '" + s + "' is not defined");
    }
  return this.adaptDirectivePrologue(t.body), this.next(), t.sourceType = this.options.sourceType, this.finishNode(t, "Program");
};
var kd = { kind: "loop" }, lB = { kind: "switch" };
Me.isLet = function(t) {
  if (this.options.ecmaVersion < 6 || !this.isContextual("let"))
    return !1;
  vr.lastIndex = this.pos;
  var e = vr.exec(this.input), n = this.pos + e[0].length, r = this.input.charCodeAt(n);
  if (r === 91 || r === 92)
    return !0;
  if (t)
    return !1;
  if (r === 123 || r > 55295 && r < 56320)
    return !0;
  if (Ei(r, !0)) {
    for (var i = n + 1; ma(r = this.input.charCodeAt(i), !0); )
      ++i;
    if (r === 92 || r > 55295 && r < 56320)
      return !0;
    var s = this.input.slice(n, i);
    if (!KF.test(s))
      return !0;
  }
  return !1;
};
Me.isAsyncFunction = function() {
  if (this.options.ecmaVersion < 8 || !this.isContextual("async"))
    return !1;
  vr.lastIndex = this.pos;
  var t = vr.exec(this.input), e = this.pos + t[0].length, n;
  return !Mr.test(this.input.slice(this.pos, e)) && this.input.slice(e, e + 8) === "function" && (e + 8 === this.input.length || !(ma(n = this.input.charCodeAt(e + 8)) || n > 55295 && n < 56320));
};
Me.parseStatement = function(t, e, n) {
  var r = this.type, i = this.startNode(), s;
  switch (this.isLet(t) && (r = F._var, s = "let"), r) {
    case F._break:
    case F._continue:
      return this.parseBreakContinueStatement(i, r.keyword);
    case F._debugger:
      return this.parseDebuggerStatement(i);
    case F._do:
      return this.parseDoStatement(i);
    case F._for:
      return this.parseForStatement(i);
    case F._function:
      return t && (this.strict || t !== "if" && t !== "label") && this.options.ecmaVersion >= 6 && this.unexpected(), this.parseFunctionStatement(i, !1, !t);
    case F._class:
      return t && this.unexpected(), this.parseClass(i, !0);
    case F._if:
      return this.parseIfStatement(i);
    case F._return:
      return this.parseReturnStatement(i);
    case F._switch:
      return this.parseSwitchStatement(i);
    case F._throw:
      return this.parseThrowStatement(i);
    case F._try:
      return this.parseTryStatement(i);
    case F._const:
    case F._var:
      return s = s || this.value, t && s !== "var" && this.unexpected(), this.parseVarStatement(i, s);
    case F._while:
      return this.parseWhileStatement(i);
    case F._with:
      return this.parseWithStatement(i);
    case F.braceL:
      return this.parseBlock(!0, i);
    case F.semi:
      return this.parseEmptyStatement(i);
    case F._export:
    case F._import:
      if (this.options.ecmaVersion > 10 && r === F._import) {
        vr.lastIndex = this.pos;
        var a = vr.exec(this.input), o = this.pos + a[0].length, l = this.input.charCodeAt(o);
        if (l === 40 || l === 46)
          return this.parseExpressionStatement(i, this.parseExpression());
      }
      return this.options.allowImportExportEverywhere || (e || this.raise(this.start, "'import' and 'export' may only appear at the top level"), this.inModule || this.raise(this.start, "'import' and 'export' may appear only with 'sourceType: module'")), r === F._import ? this.parseImport(i) : this.parseExport(i, n);
    // If the statement does not start with a statement keyword or a
    // brace, it's an ExpressionStatement or LabeledStatement. We
    // simply start parsing an expression, and afterwards, if the
    // next token is a colon and the expression was a simple
    // Identifier node, we switch to interpreting it as a label.
    default:
      if (this.isAsyncFunction())
        return t && this.unexpected(), this.next(), this.parseFunctionStatement(i, !0, !t);
      var c = this.value, h = this.parseExpression();
      return r === F.name && h.type === "Identifier" && this.eat(F.colon) ? this.parseLabeledStatement(i, c, h, t) : this.parseExpressionStatement(i, h);
  }
};
Me.parseBreakContinueStatement = function(t, e) {
  var n = e === "break";
  this.next(), this.eat(F.semi) || this.insertSemicolon() ? t.label = null : this.type !== F.name ? this.unexpected() : (t.label = this.parseIdent(), this.semicolon());
  for (var r = 0; r < this.labels.length; ++r) {
    var i = this.labels[r];
    if ((t.label == null || i.name === t.label.name) && (i.kind != null && (n || i.kind === "loop") || t.label && n))
      break;
  }
  return r === this.labels.length && this.raise(t.start, "Unsyntactic " + e), this.finishNode(t, n ? "BreakStatement" : "ContinueStatement");
};
Me.parseDebuggerStatement = function(t) {
  return this.next(), this.semicolon(), this.finishNode(t, "DebuggerStatement");
};
Me.parseDoStatement = function(t) {
  return this.next(), this.labels.push(kd), t.body = this.parseStatement("do"), this.labels.pop(), this.expect(F._while), t.test = this.parseParenExpression(), this.options.ecmaVersion >= 6 ? this.eat(F.semi) : this.semicolon(), this.finishNode(t, "DoWhileStatement");
};
Me.parseForStatement = function(t) {
  this.next();
  var e = this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual("await") ? this.lastTokStart : -1;
  if (this.labels.push(kd), this.enterScope(0), this.expect(F.parenL), this.type === F.semi)
    return e > -1 && this.unexpected(e), this.parseFor(t, null);
  var n = this.isLet();
  if (this.type === F._var || this.type === F._const || n) {
    var r = this.startNode(), i = n ? "let" : this.value;
    return this.next(), this.parseVar(r, !0, i), this.finishNode(r, "VariableDeclaration"), (this.type === F._in || this.options.ecmaVersion >= 6 && this.isContextual("of")) && r.declarations.length === 1 ? (this.options.ecmaVersion >= 9 && (this.type === F._in ? e > -1 && this.unexpected(e) : t.await = e > -1), this.parseForIn(t, r)) : (e > -1 && this.unexpected(e), this.parseFor(t, r));
  }
  var s = this.isContextual("let"), a = !1, o = this.containsEsc, l = new xc(), c = this.start, h = e > -1 ? this.parseExprSubscripts(l, "await") : this.parseExpression(!0, l);
  return this.type === F._in || (a = this.options.ecmaVersion >= 6 && this.isContextual("of")) ? (e > -1 ? (this.type === F._in && this.unexpected(e), t.await = !0) : a && this.options.ecmaVersion >= 8 && (h.start === c && !o && h.type === "Identifier" && h.name === "async" ? this.unexpected() : this.options.ecmaVersion >= 9 && (t.await = !1)), s && a && this.raise(h.start, "The left-hand side of a for-of loop may not start with 'let'."), this.toAssignable(h, !1, l), this.checkLValPattern(h), this.parseForIn(t, h)) : (this.checkExpressionErrors(l, !0), e > -1 && this.unexpected(e), this.parseFor(t, h));
};
Me.parseFunctionStatement = function(t, e, n) {
  return this.next(), this.parseFunction(t, ho | (n ? 0 : kp), !1, e);
};
Me.parseIfStatement = function(t) {
  return this.next(), t.test = this.parseParenExpression(), t.consequent = this.parseStatement("if"), t.alternate = this.eat(F._else) ? this.parseStatement("if") : null, this.finishNode(t, "IfStatement");
};
Me.parseReturnStatement = function(t) {
  return !this.inFunction && !this.options.allowReturnOutsideFunction && this.raise(this.start, "'return' outside of function"), this.next(), this.eat(F.semi) || this.insertSemicolon() ? t.argument = null : (t.argument = this.parseExpression(), this.semicolon()), this.finishNode(t, "ReturnStatement");
};
Me.parseSwitchStatement = function(t) {
  this.next(), t.discriminant = this.parseParenExpression(), t.cases = [], this.expect(F.braceL), this.labels.push(lB), this.enterScope(0);
  for (var e, n = !1; this.type !== F.braceR; )
    if (this.type === F._case || this.type === F._default) {
      var r = this.type === F._case;
      e && this.finishNode(e, "SwitchCase"), t.cases.push(e = this.startNode()), e.consequent = [], this.next(), r ? e.test = this.parseExpression() : (n && this.raiseRecoverable(this.lastTokStart, "Multiple default clauses"), n = !0, e.test = null), this.expect(F.colon);
    } else
      e || this.unexpected(), e.consequent.push(this.parseStatement(null));
  return this.exitScope(), e && this.finishNode(e, "SwitchCase"), this.next(), this.labels.pop(), this.finishNode(t, "SwitchStatement");
};
Me.parseThrowStatement = function(t) {
  return this.next(), Mr.test(this.input.slice(this.lastTokEnd, this.start)) && this.raise(this.lastTokEnd, "Illegal newline after throw"), t.argument = this.parseExpression(), this.semicolon(), this.finishNode(t, "ThrowStatement");
};
var uB = [];
Me.parseCatchClauseParam = function() {
  var t = this.parseBindingAtom(), e = t.type === "Identifier";
  return this.enterScope(e ? Yk : 0), this.checkLValPattern(t, e ? e2 : ji), this.expect(F.parenR), t;
};
Me.parseTryStatement = function(t) {
  if (this.next(), t.block = this.parseBlock(), t.handler = null, this.type === F._catch) {
    var e = this.startNode();
    this.next(), this.eat(F.parenL) ? e.param = this.parseCatchClauseParam() : (this.options.ecmaVersion < 10 && this.unexpected(), e.param = null, this.enterScope(0)), e.body = this.parseBlock(!1), this.exitScope(), t.handler = this.finishNode(e, "CatchClause");
  }
  return t.finalizer = this.eat(F._finally) ? this.parseBlock() : null, !t.handler && !t.finalizer && this.raise(t.start, "Missing catch or finally clause"), this.finishNode(t, "TryStatement");
};
Me.parseVarStatement = function(t, e, n) {
  return this.next(), this.parseVar(t, !1, e, n), this.semicolon(), this.finishNode(t, "VariableDeclaration");
};
Me.parseWhileStatement = function(t) {
  return this.next(), t.test = this.parseParenExpression(), this.labels.push(kd), t.body = this.parseStatement("while"), this.labels.pop(), this.finishNode(t, "WhileStatement");
};
Me.parseWithStatement = function(t) {
  return this.strict && this.raise(this.start, "'with' in strict mode"), this.next(), t.object = this.parseParenExpression(), t.body = this.parseStatement("with"), this.finishNode(t, "WithStatement");
};
Me.parseEmptyStatement = function(t) {
  return this.next(), this.finishNode(t, "EmptyStatement");
};
Me.parseLabeledStatement = function(t, e, n, r) {
  for (var i = 0, s = this.labels; i < s.length; i += 1) {
    var a = s[i];
    a.name === e && this.raise(n.start, "Label '" + e + "' is already declared");
  }
  for (var o = this.type.isLoop ? "loop" : this.type === F._switch ? "switch" : null, l = this.labels.length - 1; l >= 0; l--) {
    var c = this.labels[l];
    if (c.statementStart === t.start)
      c.statementStart = this.start, c.kind = o;
    else
      break;
  }
  return this.labels.push({ name: e, kind: o, statementStart: this.start }), t.body = this.parseStatement(r ? r.indexOf("label") === -1 ? r + "label" : r : "label"), this.labels.pop(), t.label = n, this.finishNode(t, "LabeledStatement");
};
Me.parseExpressionStatement = function(t, e) {
  return t.expression = e, this.semicolon(), this.finishNode(t, "ExpressionStatement");
};
Me.parseBlock = function(t, e, n) {
  for (t === void 0 && (t = !0), e === void 0 && (e = this.startNode()), e.body = [], this.expect(F.braceL), t && this.enterScope(0); this.type !== F.braceR; ) {
    var r = this.parseStatement(null);
    e.body.push(r);
  }
  return n && (this.strict = !1), this.next(), t && this.exitScope(), this.finishNode(e, "BlockStatement");
};
Me.parseFor = function(t, e) {
  return t.init = e, this.expect(F.semi), t.test = this.type === F.semi ? null : this.parseExpression(), this.expect(F.semi), t.update = this.type === F.parenR ? null : this.parseExpression(), this.expect(F.parenR), t.body = this.parseStatement("for"), this.exitScope(), this.labels.pop(), this.finishNode(t, "ForStatement");
};
Me.parseForIn = function(t, e) {
  var n = this.type === F._in;
  return this.next(), e.type === "VariableDeclaration" && e.declarations[0].init != null && (!n || this.options.ecmaVersion < 8 || this.strict || e.kind !== "var" || e.declarations[0].id.type !== "Identifier") && this.raise(
    e.start,
    (n ? "for-in" : "for-of") + " loop variable declaration may not have an initializer"
  ), t.left = e, t.right = n ? this.parseExpression() : this.parseMaybeAssign(), this.expect(F.parenR), t.body = this.parseStatement("for"), this.exitScope(), this.labels.pop(), this.finishNode(t, n ? "ForInStatement" : "ForOfStatement");
};
Me.parseVar = function(t, e, n, r) {
  for (t.declarations = [], t.kind = n; ; ) {
    var i = this.startNode();
    if (this.parseVarId(i, n), this.eat(F.eq) ? i.init = this.parseMaybeAssign(e) : !r && n === "const" && !(this.type === F._in || this.options.ecmaVersion >= 6 && this.isContextual("of")) ? this.unexpected() : !r && i.id.type !== "Identifier" && !(e && (this.type === F._in || this.isContextual("of"))) ? this.raise(this.lastTokEnd, "Complex binding patterns require an initialization value") : i.init = null, t.declarations.push(this.finishNode(i, "VariableDeclarator")), !this.eat(F.comma))
      break;
  }
  return t;
};
Me.parseVarId = function(t, e) {
  t.id = this.parseBindingAtom(), this.checkLValPattern(t.id, e === "var" ? xd : ji, !1);
};
var ho = 1, kp = 2, n2 = 4;
Me.parseFunction = function(t, e, n, r, i) {
  this.initFunction(t), (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !r) && (this.type === F.star && e & kp && this.unexpected(), t.generator = this.eat(F.star)), this.options.ecmaVersion >= 8 && (t.async = !!r), e & ho && (t.id = e & n2 && this.type !== F.name ? null : this.parseIdent(), t.id && !(e & kp) && this.checkLValSimple(t.id, this.strict || t.generator || t.async ? this.treatFunctionsAsVar ? xd : ji : Jk));
  var s = this.yieldPos, a = this.awaitPos, o = this.awaitIdentPos;
  return this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, this.enterScope(vd(t.async, t.generator)), e & ho || (t.id = this.type === F.name ? this.parseIdent() : null), this.parseFunctionParams(t), this.parseFunctionBody(t, n, !1, i), this.yieldPos = s, this.awaitPos = a, this.awaitIdentPos = o, this.finishNode(t, e & ho ? "FunctionDeclaration" : "FunctionExpression");
};
Me.parseFunctionParams = function(t) {
  this.expect(F.parenL), t.params = this.parseBindingList(F.parenR, !1, this.options.ecmaVersion >= 8), this.checkYieldAwaitInDefaultParams();
};
Me.parseClass = function(t, e) {
  this.next();
  var n = this.strict;
  this.strict = !0, this.parseClassId(t, e), this.parseClassSuper(t);
  var r = this.enterClassBody(), i = this.startNode(), s = !1;
  for (i.body = [], this.expect(F.braceL); this.type !== F.braceR; ) {
    var a = this.parseClassElement(t.superClass !== null);
    a && (i.body.push(a), a.type === "MethodDefinition" && a.kind === "constructor" ? (s && this.raiseRecoverable(a.start, "Duplicate constructor in the same class"), s = !0) : a.key && a.key.type === "PrivateIdentifier" && cB(r, a) && this.raiseRecoverable(a.key.start, "Identifier '#" + a.key.name + "' has already been declared"));
  }
  return this.strict = n, this.next(), t.body = this.finishNode(i, "ClassBody"), this.exitClassBody(), this.finishNode(t, e ? "ClassDeclaration" : "ClassExpression");
};
Me.parseClassElement = function(t) {
  if (this.eat(F.semi))
    return null;
  var e = this.options.ecmaVersion, n = this.startNode(), r = "", i = !1, s = !1, a = "method", o = !1;
  if (this.eatContextual("static")) {
    if (e >= 13 && this.eat(F.braceL))
      return this.parseClassStaticBlock(n), n;
    this.isClassElementNameStart() || this.type === F.star ? o = !0 : r = "static";
  }
  if (n.static = o, !r && e >= 8 && this.eatContextual("async") && ((this.isClassElementNameStart() || this.type === F.star) && !this.canInsertSemicolon() ? s = !0 : r = "async"), !r && (e >= 9 || !s) && this.eat(F.star) && (i = !0), !r && !s && !i) {
    var l = this.value;
    (this.eatContextual("get") || this.eatContextual("set")) && (this.isClassElementNameStart() ? a = l : r = l);
  }
  if (r ? (n.computed = !1, n.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc), n.key.name = r, this.finishNode(n.key, "Identifier")) : this.parseClassElementName(n), e < 13 || this.type === F.parenL || a !== "method" || i || s) {
    var c = !n.static && mu(n, "constructor"), h = c && t;
    c && a !== "method" && this.raise(n.key.start, "Constructor can't have get/set modifier"), n.kind = c ? "constructor" : a, this.parseClassMethod(n, i, s, h);
  } else
    this.parseClassField(n);
  return n;
};
Me.isClassElementNameStart = function() {
  return this.type === F.name || this.type === F.privateId || this.type === F.num || this.type === F.string || this.type === F.bracketL || this.type.keyword;
};
Me.parseClassElementName = function(t) {
  this.type === F.privateId ? (this.value === "constructor" && this.raise(this.start, "Classes can't have an element named '#constructor'"), t.computed = !1, t.key = this.parsePrivateIdent()) : this.parsePropertyName(t);
};
Me.parseClassMethod = function(t, e, n, r) {
  var i = t.key;
  t.kind === "constructor" ? (e && this.raise(i.start, "Constructor can't be a generator"), n && this.raise(i.start, "Constructor can't be an async method")) : t.static && mu(t, "prototype") && this.raise(i.start, "Classes may not have a static property named prototype");
  var s = t.value = this.parseMethod(e, n, r);
  return t.kind === "get" && s.params.length !== 0 && this.raiseRecoverable(s.start, "getter should have no params"), t.kind === "set" && s.params.length !== 1 && this.raiseRecoverable(s.start, "setter should have exactly one param"), t.kind === "set" && s.params[0].type === "RestElement" && this.raiseRecoverable(s.params[0].start, "Setter cannot use rest params"), this.finishNode(t, "MethodDefinition");
};
Me.parseClassField = function(t) {
  if (mu(t, "constructor") ? this.raise(t.key.start, "Classes can't have a field named 'constructor'") : t.static && mu(t, "prototype") && this.raise(t.key.start, "Classes can't have a static field named 'prototype'"), this.eat(F.eq)) {
    var e = this.currentThisScope(), n = e.inClassFieldInit;
    e.inClassFieldInit = !0, t.value = this.parseMaybeAssign(), e.inClassFieldInit = n;
  } else
    t.value = null;
  return this.semicolon(), this.finishNode(t, "PropertyDefinition");
};
Me.parseClassStaticBlock = function(t) {
  t.body = [];
  var e = this.labels;
  for (this.labels = [], this.enterScope(Vo | yd); this.type !== F.braceR; ) {
    var n = this.parseStatement(null);
    t.body.push(n);
  }
  return this.next(), this.exitScope(), this.labels = e, this.finishNode(t, "StaticBlock");
};
Me.parseClassId = function(t, e) {
  this.type === F.name ? (t.id = this.parseIdent(), e && this.checkLValSimple(t.id, ji, !1)) : (e === !0 && this.unexpected(), t.id = null);
};
Me.parseClassSuper = function(t) {
  t.superClass = this.eat(F._extends) ? this.parseExprSubscripts(null, !1) : null;
};
Me.enterClassBody = function() {
  var t = { declared: /* @__PURE__ */ Object.create(null), used: [] };
  return this.privateNameStack.push(t), t.declared;
};
Me.exitClassBody = function() {
  var t = this.privateNameStack.pop(), e = t.declared, n = t.used;
  if (this.options.checkPrivateFields)
    for (var r = this.privateNameStack.length, i = r === 0 ? null : this.privateNameStack[r - 1], s = 0; s < n.length; ++s) {
      var a = n[s];
      Ma(e, a.name) || (i ? i.used.push(a) : this.raiseRecoverable(a.start, "Private field '#" + a.name + "' must be declared in an enclosing class"));
    }
};
function cB(t, e) {
  var n = e.key.name, r = t[n], i = "true";
  return e.type === "MethodDefinition" && (e.kind === "get" || e.kind === "set") && (i = (e.static ? "s" : "i") + e.kind), r === "iget" && i === "iset" || r === "iset" && i === "iget" || r === "sget" && i === "sset" || r === "sset" && i === "sget" ? (t[n] = "true", !1) : r ? !0 : (t[n] = i, !1);
}
function mu(t, e) {
  var n = t.computed, r = t.key;
  return !n && (r.type === "Identifier" && r.name === e || r.type === "Literal" && r.value === e);
}
Me.parseExportAllDeclaration = function(t, e) {
  return this.options.ecmaVersion >= 11 && (this.eatContextual("as") ? (t.exported = this.parseModuleExportName(), this.checkExport(e, t.exported, this.lastTokStart)) : t.exported = null), this.expectContextual("from"), this.type !== F.string && this.unexpected(), t.source = this.parseExprAtom(), this.options.ecmaVersion >= 16 && (t.attributes = this.parseWithClause()), this.semicolon(), this.finishNode(t, "ExportAllDeclaration");
};
Me.parseExport = function(t, e) {
  if (this.next(), this.eat(F.star))
    return this.parseExportAllDeclaration(t, e);
  if (this.eat(F._default))
    return this.checkExport(e, "default", this.lastTokStart), t.declaration = this.parseExportDefaultDeclaration(), this.finishNode(t, "ExportDefaultDeclaration");
  if (this.shouldParseExportStatement())
    t.declaration = this.parseExportDeclaration(t), t.declaration.type === "VariableDeclaration" ? this.checkVariableExport(e, t.declaration.declarations) : this.checkExport(e, t.declaration.id, t.declaration.id.start), t.specifiers = [], t.source = null;
  else {
    if (t.declaration = null, t.specifiers = this.parseExportSpecifiers(e), this.eatContextual("from"))
      this.type !== F.string && this.unexpected(), t.source = this.parseExprAtom(), this.options.ecmaVersion >= 16 && (t.attributes = this.parseWithClause());
    else {
      for (var n = 0, r = t.specifiers; n < r.length; n += 1) {
        var i = r[n];
        this.checkUnreserved(i.local), this.checkLocalExport(i.local), i.local.type === "Literal" && this.raise(i.local.start, "A string literal cannot be used as an exported binding without `from`.");
      }
      t.source = null;
    }
    this.semicolon();
  }
  return this.finishNode(t, "ExportNamedDeclaration");
};
Me.parseExportDeclaration = function(t) {
  return this.parseStatement(null);
};
Me.parseExportDefaultDeclaration = function() {
  var t;
  if (this.type === F._function || (t = this.isAsyncFunction())) {
    var e = this.startNode();
    return this.next(), t && this.next(), this.parseFunction(e, ho | n2, !1, t);
  } else if (this.type === F._class) {
    var n = this.startNode();
    return this.parseClass(n, "nullableID");
  } else {
    var r = this.parseMaybeAssign();
    return this.semicolon(), r;
  }
};
Me.checkExport = function(t, e, n) {
  t && (typeof e != "string" && (e = e.type === "Identifier" ? e.name : e.value), Ma(t, e) && this.raiseRecoverable(n, "Duplicate export '" + e + "'"), t[e] = !0);
};
Me.checkPatternExport = function(t, e) {
  var n = e.type;
  if (n === "Identifier")
    this.checkExport(t, e, e.start);
  else if (n === "ObjectPattern")
    for (var r = 0, i = e.properties; r < i.length; r += 1) {
      var s = i[r];
      this.checkPatternExport(t, s);
    }
  else if (n === "ArrayPattern")
    for (var a = 0, o = e.elements; a < o.length; a += 1) {
      var l = o[a];
      l && this.checkPatternExport(t, l);
    }
  else n === "Property" ? this.checkPatternExport(t, e.value) : n === "AssignmentPattern" ? this.checkPatternExport(t, e.left) : n === "RestElement" && this.checkPatternExport(t, e.argument);
};
Me.checkVariableExport = function(t, e) {
  if (t)
    for (var n = 0, r = e; n < r.length; n += 1) {
      var i = r[n];
      this.checkPatternExport(t, i.id);
    }
};
Me.shouldParseExportStatement = function() {
  return this.type.keyword === "var" || this.type.keyword === "const" || this.type.keyword === "class" || this.type.keyword === "function" || this.isLet() || this.isAsyncFunction();
};
Me.parseExportSpecifier = function(t) {
  var e = this.startNode();
  return e.local = this.parseModuleExportName(), e.exported = this.eatContextual("as") ? this.parseModuleExportName() : e.local, this.checkExport(
    t,
    e.exported,
    e.exported.start
  ), this.finishNode(e, "ExportSpecifier");
};
Me.parseExportSpecifiers = function(t) {
  var e = [], n = !0;
  for (this.expect(F.braceL); !this.eat(F.braceR); ) {
    if (n)
      n = !1;
    else if (this.expect(F.comma), this.afterTrailingComma(F.braceR))
      break;
    e.push(this.parseExportSpecifier(t));
  }
  return e;
};
Me.parseImport = function(t) {
  return this.next(), this.type === F.string ? (t.specifiers = uB, t.source = this.parseExprAtom()) : (t.specifiers = this.parseImportSpecifiers(), this.expectContextual("from"), t.source = this.type === F.string ? this.parseExprAtom() : this.unexpected()), this.options.ecmaVersion >= 16 && (t.attributes = this.parseWithClause()), this.semicolon(), this.finishNode(t, "ImportDeclaration");
};
Me.parseImportSpecifier = function() {
  var t = this.startNode();
  return t.imported = this.parseModuleExportName(), this.eatContextual("as") ? t.local = this.parseIdent() : (this.checkUnreserved(t.imported), t.local = t.imported), this.checkLValSimple(t.local, ji), this.finishNode(t, "ImportSpecifier");
};
Me.parseImportDefaultSpecifier = function() {
  var t = this.startNode();
  return t.local = this.parseIdent(), this.checkLValSimple(t.local, ji), this.finishNode(t, "ImportDefaultSpecifier");
};
Me.parseImportNamespaceSpecifier = function() {
  var t = this.startNode();
  return this.next(), this.expectContextual("as"), t.local = this.parseIdent(), this.checkLValSimple(t.local, ji), this.finishNode(t, "ImportNamespaceSpecifier");
};
Me.parseImportSpecifiers = function() {
  var t = [], e = !0;
  if (this.type === F.name && (t.push(this.parseImportDefaultSpecifier()), !this.eat(F.comma)))
    return t;
  if (this.type === F.star)
    return t.push(this.parseImportNamespaceSpecifier()), t;
  for (this.expect(F.braceL); !this.eat(F.braceR); ) {
    if (e)
      e = !1;
    else if (this.expect(F.comma), this.afterTrailingComma(F.braceR))
      break;
    t.push(this.parseImportSpecifier());
  }
  return t;
};
Me.parseWithClause = function() {
  var t = [];
  if (!this.eat(F._with))
    return t;
  this.expect(F.braceL);
  for (var e = {}, n = !0; !this.eat(F.braceR); ) {
    if (n)
      n = !1;
    else if (this.expect(F.comma), this.afterTrailingComma(F.braceR))
      break;
    var r = this.parseImportAttribute(), i = r.key.type === "Identifier" ? r.key.name : r.key.value;
    Ma(e, i) && this.raiseRecoverable(r.key.start, "Duplicate attribute key '" + i + "'"), e[i] = !0, t.push(r);
  }
  return t;
};
Me.parseImportAttribute = function() {
  var t = this.startNode();
  return t.key = this.type === F.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== "never"), this.expect(F.colon), this.type !== F.string && this.unexpected(), t.value = this.parseExprAtom(), this.finishNode(t, "ImportAttribute");
};
Me.parseModuleExportName = function() {
  if (this.options.ecmaVersion >= 13 && this.type === F.string) {
    var t = this.parseLiteral(this.value);
    return iB.test(t.value) && this.raise(t.start, "An export name cannot include a lone surrogate."), t;
  }
  return this.parseIdent(!0);
};
Me.adaptDirectivePrologue = function(t) {
  for (var e = 0; e < t.length && this.isDirectiveCandidate(t[e]); ++e)
    t[e].directive = t[e].expression.raw.slice(1, -1);
};
Me.isDirectiveCandidate = function(t) {
  return this.options.ecmaVersion >= 5 && t.type === "ExpressionStatement" && t.expression.type === "Literal" && typeof t.expression.value == "string" && // Reject parenthesized strings.
  (this.input[t.start] === '"' || this.input[t.start] === "'");
};
var Qr = pn.prototype;
Qr.toAssignable = function(t, e, n) {
  if (this.options.ecmaVersion >= 6 && t)
    switch (t.type) {
      case "Identifier":
        this.inAsync && t.name === "await" && this.raise(t.start, "Cannot use 'await' as identifier inside an async function");
        break;
      case "ObjectPattern":
      case "ArrayPattern":
      case "AssignmentPattern":
      case "RestElement":
        break;
      case "ObjectExpression":
        t.type = "ObjectPattern", n && this.checkPatternErrors(n, !0);
        for (var r = 0, i = t.properties; r < i.length; r += 1) {
          var s = i[r];
          this.toAssignable(s, e), s.type === "RestElement" && (s.argument.type === "ArrayPattern" || s.argument.type === "ObjectPattern") && this.raise(s.argument.start, "Unexpected token");
        }
        break;
      case "Property":
        t.kind !== "init" && this.raise(t.key.start, "Object pattern can't contain getter or setter"), this.toAssignable(t.value, e);
        break;
      case "ArrayExpression":
        t.type = "ArrayPattern", n && this.checkPatternErrors(n, !0), this.toAssignableList(t.elements, e);
        break;
      case "SpreadElement":
        t.type = "RestElement", this.toAssignable(t.argument, e), t.argument.type === "AssignmentPattern" && this.raise(t.argument.start, "Rest elements cannot have a default value");
        break;
      case "AssignmentExpression":
        t.operator !== "=" && this.raise(t.left.end, "Only '=' operator can be used for specifying default value."), t.type = "AssignmentPattern", delete t.operator, this.toAssignable(t.left, e);
        break;
      case "ParenthesizedExpression":
        this.toAssignable(t.expression, e, n);
        break;
      case "ChainExpression":
        this.raiseRecoverable(t.start, "Optional chaining cannot appear in left-hand side");
        break;
      case "MemberExpression":
        if (!e)
          break;
      default:
        this.raise(t.start, "Assigning to rvalue");
    }
  else n && this.checkPatternErrors(n, !0);
  return t;
};
Qr.toAssignableList = function(t, e) {
  for (var n = t.length, r = 0; r < n; r++) {
    var i = t[r];
    i && this.toAssignable(i, e);
  }
  if (n) {
    var s = t[n - 1];
    this.options.ecmaVersion === 6 && e && s && s.type === "RestElement" && s.argument.type !== "Identifier" && this.unexpected(s.argument.start);
  }
  return t;
};
Qr.parseSpread = function(t) {
  var e = this.startNode();
  return this.next(), e.argument = this.parseMaybeAssign(!1, t), this.finishNode(e, "SpreadElement");
};
Qr.parseRestBinding = function() {
  var t = this.startNode();
  return this.next(), this.options.ecmaVersion === 6 && this.type !== F.name && this.unexpected(), t.argument = this.parseBindingAtom(), this.finishNode(t, "RestElement");
};
Qr.parseBindingAtom = function() {
  if (this.options.ecmaVersion >= 6)
    switch (this.type) {
      case F.bracketL:
        var t = this.startNode();
        return this.next(), t.elements = this.parseBindingList(F.bracketR, !0, !0), this.finishNode(t, "ArrayPattern");
      case F.braceL:
        return this.parseObj(!0);
    }
  return this.parseIdent();
};
Qr.parseBindingList = function(t, e, n, r) {
  for (var i = [], s = !0; !this.eat(t); )
    if (s ? s = !1 : this.expect(F.comma), e && this.type === F.comma)
      i.push(null);
    else {
      if (n && this.afterTrailingComma(t))
        break;
      if (this.type === F.ellipsis) {
        var a = this.parseRestBinding();
        this.parseBindingListItem(a), i.push(a), this.type === F.comma && this.raiseRecoverable(this.start, "Comma is not permitted after the rest element"), this.expect(t);
        break;
      } else
        i.push(this.parseAssignableListItem(r));
    }
  return i;
};
Qr.parseAssignableListItem = function(t) {
  var e = this.parseMaybeDefault(this.start, this.startLoc);
  return this.parseBindingListItem(e), e;
};
Qr.parseBindingListItem = function(t) {
  return t;
};
Qr.parseMaybeDefault = function(t, e, n) {
  if (n = n || this.parseBindingAtom(), this.options.ecmaVersion < 6 || !this.eat(F.eq))
    return n;
  var r = this.startNodeAt(t, e);
  return r.left = n, r.right = this.parseMaybeAssign(), this.finishNode(r, "AssignmentPattern");
};
Qr.checkLValSimple = function(t, e, n) {
  e === void 0 && (e = du);
  var r = e !== du;
  switch (t.type) {
    case "Identifier":
      this.strict && this.reservedWordsStrictBind.test(t.name) && this.raiseRecoverable(t.start, (r ? "Binding " : "Assigning to ") + t.name + " in strict mode"), r && (e === ji && t.name === "let" && this.raiseRecoverable(t.start, "let is disallowed as a lexically bound name"), n && (Ma(n, t.name) && this.raiseRecoverable(t.start, "Argument name clash"), n[t.name] = !0), e !== t2 && this.declareName(t.name, e, t.start));
      break;
    case "ChainExpression":
      this.raiseRecoverable(t.start, "Optional chaining cannot appear in left-hand side");
      break;
    case "MemberExpression":
      r && this.raiseRecoverable(t.start, "Binding member expression");
      break;
    case "ParenthesizedExpression":
      return r && this.raiseRecoverable(t.start, "Binding parenthesized expression"), this.checkLValSimple(t.expression, e, n);
    default:
      this.raise(t.start, (r ? "Binding" : "Assigning to") + " rvalue");
  }
};
Qr.checkLValPattern = function(t, e, n) {
  switch (e === void 0 && (e = du), t.type) {
    case "ObjectPattern":
      for (var r = 0, i = t.properties; r < i.length; r += 1) {
        var s = i[r];
        this.checkLValInnerPattern(s, e, n);
      }
      break;
    case "ArrayPattern":
      for (var a = 0, o = t.elements; a < o.length; a += 1) {
        var l = o[a];
        l && this.checkLValInnerPattern(l, e, n);
      }
      break;
    default:
      this.checkLValSimple(t, e, n);
  }
};
Qr.checkLValInnerPattern = function(t, e, n) {
  switch (e === void 0 && (e = du), t.type) {
    case "Property":
      this.checkLValInnerPattern(t.value, e, n);
      break;
    case "AssignmentPattern":
      this.checkLValPattern(t.left, e, n);
      break;
    case "RestElement":
      this.checkLValPattern(t.argument, e, n);
      break;
    default:
      this.checkLValPattern(t, e, n);
  }
};
var Nr = function(e, n, r, i, s) {
  this.token = e, this.isExpr = !!n, this.preserveSpace = !!r, this.override = i, this.generator = !!s;
}, It = {
  b_stat: new Nr("{", !1),
  b_expr: new Nr("{", !0),
  b_tmpl: new Nr("${", !1),
  p_stat: new Nr("(", !1),
  p_expr: new Nr("(", !0),
  q_tmpl: new Nr("`", !0, !0, function(t) {
    return t.tryReadTemplateToken();
  }),
  f_stat: new Nr("function", !1),
  f_expr: new Nr("function", !0),
  f_expr_gen: new Nr("function", !0, !1, null, !0),
  f_gen: new Nr("function", !1, !1, null, !0)
}, Ta = pn.prototype;
Ta.initialContext = function() {
  return [It.b_stat];
};
Ta.curContext = function() {
  return this.context[this.context.length - 1];
};
Ta.braceIsBlock = function(t) {
  var e = this.curContext();
  return e === It.f_expr || e === It.f_stat ? !0 : t === F.colon && (e === It.b_stat || e === It.b_expr) ? !e.isExpr : t === F._return || t === F.name && this.exprAllowed ? Mr.test(this.input.slice(this.lastTokEnd, this.start)) : t === F._else || t === F.semi || t === F.eof || t === F.parenR || t === F.arrow ? !0 : t === F.braceL ? e === It.b_stat : t === F._var || t === F._const || t === F.name ? !1 : !this.exprAllowed;
};
Ta.inGeneratorContext = function() {
  for (var t = this.context.length - 1; t >= 1; t--) {
    var e = this.context[t];
    if (e.token === "function")
      return e.generator;
  }
  return !1;
};
Ta.updateContext = function(t) {
  var e, n = this.type;
  n.keyword && t === F.dot ? this.exprAllowed = !1 : (e = n.updateContext) ? e.call(this, t) : this.exprAllowed = n.beforeExpr;
};
Ta.overrideContext = function(t) {
  this.curContext() !== t && (this.context[this.context.length - 1] = t);
};
F.parenR.updateContext = F.braceR.updateContext = function() {
  if (this.context.length === 1) {
    this.exprAllowed = !0;
    return;
  }
  var t = this.context.pop();
  t === It.b_stat && this.curContext().token === "function" && (t = this.context.pop()), this.exprAllowed = !t.isExpr;
};
F.braceL.updateContext = function(t) {
  this.context.push(this.braceIsBlock(t) ? It.b_stat : It.b_expr), this.exprAllowed = !0;
};
F.dollarBraceL.updateContext = function() {
  this.context.push(It.b_tmpl), this.exprAllowed = !0;
};
F.parenL.updateContext = function(t) {
  var e = t === F._if || t === F._for || t === F._with || t === F._while;
  this.context.push(e ? It.p_stat : It.p_expr), this.exprAllowed = !0;
};
F.incDec.updateContext = function() {
};
F._function.updateContext = F._class.updateContext = function(t) {
  t.beforeExpr && t !== F._else && !(t === F.semi && this.curContext() !== It.p_stat) && !(t === F._return && Mr.test(this.input.slice(this.lastTokEnd, this.start))) && !((t === F.colon || t === F.braceL) && this.curContext() === It.b_stat) ? this.context.push(It.f_expr) : this.context.push(It.f_stat), this.exprAllowed = !1;
};
F.colon.updateContext = function() {
  this.curContext().token === "function" && this.context.pop(), this.exprAllowed = !0;
};
F.backQuote.updateContext = function() {
  this.curContext() === It.q_tmpl ? this.context.pop() : this.context.push(It.q_tmpl), this.exprAllowed = !1;
};
F.star.updateContext = function(t) {
  if (t === F._function) {
    var e = this.context.length - 1;
    this.context[e] === It.f_expr ? this.context[e] = It.f_expr_gen : this.context[e] = It.f_gen;
  }
  this.exprAllowed = !0;
};
F.name.updateContext = function(t) {
  var e = !1;
  this.options.ecmaVersion >= 6 && t !== F.dot && (this.value === "of" && !this.exprAllowed || this.value === "yield" && this.inGeneratorContext()) && (e = !0), this.exprAllowed = e;
};
var qe = pn.prototype;
qe.checkPropClash = function(t, e, n) {
  if (!(this.options.ecmaVersion >= 9 && t.type === "SpreadElement") && !(this.options.ecmaVersion >= 6 && (t.computed || t.method || t.shorthand))) {
    var r = t.key, i;
    switch (r.type) {
      case "Identifier":
        i = r.name;
        break;
      case "Literal":
        i = String(r.value);
        break;
      default:
        return;
    }
    var s = t.kind;
    if (this.options.ecmaVersion >= 6) {
      i === "__proto__" && s === "init" && (e.proto && (n ? n.doubleProto < 0 && (n.doubleProto = r.start) : this.raiseRecoverable(r.start, "Redefinition of __proto__ property")), e.proto = !0);
      return;
    }
    i = "$" + i;
    var a = e[i];
    if (a) {
      var o;
      s === "init" ? o = this.strict && a.init || a.get || a.set : o = a.init || a[s], o && this.raiseRecoverable(r.start, "Redefinition of property");
    } else
      a = e[i] = {
        init: !1,
        get: !1,
        set: !1
      };
    a[s] = !0;
  }
};
qe.parseExpression = function(t, e) {
  var n = this.start, r = this.startLoc, i = this.parseMaybeAssign(t, e);
  if (this.type === F.comma) {
    var s = this.startNodeAt(n, r);
    for (s.expressions = [i]; this.eat(F.comma); )
      s.expressions.push(this.parseMaybeAssign(t, e));
    return this.finishNode(s, "SequenceExpression");
  }
  return i;
};
qe.parseMaybeAssign = function(t, e, n) {
  if (this.isContextual("yield")) {
    if (this.inGenerator)
      return this.parseYield(t);
    this.exprAllowed = !1;
  }
  var r = !1, i = -1, s = -1, a = -1;
  e ? (i = e.parenthesizedAssign, s = e.trailingComma, a = e.doubleProto, e.parenthesizedAssign = e.trailingComma = -1) : (e = new xc(), r = !0);
  var o = this.start, l = this.startLoc;
  (this.type === F.parenL || this.type === F.name) && (this.potentialArrowAt = this.start, this.potentialArrowInForAwait = t === "await");
  var c = this.parseMaybeConditional(t, e);
  if (n && (c = n.call(this, c, o, l)), this.type.isAssign) {
    var h = this.startNodeAt(o, l);
    return h.operator = this.value, this.type === F.eq && (c = this.toAssignable(c, !1, e)), r || (e.parenthesizedAssign = e.trailingComma = e.doubleProto = -1), e.shorthandAssign >= c.start && (e.shorthandAssign = -1), this.type === F.eq ? this.checkLValPattern(c) : this.checkLValSimple(c), h.left = c, this.next(), h.right = this.parseMaybeAssign(t), a > -1 && (e.doubleProto = a), this.finishNode(h, "AssignmentExpression");
  } else
    r && this.checkExpressionErrors(e, !0);
  return i > -1 && (e.parenthesizedAssign = i), s > -1 && (e.trailingComma = s), c;
};
qe.parseMaybeConditional = function(t, e) {
  var n = this.start, r = this.startLoc, i = this.parseExprOps(t, e);
  if (this.checkExpressionErrors(e))
    return i;
  if (this.eat(F.question)) {
    var s = this.startNodeAt(n, r);
    return s.test = i, s.consequent = this.parseMaybeAssign(), this.expect(F.colon), s.alternate = this.parseMaybeAssign(t), this.finishNode(s, "ConditionalExpression");
  }
  return i;
};
qe.parseExprOps = function(t, e) {
  var n = this.start, r = this.startLoc, i = this.parseMaybeUnary(e, !1, !1, t);
  return this.checkExpressionErrors(e) || i.start === n && i.type === "ArrowFunctionExpression" ? i : this.parseExprOp(i, n, r, -1, t);
};
qe.parseExprOp = function(t, e, n, r, i) {
  var s = this.type.binop;
  if (s != null && (!i || this.type !== F._in) && s > r) {
    var a = this.type === F.logicalOR || this.type === F.logicalAND, o = this.type === F.coalesce;
    o && (s = F.logicalAND.binop);
    var l = this.value;
    this.next();
    var c = this.start, h = this.startLoc, f = this.parseExprOp(this.parseMaybeUnary(null, !1, !1, i), c, h, s, i), m = this.buildBinary(e, n, t, f, l, a || o);
    return (a && this.type === F.coalesce || o && (this.type === F.logicalOR || this.type === F.logicalAND)) && this.raiseRecoverable(this.start, "Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses"), this.parseExprOp(m, e, n, r, i);
  }
  return t;
};
qe.buildBinary = function(t, e, n, r, i, s) {
  r.type === "PrivateIdentifier" && this.raise(r.start, "Private identifier can only be left side of binary expression");
  var a = this.startNodeAt(t, e);
  return a.left = n, a.operator = i, a.right = r, this.finishNode(a, s ? "LogicalExpression" : "BinaryExpression");
};
qe.parseMaybeUnary = function(t, e, n, r) {
  var i = this.start, s = this.startLoc, a;
  if (this.isContextual("await") && this.canAwait)
    a = this.parseAwait(r), e = !0;
  else if (this.type.prefix) {
    var o = this.startNode(), l = this.type === F.incDec;
    o.operator = this.value, o.prefix = !0, this.next(), o.argument = this.parseMaybeUnary(null, !0, l, r), this.checkExpressionErrors(t, !0), l ? this.checkLValSimple(o.argument) : this.strict && o.operator === "delete" && r2(o.argument) ? this.raiseRecoverable(o.start, "Deleting local variable in strict mode") : o.operator === "delete" && wp(o.argument) ? this.raiseRecoverable(o.start, "Private fields can not be deleted") : e = !0, a = this.finishNode(o, l ? "UpdateExpression" : "UnaryExpression");
  } else if (!e && this.type === F.privateId)
    (r || this.privateNameStack.length === 0) && this.options.checkPrivateFields && this.unexpected(), a = this.parsePrivateIdent(), this.type !== F._in && this.unexpected();
  else {
    if (a = this.parseExprSubscripts(t, r), this.checkExpressionErrors(t))
      return a;
    for (; this.type.postfix && !this.canInsertSemicolon(); ) {
      var c = this.startNodeAt(i, s);
      c.operator = this.value, c.prefix = !1, c.argument = a, this.checkLValSimple(a), this.next(), a = this.finishNode(c, "UpdateExpression");
    }
  }
  if (!n && this.eat(F.starstar))
    if (e)
      this.unexpected(this.lastTokStart);
    else
      return this.buildBinary(i, s, a, this.parseMaybeUnary(null, !1, !1, r), "**", !1);
  else
    return a;
};
function r2(t) {
  return t.type === "Identifier" || t.type === "ParenthesizedExpression" && r2(t.expression);
}
function wp(t) {
  return t.type === "MemberExpression" && t.property.type === "PrivateIdentifier" || t.type === "ChainExpression" && wp(t.expression) || t.type === "ParenthesizedExpression" && wp(t.expression);
}
qe.parseExprSubscripts = function(t, e) {
  var n = this.start, r = this.startLoc, i = this.parseExprAtom(t, e);
  if (i.type === "ArrowFunctionExpression" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== ")")
    return i;
  var s = this.parseSubscripts(i, n, r, !1, e);
  return t && s.type === "MemberExpression" && (t.parenthesizedAssign >= s.start && (t.parenthesizedAssign = -1), t.parenthesizedBind >= s.start && (t.parenthesizedBind = -1), t.trailingComma >= s.start && (t.trailingComma = -1)), s;
};
qe.parseSubscripts = function(t, e, n, r, i) {
  for (var s = this.options.ecmaVersion >= 8 && t.type === "Identifier" && t.name === "async" && this.lastTokEnd === t.end && !this.canInsertSemicolon() && t.end - t.start === 5 && this.potentialArrowAt === t.start, a = !1; ; ) {
    var o = this.parseSubscript(t, e, n, r, s, a, i);
    if (o.optional && (a = !0), o === t || o.type === "ArrowFunctionExpression") {
      if (a) {
        var l = this.startNodeAt(e, n);
        l.expression = o, o = this.finishNode(l, "ChainExpression");
      }
      return o;
    }
    t = o;
  }
};
qe.shouldParseAsyncArrow = function() {
  return !this.canInsertSemicolon() && this.eat(F.arrow);
};
qe.parseSubscriptAsyncArrow = function(t, e, n, r) {
  return this.parseArrowExpression(this.startNodeAt(t, e), n, !0, r);
};
qe.parseSubscript = function(t, e, n, r, i, s, a) {
  var o = this.options.ecmaVersion >= 11, l = o && this.eat(F.questionDot);
  r && l && this.raise(this.lastTokStart, "Optional chaining cannot appear in the callee of new expressions");
  var c = this.eat(F.bracketL);
  if (c || l && this.type !== F.parenL && this.type !== F.backQuote || this.eat(F.dot)) {
    var h = this.startNodeAt(e, n);
    h.object = t, c ? (h.property = this.parseExpression(), this.expect(F.bracketR)) : this.type === F.privateId && t.type !== "Super" ? h.property = this.parsePrivateIdent() : h.property = this.parseIdent(this.options.allowReserved !== "never"), h.computed = !!c, o && (h.optional = l), t = this.finishNode(h, "MemberExpression");
  } else if (!r && this.eat(F.parenL)) {
    var f = new xc(), m = this.yieldPos, y = this.awaitPos, x = this.awaitIdentPos;
    this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0;
    var C = this.parseExprList(F.parenR, this.options.ecmaVersion >= 8, !1, f);
    if (i && !l && this.shouldParseAsyncArrow())
      return this.checkPatternErrors(f, !1), this.checkYieldAwaitInDefaultParams(), this.awaitIdentPos > 0 && this.raise(this.awaitIdentPos, "Cannot use 'await' as identifier inside an async function"), this.yieldPos = m, this.awaitPos = y, this.awaitIdentPos = x, this.parseSubscriptAsyncArrow(e, n, C, a);
    this.checkExpressionErrors(f, !0), this.yieldPos = m || this.yieldPos, this.awaitPos = y || this.awaitPos, this.awaitIdentPos = x || this.awaitIdentPos;
    var S = this.startNodeAt(e, n);
    S.callee = t, S.arguments = C, o && (S.optional = l), t = this.finishNode(S, "CallExpression");
  } else if (this.type === F.backQuote) {
    (l || s) && this.raise(this.start, "Optional chaining cannot appear in the tag of tagged template expressions");
    var M = this.startNodeAt(e, n);
    M.tag = t, M.quasi = this.parseTemplate({ isTagged: !0 }), t = this.finishNode(M, "TaggedTemplateExpression");
  }
  return t;
};
qe.parseExprAtom = function(t, e, n) {
  this.type === F.slash && this.readRegexp();
  var r, i = this.potentialArrowAt === this.start;
  switch (this.type) {
    case F._super:
      return this.allowSuper || this.raise(this.start, "'super' keyword outside a method"), r = this.startNode(), this.next(), this.type === F.parenL && !this.allowDirectSuper && this.raise(r.start, "super() call outside constructor of a subclass"), this.type !== F.dot && this.type !== F.bracketL && this.type !== F.parenL && this.unexpected(), this.finishNode(r, "Super");
    case F._this:
      return r = this.startNode(), this.next(), this.finishNode(r, "ThisExpression");
    case F.name:
      var s = this.start, a = this.startLoc, o = this.containsEsc, l = this.parseIdent(!1);
      if (this.options.ecmaVersion >= 8 && !o && l.name === "async" && !this.canInsertSemicolon() && this.eat(F._function))
        return this.overrideContext(It.f_expr), this.parseFunction(this.startNodeAt(s, a), 0, !1, !0, e);
      if (i && !this.canInsertSemicolon()) {
        if (this.eat(F.arrow))
          return this.parseArrowExpression(this.startNodeAt(s, a), [l], !1, e);
        if (this.options.ecmaVersion >= 8 && l.name === "async" && this.type === F.name && !o && (!this.potentialArrowInForAwait || this.value !== "of" || this.containsEsc))
          return l = this.parseIdent(!1), (this.canInsertSemicolon() || !this.eat(F.arrow)) && this.unexpected(), this.parseArrowExpression(this.startNodeAt(s, a), [l], !0, e);
      }
      return l;
    case F.regexp:
      var c = this.value;
      return r = this.parseLiteral(c.value), r.regex = { pattern: c.pattern, flags: c.flags }, r;
    case F.num:
    case F.string:
      return this.parseLiteral(this.value);
    case F._null:
    case F._true:
    case F._false:
      return r = this.startNode(), r.value = this.type === F._null ? null : this.type === F._true, r.raw = this.type.keyword, this.next(), this.finishNode(r, "Literal");
    case F.parenL:
      var h = this.start, f = this.parseParenAndDistinguishExpression(i, e);
      return t && (t.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(f) && (t.parenthesizedAssign = h), t.parenthesizedBind < 0 && (t.parenthesizedBind = h)), f;
    case F.bracketL:
      return r = this.startNode(), this.next(), r.elements = this.parseExprList(F.bracketR, !0, !0, t), this.finishNode(r, "ArrayExpression");
    case F.braceL:
      return this.overrideContext(It.b_expr), this.parseObj(!1, t);
    case F._function:
      return r = this.startNode(), this.next(), this.parseFunction(r, 0);
    case F._class:
      return this.parseClass(this.startNode(), !1);
    case F._new:
      return this.parseNew();
    case F.backQuote:
      return this.parseTemplate();
    case F._import:
      return this.options.ecmaVersion >= 11 ? this.parseExprImport(n) : this.unexpected();
    default:
      return this.parseExprAtomDefault();
  }
};
qe.parseExprAtomDefault = function() {
  this.unexpected();
};
qe.parseExprImport = function(t) {
  var e = this.startNode();
  if (this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword import"), this.next(), this.type === F.parenL && !t)
    return this.parseDynamicImport(e);
  if (this.type === F.dot) {
    var n = this.startNodeAt(e.start, e.loc && e.loc.start);
    return n.name = "import", e.meta = this.finishNode(n, "Identifier"), this.parseImportMeta(e);
  } else
    this.unexpected();
};
qe.parseDynamicImport = function(t) {
  if (this.next(), t.source = this.parseMaybeAssign(), this.options.ecmaVersion >= 16)
    this.eat(F.parenR) ? t.options = null : (this.expect(F.comma), this.afterTrailingComma(F.parenR) ? t.options = null : (t.options = this.parseMaybeAssign(), this.eat(F.parenR) || (this.expect(F.comma), this.afterTrailingComma(F.parenR) || this.unexpected())));
  else if (!this.eat(F.parenR)) {
    var e = this.start;
    this.eat(F.comma) && this.eat(F.parenR) ? this.raiseRecoverable(e, "Trailing comma is not allowed in import()") : this.unexpected(e);
  }
  return this.finishNode(t, "ImportExpression");
};
qe.parseImportMeta = function(t) {
  this.next();
  var e = this.containsEsc;
  return t.property = this.parseIdent(!0), t.property.name !== "meta" && this.raiseRecoverable(t.property.start, "The only valid meta property for import is 'import.meta'"), e && this.raiseRecoverable(t.start, "'import.meta' must not contain escaped characters"), this.options.sourceType !== "module" && !this.options.allowImportExportEverywhere && this.raiseRecoverable(t.start, "Cannot use 'import.meta' outside a module"), this.finishNode(t, "MetaProperty");
};
qe.parseLiteral = function(t) {
  var e = this.startNode();
  return e.value = t, e.raw = this.input.slice(this.start, this.end), e.raw.charCodeAt(e.raw.length - 1) === 110 && (e.bigint = e.raw.slice(0, -1).replace(/_/g, "")), this.next(), this.finishNode(e, "Literal");
};
qe.parseParenExpression = function() {
  this.expect(F.parenL);
  var t = this.parseExpression();
  return this.expect(F.parenR), t;
};
qe.shouldParseArrow = function(t) {
  return !this.canInsertSemicolon();
};
qe.parseParenAndDistinguishExpression = function(t, e) {
  var n = this.start, r = this.startLoc, i, s = this.options.ecmaVersion >= 8;
  if (this.options.ecmaVersion >= 6) {
    this.next();
    var a = this.start, o = this.startLoc, l = [], c = !0, h = !1, f = new xc(), m = this.yieldPos, y = this.awaitPos, x;
    for (this.yieldPos = 0, this.awaitPos = 0; this.type !== F.parenR; )
      if (c ? c = !1 : this.expect(F.comma), s && this.afterTrailingComma(F.parenR, !0)) {
        h = !0;
        break;
      } else if (this.type === F.ellipsis) {
        x = this.start, l.push(this.parseParenItem(this.parseRestBinding())), this.type === F.comma && this.raiseRecoverable(
          this.start,
          "Comma is not permitted after the rest element"
        );
        break;
      } else
        l.push(this.parseMaybeAssign(!1, f, this.parseParenItem));
    var C = this.lastTokEnd, S = this.lastTokEndLoc;
    if (this.expect(F.parenR), t && this.shouldParseArrow(l) && this.eat(F.arrow))
      return this.checkPatternErrors(f, !1), this.checkYieldAwaitInDefaultParams(), this.yieldPos = m, this.awaitPos = y, this.parseParenArrowList(n, r, l, e);
    (!l.length || h) && this.unexpected(this.lastTokStart), x && this.unexpected(x), this.checkExpressionErrors(f, !0), this.yieldPos = m || this.yieldPos, this.awaitPos = y || this.awaitPos, l.length > 1 ? (i = this.startNodeAt(a, o), i.expressions = l, this.finishNodeAt(i, "SequenceExpression", C, S)) : i = l[0];
  } else
    i = this.parseParenExpression();
  if (this.options.preserveParens) {
    var M = this.startNodeAt(n, r);
    return M.expression = i, this.finishNode(M, "ParenthesizedExpression");
  } else
    return i;
};
qe.parseParenItem = function(t) {
  return t;
};
qe.parseParenArrowList = function(t, e, n, r) {
  return this.parseArrowExpression(this.startNodeAt(t, e), n, !1, r);
};
var hB = [];
qe.parseNew = function() {
  this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword new");
  var t = this.startNode();
  if (this.next(), this.options.ecmaVersion >= 6 && this.type === F.dot) {
    var e = this.startNodeAt(t.start, t.loc && t.loc.start);
    e.name = "new", t.meta = this.finishNode(e, "Identifier"), this.next();
    var n = this.containsEsc;
    return t.property = this.parseIdent(!0), t.property.name !== "target" && this.raiseRecoverable(t.property.start, "The only valid meta property for new is 'new.target'"), n && this.raiseRecoverable(t.start, "'new.target' must not contain escaped characters"), this.allowNewDotTarget || this.raiseRecoverable(t.start, "'new.target' can only be used in functions and class static block"), this.finishNode(t, "MetaProperty");
  }
  var r = this.start, i = this.startLoc;
  return t.callee = this.parseSubscripts(this.parseExprAtom(null, !1, !0), r, i, !0, !1), this.eat(F.parenL) ? t.arguments = this.parseExprList(F.parenR, this.options.ecmaVersion >= 8, !1) : t.arguments = hB, this.finishNode(t, "NewExpression");
};
qe.parseTemplateElement = function(t) {
  var e = t.isTagged, n = this.startNode();
  return this.type === F.invalidTemplate ? (e || this.raiseRecoverable(this.start, "Bad escape sequence in untagged template literal"), n.value = {
    raw: this.value.replace(/\r\n?/g, `
`),
    cooked: null
  }) : n.value = {
    raw: this.input.slice(this.start, this.end).replace(/\r\n?/g, `
`),
    cooked: this.value
  }, this.next(), n.tail = this.type === F.backQuote, this.finishNode(n, "TemplateElement");
};
qe.parseTemplate = function(t) {
  t === void 0 && (t = {});
  var e = t.isTagged;
  e === void 0 && (e = !1);
  var n = this.startNode();
  this.next(), n.expressions = [];
  var r = this.parseTemplateElement({ isTagged: e });
  for (n.quasis = [r]; !r.tail; )
    this.type === F.eof && this.raise(this.pos, "Unterminated template literal"), this.expect(F.dollarBraceL), n.expressions.push(this.parseExpression()), this.expect(F.braceR), n.quasis.push(r = this.parseTemplateElement({ isTagged: e }));
  return this.next(), this.finishNode(n, "TemplateLiteral");
};
qe.isAsyncProp = function(t) {
  return !t.computed && t.key.type === "Identifier" && t.key.name === "async" && (this.type === F.name || this.type === F.num || this.type === F.string || this.type === F.bracketL || this.type.keyword || this.options.ecmaVersion >= 9 && this.type === F.star) && !Mr.test(this.input.slice(this.lastTokEnd, this.start));
};
qe.parseObj = function(t, e) {
  var n = this.startNode(), r = !0, i = {};
  for (n.properties = [], this.next(); !this.eat(F.braceR); ) {
    if (r)
      r = !1;
    else if (this.expect(F.comma), this.options.ecmaVersion >= 5 && this.afterTrailingComma(F.braceR))
      break;
    var s = this.parseProperty(t, e);
    t || this.checkPropClash(s, i, e), n.properties.push(s);
  }
  return this.finishNode(n, t ? "ObjectPattern" : "ObjectExpression");
};
qe.parseProperty = function(t, e) {
  var n = this.startNode(), r, i, s, a;
  if (this.options.ecmaVersion >= 9 && this.eat(F.ellipsis))
    return t ? (n.argument = this.parseIdent(!1), this.type === F.comma && this.raiseRecoverable(this.start, "Comma is not permitted after the rest element"), this.finishNode(n, "RestElement")) : (n.argument = this.parseMaybeAssign(!1, e), this.type === F.comma && e && e.trailingComma < 0 && (e.trailingComma = this.start), this.finishNode(n, "SpreadElement"));
  this.options.ecmaVersion >= 6 && (n.method = !1, n.shorthand = !1, (t || e) && (s = this.start, a = this.startLoc), t || (r = this.eat(F.star)));
  var o = this.containsEsc;
  return this.parsePropertyName(n), !t && !o && this.options.ecmaVersion >= 8 && !r && this.isAsyncProp(n) ? (i = !0, r = this.options.ecmaVersion >= 9 && this.eat(F.star), this.parsePropertyName(n)) : i = !1, this.parsePropertyValue(n, t, r, i, s, a, e, o), this.finishNode(n, "Property");
};
qe.parseGetterSetter = function(t) {
  t.kind = t.key.name, this.parsePropertyName(t), t.value = this.parseMethod(!1);
  var e = t.kind === "get" ? 0 : 1;
  if (t.value.params.length !== e) {
    var n = t.value.start;
    t.kind === "get" ? this.raiseRecoverable(n, "getter should have no params") : this.raiseRecoverable(n, "setter should have exactly one param");
  } else
    t.kind === "set" && t.value.params[0].type === "RestElement" && this.raiseRecoverable(t.value.params[0].start, "Setter cannot use rest params");
};
qe.parsePropertyValue = function(t, e, n, r, i, s, a, o) {
  (n || r) && this.type === F.colon && this.unexpected(), this.eat(F.colon) ? (t.value = e ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(!1, a), t.kind = "init") : this.options.ecmaVersion >= 6 && this.type === F.parenL ? (e && this.unexpected(), t.kind = "init", t.method = !0, t.value = this.parseMethod(n, r)) : !e && !o && this.options.ecmaVersion >= 5 && !t.computed && t.key.type === "Identifier" && (t.key.name === "get" || t.key.name === "set") && this.type !== F.comma && this.type !== F.braceR && this.type !== F.eq ? ((n || r) && this.unexpected(), this.parseGetterSetter(t)) : this.options.ecmaVersion >= 6 && !t.computed && t.key.type === "Identifier" ? ((n || r) && this.unexpected(), this.checkUnreserved(t.key), t.key.name === "await" && !this.awaitIdentPos && (this.awaitIdentPos = i), t.kind = "init", e ? t.value = this.parseMaybeDefault(i, s, this.copyNode(t.key)) : this.type === F.eq && a ? (a.shorthandAssign < 0 && (a.shorthandAssign = this.start), t.value = this.parseMaybeDefault(i, s, this.copyNode(t.key))) : t.value = this.copyNode(t.key), t.shorthand = !0) : this.unexpected();
};
qe.parsePropertyName = function(t) {
  if (this.options.ecmaVersion >= 6) {
    if (this.eat(F.bracketL))
      return t.computed = !0, t.key = this.parseMaybeAssign(), this.expect(F.bracketR), t.key;
    t.computed = !1;
  }
  return t.key = this.type === F.num || this.type === F.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== "never");
};
qe.initFunction = function(t) {
  t.id = null, this.options.ecmaVersion >= 6 && (t.generator = t.expression = !1), this.options.ecmaVersion >= 8 && (t.async = !1);
};
qe.parseMethod = function(t, e, n) {
  var r = this.startNode(), i = this.yieldPos, s = this.awaitPos, a = this.awaitIdentPos;
  return this.initFunction(r), this.options.ecmaVersion >= 6 && (r.generator = t), this.options.ecmaVersion >= 8 && (r.async = !!e), this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, this.enterScope(vd(e, r.generator) | yd | (n ? Kk : 0)), this.expect(F.parenL), r.params = this.parseBindingList(F.parenR, !1, this.options.ecmaVersion >= 8), this.checkYieldAwaitInDefaultParams(), this.parseFunctionBody(r, !1, !0, !1), this.yieldPos = i, this.awaitPos = s, this.awaitIdentPos = a, this.finishNode(r, "FunctionExpression");
};
qe.parseArrowExpression = function(t, e, n, r) {
  var i = this.yieldPos, s = this.awaitPos, a = this.awaitIdentPos;
  return this.enterScope(vd(n, !1) | Hk), this.initFunction(t), this.options.ecmaVersion >= 8 && (t.async = !!n), this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, t.params = this.toAssignableList(e, !0), this.parseFunctionBody(t, !0, !1, r), this.yieldPos = i, this.awaitPos = s, this.awaitIdentPos = a, this.finishNode(t, "ArrowFunctionExpression");
};
qe.parseFunctionBody = function(t, e, n, r) {
  var i = e && this.type !== F.braceL, s = this.strict, a = !1;
  if (i)
    t.body = this.parseMaybeAssign(r), t.expression = !0, this.checkParams(t, !1);
  else {
    var o = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(t.params);
    (!s || o) && (a = this.strictDirective(this.end), a && o && this.raiseRecoverable(t.start, "Illegal 'use strict' directive in function with non-simple parameter list"));
    var l = this.labels;
    this.labels = [], a && (this.strict = !0), this.checkParams(t, !s && !a && !e && !n && this.isSimpleParamList(t.params)), this.strict && t.id && this.checkLValSimple(t.id, t2), t.body = this.parseBlock(!1, void 0, a && !s), t.expression = !1, this.adaptDirectivePrologue(t.body.body), this.labels = l;
  }
  this.exitScope();
};
qe.isSimpleParamList = function(t) {
  for (var e = 0, n = t; e < n.length; e += 1) {
    var r = n[e];
    if (r.type !== "Identifier")
      return !1;
  }
  return !0;
};
qe.checkParams = function(t, e) {
  for (var n = /* @__PURE__ */ Object.create(null), r = 0, i = t.params; r < i.length; r += 1) {
    var s = i[r];
    this.checkLValInnerPattern(s, xd, e ? null : n);
  }
};
qe.parseExprList = function(t, e, n, r) {
  for (var i = [], s = !0; !this.eat(t); ) {
    if (s)
      s = !1;
    else if (this.expect(F.comma), e && this.afterTrailingComma(t))
      break;
    var a = void 0;
    n && this.type === F.comma ? a = null : this.type === F.ellipsis ? (a = this.parseSpread(r), r && this.type === F.comma && r.trailingComma < 0 && (r.trailingComma = this.start)) : a = this.parseMaybeAssign(!1, r), i.push(a);
  }
  return i;
};
qe.checkUnreserved = function(t) {
  var e = t.start, n = t.end, r = t.name;
  if (this.inGenerator && r === "yield" && this.raiseRecoverable(e, "Cannot use 'yield' as identifier inside a generator"), this.inAsync && r === "await" && this.raiseRecoverable(e, "Cannot use 'await' as identifier inside an async function"), this.currentThisScope().inClassFieldInit && r === "arguments" && this.raiseRecoverable(e, "Cannot use 'arguments' in class field initializer"), this.inClassStaticBlock && (r === "arguments" || r === "await") && this.raise(e, "Cannot use " + r + " in class static initialization block"), this.keywords.test(r) && this.raise(e, "Unexpected keyword '" + r + "'"), !(this.options.ecmaVersion < 6 && this.input.slice(e, n).indexOf("\\") !== -1)) {
    var i = this.strict ? this.reservedWordsStrict : this.reservedWords;
    i.test(r) && (!this.inAsync && r === "await" && this.raiseRecoverable(e, "Cannot use keyword 'await' outside an async function"), this.raiseRecoverable(e, "The keyword '" + r + "' is reserved"));
  }
};
qe.parseIdent = function(t) {
  var e = this.parseIdentNode();
  return this.next(!!t), this.finishNode(e, "Identifier"), t || (this.checkUnreserved(e), e.name === "await" && !this.awaitIdentPos && (this.awaitIdentPos = e.start)), e;
};
qe.parseIdentNode = function() {
  var t = this.startNode();
  return this.type === F.name ? t.name = this.value : this.type.keyword ? (t.name = this.type.keyword, (t.name === "class" || t.name === "function") && (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46) && this.context.pop(), this.type = F.name) : this.unexpected(), t;
};
qe.parsePrivateIdent = function() {
  var t = this.startNode();
  return this.type === F.privateId ? t.name = this.value : this.unexpected(), this.next(), this.finishNode(t, "PrivateIdentifier"), this.options.checkPrivateFields && (this.privateNameStack.length === 0 ? this.raise(t.start, "Private field '#" + t.name + "' must be declared in an enclosing class") : this.privateNameStack[this.privateNameStack.length - 1].used.push(t)), t;
};
qe.parseYield = function(t) {
  this.yieldPos || (this.yieldPos = this.start);
  var e = this.startNode();
  return this.next(), this.type === F.semi || this.canInsertSemicolon() || this.type !== F.star && !this.type.startsExpr ? (e.delegate = !1, e.argument = null) : (e.delegate = this.eat(F.star), e.argument = this.parseMaybeAssign(t)), this.finishNode(e, "YieldExpression");
};
qe.parseAwait = function(t) {
  this.awaitPos || (this.awaitPos = this.start);
  var e = this.startNode();
  return this.next(), e.argument = this.parseMaybeUnary(null, !0, !1, t), this.finishNode(e, "AwaitExpression");
};
var gu = pn.prototype;
gu.raise = function(t, e) {
  var n = Gk(this.input, t);
  e += " (" + n.line + ":" + n.column + ")";
  var r = new SyntaxError(e);
  throw r.pos = t, r.loc = n, r.raisedAt = this.pos, r;
};
gu.raiseRecoverable = gu.raise;
gu.curPosition = function() {
  if (this.options.locations)
    return new Oo(this.curLine, this.pos - this.lineStart);
};
var as = pn.prototype, pB = function(e) {
  this.flags = e, this.var = [], this.lexical = [], this.functions = [], this.inClassFieldInit = !1;
};
as.enterScope = function(t) {
  this.scopeStack.push(new pB(t));
};
as.exitScope = function() {
  this.scopeStack.pop();
};
as.treatFunctionsAsVarInScope = function(t) {
  return t.flags & Qa || !this.inModule && t.flags & vo;
};
as.declareName = function(t, e, n) {
  var r = !1;
  if (e === ji) {
    var i = this.currentScope();
    r = i.lexical.indexOf(t) > -1 || i.functions.indexOf(t) > -1 || i.var.indexOf(t) > -1, i.lexical.push(t), this.inModule && i.flags & vo && delete this.undefinedExports[t];
  } else if (e === e2) {
    var s = this.currentScope();
    s.lexical.push(t);
  } else if (e === Jk) {
    var a = this.currentScope();
    this.treatFunctionsAsVar ? r = a.lexical.indexOf(t) > -1 : r = a.lexical.indexOf(t) > -1 || a.var.indexOf(t) > -1, a.functions.push(t);
  } else
    for (var o = this.scopeStack.length - 1; o >= 0; --o) {
      var l = this.scopeStack[o];
      if (l.lexical.indexOf(t) > -1 && !(l.flags & Yk && l.lexical[0] === t) || !this.treatFunctionsAsVarInScope(l) && l.functions.indexOf(t) > -1) {
        r = !0;
        break;
      }
      if (l.var.push(t), this.inModule && l.flags & vo && delete this.undefinedExports[t], l.flags & Od)
        break;
    }
  r && this.raiseRecoverable(n, "Identifier '" + t + "' has already been declared");
};
as.checkLocalExport = function(t) {
  this.scopeStack[0].lexical.indexOf(t.name) === -1 && this.scopeStack[0].var.indexOf(t.name) === -1 && (this.undefinedExports[t.name] = t);
};
as.currentScope = function() {
  return this.scopeStack[this.scopeStack.length - 1];
};
as.currentVarScope = function() {
  for (var t = this.scopeStack.length - 1; ; t--) {
    var e = this.scopeStack[t];
    if (e.flags & Od)
      return e;
  }
};
as.currentThisScope = function() {
  for (var t = this.scopeStack.length - 1; ; t--) {
    var e = this.scopeStack[t];
    if (e.flags & Od && !(e.flags & Hk))
      return e;
  }
};
var kc = function(e, n, r) {
  this.type = "", this.start = n, this.end = 0, e.options.locations && (this.loc = new vc(e, r)), e.options.directSourceFile && (this.sourceFile = e.options.directSourceFile), e.options.ranges && (this.range = [n, 0]);
}, Xo = pn.prototype;
Xo.startNode = function() {
  return new kc(this, this.start, this.startLoc);
};
Xo.startNodeAt = function(t, e) {
  return new kc(this, t, e);
};
function i2(t, e, n, r) {
  return t.type = e, t.end = n, this.options.locations && (t.loc.end = r), this.options.ranges && (t.range[1] = n), t;
}
Xo.finishNode = function(t, e) {
  return i2.call(this, t, e, this.lastTokEnd, this.lastTokEndLoc);
};
Xo.finishNodeAt = function(t, e, n, r) {
  return i2.call(this, t, e, n, r);
};
Xo.copyNode = function(t) {
  var e = new kc(this, t.start, this.startLoc);
  for (var n in t)
    e[n] = t[n];
  return e;
};
var fB = "Gara Garay Gukh Gurung_Khema Hrkt Katakana_Or_Hiragana Kawi Kirat_Rai Krai Nag_Mundari Nagm Ol_Onal Onao Sunu Sunuwar Todhri Todr Tulu_Tigalari Tutg Unknown Zzzz", s2 = "ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS", a2 = s2 + " Extended_Pictographic", o2 = a2, l2 = o2 + " EBase EComp EMod EPres ExtPict", u2 = l2, dB = u2, mB = {
  9: s2,
  10: a2,
  11: o2,
  12: l2,
  13: u2,
  14: dB
}, gB = "Basic_Emoji Emoji_Keycap_Sequence RGI_Emoji_Modifier_Sequence RGI_Emoji_Flag_Sequence RGI_Emoji_Tag_Sequence RGI_Emoji_ZWJ_Sequence RGI_Emoji", bB = {
  9: "",
  10: "",
  11: "",
  12: "",
  13: "",
  14: gB
}, Lm = "Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu", c2 = "Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb", h2 = c2 + " Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd", p2 = h2 + " Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho", f2 = p2 + " Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi", d2 = f2 + " Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith", yB = d2 + " " + fB, OB = {
  9: c2,
  10: h2,
  11: p2,
  12: f2,
  13: d2,
  14: yB
}, m2 = {};
function vB(t) {
  var e = m2[t] = {
    binary: qi(mB[t] + " " + Lm),
    binaryOfStrings: qi(bB[t]),
    nonBinary: {
      General_Category: qi(Lm),
      Script: qi(OB[t])
    }
  };
  e.nonBinary.Script_Extensions = e.nonBinary.Script, e.nonBinary.gc = e.nonBinary.General_Category, e.nonBinary.sc = e.nonBinary.Script, e.nonBinary.scx = e.nonBinary.Script_Extensions;
}
for (var dh = 0, Im = [9, 10, 11, 12, 13, 14]; dh < Im.length; dh += 1) {
  var xB = Im[dh];
  vB(xB);
}
var Fe = pn.prototype, bu = function(e, n) {
  this.parent = e, this.base = n || this;
};
bu.prototype.separatedFrom = function(e) {
  for (var n = this; n; n = n.parent)
    for (var r = e; r; r = r.parent)
      if (n.base === r.base && n !== r)
        return !0;
  return !1;
};
bu.prototype.sibling = function() {
  return new bu(this.parent, this.base);
};
var di = function(e) {
  this.parser = e, this.validFlags = "gim" + (e.options.ecmaVersion >= 6 ? "uy" : "") + (e.options.ecmaVersion >= 9 ? "s" : "") + (e.options.ecmaVersion >= 13 ? "d" : "") + (e.options.ecmaVersion >= 15 ? "v" : ""), this.unicodeProperties = m2[e.options.ecmaVersion >= 14 ? 14 : e.options.ecmaVersion], this.source = "", this.flags = "", this.start = 0, this.switchU = !1, this.switchV = !1, this.switchN = !1, this.pos = 0, this.lastIntValue = 0, this.lastStringValue = "", this.lastAssertionIsQuantifiable = !1, this.numCapturingParens = 0, this.maxBackReference = 0, this.groupNames = /* @__PURE__ */ Object.create(null), this.backReferenceNames = [], this.branchID = null;
};
di.prototype.reset = function(e, n, r) {
  var i = r.indexOf("v") !== -1, s = r.indexOf("u") !== -1;
  this.start = e | 0, this.source = n + "", this.flags = r, i && this.parser.options.ecmaVersion >= 15 ? (this.switchU = !0, this.switchV = !0, this.switchN = !0) : (this.switchU = s && this.parser.options.ecmaVersion >= 6, this.switchV = !1, this.switchN = s && this.parser.options.ecmaVersion >= 9);
};
di.prototype.raise = function(e) {
  this.parser.raiseRecoverable(this.start, "Invalid regular expression: /" + this.source + "/: " + e);
};
di.prototype.at = function(e, n) {
  n === void 0 && (n = !1);
  var r = this.source, i = r.length;
  if (e >= i)
    return -1;
  var s = r.charCodeAt(e);
  if (!(n || this.switchU) || s <= 55295 || s >= 57344 || e + 1 >= i)
    return s;
  var a = r.charCodeAt(e + 1);
  return a >= 56320 && a <= 57343 ? (s << 10) + a - 56613888 : s;
};
di.prototype.nextIndex = function(e, n) {
  n === void 0 && (n = !1);
  var r = this.source, i = r.length;
  if (e >= i)
    return i;
  var s = r.charCodeAt(e), a;
  return !(n || this.switchU) || s <= 55295 || s >= 57344 || e + 1 >= i || (a = r.charCodeAt(e + 1)) < 56320 || a > 57343 ? e + 1 : e + 2;
};
di.prototype.current = function(e) {
  return e === void 0 && (e = !1), this.at(this.pos, e);
};
di.prototype.lookahead = function(e) {
  return e === void 0 && (e = !1), this.at(this.nextIndex(this.pos, e), e);
};
di.prototype.advance = function(e) {
  e === void 0 && (e = !1), this.pos = this.nextIndex(this.pos, e);
};
di.prototype.eat = function(e, n) {
  return n === void 0 && (n = !1), this.current(n) === e ? (this.advance(n), !0) : !1;
};
di.prototype.eatChars = function(e, n) {
  n === void 0 && (n = !1);
  for (var r = this.pos, i = 0, s = e; i < s.length; i += 1) {
    var a = s[i], o = this.at(r, n);
    if (o === -1 || o !== a)
      return !1;
    r = this.nextIndex(r, n);
  }
  return this.pos = r, !0;
};
Fe.validateRegExpFlags = function(t) {
  for (var e = t.validFlags, n = t.flags, r = !1, i = !1, s = 0; s < n.length; s++) {
    var a = n.charAt(s);
    e.indexOf(a) === -1 && this.raise(t.start, "Invalid regular expression flag"), n.indexOf(a, s + 1) > -1 && this.raise(t.start, "Duplicate regular expression flag"), a === "u" && (r = !0), a === "v" && (i = !0);
  }
  this.options.ecmaVersion >= 15 && r && i && this.raise(t.start, "Invalid regular expression flag");
};
function kB(t) {
  for (var e in t)
    return !0;
  return !1;
}
Fe.validateRegExpPattern = function(t) {
  this.regexp_pattern(t), !t.switchN && this.options.ecmaVersion >= 9 && kB(t.groupNames) && (t.switchN = !0, this.regexp_pattern(t));
};
Fe.regexp_pattern = function(t) {
  t.pos = 0, t.lastIntValue = 0, t.lastStringValue = "", t.lastAssertionIsQuantifiable = !1, t.numCapturingParens = 0, t.maxBackReference = 0, t.groupNames = /* @__PURE__ */ Object.create(null), t.backReferenceNames.length = 0, t.branchID = null, this.regexp_disjunction(t), t.pos !== t.source.length && (t.eat(
    41
    /* ) */
  ) && t.raise("Unmatched ')'"), (t.eat(
    93
    /* ] */
  ) || t.eat(
    125
    /* } */
  )) && t.raise("Lone quantifier brackets")), t.maxBackReference > t.numCapturingParens && t.raise("Invalid escape");
  for (var e = 0, n = t.backReferenceNames; e < n.length; e += 1) {
    var r = n[e];
    t.groupNames[r] || t.raise("Invalid named capture referenced");
  }
};
Fe.regexp_disjunction = function(t) {
  var e = this.options.ecmaVersion >= 16;
  for (e && (t.branchID = new bu(t.branchID, null)), this.regexp_alternative(t); t.eat(
    124
    /* | */
  ); )
    e && (t.branchID = t.branchID.sibling()), this.regexp_alternative(t);
  e && (t.branchID = t.branchID.parent), this.regexp_eatQuantifier(t, !0) && t.raise("Nothing to repeat"), t.eat(
    123
    /* { */
  ) && t.raise("Lone quantifier brackets");
};
Fe.regexp_alternative = function(t) {
  for (; t.pos < t.source.length && this.regexp_eatTerm(t); )
    ;
};
Fe.regexp_eatTerm = function(t) {
  return this.regexp_eatAssertion(t) ? (t.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(t) && t.switchU && t.raise("Invalid quantifier"), !0) : (t.switchU ? this.regexp_eatAtom(t) : this.regexp_eatExtendedAtom(t)) ? (this.regexp_eatQuantifier(t), !0) : !1;
};
Fe.regexp_eatAssertion = function(t) {
  var e = t.pos;
  if (t.lastAssertionIsQuantifiable = !1, t.eat(
    94
    /* ^ */
  ) || t.eat(
    36
    /* $ */
  ))
    return !0;
  if (t.eat(
    92
    /* \ */
  )) {
    if (t.eat(
      66
      /* B */
    ) || t.eat(
      98
      /* b */
    ))
      return !0;
    t.pos = e;
  }
  if (t.eat(
    40
    /* ( */
  ) && t.eat(
    63
    /* ? */
  )) {
    var n = !1;
    if (this.options.ecmaVersion >= 9 && (n = t.eat(
      60
      /* < */
    )), t.eat(
      61
      /* = */
    ) || t.eat(
      33
      /* ! */
    ))
      return this.regexp_disjunction(t), t.eat(
        41
        /* ) */
      ) || t.raise("Unterminated group"), t.lastAssertionIsQuantifiable = !n, !0;
  }
  return t.pos = e, !1;
};
Fe.regexp_eatQuantifier = function(t, e) {
  return e === void 0 && (e = !1), this.regexp_eatQuantifierPrefix(t, e) ? (t.eat(
    63
    /* ? */
  ), !0) : !1;
};
Fe.regexp_eatQuantifierPrefix = function(t, e) {
  return t.eat(
    42
    /* * */
  ) || t.eat(
    43
    /* + */
  ) || t.eat(
    63
    /* ? */
  ) || this.regexp_eatBracedQuantifier(t, e);
};
Fe.regexp_eatBracedQuantifier = function(t, e) {
  var n = t.pos;
  if (t.eat(
    123
    /* { */
  )) {
    var r = 0, i = -1;
    if (this.regexp_eatDecimalDigits(t) && (r = t.lastIntValue, t.eat(
      44
      /* , */
    ) && this.regexp_eatDecimalDigits(t) && (i = t.lastIntValue), t.eat(
      125
      /* } */
    )))
      return i !== -1 && i < r && !e && t.raise("numbers out of order in {} quantifier"), !0;
    t.switchU && !e && t.raise("Incomplete quantifier"), t.pos = n;
  }
  return !1;
};
Fe.regexp_eatAtom = function(t) {
  return this.regexp_eatPatternCharacters(t) || t.eat(
    46
    /* . */
  ) || this.regexp_eatReverseSolidusAtomEscape(t) || this.regexp_eatCharacterClass(t) || this.regexp_eatUncapturingGroup(t) || this.regexp_eatCapturingGroup(t);
};
Fe.regexp_eatReverseSolidusAtomEscape = function(t) {
  var e = t.pos;
  if (t.eat(
    92
    /* \ */
  )) {
    if (this.regexp_eatAtomEscape(t))
      return !0;
    t.pos = e;
  }
  return !1;
};
Fe.regexp_eatUncapturingGroup = function(t) {
  var e = t.pos;
  if (t.eat(
    40
    /* ( */
  )) {
    if (t.eat(
      63
      /* ? */
    )) {
      if (this.options.ecmaVersion >= 16) {
        var n = this.regexp_eatModifiers(t), r = t.eat(
          45
          /* - */
        );
        if (n || r) {
          for (var i = 0; i < n.length; i++) {
            var s = n.charAt(i);
            n.indexOf(s, i + 1) > -1 && t.raise("Duplicate regular expression modifiers");
          }
          if (r) {
            var a = this.regexp_eatModifiers(t);
            !n && !a && t.current() === 58 && t.raise("Invalid regular expression modifiers");
            for (var o = 0; o < a.length; o++) {
              var l = a.charAt(o);
              (a.indexOf(l, o + 1) > -1 || n.indexOf(l) > -1) && t.raise("Duplicate regular expression modifiers");
            }
          }
        }
      }
      if (t.eat(
        58
        /* : */
      )) {
        if (this.regexp_disjunction(t), t.eat(
          41
          /* ) */
        ))
          return !0;
        t.raise("Unterminated group");
      }
    }
    t.pos = e;
  }
  return !1;
};
Fe.regexp_eatCapturingGroup = function(t) {
  if (t.eat(
    40
    /* ( */
  )) {
    if (this.options.ecmaVersion >= 9 ? this.regexp_groupSpecifier(t) : t.current() === 63 && t.raise("Invalid group"), this.regexp_disjunction(t), t.eat(
      41
      /* ) */
    ))
      return t.numCapturingParens += 1, !0;
    t.raise("Unterminated group");
  }
  return !1;
};
Fe.regexp_eatModifiers = function(t) {
  for (var e = "", n = 0; (n = t.current()) !== -1 && wB(n); )
    e += Fi(n), t.advance();
  return e;
};
function wB(t) {
  return t === 105 || t === 109 || t === 115;
}
Fe.regexp_eatExtendedAtom = function(t) {
  return t.eat(
    46
    /* . */
  ) || this.regexp_eatReverseSolidusAtomEscape(t) || this.regexp_eatCharacterClass(t) || this.regexp_eatUncapturingGroup(t) || this.regexp_eatCapturingGroup(t) || this.regexp_eatInvalidBracedQuantifier(t) || this.regexp_eatExtendedPatternCharacter(t);
};
Fe.regexp_eatInvalidBracedQuantifier = function(t) {
  return this.regexp_eatBracedQuantifier(t, !0) && t.raise("Nothing to repeat"), !1;
};
Fe.regexp_eatSyntaxCharacter = function(t) {
  var e = t.current();
  return g2(e) ? (t.lastIntValue = e, t.advance(), !0) : !1;
};
function g2(t) {
  return t === 36 || t >= 40 && t <= 43 || t === 46 || t === 63 || t >= 91 && t <= 94 || t >= 123 && t <= 125;
}
Fe.regexp_eatPatternCharacters = function(t) {
  for (var e = t.pos, n = 0; (n = t.current()) !== -1 && !g2(n); )
    t.advance();
  return t.pos !== e;
};
Fe.regexp_eatExtendedPatternCharacter = function(t) {
  var e = t.current();
  return e !== -1 && e !== 36 && !(e >= 40 && e <= 43) && e !== 46 && e !== 63 && e !== 91 && e !== 94 && e !== 124 ? (t.advance(), !0) : !1;
};
Fe.regexp_groupSpecifier = function(t) {
  if (t.eat(
    63
    /* ? */
  )) {
    this.regexp_eatGroupName(t) || t.raise("Invalid group");
    var e = this.options.ecmaVersion >= 16, n = t.groupNames[t.lastStringValue];
    if (n)
      if (e)
        for (var r = 0, i = n; r < i.length; r += 1) {
          var s = i[r];
          s.separatedFrom(t.branchID) || t.raise("Duplicate capture group name");
        }
      else
        t.raise("Duplicate capture group name");
    e ? (n || (t.groupNames[t.lastStringValue] = [])).push(t.branchID) : t.groupNames[t.lastStringValue] = !0;
  }
};
Fe.regexp_eatGroupName = function(t) {
  if (t.lastStringValue = "", t.eat(
    60
    /* < */
  )) {
    if (this.regexp_eatRegExpIdentifierName(t) && t.eat(
      62
      /* > */
    ))
      return !0;
    t.raise("Invalid capture group name");
  }
  return !1;
};
Fe.regexp_eatRegExpIdentifierName = function(t) {
  if (t.lastStringValue = "", this.regexp_eatRegExpIdentifierStart(t)) {
    for (t.lastStringValue += Fi(t.lastIntValue); this.regexp_eatRegExpIdentifierPart(t); )
      t.lastStringValue += Fi(t.lastIntValue);
    return !0;
  }
  return !1;
};
Fe.regexp_eatRegExpIdentifierStart = function(t) {
  var e = t.pos, n = this.options.ecmaVersion >= 11, r = t.current(n);
  return t.advance(n), r === 92 && this.regexp_eatRegExpUnicodeEscapeSequence(t, n) && (r = t.lastIntValue), CB(r) ? (t.lastIntValue = r, !0) : (t.pos = e, !1);
};
function CB(t) {
  return Ei(t, !0) || t === 36 || t === 95;
}
Fe.regexp_eatRegExpIdentifierPart = function(t) {
  var e = t.pos, n = this.options.ecmaVersion >= 11, r = t.current(n);
  return t.advance(n), r === 92 && this.regexp_eatRegExpUnicodeEscapeSequence(t, n) && (r = t.lastIntValue), SB(r) ? (t.lastIntValue = r, !0) : (t.pos = e, !1);
};
function SB(t) {
  return ma(t, !0) || t === 36 || t === 95 || t === 8204 || t === 8205;
}
Fe.regexp_eatAtomEscape = function(t) {
  return this.regexp_eatBackReference(t) || this.regexp_eatCharacterClassEscape(t) || this.regexp_eatCharacterEscape(t) || t.switchN && this.regexp_eatKGroupName(t) ? !0 : (t.switchU && (t.current() === 99 && t.raise("Invalid unicode escape"), t.raise("Invalid escape")), !1);
};
Fe.regexp_eatBackReference = function(t) {
  var e = t.pos;
  if (this.regexp_eatDecimalEscape(t)) {
    var n = t.lastIntValue;
    if (t.switchU)
      return n > t.maxBackReference && (t.maxBackReference = n), !0;
    if (n <= t.numCapturingParens)
      return !0;
    t.pos = e;
  }
  return !1;
};
Fe.regexp_eatKGroupName = function(t) {
  if (t.eat(
    107
    /* k */
  )) {
    if (this.regexp_eatGroupName(t))
      return t.backReferenceNames.push(t.lastStringValue), !0;
    t.raise("Invalid named reference");
  }
  return !1;
};
Fe.regexp_eatCharacterEscape = function(t) {
  return this.regexp_eatControlEscape(t) || this.regexp_eatCControlLetter(t) || this.regexp_eatZero(t) || this.regexp_eatHexEscapeSequence(t) || this.regexp_eatRegExpUnicodeEscapeSequence(t, !1) || !t.switchU && this.regexp_eatLegacyOctalEscapeSequence(t) || this.regexp_eatIdentityEscape(t);
};
Fe.regexp_eatCControlLetter = function(t) {
  var e = t.pos;
  if (t.eat(
    99
    /* c */
  )) {
    if (this.regexp_eatControlLetter(t))
      return !0;
    t.pos = e;
  }
  return !1;
};
Fe.regexp_eatZero = function(t) {
  return t.current() === 48 && !wc(t.lookahead()) ? (t.lastIntValue = 0, t.advance(), !0) : !1;
};
Fe.regexp_eatControlEscape = function(t) {
  var e = t.current();
  return e === 116 ? (t.lastIntValue = 9, t.advance(), !0) : e === 110 ? (t.lastIntValue = 10, t.advance(), !0) : e === 118 ? (t.lastIntValue = 11, t.advance(), !0) : e === 102 ? (t.lastIntValue = 12, t.advance(), !0) : e === 114 ? (t.lastIntValue = 13, t.advance(), !0) : !1;
};
Fe.regexp_eatControlLetter = function(t) {
  var e = t.current();
  return b2(e) ? (t.lastIntValue = e % 32, t.advance(), !0) : !1;
};
function b2(t) {
  return t >= 65 && t <= 90 || t >= 97 && t <= 122;
}
Fe.regexp_eatRegExpUnicodeEscapeSequence = function(t, e) {
  e === void 0 && (e = !1);
  var n = t.pos, r = e || t.switchU;
  if (t.eat(
    117
    /* u */
  )) {
    if (this.regexp_eatFixedHexDigits(t, 4)) {
      var i = t.lastIntValue;
      if (r && i >= 55296 && i <= 56319) {
        var s = t.pos;
        if (t.eat(
          92
          /* \ */
        ) && t.eat(
          117
          /* u */
        ) && this.regexp_eatFixedHexDigits(t, 4)) {
          var a = t.lastIntValue;
          if (a >= 56320 && a <= 57343)
            return t.lastIntValue = (i - 55296) * 1024 + (a - 56320) + 65536, !0;
        }
        t.pos = s, t.lastIntValue = i;
      }
      return !0;
    }
    if (r && t.eat(
      123
      /* { */
    ) && this.regexp_eatHexDigits(t) && t.eat(
      125
      /* } */
    ) && AB(t.lastIntValue))
      return !0;
    r && t.raise("Invalid unicode escape"), t.pos = n;
  }
  return !1;
};
function AB(t) {
  return t >= 0 && t <= 1114111;
}
Fe.regexp_eatIdentityEscape = function(t) {
  if (t.switchU)
    return this.regexp_eatSyntaxCharacter(t) ? !0 : t.eat(
      47
      /* / */
    ) ? (t.lastIntValue = 47, !0) : !1;
  var e = t.current();
  return e !== 99 && (!t.switchN || e !== 107) ? (t.lastIntValue = e, t.advance(), !0) : !1;
};
Fe.regexp_eatDecimalEscape = function(t) {
  t.lastIntValue = 0;
  var e = t.current();
  if (e >= 49 && e <= 57) {
    do
      t.lastIntValue = 10 * t.lastIntValue + (e - 48), t.advance();
    while ((e = t.current()) >= 48 && e <= 57);
    return !0;
  }
  return !1;
};
var y2 = 0, Bi = 1, kr = 2;
Fe.regexp_eatCharacterClassEscape = function(t) {
  var e = t.current();
  if (DB(e))
    return t.lastIntValue = -1, t.advance(), Bi;
  var n = !1;
  if (t.switchU && this.options.ecmaVersion >= 9 && ((n = e === 80) || e === 112)) {
    t.lastIntValue = -1, t.advance();
    var r;
    if (t.eat(
      123
      /* { */
    ) && (r = this.regexp_eatUnicodePropertyValueExpression(t)) && t.eat(
      125
      /* } */
    ))
      return n && r === kr && t.raise("Invalid property name"), r;
    t.raise("Invalid property name");
  }
  return y2;
};
function DB(t) {
  return t === 100 || t === 68 || t === 115 || t === 83 || t === 119 || t === 87;
}
Fe.regexp_eatUnicodePropertyValueExpression = function(t) {
  var e = t.pos;
  if (this.regexp_eatUnicodePropertyName(t) && t.eat(
    61
    /* = */
  )) {
    var n = t.lastStringValue;
    if (this.regexp_eatUnicodePropertyValue(t)) {
      var r = t.lastStringValue;
      return this.regexp_validateUnicodePropertyNameAndValue(t, n, r), Bi;
    }
  }
  if (t.pos = e, this.regexp_eatLoneUnicodePropertyNameOrValue(t)) {
    var i = t.lastStringValue;
    return this.regexp_validateUnicodePropertyNameOrValue(t, i);
  }
  return y2;
};
Fe.regexp_validateUnicodePropertyNameAndValue = function(t, e, n) {
  Ma(t.unicodeProperties.nonBinary, e) || t.raise("Invalid property name"), t.unicodeProperties.nonBinary[e].test(n) || t.raise("Invalid property value");
};
Fe.regexp_validateUnicodePropertyNameOrValue = function(t, e) {
  if (t.unicodeProperties.binary.test(e))
    return Bi;
  if (t.switchV && t.unicodeProperties.binaryOfStrings.test(e))
    return kr;
  t.raise("Invalid property name");
};
Fe.regexp_eatUnicodePropertyName = function(t) {
  var e = 0;
  for (t.lastStringValue = ""; O2(e = t.current()); )
    t.lastStringValue += Fi(e), t.advance();
  return t.lastStringValue !== "";
};
function O2(t) {
  return b2(t) || t === 95;
}
Fe.regexp_eatUnicodePropertyValue = function(t) {
  var e = 0;
  for (t.lastStringValue = ""; PB(e = t.current()); )
    t.lastStringValue += Fi(e), t.advance();
  return t.lastStringValue !== "";
};
function PB(t) {
  return O2(t) || wc(t);
}
Fe.regexp_eatLoneUnicodePropertyNameOrValue = function(t) {
  return this.regexp_eatUnicodePropertyValue(t);
};
Fe.regexp_eatCharacterClass = function(t) {
  if (t.eat(
    91
    /* [ */
  )) {
    var e = t.eat(
      94
      /* ^ */
    ), n = this.regexp_classContents(t);
    return t.eat(
      93
      /* ] */
    ) || t.raise("Unterminated character class"), e && n === kr && t.raise("Negated character class may contain strings"), !0;
  }
  return !1;
};
Fe.regexp_classContents = function(t) {
  return t.current() === 93 ? Bi : t.switchV ? this.regexp_classSetExpression(t) : (this.regexp_nonEmptyClassRanges(t), Bi);
};
Fe.regexp_nonEmptyClassRanges = function(t) {
  for (; this.regexp_eatClassAtom(t); ) {
    var e = t.lastIntValue;
    if (t.eat(
      45
      /* - */
    ) && this.regexp_eatClassAtom(t)) {
      var n = t.lastIntValue;
      t.switchU && (e === -1 || n === -1) && t.raise("Invalid character class"), e !== -1 && n !== -1 && e > n && t.raise("Range out of order in character class");
    }
  }
};
Fe.regexp_eatClassAtom = function(t) {
  var e = t.pos;
  if (t.eat(
    92
    /* \ */
  )) {
    if (this.regexp_eatClassEscape(t))
      return !0;
    if (t.switchU) {
      var n = t.current();
      (n === 99 || k2(n)) && t.raise("Invalid class escape"), t.raise("Invalid escape");
    }
    t.pos = e;
  }
  var r = t.current();
  return r !== 93 ? (t.lastIntValue = r, t.advance(), !0) : !1;
};
Fe.regexp_eatClassEscape = function(t) {
  var e = t.pos;
  if (t.eat(
    98
    /* b */
  ))
    return t.lastIntValue = 8, !0;
  if (t.switchU && t.eat(
    45
    /* - */
  ))
    return t.lastIntValue = 45, !0;
  if (!t.switchU && t.eat(
    99
    /* c */
  )) {
    if (this.regexp_eatClassControlLetter(t))
      return !0;
    t.pos = e;
  }
  return this.regexp_eatCharacterClassEscape(t) || this.regexp_eatCharacterEscape(t);
};
Fe.regexp_classSetExpression = function(t) {
  var e = Bi, n;
  if (!this.regexp_eatClassSetRange(t)) if (n = this.regexp_eatClassSetOperand(t)) {
    n === kr && (e = kr);
    for (var r = t.pos; t.eatChars(
      [38, 38]
      /* && */
    ); ) {
      if (t.current() !== 38 && (n = this.regexp_eatClassSetOperand(t))) {
        n !== kr && (e = Bi);
        continue;
      }
      t.raise("Invalid character in character class");
    }
    if (r !== t.pos)
      return e;
    for (; t.eatChars(
      [45, 45]
      /* -- */
    ); )
      this.regexp_eatClassSetOperand(t) || t.raise("Invalid character in character class");
    if (r !== t.pos)
      return e;
  } else
    t.raise("Invalid character in character class");
  for (; ; )
    if (!this.regexp_eatClassSetRange(t)) {
      if (n = this.regexp_eatClassSetOperand(t), !n)
        return e;
      n === kr && (e = kr);
    }
};
Fe.regexp_eatClassSetRange = function(t) {
  var e = t.pos;
  if (this.regexp_eatClassSetCharacter(t)) {
    var n = t.lastIntValue;
    if (t.eat(
      45
      /* - */
    ) && this.regexp_eatClassSetCharacter(t)) {
      var r = t.lastIntValue;
      return n !== -1 && r !== -1 && n > r && t.raise("Range out of order in character class"), !0;
    }
    t.pos = e;
  }
  return !1;
};
Fe.regexp_eatClassSetOperand = function(t) {
  return this.regexp_eatClassSetCharacter(t) ? Bi : this.regexp_eatClassStringDisjunction(t) || this.regexp_eatNestedClass(t);
};
Fe.regexp_eatNestedClass = function(t) {
  var e = t.pos;
  if (t.eat(
    91
    /* [ */
  )) {
    var n = t.eat(
      94
      /* ^ */
    ), r = this.regexp_classContents(t);
    if (t.eat(
      93
      /* ] */
    ))
      return n && r === kr && t.raise("Negated character class may contain strings"), r;
    t.pos = e;
  }
  if (t.eat(
    92
    /* \ */
  )) {
    var i = this.regexp_eatCharacterClassEscape(t);
    if (i)
      return i;
    t.pos = e;
  }
  return null;
};
Fe.regexp_eatClassStringDisjunction = function(t) {
  var e = t.pos;
  if (t.eatChars(
    [92, 113]
    /* \q */
  )) {
    if (t.eat(
      123
      /* { */
    )) {
      var n = this.regexp_classStringDisjunctionContents(t);
      if (t.eat(
        125
        /* } */
      ))
        return n;
    } else
      t.raise("Invalid escape");
    t.pos = e;
  }
  return null;
};
Fe.regexp_classStringDisjunctionContents = function(t) {
  for (var e = this.regexp_classString(t); t.eat(
    124
    /* | */
  ); )
    this.regexp_classString(t) === kr && (e = kr);
  return e;
};
Fe.regexp_classString = function(t) {
  for (var e = 0; this.regexp_eatClassSetCharacter(t); )
    e++;
  return e === 1 ? Bi : kr;
};
Fe.regexp_eatClassSetCharacter = function(t) {
  var e = t.pos;
  if (t.eat(
    92
    /* \ */
  ))
    return this.regexp_eatCharacterEscape(t) || this.regexp_eatClassSetReservedPunctuator(t) ? !0 : t.eat(
      98
      /* b */
    ) ? (t.lastIntValue = 8, !0) : (t.pos = e, !1);
  var n = t.current();
  return n < 0 || n === t.lookahead() && EB(n) || FB(n) ? !1 : (t.advance(), t.lastIntValue = n, !0);
};
function EB(t) {
  return t === 33 || t >= 35 && t <= 38 || t >= 42 && t <= 44 || t === 46 || t >= 58 && t <= 64 || t === 94 || t === 96 || t === 126;
}
function FB(t) {
  return t === 40 || t === 41 || t === 45 || t === 47 || t >= 91 && t <= 93 || t >= 123 && t <= 125;
}
Fe.regexp_eatClassSetReservedPunctuator = function(t) {
  var e = t.current();
  return BB(e) ? (t.lastIntValue = e, t.advance(), !0) : !1;
};
function BB(t) {
  return t === 33 || t === 35 || t === 37 || t === 38 || t === 44 || t === 45 || t >= 58 && t <= 62 || t === 64 || t === 96 || t === 126;
}
Fe.regexp_eatClassControlLetter = function(t) {
  var e = t.current();
  return wc(e) || e === 95 ? (t.lastIntValue = e % 32, t.advance(), !0) : !1;
};
Fe.regexp_eatHexEscapeSequence = function(t) {
  var e = t.pos;
  if (t.eat(
    120
    /* x */
  )) {
    if (this.regexp_eatFixedHexDigits(t, 2))
      return !0;
    t.switchU && t.raise("Invalid escape"), t.pos = e;
  }
  return !1;
};
Fe.regexp_eatDecimalDigits = function(t) {
  var e = t.pos, n = 0;
  for (t.lastIntValue = 0; wc(n = t.current()); )
    t.lastIntValue = 10 * t.lastIntValue + (n - 48), t.advance();
  return t.pos !== e;
};
function wc(t) {
  return t >= 48 && t <= 57;
}
Fe.regexp_eatHexDigits = function(t) {
  var e = t.pos, n = 0;
  for (t.lastIntValue = 0; v2(n = t.current()); )
    t.lastIntValue = 16 * t.lastIntValue + x2(n), t.advance();
  return t.pos !== e;
};
function v2(t) {
  return t >= 48 && t <= 57 || t >= 65 && t <= 70 || t >= 97 && t <= 102;
}
function x2(t) {
  return t >= 65 && t <= 70 ? 10 + (t - 65) : t >= 97 && t <= 102 ? 10 + (t - 97) : t - 48;
}
Fe.regexp_eatLegacyOctalEscapeSequence = function(t) {
  if (this.regexp_eatOctalDigit(t)) {
    var e = t.lastIntValue;
    if (this.regexp_eatOctalDigit(t)) {
      var n = t.lastIntValue;
      e <= 3 && this.regexp_eatOctalDigit(t) ? t.lastIntValue = e * 64 + n * 8 + t.lastIntValue : t.lastIntValue = e * 8 + n;
    } else
      t.lastIntValue = e;
    return !0;
  }
  return !1;
};
Fe.regexp_eatOctalDigit = function(t) {
  var e = t.current();
  return k2(e) ? (t.lastIntValue = e - 48, t.advance(), !0) : (t.lastIntValue = 0, !1);
};
function k2(t) {
  return t >= 48 && t <= 55;
}
Fe.regexp_eatFixedHexDigits = function(t, e) {
  var n = t.pos;
  t.lastIntValue = 0;
  for (var r = 0; r < e; ++r) {
    var i = t.current();
    if (!v2(i))
      return t.pos = n, !1;
    t.lastIntValue = 16 * t.lastIntValue + x2(i), t.advance();
  }
  return !0;
};
var wd = function(e) {
  this.type = e.type, this.value = e.value, this.start = e.start, this.end = e.end, e.options.locations && (this.loc = new vc(e, e.startLoc, e.endLoc)), e.options.ranges && (this.range = [e.start, e.end]);
}, st = pn.prototype;
st.next = function(t) {
  !t && this.type.keyword && this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword " + this.type.keyword), this.options.onToken && this.options.onToken(new wd(this)), this.lastTokEnd = this.end, this.lastTokStart = this.start, this.lastTokEndLoc = this.endLoc, this.lastTokStartLoc = this.startLoc, this.nextToken();
};
st.getToken = function() {
  return this.next(), new wd(this);
};
typeof Symbol < "u" && (st[Symbol.iterator] = function() {
  var t = this;
  return {
    next: function() {
      var e = t.getToken();
      return {
        done: e.type === F.eof,
        value: e
      };
    }
  };
});
st.nextToken = function() {
  var t = this.curContext();
  if ((!t || !t.preserveSpace) && this.skipSpace(), this.start = this.pos, this.options.locations && (this.startLoc = this.curPosition()), this.pos >= this.input.length)
    return this.finishToken(F.eof);
  if (t.override)
    return t.override(this);
  this.readToken(this.fullCharCodeAtPos());
};
st.readToken = function(t) {
  return Ei(t, this.options.ecmaVersion >= 6) || t === 92 ? this.readWord() : this.getTokenFromCode(t);
};
st.fullCharCodeAtPos = function() {
  var t = this.input.charCodeAt(this.pos);
  if (t <= 55295 || t >= 56320)
    return t;
  var e = this.input.charCodeAt(this.pos + 1);
  return e <= 56319 || e >= 57344 ? t : (t << 10) + e - 56613888;
};
st.skipBlockComment = function() {
  var t = this.options.onComment && this.curPosition(), e = this.pos, n = this.input.indexOf("*/", this.pos += 2);
  if (n === -1 && this.raise(this.pos - 2, "Unterminated comment"), this.pos = n + 2, this.options.locations)
    for (var r = void 0, i = e; (r = Wk(this.input, i, this.pos)) > -1; )
      ++this.curLine, i = this.lineStart = r;
  this.options.onComment && this.options.onComment(
    !0,
    this.input.slice(e + 2, n),
    e,
    this.pos,
    t,
    this.curPosition()
  );
};
st.skipLineComment = function(t) {
  for (var e = this.pos, n = this.options.onComment && this.curPosition(), r = this.input.charCodeAt(this.pos += t); this.pos < this.input.length && !Ba(r); )
    r = this.input.charCodeAt(++this.pos);
  this.options.onComment && this.options.onComment(
    !1,
    this.input.slice(e + t, this.pos),
    e,
    this.pos,
    n,
    this.curPosition()
  );
};
st.skipSpace = function() {
  e: for (; this.pos < this.input.length; ) {
    var t = this.input.charCodeAt(this.pos);
    switch (t) {
      case 32:
      case 160:
        ++this.pos;
        break;
      case 13:
        this.input.charCodeAt(this.pos + 1) === 10 && ++this.pos;
      case 10:
      case 8232:
      case 8233:
        ++this.pos, this.options.locations && (++this.curLine, this.lineStart = this.pos);
        break;
      case 47:
        switch (this.input.charCodeAt(this.pos + 1)) {
          case 42:
            this.skipBlockComment();
            break;
          case 47:
            this.skipLineComment(2);
            break;
          default:
            break e;
        }
        break;
      default:
        if (t > 8 && t < 14 || t >= 5760 && qk.test(String.fromCharCode(t)))
          ++this.pos;
        else
          break e;
    }
  }
};
st.finishToken = function(t, e) {
  this.end = this.pos, this.options.locations && (this.endLoc = this.curPosition());
  var n = this.type;
  this.type = t, this.value = e, this.updateContext(n);
};
st.readToken_dot = function() {
  var t = this.input.charCodeAt(this.pos + 1);
  if (t >= 48 && t <= 57)
    return this.readNumber(!0);
  var e = this.input.charCodeAt(this.pos + 2);
  return this.options.ecmaVersion >= 6 && t === 46 && e === 46 ? (this.pos += 3, this.finishToken(F.ellipsis)) : (++this.pos, this.finishToken(F.dot));
};
st.readToken_slash = function() {
  var t = this.input.charCodeAt(this.pos + 1);
  return this.exprAllowed ? (++this.pos, this.readRegexp()) : t === 61 ? this.finishOp(F.assign, 2) : this.finishOp(F.slash, 1);
};
st.readToken_mult_modulo_exp = function(t) {
  var e = this.input.charCodeAt(this.pos + 1), n = 1, r = t === 42 ? F.star : F.modulo;
  return this.options.ecmaVersion >= 7 && t === 42 && e === 42 && (++n, r = F.starstar, e = this.input.charCodeAt(this.pos + 2)), e === 61 ? this.finishOp(F.assign, n + 1) : this.finishOp(r, n);
};
st.readToken_pipe_amp = function(t) {
  var e = this.input.charCodeAt(this.pos + 1);
  if (e === t) {
    if (this.options.ecmaVersion >= 12) {
      var n = this.input.charCodeAt(this.pos + 2);
      if (n === 61)
        return this.finishOp(F.assign, 3);
    }
    return this.finishOp(t === 124 ? F.logicalOR : F.logicalAND, 2);
  }
  return e === 61 ? this.finishOp(F.assign, 2) : this.finishOp(t === 124 ? F.bitwiseOR : F.bitwiseAND, 1);
};
st.readToken_caret = function() {
  var t = this.input.charCodeAt(this.pos + 1);
  return t === 61 ? this.finishOp(F.assign, 2) : this.finishOp(F.bitwiseXOR, 1);
};
st.readToken_plus_min = function(t) {
  var e = this.input.charCodeAt(this.pos + 1);
  return e === t ? e === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 && (this.lastTokEnd === 0 || Mr.test(this.input.slice(this.lastTokEnd, this.pos))) ? (this.skipLineComment(3), this.skipSpace(), this.nextToken()) : this.finishOp(F.incDec, 2) : e === 61 ? this.finishOp(F.assign, 2) : this.finishOp(F.plusMin, 1);
};
st.readToken_lt_gt = function(t) {
  var e = this.input.charCodeAt(this.pos + 1), n = 1;
  return e === t ? (n = t === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2, this.input.charCodeAt(this.pos + n) === 61 ? this.finishOp(F.assign, n + 1) : this.finishOp(F.bitShift, n)) : e === 33 && t === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 && this.input.charCodeAt(this.pos + 3) === 45 ? (this.skipLineComment(4), this.skipSpace(), this.nextToken()) : (e === 61 && (n = 2), this.finishOp(F.relational, n));
};
st.readToken_eq_excl = function(t) {
  var e = this.input.charCodeAt(this.pos + 1);
  return e === 61 ? this.finishOp(F.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) : t === 61 && e === 62 && this.options.ecmaVersion >= 6 ? (this.pos += 2, this.finishToken(F.arrow)) : this.finishOp(t === 61 ? F.eq : F.prefix, 1);
};
st.readToken_question = function() {
  var t = this.options.ecmaVersion;
  if (t >= 11) {
    var e = this.input.charCodeAt(this.pos + 1);
    if (e === 46) {
      var n = this.input.charCodeAt(this.pos + 2);
      if (n < 48 || n > 57)
        return this.finishOp(F.questionDot, 2);
    }
    if (e === 63) {
      if (t >= 12) {
        var r = this.input.charCodeAt(this.pos + 2);
        if (r === 61)
          return this.finishOp(F.assign, 3);
      }
      return this.finishOp(F.coalesce, 2);
    }
  }
  return this.finishOp(F.question, 1);
};
st.readToken_numberSign = function() {
  var t = this.options.ecmaVersion, e = 35;
  if (t >= 13 && (++this.pos, e = this.fullCharCodeAtPos(), Ei(e, !0) || e === 92))
    return this.finishToken(F.privateId, this.readWord1());
  this.raise(this.pos, "Unexpected character '" + Fi(e) + "'");
};
st.getTokenFromCode = function(t) {
  switch (t) {
    // The interpretation of a dot depends on whether it is followed
    // by a digit or another two dots.
    case 46:
      return this.readToken_dot();
    // Punctuation tokens.
    case 40:
      return ++this.pos, this.finishToken(F.parenL);
    case 41:
      return ++this.pos, this.finishToken(F.parenR);
    case 59:
      return ++this.pos, this.finishToken(F.semi);
    case 44:
      return ++this.pos, this.finishToken(F.comma);
    case 91:
      return ++this.pos, this.finishToken(F.bracketL);
    case 93:
      return ++this.pos, this.finishToken(F.bracketR);
    case 123:
      return ++this.pos, this.finishToken(F.braceL);
    case 125:
      return ++this.pos, this.finishToken(F.braceR);
    case 58:
      return ++this.pos, this.finishToken(F.colon);
    case 96:
      if (this.options.ecmaVersion < 6)
        break;
      return ++this.pos, this.finishToken(F.backQuote);
    case 48:
      var e = this.input.charCodeAt(this.pos + 1);
      if (e === 120 || e === 88)
        return this.readRadixNumber(16);
      if (this.options.ecmaVersion >= 6) {
        if (e === 111 || e === 79)
          return this.readRadixNumber(8);
        if (e === 98 || e === 66)
          return this.readRadixNumber(2);
      }
    // Anything else beginning with a digit is an integer, octal
    // number, or float.
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      return this.readNumber(!1);
    // Quotes produce strings.
    case 34:
    case 39:
      return this.readString(t);
    // Operators are parsed inline in tiny state machines. '=' (61) is
    // often referred to. `finishOp` simply skips the amount of
    // characters it is given as second argument, and returns a token
    // of the type given by its first argument.
    case 47:
      return this.readToken_slash();
    case 37:
    case 42:
      return this.readToken_mult_modulo_exp(t);
    case 124:
    case 38:
      return this.readToken_pipe_amp(t);
    case 94:
      return this.readToken_caret();
    case 43:
    case 45:
      return this.readToken_plus_min(t);
    case 60:
    case 62:
      return this.readToken_lt_gt(t);
    case 61:
    case 33:
      return this.readToken_eq_excl(t);
    case 63:
      return this.readToken_question();
    case 126:
      return this.finishOp(F.prefix, 1);
    case 35:
      return this.readToken_numberSign();
  }
  this.raise(this.pos, "Unexpected character '" + Fi(t) + "'");
};
st.finishOp = function(t, e) {
  var n = this.input.slice(this.pos, this.pos + e);
  return this.pos += e, this.finishToken(t, n);
};
st.readRegexp = function() {
  for (var t, e, n = this.pos; ; ) {
    this.pos >= this.input.length && this.raise(n, "Unterminated regular expression");
    var r = this.input.charAt(this.pos);
    if (Mr.test(r) && this.raise(n, "Unterminated regular expression"), t)
      t = !1;
    else {
      if (r === "[")
        e = !0;
      else if (r === "]" && e)
        e = !1;
      else if (r === "/" && !e)
        break;
      t = r === "\\";
    }
    ++this.pos;
  }
  var i = this.input.slice(n, this.pos);
  ++this.pos;
  var s = this.pos, a = this.readWord1();
  this.containsEsc && this.unexpected(s);
  var o = this.regexpState || (this.regexpState = new di(this));
  o.reset(n, i, a), this.validateRegExpFlags(o), this.validateRegExpPattern(o);
  var l = null;
  try {
    l = new RegExp(i, a);
  } catch {
  }
  return this.finishToken(F.regexp, { pattern: i, flags: a, value: l });
};
st.readInt = function(t, e, n) {
  for (var r = this.options.ecmaVersion >= 12 && e === void 0, i = n && this.input.charCodeAt(this.pos) === 48, s = this.pos, a = 0, o = 0, l = 0, c = e ?? 1 / 0; l < c; ++l, ++this.pos) {
    var h = this.input.charCodeAt(this.pos), f = void 0;
    if (r && h === 95) {
      i && this.raiseRecoverable(this.pos, "Numeric separator is not allowed in legacy octal numeric literals"), o === 95 && this.raiseRecoverable(this.pos, "Numeric separator must be exactly one underscore"), l === 0 && this.raiseRecoverable(this.pos, "Numeric separator is not allowed at the first of digits"), o = h;
      continue;
    }
    if (h >= 97 ? f = h - 97 + 10 : h >= 65 ? f = h - 65 + 10 : h >= 48 && h <= 57 ? f = h - 48 : f = 1 / 0, f >= t)
      break;
    o = h, a = a * t + f;
  }
  return r && o === 95 && this.raiseRecoverable(this.pos - 1, "Numeric separator is not allowed at the last of digits"), this.pos === s || e != null && this.pos - s !== e ? null : a;
};
function MB(t, e) {
  return e ? parseInt(t, 8) : parseFloat(t.replace(/_/g, ""));
}
function w2(t) {
  return typeof BigInt != "function" ? null : BigInt(t.replace(/_/g, ""));
}
st.readRadixNumber = function(t) {
  var e = this.pos;
  this.pos += 2;
  var n = this.readInt(t);
  return n == null && this.raise(this.start + 2, "Expected number in radix " + t), this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110 ? (n = w2(this.input.slice(e, this.pos)), ++this.pos) : Ei(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifier directly after number"), this.finishToken(F.num, n);
};
st.readNumber = function(t) {
  var e = this.pos;
  !t && this.readInt(10, void 0, !0) === null && this.raise(e, "Invalid number");
  var n = this.pos - e >= 2 && this.input.charCodeAt(e) === 48;
  n && this.strict && this.raise(e, "Invalid number");
  var r = this.input.charCodeAt(this.pos);
  if (!n && !t && this.options.ecmaVersion >= 11 && r === 110) {
    var i = w2(this.input.slice(e, this.pos));
    return ++this.pos, Ei(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifier directly after number"), this.finishToken(F.num, i);
  }
  n && /[89]/.test(this.input.slice(e, this.pos)) && (n = !1), r === 46 && !n && (++this.pos, this.readInt(10), r = this.input.charCodeAt(this.pos)), (r === 69 || r === 101) && !n && (r = this.input.charCodeAt(++this.pos), (r === 43 || r === 45) && ++this.pos, this.readInt(10) === null && this.raise(e, "Invalid number")), Ei(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifier directly after number");
  var s = MB(this.input.slice(e, this.pos), n);
  return this.finishToken(F.num, s);
};
st.readCodePoint = function() {
  var t = this.input.charCodeAt(this.pos), e;
  if (t === 123) {
    this.options.ecmaVersion < 6 && this.unexpected();
    var n = ++this.pos;
    e = this.readHexChar(this.input.indexOf("}", this.pos) - this.pos), ++this.pos, e > 1114111 && this.invalidStringToken(n, "Code point out of bounds");
  } else
    e = this.readHexChar(4);
  return e;
};
st.readString = function(t) {
  for (var e = "", n = ++this.pos; ; ) {
    this.pos >= this.input.length && this.raise(this.start, "Unterminated string constant");
    var r = this.input.charCodeAt(this.pos);
    if (r === t)
      break;
    r === 92 ? (e += this.input.slice(n, this.pos), e += this.readEscapedChar(!1), n = this.pos) : r === 8232 || r === 8233 ? (this.options.ecmaVersion < 10 && this.raise(this.start, "Unterminated string constant"), ++this.pos, this.options.locations && (this.curLine++, this.lineStart = this.pos)) : (Ba(r) && this.raise(this.start, "Unterminated string constant"), ++this.pos);
  }
  return e += this.input.slice(n, this.pos++), this.finishToken(F.string, e);
};
var C2 = {};
st.tryReadTemplateToken = function() {
  this.inTemplateElement = !0;
  try {
    this.readTmplToken();
  } catch (t) {
    if (t === C2)
      this.readInvalidTemplateToken();
    else
      throw t;
  }
  this.inTemplateElement = !1;
};
st.invalidStringToken = function(t, e) {
  if (this.inTemplateElement && this.options.ecmaVersion >= 9)
    throw C2;
  this.raise(t, e);
};
st.readTmplToken = function() {
  for (var t = "", e = this.pos; ; ) {
    this.pos >= this.input.length && this.raise(this.start, "Unterminated template");
    var n = this.input.charCodeAt(this.pos);
    if (n === 96 || n === 36 && this.input.charCodeAt(this.pos + 1) === 123)
      return this.pos === this.start && (this.type === F.template || this.type === F.invalidTemplate) ? n === 36 ? (this.pos += 2, this.finishToken(F.dollarBraceL)) : (++this.pos, this.finishToken(F.backQuote)) : (t += this.input.slice(e, this.pos), this.finishToken(F.template, t));
    if (n === 92)
      t += this.input.slice(e, this.pos), t += this.readEscapedChar(!0), e = this.pos;
    else if (Ba(n)) {
      switch (t += this.input.slice(e, this.pos), ++this.pos, n) {
        case 13:
          this.input.charCodeAt(this.pos) === 10 && ++this.pos;
        case 10:
          t += `
`;
          break;
        default:
          t += String.fromCharCode(n);
          break;
      }
      this.options.locations && (++this.curLine, this.lineStart = this.pos), e = this.pos;
    } else
      ++this.pos;
  }
};
st.readInvalidTemplateToken = function() {
  for (; this.pos < this.input.length; this.pos++)
    switch (this.input[this.pos]) {
      case "\\":
        ++this.pos;
        break;
      case "$":
        if (this.input[this.pos + 1] !== "{")
          break;
      // fall through
      case "`":
        return this.finishToken(F.invalidTemplate, this.input.slice(this.start, this.pos));
      case "\r":
        this.input[this.pos + 1] === `
` && ++this.pos;
      // fall through
      case `
`:
      case "\u2028":
      case "\u2029":
        ++this.curLine, this.lineStart = this.pos + 1;
        break;
    }
  this.raise(this.start, "Unterminated template");
};
st.readEscapedChar = function(t) {
  var e = this.input.charCodeAt(++this.pos);
  switch (++this.pos, e) {
    case 110:
      return `
`;
    // 'n' -> '\n'
    case 114:
      return "\r";
    // 'r' -> '\r'
    case 120:
      return String.fromCharCode(this.readHexChar(2));
    // 'x'
    case 117:
      return Fi(this.readCodePoint());
    // 'u'
    case 116:
      return "	";
    // 't' -> '\t'
    case 98:
      return "\b";
    // 'b' -> '\b'
    case 118:
      return "\v";
    // 'v' -> '\u000b'
    case 102:
      return "\f";
    // 'f' -> '\f'
    case 13:
      this.input.charCodeAt(this.pos) === 10 && ++this.pos;
    // '\r\n'
    case 10:
      return this.options.locations && (this.lineStart = this.pos, ++this.curLine), "";
    case 56:
    case 57:
      if (this.strict && this.invalidStringToken(
        this.pos - 1,
        "Invalid escape sequence"
      ), t) {
        var n = this.pos - 1;
        this.invalidStringToken(
          n,
          "Invalid escape sequence in template string"
        );
      }
    default:
      if (e >= 48 && e <= 55) {
        var r = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0], i = parseInt(r, 8);
        return i > 255 && (r = r.slice(0, -1), i = parseInt(r, 8)), this.pos += r.length - 1, e = this.input.charCodeAt(this.pos), (r !== "0" || e === 56 || e === 57) && (this.strict || t) && this.invalidStringToken(
          this.pos - 1 - r.length,
          t ? "Octal literal in template string" : "Octal literal in strict mode"
        ), String.fromCharCode(i);
      }
      return Ba(e) ? (this.options.locations && (this.lineStart = this.pos, ++this.curLine), "") : String.fromCharCode(e);
  }
};
st.readHexChar = function(t) {
  var e = this.pos, n = this.readInt(16, t);
  return n === null && this.invalidStringToken(e, "Bad character escape sequence"), n;
};
st.readWord1 = function() {
  this.containsEsc = !1;
  for (var t = "", e = !0, n = this.pos, r = this.options.ecmaVersion >= 6; this.pos < this.input.length; ) {
    var i = this.fullCharCodeAtPos();
    if (ma(i, r))
      this.pos += i <= 65535 ? 1 : 2;
    else if (i === 92) {
      this.containsEsc = !0, t += this.input.slice(n, this.pos);
      var s = this.pos;
      this.input.charCodeAt(++this.pos) !== 117 && this.invalidStringToken(this.pos, "Expecting Unicode escape sequence \\uXXXX"), ++this.pos;
      var a = this.readCodePoint();
      (e ? Ei : ma)(a, r) || this.invalidStringToken(s, "Invalid Unicode escape"), t += Fi(a), n = this.pos;
    } else
      break;
    e = !1;
  }
  return t + this.input.slice(n, this.pos);
};
st.readWord = function() {
  var t = this.readWord1(), e = F.name;
  return this.keywords.test(t) && (e = gd[t]), this.finishToken(e, t);
};
var QB = "8.14.0";
pn.acorn = {
  Parser: pn,
  version: QB,
  defaultOptions: xp,
  Position: Oo,
  SourceLocation: vc,
  getLineInfo: Gk,
  Node: kc,
  TokenType: ft,
  tokTypes: F,
  keywordTypes: gd,
  TokContext: Nr,
  tokContexts: It,
  isIdentifierChar: ma,
  isIdentifierStart: Ei,
  Token: wd,
  isNewLine: Ba,
  lineBreak: Mr,
  lineBreakG: tB,
  nonASCIIwhitespace: qk
};
function TB(t, e) {
  return pn.parse(t, e);
}
var jB = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function _B(t) {
  return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t;
}
function b$(t) {
  if (t.__esModule) return t;
  var e = t.default;
  if (typeof e == "function") {
    var n = function r() {
      return this instanceof r ? Reflect.construct(e, arguments, this.constructor) : e.apply(this, arguments);
    };
    n.prototype = e.prototype;
  } else n = {};
  return Object.defineProperty(n, "__esModule", { value: !0 }), Object.keys(t).forEach(function(r) {
    var i = Object.getOwnPropertyDescriptor(t, r);
    Object.defineProperty(n, r, i.get ? i : {
      enumerable: !0,
      get: function() {
        return t[r];
      }
    });
  }), n;
}
var mh = {}, gh = {}, Nm;
function RB() {
  return Nm || (Nm = 1, function(t) {
    (function e(n) {
      var r, i, s, a, o, l;
      function c(B) {
        var $ = {}, N, U;
        for (N in B)
          B.hasOwnProperty(N) && (U = B[N], typeof U == "object" && U !== null ? $[N] = c(U) : $[N] = U);
        return $;
      }
      function h(B, $) {
        var N, U, se, K;
        for (U = B.length, se = 0; U; )
          N = U >>> 1, K = se + N, $(B[K]) ? U = N : (se = K + 1, U -= N + 1);
        return se;
      }
      r = {
        AssignmentExpression: "AssignmentExpression",
        AssignmentPattern: "AssignmentPattern",
        ArrayExpression: "ArrayExpression",
        ArrayPattern: "ArrayPattern",
        ArrowFunctionExpression: "ArrowFunctionExpression",
        AwaitExpression: "AwaitExpression",
        // CAUTION: It's deferred to ES7.
        BlockStatement: "BlockStatement",
        BinaryExpression: "BinaryExpression",
        BreakStatement: "BreakStatement",
        CallExpression: "CallExpression",
        CatchClause: "CatchClause",
        ChainExpression: "ChainExpression",
        ClassBody: "ClassBody",
        ClassDeclaration: "ClassDeclaration",
        ClassExpression: "ClassExpression",
        ComprehensionBlock: "ComprehensionBlock",
        // CAUTION: It's deferred to ES7.
        ComprehensionExpression: "ComprehensionExpression",
        // CAUTION: It's deferred to ES7.
        ConditionalExpression: "ConditionalExpression",
        ContinueStatement: "ContinueStatement",
        DebuggerStatement: "DebuggerStatement",
        DirectiveStatement: "DirectiveStatement",
        DoWhileStatement: "DoWhileStatement",
        EmptyStatement: "EmptyStatement",
        ExportAllDeclaration: "ExportAllDeclaration",
        ExportDefaultDeclaration: "ExportDefaultDeclaration",
        ExportNamedDeclaration: "ExportNamedDeclaration",
        ExportSpecifier: "ExportSpecifier",
        ExpressionStatement: "ExpressionStatement",
        ForStatement: "ForStatement",
        ForInStatement: "ForInStatement",
        ForOfStatement: "ForOfStatement",
        FunctionDeclaration: "FunctionDeclaration",
        FunctionExpression: "FunctionExpression",
        GeneratorExpression: "GeneratorExpression",
        // CAUTION: It's deferred to ES7.
        Identifier: "Identifier",
        IfStatement: "IfStatement",
        ImportExpression: "ImportExpression",
        ImportDeclaration: "ImportDeclaration",
        ImportDefaultSpecifier: "ImportDefaultSpecifier",
        ImportNamespaceSpecifier: "ImportNamespaceSpecifier",
        ImportSpecifier: "ImportSpecifier",
        Literal: "Literal",
        LabeledStatement: "LabeledStatement",
        LogicalExpression: "LogicalExpression",
        MemberExpression: "MemberExpression",
        MetaProperty: "MetaProperty",
        MethodDefinition: "MethodDefinition",
        ModuleSpecifier: "ModuleSpecifier",
        NewExpression: "NewExpression",
        ObjectExpression: "ObjectExpression",
        ObjectPattern: "ObjectPattern",
        PrivateIdentifier: "PrivateIdentifier",
        Program: "Program",
        Property: "Property",
        PropertyDefinition: "PropertyDefinition",
        RestElement: "RestElement",
        ReturnStatement: "ReturnStatement",
        SequenceExpression: "SequenceExpression",
        SpreadElement: "SpreadElement",
        Super: "Super",
        SwitchStatement: "SwitchStatement",
        SwitchCase: "SwitchCase",
        TaggedTemplateExpression: "TaggedTemplateExpression",
        TemplateElement: "TemplateElement",
        TemplateLiteral: "TemplateLiteral",
        ThisExpression: "ThisExpression",
        ThrowStatement: "ThrowStatement",
        TryStatement: "TryStatement",
        UnaryExpression: "UnaryExpression",
        UpdateExpression: "UpdateExpression",
        VariableDeclaration: "VariableDeclaration",
        VariableDeclarator: "VariableDeclarator",
        WhileStatement: "WhileStatement",
        WithStatement: "WithStatement",
        YieldExpression: "YieldExpression"
      }, s = {
        AssignmentExpression: ["left", "right"],
        AssignmentPattern: ["left", "right"],
        ArrayExpression: ["elements"],
        ArrayPattern: ["elements"],
        ArrowFunctionExpression: ["params", "body"],
        AwaitExpression: ["argument"],
        // CAUTION: It's deferred to ES7.
        BlockStatement: ["body"],
        BinaryExpression: ["left", "right"],
        BreakStatement: ["label"],
        CallExpression: ["callee", "arguments"],
        CatchClause: ["param", "body"],
        ChainExpression: ["expression"],
        ClassBody: ["body"],
        ClassDeclaration: ["id", "superClass", "body"],
        ClassExpression: ["id", "superClass", "body"],
        ComprehensionBlock: ["left", "right"],
        // CAUTION: It's deferred to ES7.
        ComprehensionExpression: ["blocks", "filter", "body"],
        // CAUTION: It's deferred to ES7.
        ConditionalExpression: ["test", "consequent", "alternate"],
        ContinueStatement: ["label"],
        DebuggerStatement: [],
        DirectiveStatement: [],
        DoWhileStatement: ["body", "test"],
        EmptyStatement: [],
        ExportAllDeclaration: ["source"],
        ExportDefaultDeclaration: ["declaration"],
        ExportNamedDeclaration: ["declaration", "specifiers", "source"],
        ExportSpecifier: ["exported", "local"],
        ExpressionStatement: ["expression"],
        ForStatement: ["init", "test", "update", "body"],
        ForInStatement: ["left", "right", "body"],
        ForOfStatement: ["left", "right", "body"],
        FunctionDeclaration: ["id", "params", "body"],
        FunctionExpression: ["id", "params", "body"],
        GeneratorExpression: ["blocks", "filter", "body"],
        // CAUTION: It's deferred to ES7.
        Identifier: [],
        IfStatement: ["test", "consequent", "alternate"],
        ImportExpression: ["source"],
        ImportDeclaration: ["specifiers", "source"],
        ImportDefaultSpecifier: ["local"],
        ImportNamespaceSpecifier: ["local"],
        ImportSpecifier: ["imported", "local"],
        Literal: [],
        LabeledStatement: ["label", "body"],
        LogicalExpression: ["left", "right"],
        MemberExpression: ["object", "property"],
        MetaProperty: ["meta", "property"],
        MethodDefinition: ["key", "value"],
        ModuleSpecifier: [],
        NewExpression: ["callee", "arguments"],
        ObjectExpression: ["properties"],
        ObjectPattern: ["properties"],
        PrivateIdentifier: [],
        Program: ["body"],
        Property: ["key", "value"],
        PropertyDefinition: ["key", "value"],
        RestElement: ["argument"],
        ReturnStatement: ["argument"],
        SequenceExpression: ["expressions"],
        SpreadElement: ["argument"],
        Super: [],
        SwitchStatement: ["discriminant", "cases"],
        SwitchCase: ["test", "consequent"],
        TaggedTemplateExpression: ["tag", "quasi"],
        TemplateElement: [],
        TemplateLiteral: ["quasis", "expressions"],
        ThisExpression: [],
        ThrowStatement: ["argument"],
        TryStatement: ["block", "handler", "finalizer"],
        UnaryExpression: ["argument"],
        UpdateExpression: ["argument"],
        VariableDeclaration: ["declarations"],
        VariableDeclarator: ["id", "init"],
        WhileStatement: ["test", "body"],
        WithStatement: ["object", "body"],
        YieldExpression: ["argument"]
      }, a = {}, o = {}, l = {}, i = {
        Break: a,
        Skip: o,
        Remove: l
      };
      function f(B, $) {
        this.parent = B, this.key = $;
      }
      f.prototype.replace = function($) {
        this.parent[this.key] = $;
      }, f.prototype.remove = function() {
        return Array.isArray(this.parent) ? (this.parent.splice(this.key, 1), !0) : (this.replace(null), !1);
      };
      function m(B, $, N, U) {
        this.node = B, this.path = $, this.wrap = N, this.ref = U;
      }
      function y() {
      }
      y.prototype.path = function() {
        var $, N, U, se, K, ce;
        function H(ie, fe) {
          if (Array.isArray(fe))
            for (U = 0, se = fe.length; U < se; ++U)
              ie.push(fe[U]);
          else
            ie.push(fe);
        }
        if (!this.__current.path)
          return null;
        for (K = [], $ = 2, N = this.__leavelist.length; $ < N; ++$)
          ce = this.__leavelist[$], H(K, ce.path);
        return H(K, this.__current.path), K;
      }, y.prototype.type = function() {
        var B = this.current();
        return B.type || this.__current.wrap;
      }, y.prototype.parents = function() {
        var $, N, U;
        for (U = [], $ = 1, N = this.__leavelist.length; $ < N; ++$)
          U.push(this.__leavelist[$].node);
        return U;
      }, y.prototype.current = function() {
        return this.__current.node;
      }, y.prototype.__execute = function($, N) {
        var U, se;
        return se = void 0, U = this.__current, this.__current = N, this.__state = null, $ && (se = $.call(this, N.node, this.__leavelist[this.__leavelist.length - 1].node)), this.__current = U, se;
      }, y.prototype.notify = function($) {
        this.__state = $;
      }, y.prototype.skip = function() {
        this.notify(o);
      }, y.prototype.break = function() {
        this.notify(a);
      }, y.prototype.remove = function() {
        this.notify(l);
      }, y.prototype.__initialize = function(B, $) {
        this.visitor = $, this.root = B, this.__worklist = [], this.__leavelist = [], this.__current = null, this.__state = null, this.__fallback = null, $.fallback === "iteration" ? this.__fallback = Object.keys : typeof $.fallback == "function" && (this.__fallback = $.fallback), this.__keys = s, $.keys && (this.__keys = Object.assign(Object.create(this.__keys), $.keys));
      };
      function x(B) {
        return B == null ? !1 : typeof B == "object" && typeof B.type == "string";
      }
      function C(B, $) {
        return (B === r.ObjectExpression || B === r.ObjectPattern) && $ === "properties";
      }
      function S(B, $) {
        for (var N = B.length - 1; N >= 0; --N)
          if (B[N].node === $)
            return !0;
        return !1;
      }
      y.prototype.traverse = function($, N) {
        var U, se, K, ce, H, ie, fe, De, Ee, re, ke, Le;
        for (this.__initialize($, N), Le = {}, U = this.__worklist, se = this.__leavelist, U.push(new m($, null, null, null)), se.push(new m(null, null, null, null)); U.length; ) {
          if (K = U.pop(), K === Le) {
            if (K = se.pop(), ie = this.__execute(N.leave, K), this.__state === a || ie === a)
              return;
            continue;
          }
          if (K.node) {
            if (ie = this.__execute(N.enter, K), this.__state === a || ie === a)
              return;
            if (U.push(Le), se.push(K), this.__state === o || ie === o)
              continue;
            if (ce = K.node, H = ce.type || K.wrap, re = this.__keys[H], !re)
              if (this.__fallback)
                re = this.__fallback(ce);
              else
                throw new Error("Unknown node type " + H + ".");
            for (De = re.length; (De -= 1) >= 0; )
              if (fe = re[De], ke = ce[fe], !!ke) {
                if (Array.isArray(ke)) {
                  for (Ee = ke.length; (Ee -= 1) >= 0; )
                    if (ke[Ee] && !S(se, ke[Ee])) {
                      if (C(H, re[De]))
                        K = new m(ke[Ee], [fe, Ee], "Property", null);
                      else if (x(ke[Ee]))
                        K = new m(ke[Ee], [fe, Ee], null, null);
                      else
                        continue;
                      U.push(K);
                    }
                } else if (x(ke)) {
                  if (S(se, ke))
                    continue;
                  U.push(new m(ke, fe, null, null));
                }
              }
          }
        }
      }, y.prototype.replace = function($, N) {
        var U, se, K, ce, H, ie, fe, De, Ee, re, ke, Le, xe;
        function je(he) {
          var Pe, Pt, lt, We;
          if (he.ref.remove()) {
            for (Pt = he.ref.key, We = he.ref.parent, Pe = U.length; Pe--; )
              if (lt = U[Pe], lt.ref && lt.ref.parent === We) {
                if (lt.ref.key < Pt)
                  break;
                --lt.ref.key;
              }
          }
        }
        for (this.__initialize($, N), ke = {}, U = this.__worklist, se = this.__leavelist, Le = {
          root: $
        }, ie = new m($, null, null, new f(Le, "root")), U.push(ie), se.push(ie); U.length; ) {
          if (ie = U.pop(), ie === ke) {
            if (ie = se.pop(), H = this.__execute(N.leave, ie), H !== void 0 && H !== a && H !== o && H !== l && ie.ref.replace(H), (this.__state === l || H === l) && je(ie), this.__state === a || H === a)
              return Le.root;
            continue;
          }
          if (H = this.__execute(N.enter, ie), H !== void 0 && H !== a && H !== o && H !== l && (ie.ref.replace(H), ie.node = H), (this.__state === l || H === l) && (je(ie), ie.node = null), this.__state === a || H === a)
            return Le.root;
          if (K = ie.node, !!K && (U.push(ke), se.push(ie), !(this.__state === o || H === o))) {
            if (ce = K.type || ie.wrap, Ee = this.__keys[ce], !Ee)
              if (this.__fallback)
                Ee = this.__fallback(K);
              else
                throw new Error("Unknown node type " + ce + ".");
            for (fe = Ee.length; (fe -= 1) >= 0; )
              if (xe = Ee[fe], re = K[xe], !!re)
                if (Array.isArray(re)) {
                  for (De = re.length; (De -= 1) >= 0; )
                    if (re[De]) {
                      if (C(ce, Ee[fe]))
                        ie = new m(re[De], [xe, De], "Property", new f(re, De));
                      else if (x(re[De]))
                        ie = new m(re[De], [xe, De], null, new f(re, De));
                      else
                        continue;
                      U.push(ie);
                    }
                } else x(re) && U.push(new m(re, xe, null, new f(K, xe)));
          }
        }
        return Le.root;
      };
      function M(B, $) {
        var N = new y();
        return N.traverse(B, $);
      }
      function Z(B, $) {
        var N = new y();
        return N.replace(B, $);
      }
      function q(B, $) {
        var N;
        return N = h($, function(se) {
          return se.range[0] > B.range[0];
        }), B.extendedRange = [B.range[0], B.range[1]], N !== $.length && (B.extendedRange[1] = $[N].range[0]), N -= 1, N >= 0 && (B.extendedRange[0] = $[N].range[1]), B;
      }
      function _(B, $, N) {
        var U = [], se, K, ce, H;
        if (!B.range)
          throw new Error("attachComments needs range information");
        if (!N.length) {
          if ($.length) {
            for (ce = 0, K = $.length; ce < K; ce += 1)
              se = c($[ce]), se.extendedRange = [0, B.range[0]], U.push(se);
            B.leadingComments = U;
          }
          return B;
        }
        for (ce = 0, K = $.length; ce < K; ce += 1)
          U.push(q(c($[ce]), N));
        return H = 0, M(B, {
          enter: function(ie) {
            for (var fe; H < U.length && (fe = U[H], !(fe.extendedRange[1] > ie.range[0])); )
              fe.extendedRange[1] === ie.range[0] ? (ie.leadingComments || (ie.leadingComments = []), ie.leadingComments.push(fe), U.splice(H, 1)) : H += 1;
            if (H === U.length)
              return i.Break;
            if (U[H].extendedRange[0] > ie.range[1])
              return i.Skip;
          }
        }), H = 0, M(B, {
          leave: function(ie) {
            for (var fe; H < U.length && (fe = U[H], !(ie.range[1] < fe.extendedRange[0])); )
              ie.range[1] === fe.extendedRange[0] ? (ie.trailingComments || (ie.trailingComments = []), ie.trailingComments.push(fe), U.splice(H, 1)) : H += 1;
            if (H === U.length)
              return i.Break;
            if (U[H].extendedRange[0] > ie.range[1])
              return i.Skip;
          }
        }), B;
      }
      return n.Syntax = r, n.traverse = M, n.replace = Z, n.attachComments = _, n.VisitorKeys = s, n.VisitorOption = i, n.Controller = y, n.cloneEnvironment = function() {
        return e({});
      }, n;
    })(t);
  }(gh)), gh;
}
var Ga = {}, bh = { exports: {} }, Vm;
function $B() {
  return Vm || (Vm = 1, function() {
    function t(a) {
      if (a == null)
        return !1;
      switch (a.type) {
        case "ArrayExpression":
        case "AssignmentExpression":
        case "BinaryExpression":
        case "CallExpression":
        case "ConditionalExpression":
        case "FunctionExpression":
        case "Identifier":
        case "Literal":
        case "LogicalExpression":
        case "MemberExpression":
        case "NewExpression":
        case "ObjectExpression":
        case "SequenceExpression":
        case "ThisExpression":
        case "UnaryExpression":
        case "UpdateExpression":
          return !0;
      }
      return !1;
    }
    function e(a) {
      if (a == null)
        return !1;
      switch (a.type) {
        case "DoWhileStatement":
        case "ForInStatement":
        case "ForStatement":
        case "WhileStatement":
          return !0;
      }
      return !1;
    }
    function n(a) {
      if (a == null)
        return !1;
      switch (a.type) {
        case "BlockStatement":
        case "BreakStatement":
        case "ContinueStatement":
        case "DebuggerStatement":
        case "DoWhileStatement":
        case "EmptyStatement":
        case "ExpressionStatement":
        case "ForInStatement":
        case "ForStatement":
        case "IfStatement":
        case "LabeledStatement":
        case "ReturnStatement":
        case "SwitchStatement":
        case "ThrowStatement":
        case "TryStatement":
        case "VariableDeclaration":
        case "WhileStatement":
        case "WithStatement":
          return !0;
      }
      return !1;
    }
    function r(a) {
      return n(a) || a != null && a.type === "FunctionDeclaration";
    }
    function i(a) {
      switch (a.type) {
        case "IfStatement":
          return a.alternate != null ? a.alternate : a.consequent;
        case "LabeledStatement":
        case "ForStatement":
        case "ForInStatement":
        case "WhileStatement":
        case "WithStatement":
          return a.body;
      }
      return null;
    }
    function s(a) {
      var o;
      if (a.type !== "IfStatement" || a.alternate == null)
        return !1;
      o = a.consequent;
      do {
        if (o.type === "IfStatement" && o.alternate == null)
          return !0;
        o = i(o);
      } while (o);
      return !1;
    }
    bh.exports = {
      isExpression: t,
      isStatement: n,
      isIterationStatement: e,
      isSourceElement: r,
      isProblematicIfStatement: s,
      trailingStatement: i
    };
  }()), bh.exports;
}
var yh = { exports: {} }, Xm;
function S2() {
  return Xm || (Xm = 1, function() {
    var t, e, n, r, i, s;
    e = {
      // ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierStart:
      NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
      // ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierPart:
      NonAsciiIdentifierPart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/
    }, t = {
      // ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierStart:
      NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,
      // ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierPart:
      NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/
    };
    function a(S) {
      return 48 <= S && S <= 57;
    }
    function o(S) {
      return 48 <= S && S <= 57 || // 0..9
      97 <= S && S <= 102 || // a..f
      65 <= S && S <= 70;
    }
    function l(S) {
      return S >= 48 && S <= 55;
    }
    n = [
      5760,
      8192,
      8193,
      8194,
      8195,
      8196,
      8197,
      8198,
      8199,
      8200,
      8201,
      8202,
      8239,
      8287,
      12288,
      65279
    ];
    function c(S) {
      return S === 32 || S === 9 || S === 11 || S === 12 || S === 160 || S >= 5760 && n.indexOf(S) >= 0;
    }
    function h(S) {
      return S === 10 || S === 13 || S === 8232 || S === 8233;
    }
    function f(S) {
      if (S <= 65535)
        return String.fromCharCode(S);
      var M = String.fromCharCode(Math.floor((S - 65536) / 1024) + 55296), Z = String.fromCharCode((S - 65536) % 1024 + 56320);
      return M + Z;
    }
    for (r = new Array(128), s = 0; s < 128; ++s)
      r[s] = s >= 97 && s <= 122 || // a..z
      s >= 65 && s <= 90 || // A..Z
      s === 36 || s === 95;
    for (i = new Array(128), s = 0; s < 128; ++s)
      i[s] = s >= 97 && s <= 122 || // a..z
      s >= 65 && s <= 90 || // A..Z
      s >= 48 && s <= 57 || // 0..9
      s === 36 || s === 95;
    function m(S) {
      return S < 128 ? r[S] : e.NonAsciiIdentifierStart.test(f(S));
    }
    function y(S) {
      return S < 128 ? i[S] : e.NonAsciiIdentifierPart.test(f(S));
    }
    function x(S) {
      return S < 128 ? r[S] : t.NonAsciiIdentifierStart.test(f(S));
    }
    function C(S) {
      return S < 128 ? i[S] : t.NonAsciiIdentifierPart.test(f(S));
    }
    yh.exports = {
      isDecimalDigit: a,
      isHexDigit: o,
      isOctalDigit: l,
      isWhiteSpace: c,
      isLineTerminator: h,
      isIdentifierStartES5: m,
      isIdentifierPartES5: y,
      isIdentifierStartES6: x,
      isIdentifierPartES6: C
    };
  }()), yh.exports;
}
var Oh = { exports: {} }, Wm;
function ZB() {
  return Wm || (Wm = 1, function() {
    var t = S2();
    function e(m) {
      switch (m) {
        case "implements":
        case "interface":
        case "package":
        case "private":
        case "protected":
        case "public":
        case "static":
        case "let":
          return !0;
        default:
          return !1;
      }
    }
    function n(m, y) {
      return !y && m === "yield" ? !1 : r(m, y);
    }
    function r(m, y) {
      if (y && e(m))
        return !0;
      switch (m.length) {
        case 2:
          return m === "if" || m === "in" || m === "do";
        case 3:
          return m === "var" || m === "for" || m === "new" || m === "try";
        case 4:
          return m === "this" || m === "else" || m === "case" || m === "void" || m === "with" || m === "enum";
        case 5:
          return m === "while" || m === "break" || m === "catch" || m === "throw" || m === "const" || m === "yield" || m === "class" || m === "super";
        case 6:
          return m === "return" || m === "typeof" || m === "delete" || m === "switch" || m === "export" || m === "import";
        case 7:
          return m === "default" || m === "finally" || m === "extends";
        case 8:
          return m === "function" || m === "continue" || m === "debugger";
        case 10:
          return m === "instanceof";
        default:
          return !1;
      }
    }
    function i(m, y) {
      return m === "null" || m === "true" || m === "false" || n(m, y);
    }
    function s(m, y) {
      return m === "null" || m === "true" || m === "false" || r(m, y);
    }
    function a(m) {
      return m === "eval" || m === "arguments";
    }
    function o(m) {
      var y, x, C;
      if (m.length === 0 || (C = m.charCodeAt(0), !t.isIdentifierStartES5(C)))
        return !1;
      for (y = 1, x = m.length; y < x; ++y)
        if (C = m.charCodeAt(y), !t.isIdentifierPartES5(C))
          return !1;
      return !0;
    }
    function l(m, y) {
      return (m - 55296) * 1024 + (y - 56320) + 65536;
    }
    function c(m) {
      var y, x, C, S, M;
      if (m.length === 0)
        return !1;
      for (M = t.isIdentifierStartES6, y = 0, x = m.length; y < x; ++y) {
        if (C = m.charCodeAt(y), 55296 <= C && C <= 56319) {
          if (++y, y >= x || (S = m.charCodeAt(y), !(56320 <= S && S <= 57343)))
            return !1;
          C = l(C, S);
        }
        if (!M(C))
          return !1;
        M = t.isIdentifierPartES6;
      }
      return !0;
    }
    function h(m, y) {
      return o(m) && !i(m, y);
    }
    function f(m, y) {
      return c(m) && !s(m, y);
    }
    Oh.exports = {
      isKeywordES5: n,
      isKeywordES6: r,
      isReservedWordES5: i,
      isReservedWordES6: s,
      isRestrictedWord: a,
      isIdentifierNameES5: o,
      isIdentifierNameES6: c,
      isIdentifierES5: h,
      isIdentifierES6: f
    };
  }()), Oh.exports;
}
var qm;
function LB() {
  return qm || (qm = 1, function() {
    Ga.ast = $B(), Ga.code = S2(), Ga.keyword = ZB();
  }()), Ga;
}
var za = {}, vh = {}, wl = {}, Cl = {}, Um;
function IB() {
  if (Um) return Cl;
  Um = 1;
  var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");
  return Cl.encode = function(e) {
    if (0 <= e && e < t.length)
      return t[e];
    throw new TypeError("Must be between 0 and 63: " + e);
  }, Cl.decode = function(e) {
    var n = 65, r = 90, i = 97, s = 122, a = 48, o = 57, l = 43, c = 47, h = 26, f = 52;
    return n <= e && e <= r ? e - n : i <= e && e <= s ? e - i + h : a <= e && e <= o ? e - a + f : e == l ? 62 : e == c ? 63 : -1;
  }, Cl;
}
var Gm;
function A2() {
  if (Gm) return wl;
  Gm = 1;
  var t = IB(), e = 5, n = 1 << e, r = n - 1, i = n;
  function s(o) {
    return o < 0 ? (-o << 1) + 1 : (o << 1) + 0;
  }
  function a(o) {
    var l = (o & 1) === 1, c = o >> 1;
    return l ? -c : c;
  }
  return wl.encode = function(l) {
    var c = "", h, f = s(l);
    do
      h = f & r, f >>>= e, f > 0 && (h |= i), c += t.encode(h);
    while (f > 0);
    return c;
  }, wl.decode = function(l, c, h) {
    var f = l.length, m = 0, y = 0, x, C;
    do {
      if (c >= f)
        throw new Error("Expected more digits in base 64 VLQ value.");
      if (C = t.decode(l.charCodeAt(c++)), C === -1)
        throw new Error("Invalid base64 digit: " + l.charAt(c - 1));
      x = !!(C & i), C &= r, m = m + (C << y), y += e;
    } while (x);
    h.value = a(m), h.rest = c;
  }, wl;
}
var xh = {}, zm;
function Wo() {
  return zm || (zm = 1, function(t) {
    function e(_, B, $) {
      if (B in _)
        return _[B];
      if (arguments.length === 3)
        return $;
      throw new Error('"' + B + '" is a required argument.');
    }
    t.getArg = e;
    var n = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.-]*)(?::(\d+))?(.*)$/, r = /^data:.+\,.+$/;
    function i(_) {
      var B = _.match(n);
      return B ? {
        scheme: B[1],
        auth: B[2],
        host: B[3],
        port: B[4],
        path: B[5]
      } : null;
    }
    t.urlParse = i;
    function s(_) {
      var B = "";
      return _.scheme && (B += _.scheme + ":"), B += "//", _.auth && (B += _.auth + "@"), _.host && (B += _.host), _.port && (B += ":" + _.port), _.path && (B += _.path), B;
    }
    t.urlGenerate = s;
    function a(_) {
      var B = _, $ = i(_);
      if ($) {
        if (!$.path)
          return _;
        B = $.path;
      }
      for (var N = t.isAbsolute(B), U = B.split(/\/+/), se, K = 0, ce = U.length - 1; ce >= 0; ce--)
        se = U[ce], se === "." ? U.splice(ce, 1) : se === ".." ? K++ : K > 0 && (se === "" ? (U.splice(ce + 1, K), K = 0) : (U.splice(ce, 2), K--));
      return B = U.join("/"), B === "" && (B = N ? "/" : "."), $ ? ($.path = B, s($)) : B;
    }
    t.normalize = a;
    function o(_, B) {
      _ === "" && (_ = "."), B === "" && (B = ".");
      var $ = i(B), N = i(_);
      if (N && (_ = N.path || "/"), $ && !$.scheme)
        return N && ($.scheme = N.scheme), s($);
      if ($ || B.match(r))
        return B;
      if (N && !N.host && !N.path)
        return N.host = B, s(N);
      var U = B.charAt(0) === "/" ? B : a(_.replace(/\/+$/, "") + "/" + B);
      return N ? (N.path = U, s(N)) : U;
    }
    t.join = o, t.isAbsolute = function(_) {
      return _.charAt(0) === "/" || n.test(_);
    };
    function l(_, B) {
      _ === "" && (_ = "."), _ = _.replace(/\/$/, "");
      for (var $ = 0; B.indexOf(_ + "/") !== 0; ) {
        var N = _.lastIndexOf("/");
        if (N < 0 || (_ = _.slice(0, N), _.match(/^([^\/]+:\/)?\/*$/)))
          return B;
        ++$;
      }
      return Array($ + 1).join("../") + B.substr(_.length + 1);
    }
    t.relative = l;
    var c = function() {
      var _ = /* @__PURE__ */ Object.create(null);
      return !("__proto__" in _);
    }();
    function h(_) {
      return _;
    }
    function f(_) {
      return y(_) ? "$" + _ : _;
    }
    t.toSetString = c ? h : f;
    function m(_) {
      return y(_) ? _.slice(1) : _;
    }
    t.fromSetString = c ? h : m;
    function y(_) {
      if (!_)
        return !1;
      var B = _.length;
      if (B < 9 || _.charCodeAt(B - 1) !== 95 || _.charCodeAt(B - 2) !== 95 || _.charCodeAt(B - 3) !== 111 || _.charCodeAt(B - 4) !== 116 || _.charCodeAt(B - 5) !== 111 || _.charCodeAt(B - 6) !== 114 || _.charCodeAt(B - 7) !== 112 || _.charCodeAt(B - 8) !== 95 || _.charCodeAt(B - 9) !== 95)
        return !1;
      for (var $ = B - 10; $ >= 0; $--)
        if (_.charCodeAt($) !== 36)
          return !1;
      return !0;
    }
    function x(_, B, $) {
      var N = S(_.source, B.source);
      return N !== 0 || (N = _.originalLine - B.originalLine, N !== 0) || (N = _.originalColumn - B.originalColumn, N !== 0 || $) || (N = _.generatedColumn - B.generatedColumn, N !== 0) || (N = _.generatedLine - B.generatedLine, N !== 0) ? N : S(_.name, B.name);
    }
    t.compareByOriginalPositions = x;
    function C(_, B, $) {
      var N = _.generatedLine - B.generatedLine;
      return N !== 0 || (N = _.generatedColumn - B.generatedColumn, N !== 0 || $) || (N = S(_.source, B.source), N !== 0) || (N = _.originalLine - B.originalLine, N !== 0) || (N = _.originalColumn - B.originalColumn, N !== 0) ? N : S(_.name, B.name);
    }
    t.compareByGeneratedPositionsDeflated = C;
    function S(_, B) {
      return _ === B ? 0 : _ === null ? 1 : B === null ? -1 : _ > B ? 1 : -1;
    }
    function M(_, B) {
      var $ = _.generatedLine - B.generatedLine;
      return $ !== 0 || ($ = _.generatedColumn - B.generatedColumn, $ !== 0) || ($ = S(_.source, B.source), $ !== 0) || ($ = _.originalLine - B.originalLine, $ !== 0) || ($ = _.originalColumn - B.originalColumn, $ !== 0) ? $ : S(_.name, B.name);
    }
    t.compareByGeneratedPositionsInflated = M;
    function Z(_) {
      return JSON.parse(_.replace(/^\)]}'[^\n]*\n/, ""));
    }
    t.parseSourceMapInput = Z;
    function q(_, B, $) {
      if (B = B || "", _ && (_[_.length - 1] !== "/" && B[0] !== "/" && (_ += "/"), B = _ + B), $) {
        var N = i($);
        if (!N)
          throw new Error("sourceMapURL could not be parsed");
        if (N.path) {
          var U = N.path.lastIndexOf("/");
          U >= 0 && (N.path = N.path.substring(0, U + 1));
        }
        B = o(s(N), B);
      }
      return a(B);
    }
    t.computeSourceURL = q;
  }(xh)), xh;
}
var kh = {}, Hm;
function D2() {
  if (Hm) return kh;
  Hm = 1;
  var t = Wo(), e = Object.prototype.hasOwnProperty, n = typeof Map < "u";
  function r() {
    this._array = [], this._set = n ? /* @__PURE__ */ new Map() : /* @__PURE__ */ Object.create(null);
  }
  return r.fromArray = function(s, a) {
    for (var o = new r(), l = 0, c = s.length; l < c; l++)
      o.add(s[l], a);
    return o;
  }, r.prototype.size = function() {
    return n ? this._set.size : Object.getOwnPropertyNames(this._set).length;
  }, r.prototype.add = function(s, a) {
    var o = n ? s : t.toSetString(s), l = n ? this.has(s) : e.call(this._set, o), c = this._array.length;
    (!l || a) && this._array.push(s), l || (n ? this._set.set(s, c) : this._set[o] = c);
  }, r.prototype.has = function(s) {
    if (n)
      return this._set.has(s);
    var a = t.toSetString(s);
    return e.call(this._set, a);
  }, r.prototype.indexOf = function(s) {
    if (n) {
      var a = this._set.get(s);
      if (a >= 0)
        return a;
    } else {
      var o = t.toSetString(s);
      if (e.call(this._set, o))
        return this._set[o];
    }
    throw new Error('"' + s + '" is not in the set.');
  }, r.prototype.at = function(s) {
    if (s >= 0 && s < this._array.length)
      return this._array[s];
    throw new Error("No element indexed by " + s);
  }, r.prototype.toArray = function() {
    return this._array.slice();
  }, kh.ArraySet = r, kh;
}
var wh = {}, Ym;
function NB() {
  if (Ym) return wh;
  Ym = 1;
  var t = Wo();
  function e(r, i) {
    var s = r.generatedLine, a = i.generatedLine, o = r.generatedColumn, l = i.generatedColumn;
    return a > s || a == s && l >= o || t.compareByGeneratedPositionsInflated(r, i) <= 0;
  }
  function n() {
    this._array = [], this._sorted = !0, this._last = { generatedLine: -1, generatedColumn: 0 };
  }
  return n.prototype.unsortedForEach = function(i, s) {
    this._array.forEach(i, s);
  }, n.prototype.add = function(i) {
    e(this._last, i) ? (this._last = i, this._array.push(i)) : (this._sorted = !1, this._array.push(i));
  }, n.prototype.toArray = function() {
    return this._sorted || (this._array.sort(t.compareByGeneratedPositionsInflated), this._sorted = !0), this._array;
  }, wh.MappingList = n, wh;
}
var Km;
function P2() {
  if (Km) return vh;
  Km = 1;
  var t = A2(), e = Wo(), n = D2().ArraySet, r = NB().MappingList;
  function i(s) {
    s || (s = {}), this._file = e.getArg(s, "file", null), this._sourceRoot = e.getArg(s, "sourceRoot", null), this._skipValidation = e.getArg(s, "skipValidation", !1), this._sources = new n(), this._names = new n(), this._mappings = new r(), this._sourcesContents = null;
  }
  return i.prototype._version = 3, i.fromSourceMap = function(a) {
    var o = a.sourceRoot, l = new i({
      file: a.file,
      sourceRoot: o
    });
    return a.eachMapping(function(c) {
      var h = {
        generated: {
          line: c.generatedLine,
          column: c.generatedColumn
        }
      };
      c.source != null && (h.source = c.source, o != null && (h.source = e.relative(o, h.source)), h.original = {
        line: c.originalLine,
        column: c.originalColumn
      }, c.name != null && (h.name = c.name)), l.addMapping(h);
    }), a.sources.forEach(function(c) {
      var h = c;
      o !== null && (h = e.relative(o, c)), l._sources.has(h) || l._sources.add(h);
      var f = a.sourceContentFor(c);
      f != null && l.setSourceContent(c, f);
    }), l;
  }, i.prototype.addMapping = function(a) {
    var o = e.getArg(a, "generated"), l = e.getArg(a, "original", null), c = e.getArg(a, "source", null), h = e.getArg(a, "name", null);
    this._skipValidation || this._validateMapping(o, l, c, h), c != null && (c = String(c), this._sources.has(c) || this._sources.add(c)), h != null && (h = String(h), this._names.has(h) || this._names.add(h)), this._mappings.add({
      generatedLine: o.line,
      generatedColumn: o.column,
      originalLine: l != null && l.line,
      originalColumn: l != null && l.column,
      source: c,
      name: h
    });
  }, i.prototype.setSourceContent = function(a, o) {
    var l = a;
    this._sourceRoot != null && (l = e.relative(this._sourceRoot, l)), o != null ? (this._sourcesContents || (this._sourcesContents = /* @__PURE__ */ Object.create(null)), this._sourcesContents[e.toSetString(l)] = o) : this._sourcesContents && (delete this._sourcesContents[e.toSetString(l)], Object.keys(this._sourcesContents).length === 0 && (this._sourcesContents = null));
  }, i.prototype.applySourceMap = function(a, o, l) {
    var c = o;
    if (o == null) {
      if (a.file == null)
        throw new Error(
          `SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map's "file" property. Both were omitted.`
        );
      c = a.file;
    }
    var h = this._sourceRoot;
    h != null && (c = e.relative(h, c));
    var f = new n(), m = new n();
    this._mappings.unsortedForEach(function(y) {
      if (y.source === c && y.originalLine != null) {
        var x = a.originalPositionFor({
          line: y.originalLine,
          column: y.originalColumn
        });
        x.source != null && (y.source = x.source, l != null && (y.source = e.join(l, y.source)), h != null && (y.source = e.relative(h, y.source)), y.originalLine = x.line, y.originalColumn = x.column, x.name != null && (y.name = x.name));
      }
      var C = y.source;
      C != null && !f.has(C) && f.add(C);
      var S = y.name;
      S != null && !m.has(S) && m.add(S);
    }, this), this._sources = f, this._names = m, a.sources.forEach(function(y) {
      var x = a.sourceContentFor(y);
      x != null && (l != null && (y = e.join(l, y)), h != null && (y = e.relative(h, y)), this.setSourceContent(y, x));
    }, this);
  }, i.prototype._validateMapping = function(a, o, l, c) {
    if (o && typeof o.line != "number" && typeof o.column != "number")
      throw new Error(
        "original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values."
      );
    if (!(a && "line" in a && "column" in a && a.line > 0 && a.column >= 0 && !o && !l && !c)) {
      if (a && "line" in a && "column" in a && o && "line" in o && "column" in o && a.line > 0 && a.column >= 0 && o.line > 0 && o.column >= 0 && l)
        return;
      throw new Error("Invalid mapping: " + JSON.stringify({
        generated: a,
        source: l,
        original: o,
        name: c
      }));
    }
  }, i.prototype._serializeMappings = function() {
    for (var a = 0, o = 1, l = 0, c = 0, h = 0, f = 0, m = "", y, x, C, S, M = this._mappings.toArray(), Z = 0, q = M.length; Z < q; Z++) {
      if (x = M[Z], y = "", x.generatedLine !== o)
        for (a = 0; x.generatedLine !== o; )
          y += ";", o++;
      else if (Z > 0) {
        if (!e.compareByGeneratedPositionsInflated(x, M[Z - 1]))
          continue;
        y += ",";
      }
      y += t.encode(x.generatedColumn - a), a = x.generatedColumn, x.source != null && (S = this._sources.indexOf(x.source), y += t.encode(S - f), f = S, y += t.encode(x.originalLine - 1 - c), c = x.originalLine - 1, y += t.encode(x.originalColumn - l), l = x.originalColumn, x.name != null && (C = this._names.indexOf(x.name), y += t.encode(C - h), h = C)), m += y;
    }
    return m;
  }, i.prototype._generateSourcesContent = function(a, o) {
    return a.map(function(l) {
      if (!this._sourcesContents)
        return null;
      o != null && (l = e.relative(o, l));
      var c = e.toSetString(l);
      return Object.prototype.hasOwnProperty.call(this._sourcesContents, c) ? this._sourcesContents[c] : null;
    }, this);
  }, i.prototype.toJSON = function() {
    var a = {
      version: this._version,
      sources: this._sources.toArray(),
      names: this._names.toArray(),
      mappings: this._serializeMappings()
    };
    return this._file != null && (a.file = this._file), this._sourceRoot != null && (a.sourceRoot = this._sourceRoot), this._sourcesContents && (a.sourcesContent = this._generateSourcesContent(a.sources, a.sourceRoot)), a;
  }, i.prototype.toString = function() {
    return JSON.stringify(this.toJSON());
  }, vh.SourceMapGenerator = i, vh;
}
var Ha = {}, Ch = {}, Jm;
function VB() {
  return Jm || (Jm = 1, function(t) {
    t.GREATEST_LOWER_BOUND = 1, t.LEAST_UPPER_BOUND = 2;
    function e(n, r, i, s, a, o) {
      var l = Math.floor((r - n) / 2) + n, c = a(i, s[l], !0);
      return c === 0 ? l : c > 0 ? r - l > 1 ? e(l, r, i, s, a, o) : o == t.LEAST_UPPER_BOUND ? r < s.length ? r : -1 : l : l - n > 1 ? e(n, l, i, s, a, o) : o == t.LEAST_UPPER_BOUND ? l : n < 0 ? -1 : n;
    }
    t.search = function(r, i, s, a) {
      if (i.length === 0)
        return -1;
      var o = e(
        -1,
        i.length,
        r,
        i,
        s,
        a || t.GREATEST_LOWER_BOUND
      );
      if (o < 0)
        return -1;
      for (; o - 1 >= 0 && s(i[o], i[o - 1], !0) === 0; )
        --o;
      return o;
    };
  }(Ch)), Ch;
}
var Sh = {}, eg;
function XB() {
  if (eg) return Sh;
  eg = 1;
  function t(r, i, s) {
    var a = r[i];
    r[i] = r[s], r[s] = a;
  }
  function e(r, i) {
    return Math.round(r + Math.random() * (i - r));
  }
  function n(r, i, s, a) {
    if (s < a) {
      var o = e(s, a), l = s - 1;
      t(r, o, a);
      for (var c = r[a], h = s; h < a; h++)
        i(r[h], c) <= 0 && (l += 1, t(r, l, h));
      t(r, l + 1, h);
      var f = l + 1;
      n(r, i, s, f - 1), n(r, i, f + 1, a);
    }
  }
  return Sh.quickSort = function(r, i) {
    n(r, i, 0, r.length - 1);
  }, Sh;
}
var tg;
function WB() {
  if (tg) return Ha;
  tg = 1;
  var t = Wo(), e = VB(), n = D2().ArraySet, r = A2(), i = XB().quickSort;
  function s(c, h) {
    var f = c;
    return typeof c == "string" && (f = t.parseSourceMapInput(c)), f.sections != null ? new l(f, h) : new a(f, h);
  }
  s.fromSourceMap = function(c, h) {
    return a.fromSourceMap(c, h);
  }, s.prototype._version = 3, s.prototype.__generatedMappings = null, Object.defineProperty(s.prototype, "_generatedMappings", {
    configurable: !0,
    enumerable: !0,
    get: function() {
      return this.__generatedMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__generatedMappings;
    }
  }), s.prototype.__originalMappings = null, Object.defineProperty(s.prototype, "_originalMappings", {
    configurable: !0,
    enumerable: !0,
    get: function() {
      return this.__originalMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__originalMappings;
    }
  }), s.prototype._charIsMappingSeparator = function(h, f) {
    var m = h.charAt(f);
    return m === ";" || m === ",";
  }, s.prototype._parseMappings = function(h, f) {
    throw new Error("Subclasses must implement _parseMappings");
  }, s.GENERATED_ORDER = 1, s.ORIGINAL_ORDER = 2, s.GREATEST_LOWER_BOUND = 1, s.LEAST_UPPER_BOUND = 2, s.prototype.eachMapping = function(h, f, m) {
    var y = f || null, x = m || s.GENERATED_ORDER, C;
    switch (x) {
      case s.GENERATED_ORDER:
        C = this._generatedMappings;
        break;
      case s.ORIGINAL_ORDER:
        C = this._originalMappings;
        break;
      default:
        throw new Error("Unknown order of iteration.");
    }
    var S = this.sourceRoot;
    C.map(function(M) {
      var Z = M.source === null ? null : this._sources.at(M.source);
      return Z = t.computeSourceURL(S, Z, this._sourceMapURL), {
        source: Z,
        generatedLine: M.generatedLine,
        generatedColumn: M.generatedColumn,
        originalLine: M.originalLine,
        originalColumn: M.originalColumn,
        name: M.name === null ? null : this._names.at(M.name)
      };
    }, this).forEach(h, y);
  }, s.prototype.allGeneratedPositionsFor = function(h) {
    var f = t.getArg(h, "line"), m = {
      source: t.getArg(h, "source"),
      originalLine: f,
      originalColumn: t.getArg(h, "column", 0)
    };
    if (m.source = this._findSourceIndex(m.source), m.source < 0)
      return [];
    var y = [], x = this._findMapping(
      m,
      this._originalMappings,
      "originalLine",
      "originalColumn",
      t.compareByOriginalPositions,
      e.LEAST_UPPER_BOUND
    );
    if (x >= 0) {
      var C = this._originalMappings[x];
      if (h.column === void 0)
        for (var S = C.originalLine; C && C.originalLine === S; )
          y.push({
            line: t.getArg(C, "generatedLine", null),
            column: t.getArg(C, "generatedColumn", null),
            lastColumn: t.getArg(C, "lastGeneratedColumn", null)
          }), C = this._originalMappings[++x];
      else
        for (var M = C.originalColumn; C && C.originalLine === f && C.originalColumn == M; )
          y.push({
            line: t.getArg(C, "generatedLine", null),
            column: t.getArg(C, "generatedColumn", null),
            lastColumn: t.getArg(C, "lastGeneratedColumn", null)
          }), C = this._originalMappings[++x];
    }
    return y;
  }, Ha.SourceMapConsumer = s;
  function a(c, h) {
    var f = c;
    typeof c == "string" && (f = t.parseSourceMapInput(c));
    var m = t.getArg(f, "version"), y = t.getArg(f, "sources"), x = t.getArg(f, "names", []), C = t.getArg(f, "sourceRoot", null), S = t.getArg(f, "sourcesContent", null), M = t.getArg(f, "mappings"), Z = t.getArg(f, "file", null);
    if (m != this._version)
      throw new Error("Unsupported version: " + m);
    C && (C = t.normalize(C)), y = y.map(String).map(t.normalize).map(function(q) {
      return C && t.isAbsolute(C) && t.isAbsolute(q) ? t.relative(C, q) : q;
    }), this._names = n.fromArray(x.map(String), !0), this._sources = n.fromArray(y, !0), this._absoluteSources = this._sources.toArray().map(function(q) {
      return t.computeSourceURL(C, q, h);
    }), this.sourceRoot = C, this.sourcesContent = S, this._mappings = M, this._sourceMapURL = h, this.file = Z;
  }
  a.prototype = Object.create(s.prototype), a.prototype.consumer = s, a.prototype._findSourceIndex = function(c) {
    var h = c;
    if (this.sourceRoot != null && (h = t.relative(this.sourceRoot, h)), this._sources.has(h))
      return this._sources.indexOf(h);
    var f;
    for (f = 0; f < this._absoluteSources.length; ++f)
      if (this._absoluteSources[f] == c)
        return f;
    return -1;
  }, a.fromSourceMap = function(h, f) {
    var m = Object.create(a.prototype), y = m._names = n.fromArray(h._names.toArray(), !0), x = m._sources = n.fromArray(h._sources.toArray(), !0);
    m.sourceRoot = h._sourceRoot, m.sourcesContent = h._generateSourcesContent(
      m._sources.toArray(),
      m.sourceRoot
    ), m.file = h._file, m._sourceMapURL = f, m._absoluteSources = m._sources.toArray().map(function($) {
      return t.computeSourceURL(m.sourceRoot, $, f);
    });
    for (var C = h._mappings.toArray().slice(), S = m.__generatedMappings = [], M = m.__originalMappings = [], Z = 0, q = C.length; Z < q; Z++) {
      var _ = C[Z], B = new o();
      B.generatedLine = _.generatedLine, B.generatedColumn = _.generatedColumn, _.source && (B.source = x.indexOf(_.source), B.originalLine = _.originalLine, B.originalColumn = _.originalColumn, _.name && (B.name = y.indexOf(_.name)), M.push(B)), S.push(B);
    }
    return i(m.__originalMappings, t.compareByOriginalPositions), m;
  }, a.prototype._version = 3, Object.defineProperty(a.prototype, "sources", {
    get: function() {
      return this._absoluteSources.slice();
    }
  });
  function o() {
    this.generatedLine = 0, this.generatedColumn = 0, this.source = null, this.originalLine = null, this.originalColumn = null, this.name = null;
  }
  a.prototype._parseMappings = function(h, f) {
    for (var m = 1, y = 0, x = 0, C = 0, S = 0, M = 0, Z = h.length, q = 0, _ = {}, B = {}, $ = [], N = [], U, se, K, ce, H; q < Z; )
      if (h.charAt(q) === ";")
        m++, q++, y = 0;
      else if (h.charAt(q) === ",")
        q++;
      else {
        for (U = new o(), U.generatedLine = m, ce = q; ce < Z && !this._charIsMappingSeparator(h, ce); ce++)
          ;
        if (se = h.slice(q, ce), K = _[se], K)
          q += se.length;
        else {
          for (K = []; q < ce; )
            r.decode(h, q, B), H = B.value, q = B.rest, K.push(H);
          if (K.length === 2)
            throw new Error("Found a source, but no line and column");
          if (K.length === 3)
            throw new Error("Found a source and line, but no column");
          _[se] = K;
        }
        U.generatedColumn = y + K[0], y = U.generatedColumn, K.length > 1 && (U.source = S + K[1], S += K[1], U.originalLine = x + K[2], x = U.originalLine, U.originalLine += 1, U.originalColumn = C + K[3], C = U.originalColumn, K.length > 4 && (U.name = M + K[4], M += K[4])), N.push(U), typeof U.originalLine == "number" && $.push(U);
      }
    i(N, t.compareByGeneratedPositionsDeflated), this.__generatedMappings = N, i($, t.compareByOriginalPositions), this.__originalMappings = $;
  }, a.prototype._findMapping = function(h, f, m, y, x, C) {
    if (h[m] <= 0)
      throw new TypeError("Line must be greater than or equal to 1, got " + h[m]);
    if (h[y] < 0)
      throw new TypeError("Column must be greater than or equal to 0, got " + h[y]);
    return e.search(h, f, x, C);
  }, a.prototype.computeColumnSpans = function() {
    for (var h = 0; h < this._generatedMappings.length; ++h) {
      var f = this._generatedMappings[h];
      if (h + 1 < this._generatedMappings.length) {
        var m = this._generatedMappings[h + 1];
        if (f.generatedLine === m.generatedLine) {
          f.lastGeneratedColumn = m.generatedColumn - 1;
          continue;
        }
      }
      f.lastGeneratedColumn = 1 / 0;
    }
  }, a.prototype.originalPositionFor = function(h) {
    var f = {
      generatedLine: t.getArg(h, "line"),
      generatedColumn: t.getArg(h, "column")
    }, m = this._findMapping(
      f,
      this._generatedMappings,
      "generatedLine",
      "generatedColumn",
      t.compareByGeneratedPositionsDeflated,
      t.getArg(h, "bias", s.GREATEST_LOWER_BOUND)
    );
    if (m >= 0) {
      var y = this._generatedMappings[m];
      if (y.generatedLine === f.generatedLine) {
        var x = t.getArg(y, "source", null);
        x !== null && (x = this._sources.at(x), x = t.computeSourceURL(this.sourceRoot, x, this._sourceMapURL));
        var C = t.getArg(y, "name", null);
        return C !== null && (C = this._names.at(C)), {
          source: x,
          line: t.getArg(y, "originalLine", null),
          column: t.getArg(y, "originalColumn", null),
          name: C
        };
      }
    }
    return {
      source: null,
      line: null,
      column: null,
      name: null
    };
  }, a.prototype.hasContentsOfAllSources = function() {
    return this.sourcesContent ? this.sourcesContent.length >= this._sources.size() && !this.sourcesContent.some(function(h) {
      return h == null;
    }) : !1;
  }, a.prototype.sourceContentFor = function(h, f) {
    if (!this.sourcesContent)
      return null;
    var m = this._findSourceIndex(h);
    if (m >= 0)
      return this.sourcesContent[m];
    var y = h;
    this.sourceRoot != null && (y = t.relative(this.sourceRoot, y));
    var x;
    if (this.sourceRoot != null && (x = t.urlParse(this.sourceRoot))) {
      var C = y.replace(/^file:\/\//, "");
      if (x.scheme == "file" && this._sources.has(C))
        return this.sourcesContent[this._sources.indexOf(C)];
      if ((!x.path || x.path == "/") && this._sources.has("/" + y))
        return this.sourcesContent[this._sources.indexOf("/" + y)];
    }
    if (f)
      return null;
    throw new Error('"' + y + '" is not in the SourceMap.');
  }, a.prototype.generatedPositionFor = function(h) {
    var f = t.getArg(h, "source");
    if (f = this._findSourceIndex(f), f < 0)
      return {
        line: null,
        column: null,
        lastColumn: null
      };
    var m = {
      source: f,
      originalLine: t.getArg(h, "line"),
      originalColumn: t.getArg(h, "column")
    }, y = this._findMapping(
      m,
      this._originalMappings,
      "originalLine",
      "originalColumn",
      t.compareByOriginalPositions,
      t.getArg(h, "bias", s.GREATEST_LOWER_BOUND)
    );
    if (y >= 0) {
      var x = this._originalMappings[y];
      if (x.source === m.source)
        return {
          line: t.getArg(x, "generatedLine", null),
          column: t.getArg(x, "generatedColumn", null),
          lastColumn: t.getArg(x, "lastGeneratedColumn", null)
        };
    }
    return {
      line: null,
      column: null,
      lastColumn: null
    };
  }, Ha.BasicSourceMapConsumer = a;
  function l(c, h) {
    var f = c;
    typeof c == "string" && (f = t.parseSourceMapInput(c));
    var m = t.getArg(f, "version"), y = t.getArg(f, "sections");
    if (m != this._version)
      throw new Error("Unsupported version: " + m);
    this._sources = new n(), this._names = new n();
    var x = {
      line: -1,
      column: 0
    };
    this._sections = y.map(function(C) {
      if (C.url)
        throw new Error("Support for url field in sections not implemented.");
      var S = t.getArg(C, "offset"), M = t.getArg(S, "line"), Z = t.getArg(S, "column");
      if (M < x.line || M === x.line && Z < x.column)
        throw new Error("Section offsets must be ordered and non-overlapping.");
      return x = S, {
        generatedOffset: {
          // The offset fields are 0-based, but we use 1-based indices when
          // encoding/decoding from VLQ.
          generatedLine: M + 1,
          generatedColumn: Z + 1
        },
        consumer: new s(t.getArg(C, "map"), h)
      };
    });
  }
  return l.prototype = Object.create(s.prototype), l.prototype.constructor = s, l.prototype._version = 3, Object.defineProperty(l.prototype, "sources", {
    get: function() {
      for (var c = [], h = 0; h < this._sections.length; h++)
        for (var f = 0; f < this._sections[h].consumer.sources.length; f++)
          c.push(this._sections[h].consumer.sources[f]);
      return c;
    }
  }), l.prototype.originalPositionFor = function(h) {
    var f = {
      generatedLine: t.getArg(h, "line"),
      generatedColumn: t.getArg(h, "column")
    }, m = e.search(
      f,
      this._sections,
      function(x, C) {
        var S = x.generatedLine - C.generatedOffset.generatedLine;
        return S || x.generatedColumn - C.generatedOffset.generatedColumn;
      }
    ), y = this._sections[m];
    return y ? y.consumer.originalPositionFor({
      line: f.generatedLine - (y.generatedOffset.generatedLine - 1),
      column: f.generatedColumn - (y.generatedOffset.generatedLine === f.generatedLine ? y.generatedOffset.generatedColumn - 1 : 0),
      bias: h.bias
    }) : {
      source: null,
      line: null,
      column: null,
      name: null
    };
  }, l.prototype.hasContentsOfAllSources = function() {
    return this._sections.every(function(h) {
      return h.consumer.hasContentsOfAllSources();
    });
  }, l.prototype.sourceContentFor = function(h, f) {
    for (var m = 0; m < this._sections.length; m++) {
      var y = this._sections[m], x = y.consumer.sourceContentFor(h, !0);
      if (x)
        return x;
    }
    if (f)
      return null;
    throw new Error('"' + h + '" is not in the SourceMap.');
  }, l.prototype.generatedPositionFor = function(h) {
    for (var f = 0; f < this._sections.length; f++) {
      var m = this._sections[f];
      if (m.consumer._findSourceIndex(t.getArg(h, "source")) !== -1) {
        var y = m.consumer.generatedPositionFor(h);
        if (y) {
          var x = {
            line: y.line + (m.generatedOffset.generatedLine - 1),
            column: y.column + (m.generatedOffset.generatedLine === y.line ? m.generatedOffset.generatedColumn - 1 : 0)
          };
          return x;
        }
      }
    }
    return {
      line: null,
      column: null
    };
  }, l.prototype._parseMappings = function(h, f) {
    this.__generatedMappings = [], this.__originalMappings = [];
    for (var m = 0; m < this._sections.length; m++)
      for (var y = this._sections[m], x = y.consumer._generatedMappings, C = 0; C < x.length; C++) {
        var S = x[C], M = y.consumer._sources.at(S.source);
        M = t.computeSourceURL(y.consumer.sourceRoot, M, this._sourceMapURL), this._sources.add(M), M = this._sources.indexOf(M);
        var Z = null;
        S.name && (Z = y.consumer._names.at(S.name), this._names.add(Z), Z = this._names.indexOf(Z));
        var q = {
          source: M,
          generatedLine: S.generatedLine + (y.generatedOffset.generatedLine - 1),
          generatedColumn: S.generatedColumn + (y.generatedOffset.generatedLine === S.generatedLine ? y.generatedOffset.generatedColumn - 1 : 0),
          originalLine: S.originalLine,
          originalColumn: S.originalColumn,
          name: Z
        };
        this.__generatedMappings.push(q), typeof q.originalLine == "number" && this.__originalMappings.push(q);
      }
    i(this.__generatedMappings, t.compareByGeneratedPositionsDeflated), i(this.__originalMappings, t.compareByOriginalPositions);
  }, Ha.IndexedSourceMapConsumer = l, Ha;
}
var Ah = {}, ng;
function qB() {
  if (ng) return Ah;
  ng = 1;
  var t = P2().SourceMapGenerator, e = Wo(), n = /(\r?\n)/, r = 10, i = "$$$isSourceNode$$$";
  function s(a, o, l, c, h) {
    this.children = [], this.sourceContents = {}, this.line = a ?? null, this.column = o ?? null, this.source = l ?? null, this.name = h ?? null, this[i] = !0, c != null && this.add(c);
  }
  return s.fromStringWithSourceMap = function(o, l, c) {
    var h = new s(), f = o.split(n), m = 0, y = function() {
      var Z = _(), q = _() || "";
      return Z + q;
      function _() {
        return m < f.length ? f[m++] : void 0;
      }
    }, x = 1, C = 0, S = null;
    return l.eachMapping(function(Z) {
      if (S !== null)
        if (x < Z.generatedLine)
          M(S, y()), x++, C = 0;
        else {
          var q = f[m] || "", _ = q.substr(0, Z.generatedColumn - C);
          f[m] = q.substr(Z.generatedColumn - C), C = Z.generatedColumn, M(S, _), S = Z;
          return;
        }
      for (; x < Z.generatedLine; )
        h.add(y()), x++;
      if (C < Z.generatedColumn) {
        var q = f[m] || "";
        h.add(q.substr(0, Z.generatedColumn)), f[m] = q.substr(Z.generatedColumn), C = Z.generatedColumn;
      }
      S = Z;
    }, this), m < f.length && (S && M(S, y()), h.add(f.splice(m).join(""))), l.sources.forEach(function(Z) {
      var q = l.sourceContentFor(Z);
      q != null && (c != null && (Z = e.join(c, Z)), h.setSourceContent(Z, q));
    }), h;
    function M(Z, q) {
      if (Z === null || Z.source === void 0)
        h.add(q);
      else {
        var _ = c ? e.join(c, Z.source) : Z.source;
        h.add(new s(
          Z.originalLine,
          Z.originalColumn,
          _,
          q,
          Z.name
        ));
      }
    }
  }, s.prototype.add = function(o) {
    if (Array.isArray(o))
      o.forEach(function(l) {
        this.add(l);
      }, this);
    else if (o[i] || typeof o == "string")
      o && this.children.push(o);
    else
      throw new TypeError(
        "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + o
      );
    return this;
  }, s.prototype.prepend = function(o) {
    if (Array.isArray(o))
      for (var l = o.length - 1; l >= 0; l--)
        this.prepend(o[l]);
    else if (o[i] || typeof o == "string")
      this.children.unshift(o);
    else
      throw new TypeError(
        "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + o
      );
    return this;
  }, s.prototype.walk = function(o) {
    for (var l, c = 0, h = this.children.length; c < h; c++)
      l = this.children[c], l[i] ? l.walk(o) : l !== "" && o(l, {
        source: this.source,
        line: this.line,
        column: this.column,
        name: this.name
      });
  }, s.prototype.join = function(o) {
    var l, c, h = this.children.length;
    if (h > 0) {
      for (l = [], c = 0; c < h - 1; c++)
        l.push(this.children[c]), l.push(o);
      l.push(this.children[c]), this.children = l;
    }
    return this;
  }, s.prototype.replaceRight = function(o, l) {
    var c = this.children[this.children.length - 1];
    return c[i] ? c.replaceRight(o, l) : typeof c == "string" ? this.children[this.children.length - 1] = c.replace(o, l) : this.children.push("".replace(o, l)), this;
  }, s.prototype.setSourceContent = function(o, l) {
    this.sourceContents[e.toSetString(o)] = l;
  }, s.prototype.walkSourceContents = function(o) {
    for (var l = 0, c = this.children.length; l < c; l++)
      this.children[l][i] && this.children[l].walkSourceContents(o);
    for (var h = Object.keys(this.sourceContents), l = 0, c = h.length; l < c; l++)
      o(e.fromSetString(h[l]), this.sourceContents[h[l]]);
  }, s.prototype.toString = function() {
    var o = "";
    return this.walk(function(l) {
      o += l;
    }), o;
  }, s.prototype.toStringWithSourceMap = function(o) {
    var l = {
      code: "",
      line: 1,
      column: 0
    }, c = new t(o), h = !1, f = null, m = null, y = null, x = null;
    return this.walk(function(C, S) {
      l.code += C, S.source !== null && S.line !== null && S.column !== null ? ((f !== S.source || m !== S.line || y !== S.column || x !== S.name) && c.addMapping({
        source: S.source,
        original: {
          line: S.line,
          column: S.column
        },
        generated: {
          line: l.line,
          column: l.column
        },
        name: S.name
      }), f = S.source, m = S.line, y = S.column, x = S.name, h = !0) : h && (c.addMapping({
        generated: {
          line: l.line,
          column: l.column
        }
      }), f = null, h = !1);
      for (var M = 0, Z = C.length; M < Z; M++)
        C.charCodeAt(M) === r ? (l.line++, l.column = 0, M + 1 === Z ? (f = null, h = !1) : h && c.addMapping({
          source: S.source,
          original: {
            line: S.line,
            column: S.column
          },
          generated: {
            line: l.line,
            column: l.column
          },
          name: S.name
        })) : l.column++;
    }), this.walkSourceContents(function(C, S) {
      c.setSourceContent(C, S);
    }), { code: l.code, map: c };
  }, Ah.SourceNode = s, Ah;
}
var rg;
function UB() {
  return rg || (rg = 1, za.SourceMapGenerator = P2().SourceMapGenerator, za.SourceMapConsumer = WB().SourceMapConsumer, za.SourceNode = qB().SourceNode), za;
}
const GB = "escodegen", zB = "ECMAScript code generator", HB = "http://github.com/estools/escodegen", YB = "escodegen.js", KB = { esgenerate: "./bin/esgenerate.js", escodegen: "./bin/escodegen.js" }, JB = ["LICENSE.BSD", "README.md", "bin", "escodegen.js", "package.json"], e9 = "2.1.0", t9 = { node: ">=6.0" }, n9 = [{ name: "Yusuke Suzuki", email: "utatane.tea@gmail.com", web: "http://github.com/Constellation" }], r9 = { type: "git", url: "http://github.com/estools/escodegen.git" }, i9 = { estraverse: "^5.2.0", esutils: "^2.0.2", esprima: "^4.0.1" }, s9 = { "source-map": "~0.6.1" }, a9 = { acorn: "^8.0.4", bluebird: "^3.4.7", "bower-registry-client": "^1.0.0", chai: "^4.2.0", "chai-exclude": "^2.0.2", "commonjs-everywhere": "^0.9.7", gulp: "^4.0.2", "gulp-eslint": "^6.0.0", "gulp-mocha": "^7.0.2", minimist: "^1.2.5", optionator: "^0.9.1", semver: "^7.3.4" }, o9 = "BSD-2-Clause", l9 = { test: "gulp travis", "unit-test": "gulp test", lint: "gulp lint", release: "node tools/release.js", "build-min": "./node_modules/.bin/cjsify -ma path: tools/entry-point.js > escodegen.browser.min.js", build: "./node_modules/.bin/cjsify -a path: tools/entry-point.js > escodegen.browser.js" }, u9 = {
  name: GB,
  description: zB,
  homepage: HB,
  main: YB,
  bin: KB,
  files: JB,
  version: e9,
  engines: t9,
  maintainers: n9,
  repository: r9,
  dependencies: i9,
  optionalDependencies: s9,
  devDependencies: a9,
  license: o9,
  scripts: l9
};
var ig;
function c9() {
  return ig || (ig = 1, function(t) {
    (function() {
      var e, n, r, i, s, a, o, l, c, h, f, m, y, x, C, S, M, Z, q, _, B, $, N, U, se, K;
      s = RB(), a = LB(), e = s.Syntax;
      function ce(O) {
        return ut.Expression.hasOwnProperty(O.type);
      }
      function H(O) {
        return ut.Statement.hasOwnProperty(O.type);
      }
      n = {
        Sequence: 0,
        Yield: 1,
        Assignment: 1,
        Conditional: 2,
        ArrowFunction: 2,
        Coalesce: 3,
        LogicalOR: 4,
        LogicalAND: 5,
        BitwiseOR: 6,
        BitwiseXOR: 7,
        BitwiseAND: 8,
        Equality: 9,
        Relational: 10,
        BitwiseSHIFT: 11,
        Additive: 12,
        Multiplicative: 13,
        Exponentiation: 14,
        Await: 15,
        Unary: 15,
        Postfix: 16,
        OptionalChaining: 17,
        Call: 18,
        New: 19,
        TaggedTemplate: 20,
        Member: 21,
        Primary: 22
      }, r = {
        "??": n.Coalesce,
        "||": n.LogicalOR,
        "&&": n.LogicalAND,
        "|": n.BitwiseOR,
        "^": n.BitwiseXOR,
        "&": n.BitwiseAND,
        "==": n.Equality,
        "!=": n.Equality,
        "===": n.Equality,
        "!==": n.Equality,
        is: n.Equality,
        isnt: n.Equality,
        "<": n.Relational,
        ">": n.Relational,
        "<=": n.Relational,
        ">=": n.Relational,
        in: n.Relational,
        instanceof: n.Relational,
        "<<": n.BitwiseSHIFT,
        ">>": n.BitwiseSHIFT,
        ">>>": n.BitwiseSHIFT,
        "+": n.Additive,
        "-": n.Additive,
        "*": n.Multiplicative,
        "%": n.Multiplicative,
        "/": n.Multiplicative,
        "**": n.Exponentiation
      };
      var ie = 1, fe = 2, De = 4, Ee = 8, re = 16, ke = 32, Le = 64, xe = fe | De, je = ie | fe, he = ie | fe | De, Pe = ie, Pt = De, lt = ie | De, We = ie, Qt = ie | ke, ze = 0, xt = ie | re, Bn = ie | Ee;
      function dn() {
        return {
          indent: null,
          base: null,
          parse: null,
          comment: !1,
          format: {
            indent: {
              style: "    ",
              base: 0,
              adjustMultilineComment: !1
            },
            newline: `
`,
            space: " ",
            json: !1,
            renumber: !1,
            hexadecimal: !1,
            quotes: "single",
            escapeless: !1,
            compact: !1,
            parentheses: !0,
            semicolons: !0,
            safeConcatenation: !1,
            preserveBlankLines: !1
          },
          moz: {
            comprehensionExpressionStartsWithAssignment: !1,
            starlessGenerator: !1
          },
          sourceMap: null,
          sourceMapRoot: null,
          sourceMapWithCode: !1,
          directive: !1,
          raw: !0,
          verbatim: null,
          sourceCode: null
        };
      }
      function Ot(O, D) {
        var A = "";
        for (D |= 0; D > 0; D >>>= 1, O += O)
          D & 1 && (A += O);
        return A;
      }
      function kt(O) {
        return /[\r\n]/g.test(O);
      }
      function Et(O) {
        var D = O.length;
        return D && a.code.isLineTerminator(O.charCodeAt(D - 1));
      }
      function Xt(O, D) {
        var A;
        for (A in D)
          D.hasOwnProperty(A) && (O[A] = D[A]);
        return O;
      }
      function Kn(O, D) {
        var A, P;
        function R(J) {
          return typeof J == "object" && J instanceof Object && !(J instanceof RegExp);
        }
        for (A in D)
          D.hasOwnProperty(A) && (P = D[A], R(P) ? R(O[A]) ? Kn(O[A], P) : O[A] = Kn({}, P) : O[A] = P);
        return O;
      }
      function Jn(O) {
        var D, A, P, R, J;
        if (O !== O)
          throw new Error("Numeric literal whose value is NaN");
        if (O < 0 || O === 0 && 1 / O < 0)
          throw new Error("Numeric literal whose value is negative");
        if (O === 1 / 0)
          return c ? "null" : h ? "1e400" : "1e+400";
        if (D = "" + O, !h || D.length < 3)
          return D;
        for (A = D.indexOf("."), !c && D.charCodeAt(0) === 48 && A === 1 && (A = 0, D = D.slice(1)), P = D, D = D.replace("e+", "e"), R = 0, (J = P.indexOf("e")) > 0 && (R = +P.slice(J + 1), P = P.slice(0, J)), A >= 0 && (R -= P.length - A - 1, P = +(P.slice(0, A) + P.slice(A + 1)) + ""), J = 0; P.charCodeAt(P.length + J - 1) === 48; )
          --J;
        return J !== 0 && (R -= J, P = P.slice(0, J)), R !== 0 && (P += "e" + R), (P.length < D.length || f && O > 1e12 && Math.floor(O) === O && (P = "0x" + O.toString(16)).length < D.length) && +P === O && (D = P), D;
      }
      function pr(O, D) {
        return (O & -2) === 8232 ? (D ? "u" : "\\u") + (O === 8232 ? "2028" : "2029") : O === 10 || O === 13 ? (D ? "" : "\\") + (O === 10 ? "n" : "r") : String.fromCharCode(O);
      }
      function Mn(O) {
        var D, A, P, R, J, ae, pe, ge;
        if (A = O.toString(), O.source) {
          if (D = A.match(/\/([^/]*)$/), !D)
            return A;
          for (P = D[1], A = "", pe = !1, ge = !1, R = 0, J = O.source.length; R < J; ++R)
            ae = O.source.charCodeAt(R), ge ? (A += pr(ae, ge), ge = !1) : (pe ? ae === 93 && (pe = !1) : ae === 47 ? A += "\\" : ae === 91 && (pe = !0), A += pr(ae, ge), ge = ae === 92);
          return "/" + A + "/" + P;
        }
        return A;
      }
      function zt(O, D) {
        var A;
        return O === 8 ? "\\b" : O === 12 ? "\\f" : O === 9 ? "\\t" : (A = O.toString(16).toUpperCase(), c || O > 255 ? "\\u" + "0000".slice(A.length) + A : O === 0 && !a.code.isDecimalDigit(D) ? "\\0" : O === 11 ? "\\x0B" : "\\x" + "00".slice(A.length) + A);
      }
      function _r(O) {
        if (O === 92)
          return "\\\\";
        if (O === 10)
          return "\\n";
        if (O === 13)
          return "\\r";
        if (O === 8232)
          return "\\u2028";
        if (O === 8233)
          return "\\u2029";
        throw new Error("Incorrectly classified character");
      }
      function er(O) {
        var D, A, P, R;
        for (R = m === "double" ? '"' : "'", D = 0, A = O.length; D < A; ++D)
          if (P = O.charCodeAt(D), P === 39) {
            R = '"';
            break;
          } else if (P === 34) {
            R = "'";
            break;
          } else P === 92 && ++D;
        return R + O + R;
      }
      function On(O) {
        var D = "", A, P, R, J = 0, ae = 0, pe, ge;
        for (A = 0, P = O.length; A < P; ++A) {
          if (R = O.charCodeAt(A), R === 39)
            ++J;
          else if (R === 34)
            ++ae;
          else if (R === 47 && c)
            D += "\\";
          else if (a.code.isLineTerminator(R) || R === 92) {
            D += _r(R);
            continue;
          } else if (!a.code.isIdentifierPartES5(R) && (c && R < 32 || !c && !y && (R < 32 || R > 126))) {
            D += zt(R, O.charCodeAt(A + 1));
            continue;
          }
          D += String.fromCharCode(R);
        }
        if (pe = !(m === "double" || m === "auto" && ae < J), ge = pe ? "'" : '"', !(pe ? J : ae))
          return ge + D + ge;
        for (O = D, D = ge, A = 0, P = O.length; A < P; ++A)
          R = O.charCodeAt(A), (R === 39 && pe || R === 34 && !pe) && (D += "\\"), D += String.fromCharCode(R);
        return D + ge;
      }
      function zr(O) {
        var D, A, P, R = "";
        for (D = 0, A = O.length; D < A; ++D)
          P = O[D], R += Array.isArray(P) ? zr(P) : P;
        return R;
      }
      function Ue(O, D) {
        if (!$)
          return Array.isArray(O) ? zr(O) : O;
        if (D == null) {
          if (O instanceof i)
            return O;
          D = {};
        }
        return D.loc == null ? new i(null, null, $, O, D.name || null) : new i(D.loc.start.line, D.loc.start.column, $ === !0 ? D.loc.source || null : $, O, D.name || null);
      }
      function Tt() {
        return C || " ";
      }
      function Se(O, D) {
        var A, P, R, J;
        return A = Ue(O).toString(), A.length === 0 ? [D] : (P = Ue(D).toString(), P.length === 0 ? [O] : (R = A.charCodeAt(A.length - 1), J = P.charCodeAt(0), (R === 43 || R === 45) && R === J || a.code.isIdentifierPartES5(R) && a.code.isIdentifierPartES5(J) || R === 47 && J === 105 ? [O, Tt(), D] : a.code.isWhiteSpace(R) || a.code.isLineTerminator(R) || a.code.isWhiteSpace(J) || a.code.isLineTerminator(J) ? [O, D] : [O, C, D]));
      }
      function wt(O) {
        return [o, O];
      }
      function Xe(O) {
        var D;
        D = o, o += l, O(o), o = D;
      }
      function gi(O) {
        var D;
        for (D = O.length - 1; D >= 0 && !a.code.isLineTerminator(O.charCodeAt(D)); --D)
          ;
        return O.length - 1 - D;
      }
      function fr(O, D) {
        var A, P, R, J, ae, pe, ge, Je;
        for (A = O.split(/\r\n|[\r\n]/), pe = Number.MAX_VALUE, P = 1, R = A.length; P < R; ++P) {
          for (J = A[P], ae = 0; ae < J.length && a.code.isWhiteSpace(J.charCodeAt(ae)); )
            ++ae;
          pe > ae && (pe = ae);
        }
        for (typeof D < "u" ? (ge = o, A[1][pe] === "*" && (D += " "), o = D) : (pe & 1 && --pe, ge = o), P = 1, R = A.length; P < R; ++P)
          Je = Ue(wt(A[P].slice(pe))), A[P] = $ ? Je.join("") : Je;
        return o = ge, A.join(`
`);
      }
      function mn(O, D) {
        if (O.type === "Line") {
          if (Et(O.value))
            return "//" + O.value;
          var A = "//" + O.value;
          return U || (A += `
`), A;
        }
        return _.format.indent.adjustMultilineComment && /[\n\r]/.test(O.value) ? fr("/*" + O.value + "*/", D) : "/*" + O.value + "*/";
      }
      function vt(O, D) {
        var A, P, R, J, ae, pe, ge, Je, Rt, Yt, dr, Zs, us, Qn;
        if (O.leadingComments && O.leadingComments.length > 0) {
          if (J = D, U) {
            for (R = O.leadingComments[0], D = [], Je = R.extendedRange, Rt = R.range, dr = N.substring(Je[0], Rt[0]), Qn = (dr.match(/\n/g) || []).length, Qn > 0 ? (D.push(Ot(`
`, Qn)), D.push(wt(mn(R)))) : (D.push(dr), D.push(mn(R))), Yt = Rt, A = 1, P = O.leadingComments.length; A < P; A++)
              R = O.leadingComments[A], Rt = R.range, Zs = N.substring(Yt[1], Rt[0]), Qn = (Zs.match(/\n/g) || []).length, D.push(Ot(`
`, Qn)), D.push(wt(mn(R))), Yt = Rt;
            us = N.substring(Rt[1], Je[1]), Qn = (us.match(/\n/g) || []).length, D.push(Ot(`
`, Qn));
          } else
            for (R = O.leadingComments[0], D = [], Z && O.type === e.Program && O.body.length === 0 && D.push(`
`), D.push(mn(R)), Et(Ue(D).toString()) || D.push(`
`), A = 1, P = O.leadingComments.length; A < P; ++A)
              R = O.leadingComments[A], ge = [mn(R)], Et(Ue(ge).toString()) || ge.push(`
`), D.push(wt(ge));
          D.push(wt(J));
        }
        if (O.trailingComments)
          if (U)
            R = O.trailingComments[0], Je = R.extendedRange, Rt = R.range, dr = N.substring(Je[0], Rt[0]), Qn = (dr.match(/\n/g) || []).length, Qn > 0 ? (D.push(Ot(`
`, Qn)), D.push(wt(mn(R)))) : (D.push(dr), D.push(mn(R)));
          else
            for (ae = !Et(Ue(D).toString()), pe = Ot(" ", gi(Ue([o, D, l]).toString())), A = 0, P = O.trailingComments.length; A < P; ++A)
              R = O.trailingComments[A], ae ? (A === 0 ? D = [D, l] : D = [D, pe], D.push(mn(R, pe))) : D = [D, wt(mn(R))], A !== P - 1 && !Et(Ue(D).toString()) && (D = [D, `
`]);
        return D;
      }
      function He(O, D, A) {
        var P, R = 0;
        for (P = O; P < D; P++)
          N[P] === `
` && R++;
        for (P = 1; P < R; P++)
          A.push(x);
      }
      function Ye(O, D, A) {
        return D < A ? ["(", O, ")"] : O;
      }
      function gt(O) {
        var D, A, P;
        for (P = O.split(/\r\n|\n/), D = 1, A = P.length; D < A; D++)
          P[D] = x + o + P[D];
        return P;
      }
      function Ht(O, D) {
        var A, P, R;
        return A = O[_.verbatim], typeof A == "string" ? P = Ye(gt(A), n.Sequence, D) : (P = gt(A.content), R = A.precedence != null ? A.precedence : n.Sequence, P = Ye(P, R, D)), Ue(P, O);
      }
      function ut() {
      }
      ut.prototype.maybeBlock = function(O, D) {
        var A, P, R = this;
        return P = !_.comment || !O.leadingComments, O.type === e.BlockStatement && P ? [C, this.generateStatement(O, D)] : O.type === e.EmptyStatement && P ? ";" : (Xe(function() {
          A = [
            x,
            wt(R.generateStatement(O, D))
          ];
        }), A);
      }, ut.prototype.maybeBlockSuffix = function(O, D) {
        var A = Et(Ue(D).toString());
        return O.type === e.BlockStatement && (!_.comment || !O.leadingComments) && !A ? [D, C] : A ? [D, o] : [D, x, o];
      };
      function Ze(O) {
        return Ue(O.name, O);
      }
      function pt(O, D) {
        return O.async ? "async" + (D ? Tt() : C) : "";
      }
      function Wt(O) {
        var D = O.generator && !_.moz.starlessGenerator;
        return D ? "*" + C : "";
      }
      function vn(O) {
        var D = O.value, A = "";
        return D.async && (A += pt(D, !O.computed)), D.generator && (A += Wt(D) ? "*" : ""), A;
      }
      ut.prototype.generatePattern = function(O, D, A) {
        return O.type === e.Identifier ? Ze(O) : this.generateExpression(O, D, A);
      }, ut.prototype.generateFunctionParams = function(O) {
        var D, A, P, R;
        if (R = !1, O.type === e.ArrowFunctionExpression && !O.rest && (!O.defaults || O.defaults.length === 0) && O.params.length === 1 && O.params[0].type === e.Identifier)
          P = [pt(O, !0), Ze(O.params[0])];
        else {
          for (P = O.type === e.ArrowFunctionExpression ? [pt(O, !1)] : [], P.push("("), O.defaults && (R = !0), D = 0, A = O.params.length; D < A; ++D)
            R && O.defaults[D] ? P.push(this.generateAssignment(O.params[D], O.defaults[D], "=", n.Assignment, he)) : P.push(this.generatePattern(O.params[D], n.Assignment, he)), D + 1 < A && P.push("," + C);
          O.rest && (O.params.length && P.push("," + C), P.push("..."), P.push(Ze(O.rest))), P.push(")");
        }
        return P;
      }, ut.prototype.generateFunctionBody = function(O) {
        var D, A;
        return D = this.generateFunctionParams(O), O.type === e.ArrowFunctionExpression && (D.push(C), D.push("=>")), O.expression ? (D.push(C), A = this.generateExpression(O.body, n.Assignment, he), A.toString().charAt(0) === "{" && (A = ["(", A, ")"]), D.push(A)) : D.push(this.maybeBlock(O.body, Bn)), D;
      }, ut.prototype.generateIterationForStatement = function(O, D, A) {
        var P = ["for" + (D.await ? Tt() + "await" : "") + C + "("], R = this;
        return Xe(function() {
          D.left.type === e.VariableDeclaration ? Xe(function() {
            P.push(D.left.kind + Tt()), P.push(R.generateStatement(D.left.declarations[0], ze));
          }) : P.push(R.generateExpression(D.left, n.Call, he)), P = Se(P, O), P = [Se(
            P,
            R.generateExpression(D.right, n.Assignment, he)
          ), ")"];
        }), P.push(this.maybeBlock(D.body, A)), P;
      }, ut.prototype.generatePropertyKey = function(O, D) {
        var A = [];
        return D && A.push("["), A.push(this.generateExpression(O, n.Assignment, he)), D && A.push("]"), A;
      }, ut.prototype.generateAssignment = function(O, D, A, P, R) {
        return n.Assignment < P && (R |= ie), Ye(
          [
            this.generateExpression(O, n.Call, R),
            C + A + C,
            this.generateExpression(D, n.Assignment, R)
          ],
          n.Assignment,
          P
        );
      }, ut.prototype.semicolon = function(O) {
        return !M && O & ke ? "" : ";";
      }, ut.Statement = {
        BlockStatement: function(O, D) {
          var A, P, R = ["{", x], J = this;
          return Xe(function() {
            O.body.length === 0 && U && (A = O.range, A[1] - A[0] > 2 && (P = N.substring(A[0] + 1, A[1] - 1), P[0] === `
` && (R = ["{"]), R.push(P)));
            var ae, pe, ge, Je;
            for (Je = We, D & Ee && (Je |= re), ae = 0, pe = O.body.length; ae < pe; ++ae)
              U && (ae === 0 && (O.body[0].leadingComments && (A = O.body[0].leadingComments[0].extendedRange, P = N.substring(A[0], A[1]), P[0] === `
` && (R = ["{"])), O.body[0].leadingComments || He(O.range[0], O.body[0].range[0], R)), ae > 0 && !O.body[ae - 1].trailingComments && !O.body[ae].leadingComments && He(O.body[ae - 1].range[1], O.body[ae].range[0], R)), ae === pe - 1 && (Je |= ke), O.body[ae].leadingComments && U ? ge = J.generateStatement(O.body[ae], Je) : ge = wt(J.generateStatement(O.body[ae], Je)), R.push(ge), Et(Ue(ge).toString()) || U && ae < pe - 1 && O.body[ae + 1].leadingComments || R.push(x), U && ae === pe - 1 && (O.body[ae].trailingComments || He(O.body[ae].range[1], O.range[1], R));
          }), R.push(wt("}")), R;
        },
        BreakStatement: function(O, D) {
          return O.label ? "break " + O.label.name + this.semicolon(D) : "break" + this.semicolon(D);
        },
        ContinueStatement: function(O, D) {
          return O.label ? "continue " + O.label.name + this.semicolon(D) : "continue" + this.semicolon(D);
        },
        ClassBody: function(O, D) {
          var A = ["{", x], P = this;
          return Xe(function(R) {
            var J, ae;
            for (J = 0, ae = O.body.length; J < ae; ++J)
              A.push(R), A.push(P.generateExpression(O.body[J], n.Sequence, he)), J + 1 < ae && A.push(x);
          }), Et(Ue(A).toString()) || A.push(x), A.push(o), A.push("}"), A;
        },
        ClassDeclaration: function(O, D) {
          var A, P;
          return A = ["class"], O.id && (A = Se(A, this.generateExpression(O.id, n.Sequence, he))), O.superClass && (P = Se("extends", this.generateExpression(O.superClass, n.Unary, he)), A = Se(A, P)), A.push(C), A.push(this.generateStatement(O.body, Qt)), A;
        },
        DirectiveStatement: function(O, D) {
          return _.raw && O.raw ? O.raw + this.semicolon(D) : er(O.directive) + this.semicolon(D);
        },
        DoWhileStatement: function(O, D) {
          var A = Se("do", this.maybeBlock(O.body, We));
          return A = this.maybeBlockSuffix(O.body, A), Se(A, [
            "while" + C + "(",
            this.generateExpression(O.test, n.Sequence, he),
            ")" + this.semicolon(D)
          ]);
        },
        CatchClause: function(O, D) {
          var A, P = this;
          return Xe(function() {
            var R;
            O.param ? (A = [
              "catch" + C + "(",
              P.generateExpression(O.param, n.Sequence, he),
              ")"
            ], O.guard && (R = P.generateExpression(O.guard, n.Sequence, he), A.splice(2, 0, " if ", R))) : A = ["catch"];
          }), A.push(this.maybeBlock(O.body, We)), A;
        },
        DebuggerStatement: function(O, D) {
          return "debugger" + this.semicolon(D);
        },
        EmptyStatement: function(O, D) {
          return ";";
        },
        ExportDefaultDeclaration: function(O, D) {
          var A = ["export"], P;
          return P = D & ke ? Qt : We, A = Se(A, "default"), H(O.declaration) ? A = Se(A, this.generateStatement(O.declaration, P)) : A = Se(A, this.generateExpression(O.declaration, n.Assignment, he) + this.semicolon(D)), A;
        },
        ExportNamedDeclaration: function(O, D) {
          var A = ["export"], P, R = this;
          return P = D & ke ? Qt : We, O.declaration ? Se(A, this.generateStatement(O.declaration, P)) : (O.specifiers && (O.specifiers.length === 0 ? A = Se(A, "{" + C + "}") : O.specifiers[0].type === e.ExportBatchSpecifier ? A = Se(A, this.generateExpression(O.specifiers[0], n.Sequence, he)) : (A = Se(A, "{"), Xe(function(J) {
            var ae, pe;
            for (A.push(x), ae = 0, pe = O.specifiers.length; ae < pe; ++ae)
              A.push(J), A.push(R.generateExpression(O.specifiers[ae], n.Sequence, he)), ae + 1 < pe && A.push("," + x);
          }), Et(Ue(A).toString()) || A.push(x), A.push(o + "}")), O.source ? A = Se(A, [
            "from" + C,
            // ModuleSpecifier
            this.generateExpression(O.source, n.Sequence, he),
            this.semicolon(D)
          ]) : A.push(this.semicolon(D))), A);
        },
        ExportAllDeclaration: function(O, D) {
          return [
            "export" + C,
            "*" + C,
            "from" + C,
            // ModuleSpecifier
            this.generateExpression(O.source, n.Sequence, he),
            this.semicolon(D)
          ];
        },
        ExpressionStatement: function(O, D) {
          var A, P;
          function R(pe) {
            var ge;
            return pe.slice(0, 5) !== "class" ? !1 : (ge = pe.charCodeAt(5), ge === 123 || a.code.isWhiteSpace(ge) || a.code.isLineTerminator(ge));
          }
          function J(pe) {
            var ge;
            return pe.slice(0, 8) !== "function" ? !1 : (ge = pe.charCodeAt(8), ge === 40 || a.code.isWhiteSpace(ge) || ge === 42 || a.code.isLineTerminator(ge));
          }
          function ae(pe) {
            var ge, Je, Rt;
            if (pe.slice(0, 5) !== "async" || !a.code.isWhiteSpace(pe.charCodeAt(5)))
              return !1;
            for (Je = 6, Rt = pe.length; Je < Rt && a.code.isWhiteSpace(pe.charCodeAt(Je)); ++Je)
              ;
            return Je === Rt || pe.slice(Je, Je + 8) !== "function" ? !1 : (ge = pe.charCodeAt(Je + 8), ge === 40 || a.code.isWhiteSpace(ge) || ge === 42 || a.code.isLineTerminator(ge));
          }
          return A = [this.generateExpression(O.expression, n.Sequence, he)], P = Ue(A).toString(), P.charCodeAt(0) === 123 || // ObjectExpression
          R(P) || J(P) || ae(P) || q && D & re && O.expression.type === e.Literal && typeof O.expression.value == "string" ? A = ["(", A, ")" + this.semicolon(D)] : A.push(this.semicolon(D)), A;
        },
        ImportDeclaration: function(O, D) {
          var A, P, R = this;
          return O.specifiers.length === 0 ? [
            "import",
            C,
            // ModuleSpecifier
            this.generateExpression(O.source, n.Sequence, he),
            this.semicolon(D)
          ] : (A = [
            "import"
          ], P = 0, O.specifiers[P].type === e.ImportDefaultSpecifier && (A = Se(A, [
            this.generateExpression(O.specifiers[P], n.Sequence, he)
          ]), ++P), O.specifiers[P] && (P !== 0 && A.push(","), O.specifiers[P].type === e.ImportNamespaceSpecifier ? A = Se(A, [
            C,
            this.generateExpression(O.specifiers[P], n.Sequence, he)
          ]) : (A.push(C + "{"), O.specifiers.length - P === 1 ? (A.push(C), A.push(this.generateExpression(O.specifiers[P], n.Sequence, he)), A.push(C + "}" + C)) : (Xe(function(J) {
            var ae, pe;
            for (A.push(x), ae = P, pe = O.specifiers.length; ae < pe; ++ae)
              A.push(J), A.push(R.generateExpression(O.specifiers[ae], n.Sequence, he)), ae + 1 < pe && A.push("," + x);
          }), Et(Ue(A).toString()) || A.push(x), A.push(o + "}" + C)))), A = Se(A, [
            "from" + C,
            // ModuleSpecifier
            this.generateExpression(O.source, n.Sequence, he),
            this.semicolon(D)
          ]), A);
        },
        VariableDeclarator: function(O, D) {
          var A = D & ie ? he : xe;
          return O.init ? [
            this.generateExpression(O.id, n.Assignment, A),
            C,
            "=",
            C,
            this.generateExpression(O.init, n.Assignment, A)
          ] : this.generatePattern(O.id, n.Assignment, A);
        },
        VariableDeclaration: function(O, D) {
          var A, P, R, J, ae, pe = this;
          A = [O.kind], ae = D & ie ? We : ze;
          function ge() {
            for (J = O.declarations[0], _.comment && J.leadingComments ? (A.push(`
`), A.push(wt(pe.generateStatement(J, ae)))) : (A.push(Tt()), A.push(pe.generateStatement(J, ae))), P = 1, R = O.declarations.length; P < R; ++P)
              J = O.declarations[P], _.comment && J.leadingComments ? (A.push("," + x), A.push(wt(pe.generateStatement(J, ae)))) : (A.push("," + C), A.push(pe.generateStatement(J, ae)));
          }
          return O.declarations.length > 1 ? Xe(ge) : ge(), A.push(this.semicolon(D)), A;
        },
        ThrowStatement: function(O, D) {
          return [Se(
            "throw",
            this.generateExpression(O.argument, n.Sequence, he)
          ), this.semicolon(D)];
        },
        TryStatement: function(O, D) {
          var A, P, R, J;
          if (A = ["try", this.maybeBlock(O.block, We)], A = this.maybeBlockSuffix(O.block, A), O.handlers)
            for (P = 0, R = O.handlers.length; P < R; ++P)
              A = Se(A, this.generateStatement(O.handlers[P], We)), (O.finalizer || P + 1 !== R) && (A = this.maybeBlockSuffix(O.handlers[P].body, A));
          else {
            for (J = O.guardedHandlers || [], P = 0, R = J.length; P < R; ++P)
              A = Se(A, this.generateStatement(J[P], We)), (O.finalizer || P + 1 !== R) && (A = this.maybeBlockSuffix(J[P].body, A));
            if (O.handler)
              if (Array.isArray(O.handler))
                for (P = 0, R = O.handler.length; P < R; ++P)
                  A = Se(A, this.generateStatement(O.handler[P], We)), (O.finalizer || P + 1 !== R) && (A = this.maybeBlockSuffix(O.handler[P].body, A));
              else
                A = Se(A, this.generateStatement(O.handler, We)), O.finalizer && (A = this.maybeBlockSuffix(O.handler.body, A));
          }
          return O.finalizer && (A = Se(A, ["finally", this.maybeBlock(O.finalizer, We)])), A;
        },
        SwitchStatement: function(O, D) {
          var A, P, R, J, ae, pe = this;
          if (Xe(function() {
            A = [
              "switch" + C + "(",
              pe.generateExpression(O.discriminant, n.Sequence, he),
              ")" + C + "{" + x
            ];
          }), O.cases)
            for (ae = We, R = 0, J = O.cases.length; R < J; ++R)
              R === J - 1 && (ae |= ke), P = wt(this.generateStatement(O.cases[R], ae)), A.push(P), Et(Ue(P).toString()) || A.push(x);
          return A.push(wt("}")), A;
        },
        SwitchCase: function(O, D) {
          var A, P, R, J, ae, pe = this;
          return Xe(function() {
            for (O.test ? A = [
              Se("case", pe.generateExpression(O.test, n.Sequence, he)),
              ":"
            ] : A = ["default:"], R = 0, J = O.consequent.length, J && O.consequent[0].type === e.BlockStatement && (P = pe.maybeBlock(O.consequent[0], We), A.push(P), R = 1), R !== J && !Et(Ue(A).toString()) && A.push(x), ae = We; R < J; ++R)
              R === J - 1 && D & ke && (ae |= ke), P = wt(pe.generateStatement(O.consequent[R], ae)), A.push(P), R + 1 !== J && !Et(Ue(P).toString()) && A.push(x);
          }), A;
        },
        IfStatement: function(O, D) {
          var A, P, R, J = this;
          return Xe(function() {
            A = [
              "if" + C + "(",
              J.generateExpression(O.test, n.Sequence, he),
              ")"
            ];
          }), R = D & ke, P = We, R && (P |= ke), O.alternate ? (A.push(this.maybeBlock(O.consequent, We)), A = this.maybeBlockSuffix(O.consequent, A), O.alternate.type === e.IfStatement ? A = Se(A, ["else ", this.generateStatement(O.alternate, P)]) : A = Se(A, Se("else", this.maybeBlock(O.alternate, P)))) : A.push(this.maybeBlock(O.consequent, P)), A;
        },
        ForStatement: function(O, D) {
          var A, P = this;
          return Xe(function() {
            A = ["for" + C + "("], O.init ? O.init.type === e.VariableDeclaration ? A.push(P.generateStatement(O.init, ze)) : (A.push(P.generateExpression(O.init, n.Sequence, xe)), A.push(";")) : A.push(";"), O.test && (A.push(C), A.push(P.generateExpression(O.test, n.Sequence, he))), A.push(";"), O.update && (A.push(C), A.push(P.generateExpression(O.update, n.Sequence, he))), A.push(")");
          }), A.push(this.maybeBlock(O.body, D & ke ? Qt : We)), A;
        },
        ForInStatement: function(O, D) {
          return this.generateIterationForStatement("in", O, D & ke ? Qt : We);
        },
        ForOfStatement: function(O, D) {
          return this.generateIterationForStatement("of", O, D & ke ? Qt : We);
        },
        LabeledStatement: function(O, D) {
          return [O.label.name + ":", this.maybeBlock(O.body, D & ke ? Qt : We)];
        },
        Program: function(O, D) {
          var A, P, R, J, ae;
          for (J = O.body.length, A = [Z && J > 0 ? `
` : ""], ae = xt, R = 0; R < J; ++R)
            !Z && R === J - 1 && (ae |= ke), U && (R === 0 && (O.body[0].leadingComments || He(O.range[0], O.body[R].range[0], A)), R > 0 && !O.body[R - 1].trailingComments && !O.body[R].leadingComments && He(O.body[R - 1].range[1], O.body[R].range[0], A)), P = wt(this.generateStatement(O.body[R], ae)), A.push(P), R + 1 < J && !Et(Ue(P).toString()) && (U && O.body[R + 1].leadingComments || A.push(x)), U && R === J - 1 && (O.body[R].trailingComments || He(O.body[R].range[1], O.range[1], A));
          return A;
        },
        FunctionDeclaration: function(O, D) {
          return [
            pt(O, !0),
            "function",
            Wt(O) || Tt(),
            O.id ? Ze(O.id) : "",
            this.generateFunctionBody(O)
          ];
        },
        ReturnStatement: function(O, D) {
          return O.argument ? [Se(
            "return",
            this.generateExpression(O.argument, n.Sequence, he)
          ), this.semicolon(D)] : ["return" + this.semicolon(D)];
        },
        WhileStatement: function(O, D) {
          var A, P = this;
          return Xe(function() {
            A = [
              "while" + C + "(",
              P.generateExpression(O.test, n.Sequence, he),
              ")"
            ];
          }), A.push(this.maybeBlock(O.body, D & ke ? Qt : We)), A;
        },
        WithStatement: function(O, D) {
          var A, P = this;
          return Xe(function() {
            A = [
              "with" + C + "(",
              P.generateExpression(O.object, n.Sequence, he),
              ")"
            ];
          }), A.push(this.maybeBlock(O.body, D & ke ? Qt : We)), A;
        }
      }, Xt(ut.prototype, ut.Statement), ut.Expression = {
        SequenceExpression: function(O, D, A) {
          var P, R, J;
          for (n.Sequence < D && (A |= ie), P = [], R = 0, J = O.expressions.length; R < J; ++R)
            P.push(this.generateExpression(O.expressions[R], n.Assignment, A)), R + 1 < J && P.push("," + C);
          return Ye(P, n.Sequence, D);
        },
        AssignmentExpression: function(O, D, A) {
          return this.generateAssignment(O.left, O.right, O.operator, D, A);
        },
        ArrowFunctionExpression: function(O, D, A) {
          return Ye(this.generateFunctionBody(O), n.ArrowFunction, D);
        },
        ConditionalExpression: function(O, D, A) {
          return n.Conditional < D && (A |= ie), Ye(
            [
              this.generateExpression(O.test, n.Coalesce, A),
              C + "?" + C,
              this.generateExpression(O.consequent, n.Assignment, A),
              C + ":" + C,
              this.generateExpression(O.alternate, n.Assignment, A)
            ],
            n.Conditional,
            D
          );
        },
        LogicalExpression: function(O, D, A) {
          return O.operator === "??" && (A |= Le), this.BinaryExpression(O, D, A);
        },
        BinaryExpression: function(O, D, A) {
          var P, R, J, ae, pe, ge;
          return ae = r[O.operator], R = O.operator === "**" ? n.Postfix : ae, J = O.operator === "**" ? ae : ae + 1, ae < D && (A |= ie), pe = this.generateExpression(O.left, R, A), ge = pe.toString(), ge.charCodeAt(ge.length - 1) === 47 && a.code.isIdentifierPartES5(O.operator.charCodeAt(0)) ? P = [pe, Tt(), O.operator] : P = Se(pe, O.operator), pe = this.generateExpression(O.right, J, A), O.operator === "/" && pe.toString().charAt(0) === "/" || O.operator.slice(-1) === "<" && pe.toString().slice(0, 3) === "!--" ? (P.push(Tt()), P.push(pe)) : P = Se(P, pe), O.operator === "in" && !(A & ie) ? ["(", P, ")"] : (O.operator === "||" || O.operator === "&&") && A & Le ? ["(", P, ")"] : Ye(P, ae, D);
        },
        CallExpression: function(O, D, A) {
          var P, R, J;
          for (P = [this.generateExpression(O.callee, n.Call, je)], O.optional && P.push("?."), P.push("("), R = 0, J = O.arguments.length; R < J; ++R)
            P.push(this.generateExpression(O.arguments[R], n.Assignment, he)), R + 1 < J && P.push("," + C);
          return P.push(")"), A & fe ? Ye(P, n.Call, D) : ["(", P, ")"];
        },
        ChainExpression: function(O, D, A) {
          n.OptionalChaining < D && (A |= fe);
          var P = this.generateExpression(O.expression, n.OptionalChaining, A);
          return Ye(P, n.OptionalChaining, D);
        },
        NewExpression: function(O, D, A) {
          var P, R, J, ae, pe;
          if (R = O.arguments.length, pe = A & De && !S && R === 0 ? lt : Pe, P = Se(
            "new",
            this.generateExpression(O.callee, n.New, pe)
          ), !(A & De) || S || R > 0) {
            for (P.push("("), J = 0, ae = R; J < ae; ++J)
              P.push(this.generateExpression(O.arguments[J], n.Assignment, he)), J + 1 < ae && P.push("," + C);
            P.push(")");
          }
          return Ye(P, n.New, D);
        },
        MemberExpression: function(O, D, A) {
          var P, R;
          return P = [this.generateExpression(O.object, n.Call, A & fe ? je : Pe)], O.computed ? (O.optional && P.push("?."), P.push("["), P.push(this.generateExpression(O.property, n.Sequence, A & fe ? he : lt)), P.push("]")) : (!O.optional && O.object.type === e.Literal && typeof O.object.value == "number" && (R = Ue(P).toString(), R.indexOf(".") < 0 && !/[eExX]/.test(R) && a.code.isDecimalDigit(R.charCodeAt(R.length - 1)) && !(R.length >= 2 && R.charCodeAt(0) === 48) && P.push(" ")), P.push(O.optional ? "?." : "."), P.push(Ze(O.property))), Ye(P, n.Member, D);
        },
        MetaProperty: function(O, D, A) {
          var P;
          return P = [], P.push(typeof O.meta == "string" ? O.meta : Ze(O.meta)), P.push("."), P.push(typeof O.property == "string" ? O.property : Ze(O.property)), Ye(P, n.Member, D);
        },
        UnaryExpression: function(O, D, A) {
          var P, R, J, ae, pe;
          return R = this.generateExpression(O.argument, n.Unary, he), C === "" ? P = Se(O.operator, R) : (P = [O.operator], O.operator.length > 2 ? P = Se(P, R) : (ae = Ue(P).toString(), pe = ae.charCodeAt(ae.length - 1), J = R.toString().charCodeAt(0), ((pe === 43 || pe === 45) && pe === J || a.code.isIdentifierPartES5(pe) && a.code.isIdentifierPartES5(J)) && P.push(Tt()), P.push(R))), Ye(P, n.Unary, D);
        },
        YieldExpression: function(O, D, A) {
          var P;
          return O.delegate ? P = "yield*" : P = "yield", O.argument && (P = Se(
            P,
            this.generateExpression(O.argument, n.Yield, he)
          )), Ye(P, n.Yield, D);
        },
        AwaitExpression: function(O, D, A) {
          var P = Se(
            O.all ? "await*" : "await",
            this.generateExpression(O.argument, n.Await, he)
          );
          return Ye(P, n.Await, D);
        },
        UpdateExpression: function(O, D, A) {
          return O.prefix ? Ye(
            [
              O.operator,
              this.generateExpression(O.argument, n.Unary, he)
            ],
            n.Unary,
            D
          ) : Ye(
            [
              this.generateExpression(O.argument, n.Postfix, he),
              O.operator
            ],
            n.Postfix,
            D
          );
        },
        FunctionExpression: function(O, D, A) {
          var P = [
            pt(O, !0),
            "function"
          ];
          return O.id ? (P.push(Wt(O) || Tt()), P.push(Ze(O.id))) : P.push(Wt(O) || C), P.push(this.generateFunctionBody(O)), P;
        },
        ArrayPattern: function(O, D, A) {
          return this.ArrayExpression(O, D, A, !0);
        },
        ArrayExpression: function(O, D, A, P) {
          var R, J, ae = this;
          return O.elements.length ? (J = P ? !1 : O.elements.length > 1, R = ["[", J ? x : ""], Xe(function(pe) {
            var ge, Je;
            for (ge = 0, Je = O.elements.length; ge < Je; ++ge)
              O.elements[ge] ? (R.push(J ? pe : ""), R.push(ae.generateExpression(O.elements[ge], n.Assignment, he))) : (J && R.push(pe), ge + 1 === Je && R.push(",")), ge + 1 < Je && R.push("," + (J ? x : C));
          }), J && !Et(Ue(R).toString()) && R.push(x), R.push(J ? o : ""), R.push("]"), R) : "[]";
        },
        RestElement: function(O, D, A) {
          return "..." + this.generatePattern(O.argument);
        },
        ClassExpression: function(O, D, A) {
          var P, R;
          return P = ["class"], O.id && (P = Se(P, this.generateExpression(O.id, n.Sequence, he))), O.superClass && (R = Se("extends", this.generateExpression(O.superClass, n.Unary, he)), P = Se(P, R)), P.push(C), P.push(this.generateStatement(O.body, Qt)), P;
        },
        MethodDefinition: function(O, D, A) {
          var P, R;
          return O.static ? P = ["static" + C] : P = [], O.kind === "get" || O.kind === "set" ? R = [
            Se(O.kind, this.generatePropertyKey(O.key, O.computed)),
            this.generateFunctionBody(O.value)
          ] : R = [
            vn(O),
            this.generatePropertyKey(O.key, O.computed),
            this.generateFunctionBody(O.value)
          ], Se(P, R);
        },
        Property: function(O, D, A) {
          return O.kind === "get" || O.kind === "set" ? [
            O.kind,
            Tt(),
            this.generatePropertyKey(O.key, O.computed),
            this.generateFunctionBody(O.value)
          ] : O.shorthand ? O.value.type === "AssignmentPattern" ? this.AssignmentPattern(O.value, n.Sequence, he) : this.generatePropertyKey(O.key, O.computed) : O.method ? [
            vn(O),
            this.generatePropertyKey(O.key, O.computed),
            this.generateFunctionBody(O.value)
          ] : [
            this.generatePropertyKey(O.key, O.computed),
            ":" + C,
            this.generateExpression(O.value, n.Assignment, he)
          ];
        },
        ObjectExpression: function(O, D, A) {
          var P, R, J, ae = this;
          return O.properties.length ? (P = O.properties.length > 1, Xe(function() {
            J = ae.generateExpression(O.properties[0], n.Sequence, he);
          }), !P && !kt(Ue(J).toString()) ? ["{", C, J, C, "}"] : (Xe(function(pe) {
            var ge, Je;
            if (R = ["{", x, pe, J], P)
              for (R.push("," + x), ge = 1, Je = O.properties.length; ge < Je; ++ge)
                R.push(pe), R.push(ae.generateExpression(O.properties[ge], n.Sequence, he)), ge + 1 < Je && R.push("," + x);
          }), Et(Ue(R).toString()) || R.push(x), R.push(o), R.push("}"), R)) : "{}";
        },
        AssignmentPattern: function(O, D, A) {
          return this.generateAssignment(O.left, O.right, "=", D, A);
        },
        ObjectPattern: function(O, D, A) {
          var P, R, J, ae, pe, ge = this;
          if (!O.properties.length)
            return "{}";
          if (ae = !1, O.properties.length === 1)
            pe = O.properties[0], pe.type === e.Property && pe.value.type !== e.Identifier && (ae = !0);
          else
            for (R = 0, J = O.properties.length; R < J; ++R)
              if (pe = O.properties[R], pe.type === e.Property && !pe.shorthand) {
                ae = !0;
                break;
              }
          return P = ["{", ae ? x : ""], Xe(function(Je) {
            var Rt, Yt;
            for (Rt = 0, Yt = O.properties.length; Rt < Yt; ++Rt)
              P.push(ae ? Je : ""), P.push(ge.generateExpression(O.properties[Rt], n.Sequence, he)), Rt + 1 < Yt && P.push("," + (ae ? x : C));
          }), ae && !Et(Ue(P).toString()) && P.push(x), P.push(ae ? o : ""), P.push("}"), P;
        },
        ThisExpression: function(O, D, A) {
          return "this";
        },
        Super: function(O, D, A) {
          return "super";
        },
        Identifier: function(O, D, A) {
          return Ze(O);
        },
        ImportDefaultSpecifier: function(O, D, A) {
          return Ze(O.id || O.local);
        },
        ImportNamespaceSpecifier: function(O, D, A) {
          var P = ["*"], R = O.id || O.local;
          return R && P.push(C + "as" + Tt() + Ze(R)), P;
        },
        ImportSpecifier: function(O, D, A) {
          var P = O.imported, R = [P.name], J = O.local;
          return J && J.name !== P.name && R.push(Tt() + "as" + Tt() + Ze(J)), R;
        },
        ExportSpecifier: function(O, D, A) {
          var P = O.local, R = [P.name], J = O.exported;
          return J && J.name !== P.name && R.push(Tt() + "as" + Tt() + Ze(J)), R;
        },
        Literal: function(O, D, A) {
          var P;
          if (O.hasOwnProperty("raw") && B && _.raw)
            try {
              if (P = B(O.raw).body[0].expression, P.type === e.Literal && P.value === O.value)
                return O.raw;
            } catch {
            }
          return O.regex ? "/" + O.regex.pattern + "/" + O.regex.flags : typeof O.value == "bigint" ? O.value.toString() + "n" : O.bigint ? O.bigint + "n" : O.value === null ? "null" : typeof O.value == "string" ? On(O.value) : typeof O.value == "number" ? Jn(O.value) : typeof O.value == "boolean" ? O.value ? "true" : "false" : Mn(O.value);
        },
        GeneratorExpression: function(O, D, A) {
          return this.ComprehensionExpression(O, D, A);
        },
        ComprehensionExpression: function(O, D, A) {
          var P, R, J, ae, pe = this;
          return P = O.type === e.GeneratorExpression ? ["("] : ["["], _.moz.comprehensionExpressionStartsWithAssignment && (ae = this.generateExpression(O.body, n.Assignment, he), P.push(ae)), O.blocks && Xe(function() {
            for (R = 0, J = O.blocks.length; R < J; ++R)
              ae = pe.generateExpression(O.blocks[R], n.Sequence, he), R > 0 || _.moz.comprehensionExpressionStartsWithAssignment ? P = Se(P, ae) : P.push(ae);
          }), O.filter && (P = Se(P, "if" + C), ae = this.generateExpression(O.filter, n.Sequence, he), P = Se(P, ["(", ae, ")"])), _.moz.comprehensionExpressionStartsWithAssignment || (ae = this.generateExpression(O.body, n.Assignment, he), P = Se(P, ae)), P.push(O.type === e.GeneratorExpression ? ")" : "]"), P;
        },
        ComprehensionBlock: function(O, D, A) {
          var P;
          return O.left.type === e.VariableDeclaration ? P = [
            O.left.kind,
            Tt(),
            this.generateStatement(O.left.declarations[0], ze)
          ] : P = this.generateExpression(O.left, n.Call, he), P = Se(P, O.of ? "of" : "in"), P = Se(P, this.generateExpression(O.right, n.Sequence, he)), ["for" + C + "(", P, ")"];
        },
        SpreadElement: function(O, D, A) {
          return [
            "...",
            this.generateExpression(O.argument, n.Assignment, he)
          ];
        },
        TaggedTemplateExpression: function(O, D, A) {
          var P = je;
          A & fe || (P = Pe);
          var R = [
            this.generateExpression(O.tag, n.Call, P),
            this.generateExpression(O.quasi, n.Primary, Pt)
          ];
          return Ye(R, n.TaggedTemplate, D);
        },
        TemplateElement: function(O, D, A) {
          return O.value.raw;
        },
        TemplateLiteral: function(O, D, A) {
          var P, R, J;
          for (P = ["`"], R = 0, J = O.quasis.length; R < J; ++R)
            P.push(this.generateExpression(O.quasis[R], n.Primary, he)), R + 1 < J && (P.push("${" + C), P.push(this.generateExpression(O.expressions[R], n.Sequence, he)), P.push(C + "}"));
          return P.push("`"), P;
        },
        ModuleSpecifier: function(O, D, A) {
          return this.Literal(O, D, A);
        },
        ImportExpression: function(O, D, A) {
          return Ye([
            "import(",
            this.generateExpression(O.source, n.Assignment, he),
            ")"
          ], n.Call, D);
        }
      }, Xt(ut.prototype, ut.Expression), ut.prototype.generateExpression = function(O, D, A) {
        var P, R;
        return R = O.type || e.Property, _.verbatim && O.hasOwnProperty(_.verbatim) ? Ht(O, D) : (P = this[R](O, D, A), _.comment && (P = vt(O, P)), Ue(P, O));
      }, ut.prototype.generateStatement = function(O, D) {
        var A, P;
        return A = this[O.type](O, D), _.comment && (A = vt(O, A)), P = Ue(A).toString(), O.type === e.Program && !Z && x === "" && P.charAt(P.length - 1) === `
` && (A = $ ? Ue(A).replaceRight(/\s+$/, "") : P.replace(/\s+$/, "")), Ue(A, O);
      };
      function $i(O) {
        var D;
        if (D = new ut(), H(O))
          return D.generateStatement(O, We);
        if (ce(O))
          return D.generateExpression(O, n.Sequence, he);
        throw new Error("Unknown node type: " + O.type);
      }
      function $s(O, D) {
        var A = dn(), P, R;
        return D != null ? (typeof D.indent == "string" && (A.format.indent.style = D.indent), typeof D.base == "number" && (A.format.indent.base = D.base), D = Kn(A, D), l = D.format.indent.style, typeof D.base == "string" ? o = D.base : o = Ot(l, D.format.indent.base)) : (D = A, l = D.format.indent.style, o = Ot(l, D.format.indent.base)), c = D.format.json, h = D.format.renumber, f = c ? !1 : D.format.hexadecimal, m = c ? "double" : D.format.quotes, y = D.format.escapeless, x = D.format.newline, C = D.format.space, D.format.compact && (x = C = l = o = ""), S = D.format.parentheses, M = D.format.semicolons, Z = D.format.safeConcatenation, q = D.directive, B = c ? null : D.parse, $ = D.sourceMap, N = D.sourceCode, U = D.format.preserveBlankLines && N !== null, _ = D, $ && (t.browser ? i = jB.sourceMap.SourceNode : i = UB().SourceNode), P = $i(O), $ ? (R = P.toStringWithSourceMap({
          file: D.file,
          sourceRoot: D.sourceMapRoot
        }), D.sourceContent && R.map.setSourceContent(
          D.sourceMap,
          D.sourceContent
        ), D.sourceMapWithCode ? R : R.map.toString()) : (R = { code: P.toString(), map: null }, D.sourceMapWithCode ? R : R.code);
      }
      se = {
        indent: {
          style: "",
          base: 0
        },
        renumber: !0,
        hexadecimal: !0,
        quotes: "auto",
        escapeless: !0,
        compact: !0,
        parentheses: !1,
        semicolons: !1
      }, K = dn().format, t.version = u9.version, t.generate = $s, t.attachComments = s.attachComments, t.Precedence = Kn({}, n), t.browser = !1, t.FORMAT_MINIFY = se, t.FORMAT_DEFAULTS = K;
    })();
  }(mh)), mh;
}
var h9 = c9();
const p9 = /* @__PURE__ */ _B(h9);
class f9 {
  constructor() {
    this.should_skip = !1, this.should_remove = !1, this.replacement = null, this.context = {
      skip: () => this.should_skip = !0,
      remove: () => this.should_remove = !0,
      replace: (e) => this.replacement = e
    };
  }
  /**
   * @template {Node} Parent
   * @param {Parent | null | undefined} parent
   * @param {keyof Parent | null | undefined} prop
   * @param {number | null | undefined} index
   * @param {Node} node
   */
  replace(e, n, r, i) {
    e && n && (r != null ? e[n][r] = i : e[n] = i);
  }
  /**
   * @template {Node} Parent
   * @param {Parent | null | undefined} parent
   * @param {keyof Parent | null | undefined} prop
   * @param {number | null | undefined} index
   */
  remove(e, n, r) {
    e && n && (r != null ? e[n].splice(r, 1) : delete e[n]);
  }
}
class d9 extends f9 {
  /**
   *
   * @param {SyncHandler} [enter]
   * @param {SyncHandler} [leave]
   */
  constructor(e, n) {
    super(), this.should_skip = !1, this.should_remove = !1, this.replacement = null, this.context = {
      skip: () => this.should_skip = !0,
      remove: () => this.should_remove = !0,
      replace: (r) => this.replacement = r
    }, this.enter = e, this.leave = n;
  }
  /**
   * @template {Node} Parent
   * @param {Node} node
   * @param {Parent | null} parent
   * @param {keyof Parent} [prop]
   * @param {number | null} [index]
   * @returns {Node | null}
   */
  visit(e, n, r, i) {
    if (e) {
      if (this.enter) {
        const a = this.should_skip, o = this.should_remove, l = this.replacement;
        this.should_skip = !1, this.should_remove = !1, this.replacement = null, this.enter.call(this.context, e, n, r, i), this.replacement && (e = this.replacement, this.replace(n, r, i, e)), this.should_remove && this.remove(n, r, i);
        const c = this.should_skip, h = this.should_remove;
        if (this.should_skip = a, this.should_remove = o, this.replacement = l, c) return e;
        if (h) return null;
      }
      let s;
      for (s in e) {
        const a = e[s];
        if (a && typeof a == "object")
          if (Array.isArray(a)) {
            const o = (
              /** @type {Array<unknown>} */
              a
            );
            for (let l = 0; l < o.length; l += 1) {
              const c = o[l];
              sg(c) && (this.visit(c, e, s, l) || l--);
            }
          } else sg(a) && this.visit(a, e, s, null);
      }
      if (this.leave) {
        const a = this.replacement, o = this.should_remove;
        this.replacement = null, this.should_remove = !1, this.leave.call(this.context, e, n, r, i), this.replacement && (e = this.replacement, this.replace(n, r, i, e)), this.should_remove && this.remove(n, r, i);
        const l = this.should_remove;
        if (this.replacement = a, this.should_remove = o, l) return null;
      }
    }
    return e;
  }
}
function sg(t) {
  return t !== null && typeof t == "object" && "type" in t && typeof t.type == "string";
}
function m9(t, { enter: e, leave: n }) {
  return new d9(e, n).visit(t, null);
}
let E2 = [];
function g9(t) {
  E2.push(t);
}
function b9(t, e = {}) {
  const { wrapAsync: n = !1, addReturn: r = !0, emitMiniLocations: i = !0, emitWidgets: s = !0 } = e;
  let a = TB(t, {
    ecmaVersion: 2022,
    allowAwaitOutsideFunction: !0,
    locations: !0
  }), o = [];
  const l = (m, y) => {
    const x = dd(`"${m}"`, y.start, t);
    o = o.concat(x);
  };
  let c = [];
  m9(a, {
    enter(m, y) {
      if (P9(m)) {
        const x = m.quasi.quasis[0].value.raw, C = m.quasi.start + 1;
        if (i) {
          const S = E9(x, C);
          o = o.concat(S);
        }
        return this.skip(), this.replace(F9(x, C));
      }
      if (O9(m, y)) {
        const { quasis: x } = m, { raw: C } = x[0].value;
        return this.skip(), i && l(C, m), this.replace(ag(C, m));
      }
      if (y9(m)) {
        const { value: x } = m;
        return this.skip(), i && l(x, m), this.replace(ag(x, m));
      }
      if (v9(m))
        return s && c.push({
          from: m.arguments[0].start,
          to: m.arguments[0].end,
          value: m.arguments[0].raw,
          // don't use value!
          min: m.arguments[1]?.value ?? 0,
          max: m.arguments[2]?.value ?? 1,
          step: m.arguments[3]?.value,
          type: "slider"
        }), this.replace(k9(m));
      if (x9(m)) {
        const x = m.callee.property.name, C = c.filter((M) => M.type === x).length, S = {
          to: m.end,
          index: C,
          type: x,
          id: e.id
        };
        return s && c.push(S), this.replace(w9(m, S));
      }
      if (C9(m, y))
        return this.replace(S9(m));
      if (A9(m))
        return this.replace(D9(m));
    },
    leave(m, y, x, C) {
    }
  });
  const { body: h } = a;
  if (!h?.[h.length - 1]?.expression)
    throw new Error("unexpected ast format without body expression");
  if (r) {
    const { expression: m } = h[h.length - 1];
    h[h.length - 1] = {
      type: "ReturnStatement",
      argument: m
    };
  }
  let f = p9.generate(a);
  return n && (f = `(async ()=>{${f}})()`), i ? { output: f, miniLocations: o, widgets: c } : { output: f };
}
function y9(t, e, n) {
  return t.type !== "Literal" ? !1 : t.raw[0] === '"';
}
function O9(t, e) {
  return t.type === "TemplateLiteral" && e.type !== "TaggedTemplateExpression";
}
function ag(t, e) {
  const { start: n } = e;
  return {
    type: "CallExpression",
    callee: {
      type: "Identifier",
      name: "m"
    },
    arguments: [
      { type: "Literal", value: t },
      { type: "Literal", value: n }
    ],
    optional: !1
  };
}
function v9(t) {
  return t.type === "CallExpression" && t.callee.name === "slider";
}
function x9(t) {
  return t.type === "CallExpression" && E2.includes(t.callee.property?.name);
}
function k9(t) {
  const e = "slider_" + t.arguments[0].start;
  return t.arguments.unshift({
    type: "Literal",
    value: e,
    raw: e
  }), t.callee.name = "sliderWithID", t;
}
function F2(t) {
  return `${t.id || ""}_widget_${t.type}_${t.index}`;
}
function w9(t, e) {
  const n = F2(e);
  return t.arguments.unshift({
    type: "Literal",
    value: n,
    raw: n
  }), t;
}
function C9(t, e) {
  return t.type === "CallExpression" && t.callee.name === "samples" && e.type !== "AwaitExpression";
}
function S9(t) {
  return {
    type: "AwaitExpression",
    argument: t
  };
}
function A9(t) {
  return t.type === "LabeledStatement";
}
function D9(t) {
  return {
    type: "ExpressionStatement",
    expression: {
      type: "CallExpression",
      callee: {
        type: "MemberExpression",
        object: t.body.expression,
        property: {
          type: "Identifier",
          name: "p"
        }
      },
      arguments: [
        {
          type: "Literal",
          value: t.label.name,
          raw: `'${t.label.name}'`
        }
      ]
    }
  };
}
function P9(t) {
  return t.type === "TaggedTemplateExpression" && t.tag.name === "tidal";
}
function E9(t, e) {
  return t.split("").reduce((n, r, i) => (r !== '"' || (!n.length || n[n.length - 1].length > 1 ? n.push([i + 1]) : n[n.length - 1].push(i)), n), []).map(([n, r]) => {
    const i = t.slice(n, r);
    return dd(`"${i}"`, e + n - 1);
  }).flat();
}
function F9(t, e) {
  return {
    type: "CallExpression",
    callee: {
      type: "Identifier",
      name: "tidal"
    },
    arguments: [
      { type: "Literal", value: t },
      { type: "Literal", value: e }
    ],
    optional: !1
  };
}
if (typeof DelayNode < "u") {
  class t extends DelayNode {
    constructor(n, r, i, s) {
      super(n), r = Math.abs(r), this.delayTime.value = i;
      const a = n.createGain();
      a.gain.value = Math.min(Math.abs(s), 0.995), this.feedback = a.gain;
      const o = n.createGain();
      return o.gain.value = r, this.delayGain = o, this.connect(a), this.connect(o), a.connect(this), this.connect = (l) => o.connect(l), this;
    }
    start(n) {
      this.delayGain.gain.setValueAtTime(this.delayGain.gain.value, n + this.delayTime.value);
    }
  }
  AudioContext.prototype.createFeedbackDelay = function(e, n, r) {
    return new t(this, e, n, r);
  };
}
var Cd = {};
Cd.generateReverb = function(t, e) {
  for (var n = t.audioContext || new AudioContext(), r = n.sampleRate, i = t.numChannels || 2, s = t.decayTime * 1.5, a = Math.round(t.decayTime * r), o = Math.round(s * r), l = Math.round((t.fadeInTime || 0) * r), c = Math.pow(1 / 1e3, 1 / a), h = n.createBuffer(i, o, r), f = 0; f < i; f++) {
    for (var m = h.getChannelData(f), y = 0; y < o; y++)
      m[y] = Q9() * Math.pow(c, y);
    for (var y = 0; y < l; y++)
      m[y] *= y / l;
  }
  B9(h, t.lpFreqStart || 0, t.lpFreqEnd || 0, t.decayTime, e);
};
Cd.generateGraph = function(t, e, n, r, i) {
  var s = document.createElement("canvas");
  s.width = e, s.height = n;
  var a = s.getContext("2d");
  a.fillStyle = "#000", a.fillRect(0, 0, s.width, s.height), a.fillStyle = "#fff";
  for (var o = e / t.length, l = n / (i - r), c = 0; c < t.length; c++)
    a.fillRect(c * o, n - (t[c] - r) * l, 1, 1);
  return s;
};
var B9 = function(t, e, n, r, i) {
  if (e == 0) {
    i(t);
    return;
  }
  var s = M9(t), a = new OfflineAudioContext(t.numberOfChannels, s[0].length, t.sampleRate), o = a.createBufferSource();
  o.buffer = t;
  var l = a.createBiquadFilter();
  e = Math.min(e, t.sampleRate / 2), n = Math.min(n, t.sampleRate / 2), l.type = "lowpass", l.Q.value = 1e-4, l.frequency.setValueAtTime(e, 0), l.frequency.linearRampToValueAtTime(n, r), o.connect(l), l.connect(a.destination), o.start(), a.oncomplete = function(c) {
    i(c.renderedBuffer);
  }, a.startRendering(), window.filterNode = l;
}, M9 = function(t) {
  for (var e = [], n = 0; n < t.numberOfChannels; n++)
    e[n] = t.getChannelData(n);
  return e;
}, Q9 = function() {
  return Math.random() * 2 - 1;
};
typeof AudioContext < "u" && (AudioContext.prototype.adjustLength = function(t, e) {
  const n = e.sampleRate * t, r = this.createBuffer(e.numberOfChannels, e.length, e.sampleRate);
  for (let i = 0; i < e.numberOfChannels; i++) {
    let s = e.getChannelData(i), a = r.getChannelData(i);
    for (let o = 0; o < n; o++)
      a[o] = s[o] || 0;
  }
  return r;
}, AudioContext.prototype.createReverb = function(t, e, n, r, i) {
  const s = this.createConvolver();
  return s.generate = (a = 2, o = 0.1, l = 15e3, c = 1e3, h) => {
    s.duration = a, s.fade = o, s.lp = l, s.dim = c, s.ir = h, h ? s.buffer = this.adjustLength(a, h) : Cd.generateReverb(
      {
        audioContext: this,
        numChannels: 2,
        decayTime: a,
        fadeInTime: o,
        lpFreqStart: l,
        lpFreqEnd: c
      },
      (f) => {
        s.buffer = f;
      }
    );
  }, s.generate(t, e, n, r, i), s;
});
var og = {
  a: { freqs: [660, 1120, 2750, 3e3, 3350], gains: [1, 0.5012, 0.0708, 0.0631, 0.0126], qs: [80, 90, 120, 130, 140] },
  e: { freqs: [440, 1800, 2700, 3e3, 3300], gains: [1, 0.1995, 0.1259, 0.1, 0.1], qs: [70, 80, 100, 120, 120] },
  i: { freqs: [270, 1850, 2900, 3350, 3590], gains: [1, 0.0631, 0.0631, 0.0158, 0.0158], qs: [40, 90, 100, 120, 120] },
  o: { freqs: [430, 820, 2700, 3e3, 3300], gains: [1, 0.3162, 0.0501, 0.0794, 0.01995], qs: [40, 80, 100, 120, 120] },
  u: { freqs: [370, 630, 2750, 3e3, 3400], gains: [1, 0.1, 0.0708, 0.0316, 0.01995], qs: [40, 60, 100, 120, 120] },
  ae: { freqs: [650, 1515, 2400, 3e3, 3350], gains: [1, 0.5, 0.1008, 0.0631, 0.0126], qs: [80, 90, 120, 130, 140] },
  aa: { freqs: [560, 900, 2570, 3e3, 3300], gains: [1, 0.5, 0.0708, 0.0631, 0.0126], qs: [80, 90, 120, 130, 140] },
  oe: { freqs: [500, 1430, 2300, 3e3, 3300], gains: [1, 0.2, 0.0708, 0.0316, 0.01995], qs: [40, 60, 100, 120, 120] },
  ue: { freqs: [250, 1750, 2150, 3200, 3300], gains: [1, 0.1, 0.0708, 0.0316, 0.01995], qs: [40, 60, 100, 120, 120] },
  y: { freqs: [400, 1460, 2400, 3e3, 3300], gains: [1, 0.2, 0.0708, 0.0316, 0.02995], qs: [40, 60, 100, 120, 120] },
  uh: { freqs: [600, 1250, 2100, 3100, 3500], gains: [1, 0.3, 0.0608, 0.0316, 0.01995], qs: [40, 70, 100, 120, 130] },
  un: { freqs: [500, 1240, 2280, 3e3, 3500], gains: [1, 0.1, 0.1708, 0.0216, 0.02995], qs: [40, 60, 100, 120, 120] },
  en: { freqs: [600, 1480, 2450, 3200, 3300], gains: [1, 0.15, 0.0708, 0.0316, 0.02995], qs: [40, 60, 100, 120, 120] },
  an: { freqs: [700, 1050, 2500, 3e3, 3300], gains: [1, 0.1, 0.0708, 0.0316, 0.02995], qs: [40, 60, 100, 120, 120] },
  on: { freqs: [500, 1080, 2350, 3e3, 3300], gains: [1, 0.1, 0.0708, 0.0316, 0.02995], qs: [40, 60, 100, 120, 120] },
  get æ() {
    return this.ae;
  },
  get ø() {
    return this.oe;
  },
  get ɑ() {
    return this.aa;
  },
  get å() {
    return this.aa;
  },
  get ö() {
    return this.oe;
  },
  get ü() {
    return this.ue;
  },
  get ı() {
    return this.y;
  }
};
if (typeof GainNode < "u") {
  class t extends GainNode {
    constructor(n, r) {
      if (super(n), !og[r])
        throw new Error("vowel: unknown vowel " + r);
      const { gains: i, qs: s, freqs: a } = og[r], o = n.createGain();
      for (let l = 0; l < 5; l++) {
        const c = n.createGain();
        c.gain.value = i[l];
        const h = n.createBiquadFilter();
        h.type = "bandpass", h.Q.value = s[l], h.frequency.value = a[l], this.connect(h), h.connect(c), c.connect(o);
      }
      return o.gain.value = 8, this.connect = (l) => o.connect(l), this;
    }
  }
  AudioContext.prototype.createVowelFilter = function(e) {
    return new t(this, e);
  };
}
let B2 = (t) => console.log(t);
const wr = (...t) => B2(...t), M2 = (t) => {
  B2 = t;
}, T9 = (t) => {
  if (typeof t != "string")
    return [];
  const [e, n = "", r] = t.match(/^([a-gA-G])([#bsf]*)([0-9]*)$/)?.slice(1) || [];
  return e ? [e, n, r ? Number(r) : void 0] : [];
}, j9 = { c: 0, d: 2, e: 4, f: 5, g: 7, a: 9, b: 11 }, _9 = { "#": 1, b: -1, s: 1, f: -1 }, Cc = (t, e = 3) => {
  const [n, r, i = e] = T9(t);
  if (!n)
    throw new Error('not a note: "' + t + '"');
  const s = j9[n.toLowerCase()], a = r?.split("").reduce((o, l) => o + _9[l], 0) || 0;
  return (Number(i) + 1) * 12 + s + a;
}, Q2 = (t) => Math.pow(2, (t - 69) / 12) * 440, ga = (t, e, n) => Math.min(Math.max(t, e), n), R9 = (t) => 12 * Math.log(t / 440) / Math.LN2 + 69, $9 = (t, e) => {
  if (typeof t != "object")
    throw new Error("valueToMidi: expected object value");
  let { freq: n, note: r } = t;
  return typeof n == "number" ? R9(n) : typeof r == "string" ? Cc(r) : typeof r == "number" ? r : e;
};
function Ci(t, e = 0, n) {
  return isNaN(Number(t)) ? (!n && wr(`"${t}" is not a number, falling back to ${e}`, "warning"), e) : t;
}
const T2 = (t, e) => (t % e + e) % e, lg = (t, e) => T2(Math.round(Ci(t, 0)), e), Z9 = "data:text/javascript;base64,";
function vi(t) {
  const e = ht().createGain();
  return e.gain.value = t, e;
}
const ug = (t, e, n, r) => r - n === 0 ? 0 : (e - t) / (r - n);
function ii(t, e, n, r) {
  const i = new AudioWorkletNode(t, e, r);
  return Object.entries(n).forEach(([s, a]) => {
    i.parameters.get(s).value = a;
  }), i;
}
const Si = (t, e, n, r, i, s, a, o, l, c = "exponential") => {
  e = Ci(e), n = Ci(n), r = Ci(r), i = Ci(i);
  const h = c === "exponential" ? "exponentialRampToValueAtTime" : "linearRampToValueAtTime";
  c === "exponential" && (s = s === 0 ? 1e-3 : s, a = a === 0 ? 1e-3 : a);
  const f = a - s, m = a, y = s + r * f, x = l - o, C = (S) => {
    let M;
    if (e > S) {
      let Z = ug(s, m, 0, e);
      M = S * Z + (s > m ? s : 0);
    } else
      M = (S - e) * ug(m, y, 0, n) + m;
    return c === "exponential" && (M = M || 1e-3), M;
  };
  t.setValueAtTime(s, o), e > x ? t[h](C(x), l) : e + n > x ? (t[h](C(e), o + e), t[h](C(x), l)) : (t[h](C(e), o + e), t[h](C(e + n), o + e + n), t.setValueAtTime(y, l)), t[h](s, l + i);
};
function j2(t, e, n, r, i, s) {
  const a = {
    threshold: e ?? -3,
    ratio: n ?? 10,
    knee: r ?? 10,
    attack: i ?? 5e-3,
    release: s ?? 0.05
  };
  return new DynamicsCompressorNode(t, a);
}
const Ai = (t, e = "linear", n) => {
  const [a, o, l, c] = t;
  if (a == null && o == null && l == null && c == null)
    return n ?? [1e-3, 1e-3, 1, 0.01];
  const h = l ?? (a != null && o == null || a == null && o == null ? 1 : 1e-3);
  return [Math.max(a ?? 0, 1e-3), Math.max(o ?? 0, 1e-3), Math.min(h, 1), Math.max(c ?? 0, 0.01)];
};
function Yl(t, e, n, r, i, s, a, o, l, c, h, f, m, y) {
  const x = "exponential", [C, S, M, Z] = Ai([i, s, a, o], x, [5e-3, 0.14, 0, 0.1]);
  let q, _;
  if (m === "ladder" ? (q = ii(t, "ladder-processor", { frequency: n, q: r, drive: y }), _ = q.parameters.get("frequency")) : (q = t.createBiquadFilter(), q.type = e, q.Q.value = r, q.frequency.value = n, _ = q.frequency), (i ?? s ?? a ?? o ?? l) !== void 0) {
    l = Ci(l, 1, !0), f = Ci(f, 0, !0);
    const $ = Math.abs(l), N = $ * f;
    let U = ga(2 ** -N * n, 0, 2e4), se = ga(2 ** ($ - N) * n, 0, 2e4);
    return l < 0 && ([U, se] = [se, U]), Si(_, C, S, M, Z, U, se, c, h, x), q;
  }
  return q;
}
let cg = (t) => t < 0.5 ? 1 : 1 - (t - 0.5) / 0.5;
function _2(t, e, n = 0) {
  const r = ht();
  if (!n)
    return t;
  let i = r.createGain(), s = r.createGain();
  t.connect(i), e.connect(s), i.gain.value = cg(n), s.gain.value = cg(1 - n);
  let a = r.createGain();
  return i.connect(a), s.connect(a), a;
}
let L9 = ["linear", "exponential"];
function xo(t, e, n, r) {
  if (!(e.pattack ?? e.pdecay ?? e.psustain ?? e.prelease ?? e.penv))
    return;
  const s = Ci(e.penv, 1, !0), a = L9[e.pcurve ?? 0];
  let [o, l, c, h] = Ai(
    [e.pattack, e.pdecay, e.psustain, e.prelease],
    a,
    [0.2, 1e-3, 1, 1e-3]
  ), f = e.panchor ?? c;
  const m = s * 100, y = 0 - m * f, x = m - m * f;
  Si(t, o, l, c, h, y, x, n, r, a);
}
function ko(t, e, n) {
  const { vibmod: r = 0.5, vib: i } = e;
  let s;
  if (i > 0) {
    s = ht().createOscillator(), s.frequency.value = i;
    const a = ht().createGain();
    return a.gain.value = r * 100, s.connect(a), a.connect(t), s.start(n), s;
  }
}
function Cp(t, e, n, r) {
  const i = t.createConstantSource();
  return i.start(n), i.stop(r), i.onended = () => {
    e();
  }, i;
}
const I9 = (t, e = 1, n = "sine") => {
  const r = ht(), i = r.createOscillator();
  i.type = n, i.frequency.value = t, i.start();
  const s = new GainNode(r, { gain: e });
  return i.connect(s), { node: s, stop: (a) => i.stop(a) };
}, N9 = (t, e, n, r = "sine") => {
  const s = t.value * e, a = s * n;
  return I9(s, a, r);
};
function yu(t, e, n) {
  const {
    fmh: r = 1,
    fmi: i,
    fmenv: s = "exp",
    fmattack: a,
    fmdecay: o,
    fmsustain: l,
    fmrelease: c,
    fmvelocity: h,
    fmwave: f = "sine",
    duration: m
  } = e;
  let y, x = () => {
  };
  if (i) {
    const S = ht().createGain(), M = N9(t, r, i, f);
    if (y = M.node, x = M.stop, ![a, o, l, c, h].find((Z) => Z !== void 0))
      y.connect(t);
    else {
      const [Z, q, _, B] = Ai([a, o, l, c]), $ = n + m;
      Si(
        S.gain,
        Z,
        q,
        _,
        B,
        0,
        1,
        n,
        $,
        s === "exp" ? "exponential" : "linear"
      ), y.connect(S), S.connect(t);
    }
  }
  return { stop: x };
}
let Ir = [], Zi = 0;
const Sl = 4;
let R2 = (t) => {
  let e = [], n = {
    get() {
      return n.lc || n.listen(() => {
      })(), n.value;
    },
    lc: 0,
    listen(r) {
      return n.lc = e.push(r), () => {
        for (let s = Zi + Sl; s < Ir.length; )
          Ir[s] === r ? Ir.splice(s, Sl) : s += Sl;
        let i = e.indexOf(r);
        ~i && (e.splice(i, 1), --n.lc || n.off());
      };
    },
    notify(r, i) {
      let s = !Ir.length;
      for (let a of e)
        Ir.push(
          a,
          n.value,
          r,
          i
        );
      if (s) {
        for (Zi = 0; Zi < Ir.length; Zi += Sl)
          Ir[Zi](
            Ir[Zi + 1],
            Ir[Zi + 2],
            Ir[Zi + 3]
          );
        Ir.length = 0;
      }
    },
    /* It will be called on last listener unsubscribing.
       We will redefine it in onMount and onStop. */
    off() {
    },
    set(r) {
      let i = n.value;
      i !== r && (n.value = r, n.notify(i));
    },
    subscribe(r) {
      let i = n.listen(r);
      return r(n.value), i;
    },
    value: t
  };
  return n;
};
const V9 = 5, Al = 6, Dl = 10;
let X9 = (t, e, n, r) => (t.events = t.events || {}, t.events[n + Dl] || (t.events[n + Dl] = r((i) => {
  t.events[n].reduceRight((s, a) => (a(s), s), {
    shared: {},
    ...i
  });
})), t.events[n] = t.events[n] || [], t.events[n].push(e), () => {
  let i = t.events[n], s = i.indexOf(e);
  i.splice(s, 1), i.length || (delete t.events[n], t.events[n + Dl](), delete t.events[n + Dl]);
}), W9 = 1e3, q9 = (t, e) => X9(t, (r) => {
  let i = e(r);
  i && t.events[Al].push(i);
}, V9, (r) => {
  let i = t.listen;
  t.listen = (...a) => (!t.lc && !t.active && (t.active = !0, r()), i(...a));
  let s = t.off;
  return t.events[Al] = [], t.off = () => {
    s(), setTimeout(() => {
      if (t.active && !t.lc) {
        t.active = !1;
        for (let a of t.events[Al]) a();
        t.events[Al] = [];
      }
    }, W9);
  }, () => {
    t.listen = i, t.off = s;
  };
}), U9 = (t = {}) => {
  let e = R2(t);
  return e.setKey = function(n, r) {
    let i = e.value;
    typeof r > "u" && n in e.value ? (e.value = { ...e.value }, delete e.value[n], e.notify(i, n)) : e.value[n] !== r && (e.value = {
      ...e.value,
      [n]: r
    }, e.notify(i, n));
  }, e;
};
const Sd = {}, Dh = {}, G9 = (t) => Sd[t];
function z9(t, e) {
  var n = 1024;
  if (t < n) return t + " B";
  var r = ["KiB", "MiB", "GiB", "TiB", "PiB", "EiB", "ZiB", "YiB"], i = -1;
  do
    t /= n, ++i;
  while (t >= n);
  return t.toFixed(1) + " " + r[i];
}
function $2(t, e) {
  const { s: n, n: r = 0, speed: i = 1 } = t;
  let s = $9(t, 36), a = s - 36, o, l = 0;
  if (Array.isArray(e))
    l = lg(r, e.length), o = e[l];
  else {
    const f = (y) => Cc(y) - s, m = Object.keys(e).filter((y) => !y.startsWith("_")).reduce(
      (y, x, C) => !y || Math.abs(f(x)) < Math.abs(f(y)) ? x : y,
      null
    );
    a = -f(m), l = lg(r, e[m].length), o = e[m][l];
  }
  const c = `${n}:${l}`;
  let h = Math.abs(i) * Math.pow(2, a / 12);
  return { transpose: a, sampleUrl: o, index: l, midi: s, label: c, playbackRate: h };
}
const Z2 = async (t, e, n) => {
  let { sampleUrl: r, label: i, playbackRate: s } = $2(t, e);
  n && (r = await n(r));
  const a = ht(), o = await Ad(r, a, i);
  return t.unit === "c" && (s = s * o.duration), { buffer: o, playbackRate: s };
}, L2 = async (t, e, n) => {
  let { buffer: r, playbackRate: i } = await Z2(t, e, n);
  t.speed < 0 && (r = I2(r));
  const a = ht().createBufferSource();
  a.buffer = r, a.playbackRate.value = i;
  const { s: o, loopBegin: l = 0, loopEnd: c = 1, begin: h = 0, end: f = 1 } = t, m = h * a.buffer.duration;
  (o.startsWith("wt_") ? 1 : t.loop) && (a.loop = !0, a.loopStart = l * a.buffer.duration - m, a.loopEnd = c * a.buffer.duration - m);
  const x = a.buffer.duration / a.playbackRate.value, C = (f - h) * x;
  return { bufferSource: a, offset: m, bufferDuration: x, sliceDuration: C };
}, Ad = (t, e, n, r = 0) => {
  const i = n ? `sound "${n}:${r}"` : "sample";
  if (t = t.replace("#", "%23"), !Dh[t]) {
    wr(`[sampler] load ${i}..`, "load-sample", { url: t });
    const s = Date.now();
    Dh[t] = fetch(t).then((a) => a.arrayBuffer()).then(async (a) => {
      const o = Date.now() - s, l = z9(a.byteLength);
      wr(`[sampler] load ${i}... done! loaded ${l} in ${o}ms`, "loaded-sample", { url: t });
      const c = await e.decodeAudioData(a);
      return Sd[t] = c, c;
    });
  }
  return Dh[t];
};
function I2(t) {
  const e = ht(), n = e.createBuffer(t.numberOfChannels, t.length, e.sampleRate);
  for (let r = 0; r < t.numberOfChannels; r++)
    n.copyToChannel(t.getChannelData(r).slice().reverse(), r, r);
  return n;
}
const H9 = (t) => Sd[t];
function N2(t) {
  if (t.startsWith("bubo:")) {
    const [e, n] = t.split(":");
    t = `github:Bubobubobubobubo/dough-${n}`;
  }
  return t;
}
function V2(t, e = "") {
  if (!t.startsWith("github:"))
    throw new Error('expected "github:" at the start of pseudoUrl');
  let [n, r] = t.split("github:");
  return r = r.endsWith("/") ? r.slice(0, -1) : r, r.split("/").length === 2 && (r += "/main"), `https://raw.githubusercontent.com/${r}/${e}`;
}
const X2 = (t, e, n = t._base || "") => Object.entries(t).forEach(([r, i]) => {
  if (typeof i == "string" && (i = [i]), typeof i != "object")
    throw new Error("wrong sample map format for " + r);
  n = i._base || n, n = N2(n), n.startsWith("github:") && (n = V2(n, ""));
  const s = (a) => n + a;
  Array.isArray(i) ? i = i.map(s) : i = Object.fromEntries(
    Object.entries(i).map(([a, o]) => [a, (typeof o == "string" ? [o] : o).map(s)])
  ), e(r, i);
});
let W2 = {};
function Y9(t, e) {
  W2[t] = e;
}
function K9(t) {
  const e = Object.entries(W2).find(([n]) => t.startsWith(n));
  if (e)
    return e[1];
}
const Ni = async (t, e = t._base || "", n = {}) => {
  if (typeof t == "string") {
    const s = K9(t);
    if (s)
      return s(t);
    if (t = N2(t), t.startsWith("github:") && (t = V2(t, "strudel.json")), t.startsWith("local:") && (t = "http://localhost:5432"), t.startsWith("shabda:")) {
      let [o, l] = t.split("shabda:");
      t = `https://shabda.ndre.gr/${l}.json?strudel=1`;
    }
    if (t.startsWith("shabda/speech")) {
      let [o, l] = t.split("shabda/speech");
      l = l.startsWith("/") ? l.substring(1) : l;
      let [c, h] = l.split(":"), f = "f", m = "en-GB";
      c && ([m, f] = c.split("/")), t = `https://shabda.ndre.gr/speech/${h}.json?gender=${f}&language=${m}&strudel=1'`;
    }
    if (typeof fetch != "function")
      return;
    const a = t.split("/").slice(0, -1).join("/");
    return typeof fetch > "u" ? void 0 : fetch(t).then((o) => o.json()).then((o) => Ni(o, e || o._base || a, n)).catch((o) => {
      throw console.error(o), new Error(`error loading "${t}"`);
    });
  }
  const { prebake: r, tag: i } = n;
  X2(
    t,
    (s, a) => xs(s, (o, l, c) => q2(o, l, c, a), {
      type: "sample",
      samples: a,
      baseUrl: e,
      prebake: r,
      tag: i
    }),
    e
  );
}, hg = [];
async function q2(t, e, n, r, i) {
  let {
    s,
    nudge: a = 0,
    // TODO: is this in seconds?
    cut: o,
    loop: l,
    clip: c = void 0,
    // if set, samples will be cut off when the hap ends
    n: h = 0,
    speed: f = 1,
    // sample playback speed
    duration: m
  } = e;
  if (f === 0)
    return;
  const y = ht();
  let [x, C, S, M] = Ai([e.attack, e.decay, e.sustain, e.release]);
  const { bufferSource: Z, sliceDuration: q, offset: _ } = await L2(e, r, i);
  if (y.currentTime > t) {
    wr(`[sampler] still loading sound "${s}:${h}"`, "highlight");
    return;
  }
  if (!Z) {
    wr(`[sampler] could not load "${s}:${h}"`, "error");
    return;
  }
  let B = ko(Z.detune, e, t);
  const $ = t + a;
  Z.start($, _);
  const N = y.createGain(), U = Z.connect(N);
  c == null && l == null && e.release == null && (m = q);
  let se = t + m;
  Si(U.gain, x, C, S, M, 0, 1, t, se, "linear"), xo(Z.detune, e, t, se);
  const K = y.createGain();
  U.connect(K), Z.onended = function() {
    Z.disconnect(), B?.stop(), U.disconnect(), K.disconnect(), n();
  };
  let ce = se + M + 0.01;
  Z.stop(ce);
  const ie = { node: K, bufferSource: Z, stop: (fe) => {
    Z.stop(fe);
  } };
  if (o !== void 0) {
    const fe = hg[o];
    fe && (fe.node.gain.setValueAtTime(1, $), fe.node.gain.linearRampToValueAtTime(0, $ + 0.01)), hg[o] = ie;
  }
  return ie;
}
const Dd = 128, Sp = "System Standard";
let U2 = Dd;
function G2(t) {
  U2 = parseInt(t) ?? Dd;
}
const ba = U9();
function xs(t, e, n = {}) {
  t = t.toLowerCase().replace(/\s+/g, "_"), ba.setKey(t, { onTrigger: e, data: n });
}
let z2 = (t) => t;
function bs(t) {
  return z2(t);
}
function J9(t) {
  z2 = t;
}
function Ap(t) {
  for (const n in t)
    t[n.toLowerCase()] = t[n];
  const e = ba.get();
  for (const n in e) {
    const [r, i] = n.split("_");
    if (!i) continue;
    const s = t[r];
    if (s) {
      if (typeof s == "string")
        e[`${s}_${i}`.toLowerCase()] = e[n];
      else if (Array.isArray(s))
        for (const a of s)
          e[`${a}_${i}`.toLowerCase()] = e[n];
    }
  }
  ba.set({ ...e });
}
async function e4(t) {
  const n = await (await fetch(t)).json();
  Ap(n);
}
async function H2(...t) {
  switch (t.length) {
    case 1:
      return typeof t[0] == "string" ? e4(t[0]) : Ap(t[0]);
    case 2:
      return Ap({ [t[0]]: t[1] });
    default:
      throw new Error("aliasMap expects 1 or 2 arguments, received " + t.length);
  }
}
function Kl(t) {
  return ba.get()[t.toLowerCase()];
}
const Y2 = async () => {
  await navigator.mediaDevices.getUserMedia({ audio: !0 });
  let t = await navigator.mediaDevices.enumerateDevices();
  t = t.filter((n) => n.kind === "audiooutput" && n.deviceId !== "default");
  const e = /* @__PURE__ */ new Map();
  return e.set(Sp, ""), t.forEach((n) => {
    e.set(n.label, n.deviceId);
  }), e;
}, K2 = {
  s: "triangle",
  gain: 0.8,
  postgain: 1,
  density: ".03",
  ftype: "12db",
  fanchor: 0,
  resonance: 1,
  hresonance: 1,
  bandq: 1,
  channels: [1, 2],
  phaserdepth: 0.75,
  shapevol: 1,
  distortvol: 1,
  delay: 0,
  delayfeedback: 0.5,
  delaytime: 0.25,
  orbit: 1,
  i: 1,
  velocity: 1,
  fft: 8
};
let Pd = new Map(Object.entries(K2));
function Ed(t, e) {
  Pd.set(t, e);
}
function en(t) {
  return Pd.get(t);
}
function t4(t) {
  Object.keys(t).forEach((e) => {
    Ed(e, t[e]);
  });
}
function J2() {
  Pd = new Map(Object.entries(K2));
}
function n4(t) {
  J2(), t === "1.0" && Ed("fanchor", 0.5);
}
const r4 = () => ba.set({});
let Ou;
const ew = () => (Ou = new AudioContext(), Ou), ht = () => Ou || ew();
function i4() {
  return ht().currentTime;
}
let Ph;
function s4() {
  return Ph || (Ph = ht().audioWorklet.addModule(Z9)), Ph;
}
async function tw(t = {}) {
  const { disableWorklets: e = !1, maxPolyphony: n, audioDeviceName: r = Sp } = t;
  if (G2(n), typeof window > "u")
    return;
  const i = ht();
  if (r != null && r != Sp)
    try {
      const a = (await Y2()).get(r), o = (a ?? "").length > 0;
      i.sinkId !== a && o && await i.setSinkId(a), wr(
        `[superdough] Audio Device set to ${r}, it might take a few seconds before audio plays on all output channels`
      );
    } catch {
      wr("[superdough] failed to set audio interface", "warning");
    }
  if (await i.resume(), e) {
    wr("[superdough]: AudioWorklets disabled with disableWorklets");
    return;
  }
  try {
    await s4(), wr("[superdough] AudioWorklets loaded");
  } catch (s) {
    console.warn("could not load AudioWorklet effects", s);
  }
  wr("[superdough] ready");
}
let Eh;
async function a4(t) {
  return Eh || (Eh = new Promise((e) => {
    document.addEventListener("click", async function n() {
      document.removeEventListener("click", n), await tw(t), e();
    });
  })), Eh;
}
let Ii = {}, vu, na;
function nw() {
  const t = ht(), e = t.destination.maxChannelCount;
  t.destination.channelCount = e, vu = new ChannelMergerNode(t, { numberOfInputs: t.destination.channelCount }), na = new GainNode(t), vu.connect(na), na.connect(t.destination);
}
const Sc = (t, e = [0, 1]) => {
  const n = ht();
  vu == null && nw();
  const r = new StereoPannerNode(n);
  t.connect(r);
  const i = new ChannelSplitterNode(n, {
    numberOfOutputs: r.channelCount
  });
  r.connect(i), e.forEach((s, a) => {
    i.connect(vu, a % r.channelCount, ga(s, 0, n.destination.channelCount - 1));
  });
}, o4 = () => {
  na != null && (na.gain.linearRampToValueAtTime(0, ht().currentTime + 0.01), na = null);
};
function l4(t, e, n, r) {
  if (n = ga(n, 0, 0.98), !Ii[t]) {
    const s = ht().createFeedbackDelay(1, e, n);
    s.start?.(r), Sc(s, [0, 1]), Ii[t] = s;
  }
  return Ii[t].delayTime.value !== e && Ii[t].delayTime.setValueAtTime(e, r), Ii[t].feedback.value !== n && Ii[t].feedback.setValueAtTime(n, r), Ii[t];
}
function u4(t, e, n = 1, r = 0.5, i = 1e3, s = 2e3) {
  const a = ht(), o = a.createGain();
  o.gain.value = s * 2, ii(a, "lfo-processor", {
    frequency: n,
    depth: 1,
    skew: 0,
    phaseoffset: 0,
    time: t,
    end: e,
    shape: 1,
    dcoffset: -0.5
  }).connect(o);
  const c = 2;
  let h = 0;
  const f = [];
  for (let m = 0; m < c; m++) {
    const y = a.createBiquadFilter();
    y.type = "notch", y.gain.value = 1, y.frequency.value = i + h, y.Q.value = 2 - Math.min(Math.max(r * 2, 0), 1.9), o.connect(y.detune), h += 282, m > 0 && f[m - 1].connect(y), f.push(y);
  }
  return f[f.length - 1];
}
function c4(t) {
  t = t ?? 0;
  const e = ["12db", "ladder", "24db"];
  return typeof t == "number" ? e[Math.floor(T2(t, e.length))] : t;
}
let ti = {}, Pl = (t, e) => t !== void 0 && t !== e;
function h4(t, e, n, r, i, s) {
  if (!ti[t]) {
    const o = ht().createReverb(e, n, r, i, s);
    Sc(o, [0, 1]), ti[t] = o;
  }
  return (Pl(e, ti[t].duration) || Pl(n, ti[t].fade) || Pl(r, ti[t].lp) || Pl(i, ti[t].dim) || ti[t].ir !== s) && ti[t].generate(e, n, r, i, s), ti[t];
}
let Tn = {}, Ss = {};
function rw(t, e = 1024, n = 0.5) {
  if (!Tn[t]) {
    const r = ht().createAnalyser();
    r.fftSize = e, r.smoothingTimeConstant = n, Tn[t] = r, Ss[t] = new Float32Array(Tn[t].frequencyBinCount);
  }
  return Tn[t].fftSize !== e && (Tn[t].fftSize = e, Ss[t] = new Float32Array(Tn[t].frequencyBinCount)), Tn[t];
}
function Ac(t = "time", e = 1) {
  const n = {
    time: () => Tn[e]?.getFloatTimeDomainData(Ss[e]),
    frequency: () => Tn[e]?.getFloatFrequencyData(Ss[e])
  }[t];
  if (!n)
    throw new Error(`getAnalyzerData: ${t} not supported. use one of ${Object.keys(n).join(", ")}`);
  return n(), Ss[e];
}
function Fh(t, e, n) {
  const r = vi(n);
  return t.connect(r), r.connect(e), r;
}
function p4() {
  Ii = {}, ti = {}, Tn = {}, Ss = {};
}
let Ya = /* @__PURE__ */ new Map();
const Dc = async (t, e, n) => {
  const r = ht();
  e = typeof e == "string" && e.startsWith("=") ? Number(e.slice(1)) : r.currentTime + e;
  let { stretch: i } = t;
  if (i != null && (e = e - 0.04), typeof t != "object")
    throw new Error(
      `expected hap.value to be an object, but got "${t}". Hint: append .note() or .s() to the end`,
      "error"
    );
  if (t.duration = n, e < r.currentTime) {
    console.warn(
      `[superdough]: cannot schedule sounds in the past (target: ${e.toFixed(2)}, now: ${r.currentTime.toFixed(2)})`
    );
    return;
  }
  let {
    s = en("s"),
    bank: a,
    source: o,
    gain: l = en("gain"),
    postgain: c = en("postgain"),
    density: h = en("density"),
    // filters
    fanchor: f = en("fanchor"),
    drive: m = 0.69,
    // low pass
    cutoff: y,
    lpenv: x,
    lpattack: C,
    lpdecay: S,
    lpsustain: M,
    lprelease: Z,
    resonance: q = en("resonance"),
    // high pass
    hpenv: _,
    hcutoff: B,
    hpattack: $,
    hpdecay: N,
    hpsustain: U,
    hprelease: se,
    hresonance: K = en("hresonance"),
    // band pass
    bpenv: ce,
    bandf: H,
    bpattack: ie,
    bpdecay: fe,
    bpsustain: De,
    bprelease: Ee,
    bandq: re = en("bandq"),
    channels: ke = en("channels"),
    //phaser
    phaserrate: Le,
    phaserdepth: xe = en("phaserdepth"),
    phasersweep: je,
    phasercenter: he,
    //
    coarse: Pe,
    crush: Pt,
    shape: lt,
    shapevol: We = en("shapevol"),
    distort: Qt,
    distortvol: ze = en("distortvol"),
    pan: xt,
    vowel: Bn,
    delay: dn = en("delay"),
    delayfeedback: Ot = en("delayfeedback"),
    delaytime: kt = en("delaytime"),
    orbit: Et = en("orbit"),
    room: Xt,
    roomfade: Kn,
    roomlp: Jn,
    roomdim: pr,
    roomsize: Mn,
    ir: zt,
    i: _r = en("i"),
    velocity: er = en("velocity"),
    analyze: On,
    // analyser wet
    fft: zr = en("fft"),
    // fftSize 0 - 10
    compressor: Ue,
    compressorRatio: Tt,
    compressorKnee: Se,
    compressorAttack: wt,
    compressorRelease: Xe
  } = t;
  l = bs(Ci(l, 1)), c = bs(c), We = bs(We), ze = bs(ze), dn = bs(dn), er = bs(er), l *= er;
  const gi = Math.round(Math.random() * 1e6);
  for (let Ze = 0; Ze <= Ya.size - U2; Ze++) {
    const pt = Ya.entries().next(), Wt = pt.value[1], vn = pt.value[0], $i = e + 0.25;
    Wt?.node?.gain?.linearRampToValueAtTime(0, $i), Wt?.stop?.($i), Ya.delete(vn);
  }
  ke = (Array.isArray(ke) ? ke : [ke]).map((Ze) => Ze - 1);
  let fr = [];
  a && s && (s = `${a}_${s}`, t.s = s);
  let mn;
  if (o)
    mn = o(e, t, n);
  else if (Kl(s)) {
    const { onTrigger: Ze } = Kl(s), Wt = await Ze(e, t, () => {
      fr.forEach((vn) => vn?.disconnect()), Ya.delete(gi);
    });
    Wt && (mn = Wt.node, Ya.set(gi, Wt));
  } else
    throw new Error(`sound ${s} not found! Is it loaded?`);
  if (!mn)
    return;
  if (r.currentTime > e) {
    wr("[webaudio] skip hap: still loading", r.currentTime - e);
    return;
  }
  const vt = [];
  vt.push(mn), i !== void 0 && vt.push(ii(r, "phase-vocoder-processor", { pitchFactor: i })), vt.push(vi(l));
  const He = c4(t.ftype);
  if (y !== void 0) {
    let Ze = () => Yl(
      r,
      "lowpass",
      y,
      q,
      C,
      S,
      M,
      Z,
      x,
      e,
      e + n,
      f,
      He,
      m
    );
    vt.push(Ze()), He === "24db" && vt.push(Ze());
  }
  if (B !== void 0) {
    let Ze = () => Yl(
      r,
      "highpass",
      B,
      K,
      $,
      N,
      U,
      se,
      _,
      e,
      e + n,
      f
    );
    vt.push(Ze()), He === "24db" && vt.push(Ze());
  }
  if (H !== void 0) {
    let Ze = () => Yl(
      r,
      "bandpass",
      H,
      re,
      ie,
      fe,
      De,
      Ee,
      ce,
      e,
      e + n,
      f
    );
    vt.push(Ze()), He === "24db" && vt.push(Ze());
  }
  if (Bn !== void 0) {
    const Ze = r.createVowelFilter(Bn);
    vt.push(Ze);
  }
  if (Pe !== void 0 && vt.push(ii(r, "coarse-processor", { coarse: Pe })), Pt !== void 0 && vt.push(ii(r, "crush-processor", { crush: Pt })), lt !== void 0 && vt.push(ii(r, "shape-processor", { shape: lt, postgain: We })), Qt !== void 0 && vt.push(ii(r, "distort-processor", { distort: Qt, postgain: ze })), Ue !== void 0 && vt.push(
    j2(r, Ue, Tt, Se, wt, Xe)
  ), xt !== void 0) {
    const Ze = r.createStereoPanner();
    Ze.pan.value = 2 * xt - 1, vt.push(Ze);
  }
  if (Le !== void 0 && xe > 0) {
    const Ze = u4(e, e + n, Le, xe, he, je);
    vt.push(Ze);
  }
  const Ye = new GainNode(r, { gain: c });
  vt.push(Ye), Sc(Ye, ke);
  let gt;
  if (dn > 0 && kt > 0 && Ot > 0) {
    const Ze = l4(Et, kt, Ot, e);
    gt = Fh(Ye, Ze, dn), fr.push(gt);
  }
  let Ht;
  if (Xt > 0) {
    let Ze;
    if (zt !== void 0) {
      let Wt, vn = Kl(zt);
      Array.isArray(vn) ? Wt = vn.data.samples[_r % vn.data.samples.length] : typeof vn == "object" && (Wt = Object.values(vn.data.samples).flat()[_r % Object.values(vn.data.samples).length]), Ze = await Ad(Wt, r, zt, 0);
    }
    const pt = h4(Et, Mn, Kn, Jn, pr, Ze);
    Ht = Fh(Ye, pt, Xt), fr.push(Ht);
  }
  let ut;
  if (On) {
    const Ze = rw(On, 2 ** (zr + 5));
    ut = Fh(Ye, Ze, 1), fr.push(ut);
  }
  vt.slice(1).reduce((Ze, pt) => Ze.connect(pt), vt[0]), fr = fr.concat(vt);
}, f4 = (t, e, n, r) => {
  Dc(e, t - n, e.duration / r);
};
let Bh = {};
function d4(t, e) {
  const n = ht();
  if (Bh[t])
    return Bh[t];
  const r = 2 * n.sampleRate, i = n.createBuffer(1, r, n.sampleRate), s = i.getChannelData(0);
  let a = 0, o, l, c, h, f, m, y;
  o = l = c = h = f = m = y = 0;
  for (let x = 0; x < r; x++)
    if (t === "white")
      s[x] = Math.random() * 2 - 1;
    else if (t === "brown") {
      let C = Math.random() * 2 - 1;
      s[x] = (a + 0.02 * C) / 1.02, a = s[x];
    } else if (t === "pink") {
      let C = Math.random() * 2 - 1;
      o = 0.99886 * o + C * 0.0555179, l = 0.99332 * l + C * 0.0750759, c = 0.969 * c + C * 0.153852, h = 0.8665 * h + C * 0.3104856, f = 0.55 * f + C * 0.5329522, m = -0.7616 * m - C * 0.016898, s[x] = o + l + c + h + f + m + y + C * 0.5362, s[x] *= 0.11, y = C * 0.115926;
    } else if (t === "crackle") {
      const C = e * 0.01;
      Math.random() < C ? s[x] = Math.random() * 2 - 1 : s[x] = 0;
    }
  return t !== "crackle" && (Bh[t] = i), i;
}
function iw(t = "white", e, n = 0.02) {
  const i = ht().createBufferSource();
  return i.buffer = d4(t, n), i.loop = !0, i.start(e), {
    node: i,
    stop: (s) => i.stop(s)
  };
}
function m4(t, e, n) {
  const r = iw("pink", n);
  return {
    node: _2(t, r.node, e),
    stop: (s) => r?.stop(s)
  };
}
const Dp = (t) => {
  let { note: e, freq: n } = t;
  return e = e || 36, typeof e == "string" && (e = Cc(e)), !n && typeof e == "number" && (n = Q2(e)), Number(n);
};
function pg(t) {
  t.disconnect(), t.parameters.get("end")?.setValueAtTime(0, 0);
}
const g4 = ["triangle", "square", "sawtooth", "sine"], b4 = ["pink", "white", "brown", "crackle"];
function sw() {
  [...g4].forEach((t) => {
    xs(
      t,
      (e, n, r) => {
        const [i, s, a, o] = Ai(
          [n.attack, n.decay, n.sustain, n.release],
          "linear",
          [1e-3, 0.05, 0.6, 0.01]
        );
        let l = ow(t, e, n), { node: c, stop: h, triggerRelease: f } = l;
        const m = vi(0.3), { duration: y } = n;
        c.onended = () => {
          c.disconnect(), m.disconnect(), r();
        };
        const x = vi(1);
        let C = c.connect(m).connect(x);
        const S = e + y;
        Si(C.gain, i, s, a, o, 0, 1, e, S, "linear");
        const M = S + o + 0.01;
        return f?.(M), h(M), {
          node: C,
          stop: (Z) => {
            h(Z);
          }
        };
      },
      { type: "synth", prebake: !0 }
    );
  }), xs(
    "supersaw",
    (t, e, n) => {
      const r = ht();
      let { duration: i, n: s, unison: a = 5, spread: o = 0.6, detune: l } = e;
      l = l ?? s ?? 0.18;
      const c = Dp(e), [h, f, m, y] = Ai(
        [e.attack, e.decay, e.sustain, e.release],
        "linear",
        [1e-3, 0.05, 0.6, 0.01]
      ), x = t + i, C = x + y + 0.01, S = ga(a, 1, 100);
      let M = S > 1 ? ga(o, 0, 1) : 0, Z = ii(
        r,
        "supersaw-oscillator",
        {
          frequency: c,
          begin: t,
          end: C,
          freqspread: l,
          voices: S,
          panspread: M
        },
        {
          outputChannelCount: [2]
        }
      );
      const q = 1 / Math.sqrt(S);
      xo(Z.parameters.get("detune"), e, t, x);
      const _ = ko(Z.parameters.get("detune"), e, t), B = yu(Z.parameters.get("frequency"), e, t);
      let $ = vi(1);
      $ = Z.connect($), Si($.gain, h, f, m, y, 0, 0.3 * q, t, x, "linear");
      let N = Cp(
        r,
        () => {
          pg(Z), $.disconnect(), n(), B?.stop(), _?.stop();
        },
        t,
        C
      );
      return {
        node: $,
        stop: (U) => {
          N.stop(U);
        }
      };
    },
    { prebake: !0, type: "synth" }
  ), xs(
    "pulse",
    (t, e, n) => {
      const r = ht();
      let { duration: i, n: s = 0.5 } = e;
      const a = Dp(e), [o, l, c, h] = Ai(
        [e.attack, e.decay, e.sustain, e.release],
        "linear",
        [1e-3, 0.05, 0.6, 0.01]
      ), f = t + i, m = f + h + 0.01;
      let y = ii(
        r,
        "pulse-oscillator",
        {
          frequency: a,
          begin: t,
          end: m,
          pulsewidth: s
        },
        {
          outputChannelCount: [2]
        }
      );
      xo(y.parameters.get("detune"), e, t, f);
      const x = ko(y.parameters.get("detune"), e, t), C = yu(y.parameters.get("frequency"), e, t);
      let S = vi(1);
      S = y.connect(S), Si(S.gain, o, l, c, h, 0, 1, t, f, "linear");
      let M = Cp(
        r,
        () => {
          pg(y), S.disconnect(), n(), C?.stop(), x?.stop();
        },
        t,
        m
      );
      return {
        node: S,
        stop: (Z) => {
          M.stop(Z);
        }
      };
    },
    { prebake: !0, type: "synth" }
  ), [...b4].forEach((t) => {
    xs(
      t,
      (e, n, r) => {
        const [i, s, a, o] = Ai(
          [n.attack, n.decay, n.sustain, n.release],
          "linear",
          [1e-3, 0.05, 0.6, 0.01]
        );
        let l, { density: c } = n;
        l = iw(t, e, c);
        let { node: h, stop: f, triggerRelease: m } = l;
        const y = vi(0.3), { duration: x } = n;
        h.onended = () => {
          h.disconnect(), y.disconnect(), r();
        };
        const C = vi(1);
        let S = h.connect(y).connect(C);
        const M = e + x;
        Si(S.gain, i, s, a, o, 0, 1, e, M, "linear");
        const Z = M + o + 0.01;
        return m?.(Z), f(Z), {
          node: S,
          stop: (q) => {
            f(q);
          }
        };
      },
      { type: "synth", prebake: !0 }
    );
  });
}
function aw(t, e) {
  const n = new Float32Array(t + 1), r = new Float32Array(t + 1), i = ht(), s = i.createOscillator(), a = {
    sawtooth: (c) => [0, -1 / c],
    square: (c) => [0, c % 2 === 0 ? 0 : 1 / c],
    triangle: (c) => [c % 2 === 0 ? 0 : 1 / (c * c), 0]
  };
  if (!a[e])
    throw new Error(`unknown wave type ${e}`);
  n[0] = 0, r[0] = 0;
  let o = 1;
  for (; o <= t; ) {
    const [c, h] = a[e](o);
    n[o] = c, r[o] = h, o++;
  }
  const l = i.createPeriodicWave(n, r);
  return s.setPeriodicWave(l), s;
}
function ow(t, e, n) {
  let { n: r, duration: i, noise: s = 0 } = n, a;
  !r || t === "sine" ? (a = ht().createOscillator(), a.type = t || "triangle") : a = aw(r, t), a.frequency.value = Dp(n), a.start(e);
  let o = ko(a.detune, n, e);
  xo(a.detune, n, e, e + i);
  const l = yu(a.frequency, n, e);
  let c;
  return s && (c = m4(a, s, e)), {
    node: c?.node || a,
    stop: (h) => {
      l.stop(h), o?.stop(h), c?.stop(h), a.stop(h);
    },
    triggerRelease: (h) => {
    }
  };
}
function y4(t = 1, e = 0.05, n = 220, r = 0, i = 0, s = 0.1, a = 0, o = 1, l = 0, c = 0, h = 0, f = 0, m = 0, y = 0, x = 0, C = 0, S = 0, M = 1, Z = 0, q = 0) {
  let _ = Math.PI * 2, B = ht().sampleRate, $ = (Le) => Le > 0 ? 1 : -1, N = l *= 500 * _ / B / B, U = n *= (1 + e * 2 * Math.random() - e) * _ / B, se = [], K = 0, ce = 0, H = 0, ie = 1, fe = 0, De = 0, Ee = 0, re, ke;
  for (r = r * B + 9, Z *= B, i *= B, s *= B, S *= B, c *= 500 * _ / B ** 3, x *= _ / B, h *= _ / B, f *= B, m = m * B | 0, ke = r + Z + i + s + S | 0; H < ke; se[H++] = Ee)
    ++De % (C * 100 | 0) || (Ee = a ? a > 1 ? a > 2 ? a > 3 ? Math.sin((K % _) ** 3) : Math.max(Math.min(Math.tan(K), 1), -1) : 1 - (2 * K / _ % 2 + 2) % 2 : 1 - 4 * Math.abs(Math.round(K / _) - K / _) : Math.sin(K), Ee = (m ? 1 - q + q * Math.sin(_ * H / m) : 1) * $(Ee) * Math.abs(Ee) ** o * // curve 0=square, 2=pointy
    t * 1 * // envelope
    (H < r ? H / r : H < r + Z ? 1 - (H - r) / Z * (1 - M) : H < r + Z + i ? M : H < ke - S ? (ke - H - S) / s * // release falloff
    M : 0), Ee = S ? Ee / 2 + (S > H ? 0 : (H < ke - S ? 1 : (ke - H) / S) * // release delay
    se[H - S | 0] / 2) : Ee), re = (n += l += c) * // frequency
    Math.cos(x * ce++), K += re - re * y * (1 - (Math.sin(H) + 1) * 1e9 % 2), ie && ++ie > f && (n += h, U += h, ie = 0), m && !(++fe % m) && (n = U, l = N, ie ||= 1);
  return se;
}
const lw = (t, e) => {
  let {
    s: n,
    note: r = 36,
    freq: i,
    //
    zrand: s = 0,
    attack: a = 0,
    decay: o = 0,
    sustain: l = 0.8,
    release: c = 0.1,
    curve: h = 1,
    slide: f = 0,
    deltaSlide: m = 0,
    pitchJump: y = 0,
    pitchJumpTime: x = 0,
    lfo: C = 0,
    znoise: S = 0,
    zmod: M = 0,
    zcrush: Z = 0,
    zdelay: q = 0,
    tremolo: _ = 0,
    duration: B = 0.2,
    zzfx: $
  } = t;
  const N = Math.max(B - a - o, 0);
  typeof r == "string" && (r = Cc(r)), !i && typeof r == "number" && (i = Q2(r)), n = n.replace("z_", "");
  const U = ["sine", "triangle", "sawtooth", "tan", "noise"].indexOf(n) || 0;
  h = n === "square" ? 0 : h;
  const K = (
    /* ZZFX. */
    y4(...$ || [
      0.25,
      // volume
      s,
      i,
      a,
      N,
      c,
      U,
      h,
      f,
      m,
      y,
      x,
      C,
      S,
      M,
      Z,
      q,
      l,
      // sustain volume!
      o,
      _
    ])
  ), ce = ht(), H = ce.createBuffer(1, K.length, ce.sampleRate);
  H.getChannelData(0).set(K);
  const ie = ht().createBufferSource();
  return ie.buffer = H, ie.start(e), {
    node: ie
  };
};
function uw() {
  ["zzfx", "z_sine", "z_sawtooth", "z_triangle", "z_square", "z_tan", "z_noise"].forEach((t) => {
    xs(
      t,
      (e, n, r) => {
        const { node: i } = lw({ s: t, ...n }, e);
        return i.onended = () => {
          i.disconnect(), r();
        }, {
          node: i,
          stop: () => {
          }
        };
      },
      { type: "synth", prebake: !0 }
    );
  });
}
let ra;
async function cw(t, e) {
  const n = `dsp-worklet-${Date.now()}`, r = `${e}
let __q = []; // trigger queue
class MyProcessor extends AudioWorkletProcessor {
  constructor() {
    super();
    this.t = 0;
    this.stopped = false;
    this.port.onmessage = (e) => {
      if(e.data==='stop') {
        this.stopped = true;
      } else if(e.data?.dough) {
        __q.push(e.data)
      } else {
        msg?.(e.data)
      }
    };
  }
  process(inputs, outputs, parameters) {
    const output = outputs[0];
    if(__q.length) {
      for(let i=0;i<__q.length;++i) {
        const deadline = __q[i].time-currentTime;
        if(deadline<=0) {
          trigger(__q[i].dough)
          __q.splice(i,1)
        }
      }
    }
    for (let i = 0; i < output[0].length; i++) {
      const out = dsp(this.t / sampleRate);
      output.forEach((channel) => {
        channel[i] = out;
      });
      this.t++;
    }
  return !this.stopped;
  }
}
registerProcessor('${n}', MyProcessor);
`, s = `data:text/javascript;base64,${btoa(r)}`;
  await t.audioWorklet.addModule(s);
  const a = new AudioWorkletNode(t, n);
  return { node: a, stop: () => a.port.postMessage("stop") };
}
const hw = () => {
  ra && (ra?.stop(), ra?.node?.disconnect());
};
typeof window < "u" && window.addEventListener("message", (t) => {
  t.data === "strudel-stop" ? hw() : t.data?.dough && ra?.node.port.postMessage(t.data);
});
const O4 = async (t) => {
  const e = ht();
  hw(), ra = await cw(e, t), ra.node.connect(e.destination);
};
function pw(t, e, n, r, i) {
  window.postMessage({ time: i, dough: e.value, currentTime: n, duration: e.duration, cps: r });
}
const { Pattern: fw, logger: v4, repl: x4 } = jk;
M2(v4);
const dw = (t) => (t.ensureObjectValue(), t.value), mw = (t, e, n, r) => Dc(dw(e), t - n, e.duration / r), Fd = (t, e, n, r, i) => Dc(dw(t), i ? `=${i}` : e, n);
fw.prototype.webaudio = function() {
  return this.onTrigger(mw);
};
function k4(t = {}) {
  return t = {
    getTime: () => ht().currentTime,
    defaultOutput: Fd,
    ...t
  }, x4(t);
}
fw.prototype.dough = function() {
  return this.onTrigger(pw, 1);
};
function gw(t, {
  align: e = !0,
  color: n = "white",
  thickness: r = 3,
  scale: i = 0.25,
  pos: s = 0.75,
  trigger: a = 0,
  ctx: o = Ti(),
  id: l = 1
} = {}) {
  o.lineWidth = r, o.strokeStyle = n;
  let c = o.canvas;
  if (!t) {
    o.beginPath();
    let C = s * c.height;
    o.moveTo(0, C), o.lineTo(c.width, C), o.stroke();
    return;
  }
  const h = Ac("time", l);
  o.beginPath();
  const f = t.frequencyBinCount;
  let m = e ? Array.from(h).findIndex((C, S, M) => S && M[S - 1] > -a && C <= -a) : 0;
  m = Math.max(m, 0);
  const y = c.width * 1 / f;
  let x = 0;
  for (let C = m; C < f; C++) {
    const S = h[C] + 1, M = (s - i * (S - 1)) * c.height;
    C === 0 ? o.moveTo(x, M) : o.lineTo(x, M), x += y;
  }
  o.stroke();
}
function bw(t, { color: e = "white", scale: n = 0.25, pos: r = 0.75, lean: i = 0.5, min: s = -150, max: a = 0, ctx: o = Ti(), id: l = 1 } = {}) {
  if (!t) {
    o.beginPath();
    let x = r * h.height;
    o.moveTo(0, x), o.lineTo(h.width, x), o.stroke();
    return;
  }
  const c = Ac("frequency", l), h = o.canvas;
  o.fillStyle = e;
  const f = t.frequencyBinCount, m = h.width * 1 / f;
  let y = 0;
  for (let x = 0; x < f; x++) {
    const S = dc((c[x] - s) / (a - s), 0, 1) * n, M = S * h.height, Z = (r - S * i) * h.height;
    o.fillRect(y, Z, Math.max(m, 1), M), y += m;
  }
}
function yw(t = 0, e = "0,0,0", n = Ti()) {
  t ? (n.fillStyle = `rgba(${e},${1 - t})`, n.fillRect(0, 0, n.canvas.width, n.canvas.height)) : n.clearRect(0, 0, n.canvas.width, n.canvas.height);
}
de.prototype.fscope = function(t = {}) {
  let e = t.id ?? 1;
  return this.analyze(e).draw(
    () => {
      yw(t.smear, "0,0,0", t.ctx), Tn[e] && bw(Tn[e], t);
    },
    { id: e }
  );
};
de.prototype.tscope = function(t = {}) {
  let e = t.id ?? 1;
  return this.analyze(e).draw(
    (n) => {
      t.color = n[0]?.value?.color || Di().foreground, t.color, yw(t.smear, "0,0,0", t.ctx), gw(Tn[e], t);
    },
    { id: e }
  );
};
de.prototype.scope = de.prototype.tscope;
let fg = {};
de.prototype.spectrum = function(t = {}) {
  let e = t.id ?? 1;
  return this.analyze(e).draw(
    (n) => {
      t.color = n[0]?.value?.color || fg[e] || Di().foreground, fg[e] = t.color, w4(Tn[e], t);
    },
    { id: e }
  );
};
de.prototype.scope = de.prototype.tscope;
const Mh = /* @__PURE__ */ new Map();
function w4(t, { thickness: e = 3, speed: n = 1, min: r = -80, max: i = 0, ctx: s = Ti(), id: a = 1, color: o } = {}) {
  if (s.lineWidth = e, s.strokeStyle = o, !t)
    return;
  const l = n, c = Ac("frequency", a), h = s.canvas;
  s.fillStyle = o;
  const f = t.frequencyBinCount;
  let m = Mh.get(a) || s.getImageData(0, 0, h.width, h.height);
  Mh.set(a, m), s.clearRect(0, 0, s.canvas.width, s.canvas.height), s.putImageData(m, -l, 0);
  let y = h.width - n;
  for (let x = 0; x < f; x++) {
    const C = dc((c[x] - r) / (i - r), 0, 1);
    s.globalAlpha = C;
    const S = Math.log(x + 1) / Math.log(f) * h.height;
    s.fillRect(y, h.height - S, l, 2);
  }
  Mh.set(a, s.getImageData(0, 0, h.width, h.height));
}
const C4 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  DEFAULT_MAX_POLYPHONY: Dd,
  aliasBank: H2,
  get analysers() {
    return Tn;
  },
  get analysersData() {
    return Ss;
  },
  applyFM: yu,
  applyGainCurve: bs,
  connectToDestination: Sc,
  createFilter: Yl,
  dough: O4,
  doughTrigger: pw,
  drawFrequencyScope: bw,
  drawTimeScope: gw,
  drywet: _2,
  dspWorklet: cw,
  gainNode: vi,
  getADSRValues: Ai,
  getAnalyserById: rw,
  getAnalyzerData: Ac,
  getAudioContext: ht,
  getAudioContextCurrentTime: i4,
  getAudioDevices: Y2,
  getCachedBuffer: G9,
  getCompressor: j2,
  getDefaultValue: en,
  getLoadedBuffer: H9,
  getOscillator: ow,
  getParamADSR: Si,
  getPitchEnvelope: xo,
  getSampleBuffer: Z2,
  getSampleBufferSource: L2,
  getSampleInfo: $2,
  getSound: Kl,
  getVibratoOscillator: ko,
  getWorklet: ii,
  getZZFX: lw,
  initAudio: tw,
  initAudioOnFirstClick: a4,
  initializeAudioOutput: nw,
  loadBuffer: Ad,
  logger: wr,
  onTriggerSample: q2,
  panic: o4,
  processSampleMap: X2,
  registerSamplesPrefix: Y9,
  registerSound: xs,
  registerSynthSounds: sw,
  registerZZFXSounds: uw,
  resetDefaultValues: J2,
  resetGlobalEffects: p4,
  resetLoadedSounds: r4,
  reverseBuffer: I2,
  samples: Ni,
  setDefaultAudioContext: ew,
  setDefaultValue: Ed,
  setDefaultValues: t4,
  setGainCurve: J9,
  setLogger: M2,
  setMaxPolyphony: G2,
  setVersionDefaults: n4,
  soundMap: ba,
  superdough: Dc,
  superdoughTrigger: f4,
  waveformN: aw,
  webAudioTimeout: Cp,
  webaudioOutput: Fd,
  webaudioOutputTrigger: mw,
  webaudioRepl: k4
}, Symbol.toStringTag, { value: "Module" }));
let Pp = [], Ow = [];
(() => {
  let t = "lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o".split(",").map((e) => e ? parseInt(e, 36) : 1);
  for (let e = 0, n = 0; e < t.length; e++)
    (e % 2 ? Ow : Pp).push(n = n + t[e]);
})();
function S4(t) {
  if (t < 768) return !1;
  for (let e = 0, n = Pp.length; ; ) {
    let r = e + n >> 1;
    if (t < Pp[r]) n = r;
    else if (t >= Ow[r]) e = r + 1;
    else return !0;
    if (e == n) return !1;
  }
}
function dg(t) {
  return t >= 127462 && t <= 127487;
}
const mg = 8205;
function A4(t, e, n = !0, r = !0) {
  return (n ? vw : D4)(t, e, r);
}
function vw(t, e, n) {
  if (e == t.length) return e;
  e && xw(t.charCodeAt(e)) && kw(t.charCodeAt(e - 1)) && e--;
  let r = Qh(t, e);
  for (e += gg(r); e < t.length; ) {
    let i = Qh(t, e);
    if (r == mg || i == mg || n && S4(i))
      e += gg(i), r = i;
    else if (dg(i)) {
      let s = 0, a = e - 2;
      for (; a >= 0 && dg(Qh(t, a)); )
        s++, a -= 2;
      if (s % 2 == 0) break;
      e += 2;
    } else
      break;
  }
  return e;
}
function D4(t, e, n) {
  for (; e > 0; ) {
    let r = vw(t, e - 2, n);
    if (r < e) return r;
    e--;
  }
  return 0;
}
function Qh(t, e) {
  let n = t.charCodeAt(e);
  if (!kw(n) || e + 1 == t.length) return n;
  let r = t.charCodeAt(e + 1);
  return xw(r) ? (n - 55296 << 10) + (r - 56320) + 65536 : n;
}
function xw(t) {
  return t >= 56320 && t < 57344;
}
function kw(t) {
  return t >= 55296 && t < 56320;
}
function gg(t) {
  return t < 65536 ? 1 : 2;
}
class ct {
  /**
  Get the line description around the given position.
  */
  lineAt(e) {
    if (e < 0 || e > this.length)
      throw new RangeError(`Invalid position ${e} in document of length ${this.length}`);
    return this.lineInner(e, !1, 1, 0);
  }
  /**
  Get the description for the given (1-based) line number.
  */
  line(e) {
    if (e < 1 || e > this.lines)
      throw new RangeError(`Invalid line number ${e} in ${this.lines}-line document`);
    return this.lineInner(e, !0, 1, 0);
  }
  /**
  Replace a range of the text with the given content.
  */
  replace(e, n, r) {
    [e, n] = ya(this, e, n);
    let i = [];
    return this.decompose(
      0,
      e,
      i,
      2
      /* Open.To */
    ), r.length && r.decompose(
      0,
      r.length,
      i,
      3
      /* Open.To */
    ), this.decompose(
      n,
      this.length,
      i,
      1
      /* Open.From */
    ), si.from(i, this.length - (n - e) + r.length);
  }
  /**
  Append another document to this one.
  */
  append(e) {
    return this.replace(this.length, this.length, e);
  }
  /**
  Retrieve the text between the given points.
  */
  slice(e, n = this.length) {
    [e, n] = ya(this, e, n);
    let r = [];
    return this.decompose(e, n, r, 0), si.from(r, n - e);
  }
  /**
  Test whether this text is equal to another instance.
  */
  eq(e) {
    if (e == this)
      return !0;
    if (e.length != this.length || e.lines != this.lines)
      return !1;
    let n = this.scanIdentical(e, 1), r = this.length - this.scanIdentical(e, -1), i = new po(this), s = new po(e);
    for (let a = n, o = n; ; ) {
      if (i.next(a), s.next(a), a = 0, i.lineBreak != s.lineBreak || i.done != s.done || i.value != s.value)
        return !1;
      if (o += i.value.length, i.done || o >= r)
        return !0;
    }
  }
  /**
  Iterate over the text. When `dir` is `-1`, iteration happens
  from end to start. This will return lines and the breaks between
  them as separate strings.
  */
  iter(e = 1) {
    return new po(this, e);
  }
  /**
  Iterate over a range of the text. When `from` > `to`, the
  iterator will run in reverse.
  */
  iterRange(e, n = this.length) {
    return new ww(this, e, n);
  }
  /**
  Return a cursor that iterates over the given range of lines,
  _without_ returning the line breaks between, and yielding empty
  strings for empty lines.
  
  When `from` and `to` are given, they should be 1-based line numbers.
  */
  iterLines(e, n) {
    let r;
    if (e == null)
      r = this.iter();
    else {
      n == null && (n = this.lines + 1);
      let i = this.line(e).from;
      r = this.iterRange(i, Math.max(i, n == this.lines + 1 ? this.length : n <= 1 ? 0 : this.line(n - 1).to));
    }
    return new Cw(r);
  }
  /**
  Return the document as a string, using newline characters to
  separate lines.
  */
  toString() {
    return this.sliceString(0);
  }
  /**
  Convert the document to an array of lines (which can be
  deserialized again via [`Text.of`](https://codemirror.net/6/docs/ref/#state.Text^of)).
  */
  toJSON() {
    let e = [];
    return this.flatten(e), e;
  }
  /**
  @internal
  */
  constructor() {
  }
  /**
  Create a `Text` instance for the given array of lines.
  */
  static of(e) {
    if (e.length == 0)
      throw new RangeError("A document must have at least one line");
    return e.length == 1 && !e[0] ? ct.empty : e.length <= 32 ? new Ut(e) : si.from(Ut.split(e, []));
  }
}
class Ut extends ct {
  constructor(e, n = P4(e)) {
    super(), this.text = e, this.length = n;
  }
  get lines() {
    return this.text.length;
  }
  get children() {
    return null;
  }
  lineInner(e, n, r, i) {
    for (let s = 0; ; s++) {
      let a = this.text[s], o = i + a.length;
      if ((n ? r : o) >= e)
        return new E4(i, o, r, a);
      i = o + 1, r++;
    }
  }
  decompose(e, n, r, i) {
    let s = e <= 0 && n >= this.length ? this : new Ut(bg(this.text, e, n), Math.min(n, this.length) - Math.max(0, e));
    if (i & 1) {
      let a = r.pop(), o = Jl(s.text, a.text.slice(), 0, s.length);
      if (o.length <= 32)
        r.push(new Ut(o, a.length + s.length));
      else {
        let l = o.length >> 1;
        r.push(new Ut(o.slice(0, l)), new Ut(o.slice(l)));
      }
    } else
      r.push(s);
  }
  replace(e, n, r) {
    if (!(r instanceof Ut))
      return super.replace(e, n, r);
    [e, n] = ya(this, e, n);
    let i = Jl(this.text, Jl(r.text, bg(this.text, 0, e)), n), s = this.length + r.length - (n - e);
    return i.length <= 32 ? new Ut(i, s) : si.from(Ut.split(i, []), s);
  }
  sliceString(e, n = this.length, r = `
`) {
    [e, n] = ya(this, e, n);
    let i = "";
    for (let s = 0, a = 0; s <= n && a < this.text.length; a++) {
      let o = this.text[a], l = s + o.length;
      s > e && a && (i += r), e < l && n > s && (i += o.slice(Math.max(0, e - s), n - s)), s = l + 1;
    }
    return i;
  }
  flatten(e) {
    for (let n of this.text)
      e.push(n);
  }
  scanIdentical() {
    return 0;
  }
  static split(e, n) {
    let r = [], i = -1;
    for (let s of e)
      r.push(s), i += s.length + 1, r.length == 32 && (n.push(new Ut(r, i)), r = [], i = -1);
    return i > -1 && n.push(new Ut(r, i)), n;
  }
}
class si extends ct {
  constructor(e, n) {
    super(), this.children = e, this.length = n, this.lines = 0;
    for (let r of e)
      this.lines += r.lines;
  }
  lineInner(e, n, r, i) {
    for (let s = 0; ; s++) {
      let a = this.children[s], o = i + a.length, l = r + a.lines - 1;
      if ((n ? l : o) >= e)
        return a.lineInner(e, n, r, i);
      i = o + 1, r = l + 1;
    }
  }
  decompose(e, n, r, i) {
    for (let s = 0, a = 0; a <= n && s < this.children.length; s++) {
      let o = this.children[s], l = a + o.length;
      if (e <= l && n >= a) {
        let c = i & ((a <= e ? 1 : 0) | (l >= n ? 2 : 0));
        a >= e && l <= n && !c ? r.push(o) : o.decompose(e - a, n - a, r, c);
      }
      a = l + 1;
    }
  }
  replace(e, n, r) {
    if ([e, n] = ya(this, e, n), r.lines < this.lines)
      for (let i = 0, s = 0; i < this.children.length; i++) {
        let a = this.children[i], o = s + a.length;
        if (e >= s && n <= o) {
          let l = a.replace(e - s, n - s, r), c = this.lines - a.lines + l.lines;
          if (l.lines < c >> 4 && l.lines > c >> 6) {
            let h = this.children.slice();
            return h[i] = l, new si(h, this.length - (n - e) + r.length);
          }
          return super.replace(s, o, l);
        }
        s = o + 1;
      }
    return super.replace(e, n, r);
  }
  sliceString(e, n = this.length, r = `
`) {
    [e, n] = ya(this, e, n);
    let i = "";
    for (let s = 0, a = 0; s < this.children.length && a <= n; s++) {
      let o = this.children[s], l = a + o.length;
      a > e && s && (i += r), e < l && n > a && (i += o.sliceString(e - a, n - a, r)), a = l + 1;
    }
    return i;
  }
  flatten(e) {
    for (let n of this.children)
      n.flatten(e);
  }
  scanIdentical(e, n) {
    if (!(e instanceof si))
      return 0;
    let r = 0, [i, s, a, o] = n > 0 ? [0, 0, this.children.length, e.children.length] : [this.children.length - 1, e.children.length - 1, -1, -1];
    for (; ; i += n, s += n) {
      if (i == a || s == o)
        return r;
      let l = this.children[i], c = e.children[s];
      if (l != c)
        return r + l.scanIdentical(c, n);
      r += l.length + 1;
    }
  }
  static from(e, n = e.reduce((r, i) => r + i.length + 1, -1)) {
    let r = 0;
    for (let y of e)
      r += y.lines;
    if (r < 32) {
      let y = [];
      for (let x of e)
        x.flatten(y);
      return new Ut(y, n);
    }
    let i = Math.max(
      32,
      r >> 5
      /* Tree.BranchShift */
    ), s = i << 1, a = i >> 1, o = [], l = 0, c = -1, h = [];
    function f(y) {
      let x;
      if (y.lines > s && y instanceof si)
        for (let C of y.children)
          f(C);
      else y.lines > a && (l > a || !l) ? (m(), o.push(y)) : y instanceof Ut && l && (x = h[h.length - 1]) instanceof Ut && y.lines + x.lines <= 32 ? (l += y.lines, c += y.length + 1, h[h.length - 1] = new Ut(x.text.concat(y.text), x.length + 1 + y.length)) : (l + y.lines > i && m(), l += y.lines, c += y.length + 1, h.push(y));
    }
    function m() {
      l != 0 && (o.push(h.length == 1 ? h[0] : si.from(h, c)), c = -1, l = h.length = 0);
    }
    for (let y of e)
      f(y);
    return m(), o.length == 1 ? o[0] : new si(o, n);
  }
}
ct.empty = /* @__PURE__ */ new Ut([""], 0);
function P4(t) {
  let e = -1;
  for (let n of t)
    e += n.length + 1;
  return e;
}
function Jl(t, e, n = 0, r = 1e9) {
  for (let i = 0, s = 0, a = !0; s < t.length && i <= r; s++) {
    let o = t[s], l = i + o.length;
    l >= n && (l > r && (o = o.slice(0, r - i)), i < n && (o = o.slice(n - i)), a ? (e[e.length - 1] += o, a = !1) : e.push(o)), i = l + 1;
  }
  return e;
}
function bg(t, e, n) {
  return Jl(t, [""], e, n);
}
class po {
  constructor(e, n = 1) {
    this.dir = n, this.done = !1, this.lineBreak = !1, this.value = "", this.nodes = [e], this.offsets = [n > 0 ? 1 : (e instanceof Ut ? e.text.length : e.children.length) << 1];
  }
  nextInner(e, n) {
    for (this.done = this.lineBreak = !1; ; ) {
      let r = this.nodes.length - 1, i = this.nodes[r], s = this.offsets[r], a = s >> 1, o = i instanceof Ut ? i.text.length : i.children.length;
      if (a == (n > 0 ? o : 0)) {
        if (r == 0)
          return this.done = !0, this.value = "", this;
        n > 0 && this.offsets[r - 1]++, this.nodes.pop(), this.offsets.pop();
      } else if ((s & 1) == (n > 0 ? 0 : 1)) {
        if (this.offsets[r] += n, e == 0)
          return this.lineBreak = !0, this.value = `
`, this;
        e--;
      } else if (i instanceof Ut) {
        let l = i.text[a + (n < 0 ? -1 : 0)];
        if (this.offsets[r] += n, l.length > Math.max(0, e))
          return this.value = e == 0 ? l : n > 0 ? l.slice(e) : l.slice(0, l.length - e), this;
        e -= l.length;
      } else {
        let l = i.children[a + (n < 0 ? -1 : 0)];
        e > l.length ? (e -= l.length, this.offsets[r] += n) : (n < 0 && this.offsets[r]--, this.nodes.push(l), this.offsets.push(n > 0 ? 1 : (l instanceof Ut ? l.text.length : l.children.length) << 1));
      }
    }
  }
  next(e = 0) {
    return e < 0 && (this.nextInner(-e, -this.dir), e = this.value.length), this.nextInner(e, this.dir);
  }
}
class ww {
  constructor(e, n, r) {
    this.value = "", this.done = !1, this.cursor = new po(e, n > r ? -1 : 1), this.pos = n > r ? e.length : 0, this.from = Math.min(n, r), this.to = Math.max(n, r);
  }
  nextInner(e, n) {
    if (n < 0 ? this.pos <= this.from : this.pos >= this.to)
      return this.value = "", this.done = !0, this;
    e += Math.max(0, n < 0 ? this.pos - this.to : this.from - this.pos);
    let r = n < 0 ? this.pos - this.from : this.to - this.pos;
    e > r && (e = r), r -= e;
    let { value: i } = this.cursor.next(e);
    return this.pos += (i.length + e) * n, this.value = i.length <= r ? i : n < 0 ? i.slice(i.length - r) : i.slice(0, r), this.done = !this.value, this;
  }
  next(e = 0) {
    return e < 0 ? e = Math.max(e, this.from - this.pos) : e > 0 && (e = Math.min(e, this.to - this.pos)), this.nextInner(e, this.cursor.dir);
  }
  get lineBreak() {
    return this.cursor.lineBreak && this.value != "";
  }
}
class Cw {
  constructor(e) {
    this.inner = e, this.afterBreak = !0, this.value = "", this.done = !1;
  }
  next(e = 0) {
    let { done: n, lineBreak: r, value: i } = this.inner.next(e);
    return n && this.afterBreak ? (this.value = "", this.afterBreak = !1) : n ? (this.done = !0, this.value = "") : r ? this.afterBreak ? this.value = "" : (this.afterBreak = !0, this.next()) : (this.value = i, this.afterBreak = !1), this;
  }
  get lineBreak() {
    return !1;
  }
}
typeof Symbol < "u" && (ct.prototype[Symbol.iterator] = function() {
  return this.iter();
}, po.prototype[Symbol.iterator] = ww.prototype[Symbol.iterator] = Cw.prototype[Symbol.iterator] = function() {
  return this;
});
class E4 {
  /**
  @internal
  */
  constructor(e, n, r, i) {
    this.from = e, this.to = n, this.number = r, this.text = i;
  }
  /**
  The length of the line (not including any line break after it).
  */
  get length() {
    return this.to - this.from;
  }
}
function ya(t, e, n) {
  return e = Math.max(0, Math.min(t.length, e)), [e, Math.max(e, Math.min(t.length, n))];
}
function Cn(t, e, n = !0, r = !0) {
  return A4(t, e, n, r);
}
function F4(t) {
  return t >= 56320 && t < 57344;
}
function B4(t) {
  return t >= 55296 && t < 56320;
}
function ur(t, e) {
  let n = t.charCodeAt(e);
  if (!B4(n) || e + 1 == t.length)
    return n;
  let r = t.charCodeAt(e + 1);
  return F4(r) ? (n - 55296 << 10) + (r - 56320) + 65536 : n;
}
function Bd(t) {
  return t <= 65535 ? String.fromCharCode(t) : (t -= 65536, String.fromCharCode((t >> 10) + 55296, (t & 1023) + 56320));
}
function ai(t) {
  return t < 65536 ? 1 : 2;
}
const Ep = /\r\n?|\n/;
var rn = /* @__PURE__ */ function(t) {
  return t[t.Simple = 0] = "Simple", t[t.TrackDel = 1] = "TrackDel", t[t.TrackBefore = 2] = "TrackBefore", t[t.TrackAfter = 3] = "TrackAfter", t;
}(rn || (rn = {}));
class ci {
  // Sections are encoded as pairs of integers. The first is the
  // length in the current document, and the second is -1 for
  // unaffected sections, and the length of the replacement content
  // otherwise. So an insertion would be (0, n>0), a deletion (n>0,
  // 0), and a replacement two positive numbers.
  /**
  @internal
  */
  constructor(e) {
    this.sections = e;
  }
  /**
  The length of the document before the change.
  */
  get length() {
    let e = 0;
    for (let n = 0; n < this.sections.length; n += 2)
      e += this.sections[n];
    return e;
  }
  /**
  The length of the document after the change.
  */
  get newLength() {
    let e = 0;
    for (let n = 0; n < this.sections.length; n += 2) {
      let r = this.sections[n + 1];
      e += r < 0 ? this.sections[n] : r;
    }
    return e;
  }
  /**
  False when there are actual changes in this set.
  */
  get empty() {
    return this.sections.length == 0 || this.sections.length == 2 && this.sections[1] < 0;
  }
  /**
  Iterate over the unchanged parts left by these changes. `posA`
  provides the position of the range in the old document, `posB`
  the new position in the changed document.
  */
  iterGaps(e) {
    for (let n = 0, r = 0, i = 0; n < this.sections.length; ) {
      let s = this.sections[n++], a = this.sections[n++];
      a < 0 ? (e(r, i, s), i += s) : i += a, r += s;
    }
  }
  /**
  Iterate over the ranges changed by these changes. (See
  [`ChangeSet.iterChanges`](https://codemirror.net/6/docs/ref/#state.ChangeSet.iterChanges) for a
  variant that also provides you with the inserted text.)
  `fromA`/`toA` provides the extent of the change in the starting
  document, `fromB`/`toB` the extent of the replacement in the
  changed document.
  
  When `individual` is true, adjacent changes (which are kept
  separate for [position mapping](https://codemirror.net/6/docs/ref/#state.ChangeDesc.mapPos)) are
  reported separately.
  */
  iterChangedRanges(e, n = !1) {
    Fp(this, e, n);
  }
  /**
  Get a description of the inverted form of these changes.
  */
  get invertedDesc() {
    let e = [];
    for (let n = 0; n < this.sections.length; ) {
      let r = this.sections[n++], i = this.sections[n++];
      i < 0 ? e.push(r, i) : e.push(i, r);
    }
    return new ci(e);
  }
  /**
  Compute the combined effect of applying another set of changes
  after this one. The length of the document after this set should
  match the length before `other`.
  */
  composeDesc(e) {
    return this.empty ? e : e.empty ? this : Sw(this, e);
  }
  /**
  Map this description, which should start with the same document
  as `other`, over another set of changes, so that it can be
  applied after it. When `before` is true, map as if the changes
  in `this` happened before the ones in `other`.
  */
  mapDesc(e, n = !1) {
    return e.empty ? this : Bp(this, e, n);
  }
  mapPos(e, n = -1, r = rn.Simple) {
    let i = 0, s = 0;
    for (let a = 0; a < this.sections.length; ) {
      let o = this.sections[a++], l = this.sections[a++], c = i + o;
      if (l < 0) {
        if (c > e)
          return s + (e - i);
        s += o;
      } else {
        if (r != rn.Simple && c >= e && (r == rn.TrackDel && i < e && c > e || r == rn.TrackBefore && i < e || r == rn.TrackAfter && c > e))
          return null;
        if (c > e || c == e && n < 0 && !o)
          return e == i || n < 0 ? s : s + l;
        s += l;
      }
      i = c;
    }
    if (e > i)
      throw new RangeError(`Position ${e} is out of range for changeset of length ${i}`);
    return s;
  }
  /**
  Check whether these changes touch a given range. When one of the
  changes entirely covers the range, the string `"cover"` is
  returned.
  */
  touchesRange(e, n = e) {
    for (let r = 0, i = 0; r < this.sections.length && i <= n; ) {
      let s = this.sections[r++], a = this.sections[r++], o = i + s;
      if (a >= 0 && i <= n && o >= e)
        return i < e && o > n ? "cover" : !0;
      i = o;
    }
    return !1;
  }
  /**
  @internal
  */
  toString() {
    let e = "";
    for (let n = 0; n < this.sections.length; ) {
      let r = this.sections[n++], i = this.sections[n++];
      e += (e ? " " : "") + r + (i >= 0 ? ":" + i : "");
    }
    return e;
  }
  /**
  Serialize this change desc to a JSON-representable value.
  */
  toJSON() {
    return this.sections;
  }
  /**
  Create a change desc from its JSON representation (as produced
  by [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeDesc.toJSON).
  */
  static fromJSON(e) {
    if (!Array.isArray(e) || e.length % 2 || e.some((n) => typeof n != "number"))
      throw new RangeError("Invalid JSON representation of ChangeDesc");
    return new ci(e);
  }
  /**
  @internal
  */
  static create(e) {
    return new ci(e);
  }
}
class un extends ci {
  constructor(e, n) {
    super(e), this.inserted = n;
  }
  /**
  Apply the changes to a document, returning the modified
  document.
  */
  apply(e) {
    if (this.length != e.length)
      throw new RangeError("Applying change set to a document with the wrong length");
    return Fp(this, (n, r, i, s, a) => e = e.replace(i, i + (r - n), a), !1), e;
  }
  mapDesc(e, n = !1) {
    return Bp(this, e, n, !0);
  }
  /**
  Given the document as it existed _before_ the changes, return a
  change set that represents the inverse of this set, which could
  be used to go from the document created by the changes back to
  the document as it existed before the changes.
  */
  invert(e) {
    let n = this.sections.slice(), r = [];
    for (let i = 0, s = 0; i < n.length; i += 2) {
      let a = n[i], o = n[i + 1];
      if (o >= 0) {
        n[i] = o, n[i + 1] = a;
        let l = i >> 1;
        for (; r.length < l; )
          r.push(ct.empty);
        r.push(a ? e.slice(s, s + a) : ct.empty);
      }
      s += a;
    }
    return new un(n, r);
  }
  /**
  Combine two subsequent change sets into a single set. `other`
  must start in the document produced by `this`. If `this` goes
  `docA` → `docB` and `other` represents `docB` → `docC`, the
  returned value will represent the change `docA` → `docC`.
  */
  compose(e) {
    return this.empty ? e : e.empty ? this : Sw(this, e, !0);
  }
  /**
  Given another change set starting in the same document, maps this
  change set over the other, producing a new change set that can be
  applied to the document produced by applying `other`. When
  `before` is `true`, order changes as if `this` comes before
  `other`, otherwise (the default) treat `other` as coming first.
  
  Given two changes `A` and `B`, `A.compose(B.map(A))` and
  `B.compose(A.map(B, true))` will produce the same document. This
  provides a basic form of [operational
  transformation](https://en.wikipedia.org/wiki/Operational_transformation),
  and can be used for collaborative editing.
  */
  map(e, n = !1) {
    return e.empty ? this : Bp(this, e, n, !0);
  }
  /**
  Iterate over the changed ranges in the document, calling `f` for
  each, with the range in the original document (`fromA`-`toA`)
  and the range that replaces it in the new document
  (`fromB`-`toB`).
  
  When `individual` is true, adjacent changes are reported
  separately.
  */
  iterChanges(e, n = !1) {
    Fp(this, e, n);
  }
  /**
  Get a [change description](https://codemirror.net/6/docs/ref/#state.ChangeDesc) for this change
  set.
  */
  get desc() {
    return ci.create(this.sections);
  }
  /**
  @internal
  */
  filter(e) {
    let n = [], r = [], i = [], s = new wo(this);
    e: for (let a = 0, o = 0; ; ) {
      let l = a == e.length ? 1e9 : e[a++];
      for (; o < l || o == l && s.len == 0; ) {
        if (s.done)
          break e;
        let h = Math.min(s.len, l - o);
        Dn(i, h, -1);
        let f = s.ins == -1 ? -1 : s.off == 0 ? s.ins : 0;
        Dn(n, h, f), f > 0 && Ui(r, n, s.text), s.forward(h), o += h;
      }
      let c = e[a++];
      for (; o < c; ) {
        if (s.done)
          break e;
        let h = Math.min(s.len, c - o);
        Dn(n, h, -1), Dn(i, h, s.ins == -1 ? -1 : s.off == 0 ? s.ins : 0), s.forward(h), o += h;
      }
    }
    return {
      changes: new un(n, r),
      filtered: ci.create(i)
    };
  }
  /**
  Serialize this change set to a JSON-representable value.
  */
  toJSON() {
    let e = [];
    for (let n = 0; n < this.sections.length; n += 2) {
      let r = this.sections[n], i = this.sections[n + 1];
      i < 0 ? e.push(r) : i == 0 ? e.push([r]) : e.push([r].concat(this.inserted[n >> 1].toJSON()));
    }
    return e;
  }
  /**
  Create a change set for the given changes, for a document of the
  given length, using `lineSep` as line separator.
  */
  static of(e, n, r) {
    let i = [], s = [], a = 0, o = null;
    function l(h = !1) {
      if (!h && !i.length)
        return;
      a < n && Dn(i, n - a, -1);
      let f = new un(i, s);
      o = o ? o.compose(f.map(o)) : f, i = [], s = [], a = 0;
    }
    function c(h) {
      if (Array.isArray(h))
        for (let f of h)
          c(f);
      else if (h instanceof un) {
        if (h.length != n)
          throw new RangeError(`Mismatched change set length (got ${h.length}, expected ${n})`);
        l(), o = o ? o.compose(h.map(o)) : h;
      } else {
        let { from: f, to: m = f, insert: y } = h;
        if (f > m || f < 0 || m > n)
          throw new RangeError(`Invalid change range ${f} to ${m} (in doc of length ${n})`);
        let x = y ? typeof y == "string" ? ct.of(y.split(r || Ep)) : y : ct.empty, C = x.length;
        if (f == m && C == 0)
          return;
        f < a && l(), f > a && Dn(i, f - a, -1), Dn(i, m - f, C), Ui(s, i, x), a = m;
      }
    }
    return c(e), l(!o), o;
  }
  /**
  Create an empty changeset of the given length.
  */
  static empty(e) {
    return new un(e ? [e, -1] : [], []);
  }
  /**
  Create a changeset from its JSON representation (as produced by
  [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeSet.toJSON).
  */
  static fromJSON(e) {
    if (!Array.isArray(e))
      throw new RangeError("Invalid JSON representation of ChangeSet");
    let n = [], r = [];
    for (let i = 0; i < e.length; i++) {
      let s = e[i];
      if (typeof s == "number")
        n.push(s, -1);
      else {
        if (!Array.isArray(s) || typeof s[0] != "number" || s.some((a, o) => o && typeof a != "string"))
          throw new RangeError("Invalid JSON representation of ChangeSet");
        if (s.length == 1)
          n.push(s[0], 0);
        else {
          for (; r.length < i; )
            r.push(ct.empty);
          r[i] = ct.of(s.slice(1)), n.push(s[0], r[i].length);
        }
      }
    }
    return new un(n, r);
  }
  /**
  @internal
  */
  static createSet(e, n) {
    return new un(e, n);
  }
}
function Dn(t, e, n, r = !1) {
  if (e == 0 && n <= 0)
    return;
  let i = t.length - 2;
  i >= 0 && n <= 0 && n == t[i + 1] ? t[i] += e : i >= 0 && e == 0 && t[i] == 0 ? t[i + 1] += n : r ? (t[i] += e, t[i + 1] += n) : t.push(e, n);
}
function Ui(t, e, n) {
  if (n.length == 0)
    return;
  let r = e.length - 2 >> 1;
  if (r < t.length)
    t[t.length - 1] = t[t.length - 1].append(n);
  else {
    for (; t.length < r; )
      t.push(ct.empty);
    t.push(n);
  }
}
function Fp(t, e, n) {
  let r = t.inserted;
  for (let i = 0, s = 0, a = 0; a < t.sections.length; ) {
    let o = t.sections[a++], l = t.sections[a++];
    if (l < 0)
      i += o, s += o;
    else {
      let c = i, h = s, f = ct.empty;
      for (; c += o, h += l, l && r && (f = f.append(r[a - 2 >> 1])), !(n || a == t.sections.length || t.sections[a + 1] < 0); )
        o = t.sections[a++], l = t.sections[a++];
      e(i, c, s, h, f), i = c, s = h;
    }
  }
}
function Bp(t, e, n, r = !1) {
  let i = [], s = r ? [] : null, a = new wo(t), o = new wo(e);
  for (let l = -1; ; ) {
    if (a.done && o.len || o.done && a.len)
      throw new Error("Mismatched change set lengths");
    if (a.ins == -1 && o.ins == -1) {
      let c = Math.min(a.len, o.len);
      Dn(i, c, -1), a.forward(c), o.forward(c);
    } else if (o.ins >= 0 && (a.ins < 0 || l == a.i || a.off == 0 && (o.len < a.len || o.len == a.len && !n))) {
      let c = o.len;
      for (Dn(i, o.ins, -1); c; ) {
        let h = Math.min(a.len, c);
        a.ins >= 0 && l < a.i && a.len <= h && (Dn(i, 0, a.ins), s && Ui(s, i, a.text), l = a.i), a.forward(h), c -= h;
      }
      o.next();
    } else if (a.ins >= 0) {
      let c = 0, h = a.len;
      for (; h; )
        if (o.ins == -1) {
          let f = Math.min(h, o.len);
          c += f, h -= f, o.forward(f);
        } else if (o.ins == 0 && o.len < h)
          h -= o.len, o.next();
        else
          break;
      Dn(i, c, l < a.i ? a.ins : 0), s && l < a.i && Ui(s, i, a.text), l = a.i, a.forward(a.len - h);
    } else {
      if (a.done && o.done)
        return s ? un.createSet(i, s) : ci.create(i);
      throw new Error("Mismatched change set lengths");
    }
  }
}
function Sw(t, e, n = !1) {
  let r = [], i = n ? [] : null, s = new wo(t), a = new wo(e);
  for (let o = !1; ; ) {
    if (s.done && a.done)
      return i ? un.createSet(r, i) : ci.create(r);
    if (s.ins == 0)
      Dn(r, s.len, 0, o), s.next();
    else if (a.len == 0 && !a.done)
      Dn(r, 0, a.ins, o), i && Ui(i, r, a.text), a.next();
    else {
      if (s.done || a.done)
        throw new Error("Mismatched change set lengths");
      {
        let l = Math.min(s.len2, a.len), c = r.length;
        if (s.ins == -1) {
          let h = a.ins == -1 ? -1 : a.off ? 0 : a.ins;
          Dn(r, l, h, o), i && h && Ui(i, r, a.text);
        } else a.ins == -1 ? (Dn(r, s.off ? 0 : s.len, l, o), i && Ui(i, r, s.textBit(l))) : (Dn(r, s.off ? 0 : s.len, a.off ? 0 : a.ins, o), i && !a.off && Ui(i, r, a.text));
        o = (s.ins > l || a.ins >= 0 && a.len > l) && (o || r.length > c), s.forward2(l), a.forward(l);
      }
    }
  }
}
class wo {
  constructor(e) {
    this.set = e, this.i = 0, this.next();
  }
  next() {
    let { sections: e } = this.set;
    this.i < e.length ? (this.len = e[this.i++], this.ins = e[this.i++]) : (this.len = 0, this.ins = -2), this.off = 0;
  }
  get done() {
    return this.ins == -2;
  }
  get len2() {
    return this.ins < 0 ? this.len : this.ins;
  }
  get text() {
    let { inserted: e } = this.set, n = this.i - 2 >> 1;
    return n >= e.length ? ct.empty : e[n];
  }
  textBit(e) {
    let { inserted: n } = this.set, r = this.i - 2 >> 1;
    return r >= n.length && !e ? ct.empty : n[r].slice(this.off, e == null ? void 0 : this.off + e);
  }
  forward(e) {
    e == this.len ? this.next() : (this.len -= e, this.off += e);
  }
  forward2(e) {
    this.ins == -1 ? this.forward(e) : e == this.ins ? this.next() : (this.ins -= e, this.off += e);
  }
}
class ks {
  constructor(e, n, r) {
    this.from = e, this.to = n, this.flags = r;
  }
  /**
  The anchor of the range—the side that doesn't move when you
  extend it.
  */
  get anchor() {
    return this.flags & 32 ? this.to : this.from;
  }
  /**
  The head of the range, which is moved when the range is
  [extended](https://codemirror.net/6/docs/ref/#state.SelectionRange.extend).
  */
  get head() {
    return this.flags & 32 ? this.from : this.to;
  }
  /**
  True when `anchor` and `head` are at the same position.
  */
  get empty() {
    return this.from == this.to;
  }
  /**
  If this is a cursor that is explicitly associated with the
  character on one of its sides, this returns the side. -1 means
  the character before its position, 1 the character after, and 0
  means no association.
  */
  get assoc() {
    return this.flags & 8 ? -1 : this.flags & 16 ? 1 : 0;
  }
  /**
  The bidirectional text level associated with this cursor, if
  any.
  */
  get bidiLevel() {
    let e = this.flags & 7;
    return e == 7 ? null : e;
  }
  /**
  The goal column (stored vertical offset) associated with a
  cursor. This is used to preserve the vertical position when
  [moving](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) across
  lines of different length.
  */
  get goalColumn() {
    let e = this.flags >> 6;
    return e == 16777215 ? void 0 : e;
  }
  /**
  Map this range through a change, producing a valid range in the
  updated document.
  */
  map(e, n = -1) {
    let r, i;
    return this.empty ? r = i = e.mapPos(this.from, n) : (r = e.mapPos(this.from, 1), i = e.mapPos(this.to, -1)), r == this.from && i == this.to ? this : new ks(r, i, this.flags);
  }
  /**
  Extend this range to cover at least `from` to `to`.
  */
  extend(e, n = e) {
    if (e <= this.anchor && n >= this.anchor)
      return ne.range(e, n);
    let r = Math.abs(e - this.anchor) > Math.abs(n - this.anchor) ? e : n;
    return ne.range(this.anchor, r);
  }
  /**
  Compare this range to another range.
  */
  eq(e, n = !1) {
    return this.anchor == e.anchor && this.head == e.head && (!n || !this.empty || this.assoc == e.assoc);
  }
  /**
  Return a JSON-serializable object representing the range.
  */
  toJSON() {
    return { anchor: this.anchor, head: this.head };
  }
  /**
  Convert a JSON representation of a range to a `SelectionRange`
  instance.
  */
  static fromJSON(e) {
    if (!e || typeof e.anchor != "number" || typeof e.head != "number")
      throw new RangeError("Invalid JSON representation for SelectionRange");
    return ne.range(e.anchor, e.head);
  }
  /**
  @internal
  */
  static create(e, n, r) {
    return new ks(e, n, r);
  }
}
class ne {
  constructor(e, n) {
    this.ranges = e, this.mainIndex = n;
  }
  /**
  Map a selection through a change. Used to adjust the selection
  position for changes.
  */
  map(e, n = -1) {
    return e.empty ? this : ne.create(this.ranges.map((r) => r.map(e, n)), this.mainIndex);
  }
  /**
  Compare this selection to another selection. By default, ranges
  are compared only by position. When `includeAssoc` is true,
  cursor ranges must also have the same
  [`assoc`](https://codemirror.net/6/docs/ref/#state.SelectionRange.assoc) value.
  */
  eq(e, n = !1) {
    if (this.ranges.length != e.ranges.length || this.mainIndex != e.mainIndex)
      return !1;
    for (let r = 0; r < this.ranges.length; r++)
      if (!this.ranges[r].eq(e.ranges[r], n))
        return !1;
    return !0;
  }
  /**
  Get the primary selection range. Usually, you should make sure
  your code applies to _all_ ranges, by using methods like
  [`changeByRange`](https://codemirror.net/6/docs/ref/#state.EditorState.changeByRange).
  */
  get main() {
    return this.ranges[this.mainIndex];
  }
  /**
  Make sure the selection only has one range. Returns a selection
  holding only the main range from this selection.
  */
  asSingle() {
    return this.ranges.length == 1 ? this : new ne([this.main], 0);
  }
  /**
  Extend this selection with an extra range.
  */
  addRange(e, n = !0) {
    return ne.create([e].concat(this.ranges), n ? 0 : this.mainIndex + 1);
  }
  /**
  Replace a given range with another range, and then normalize the
  selection to merge and sort ranges if necessary.
  */
  replaceRange(e, n = this.mainIndex) {
    let r = this.ranges.slice();
    return r[n] = e, ne.create(r, this.mainIndex);
  }
  /**
  Convert this selection to an object that can be serialized to
  JSON.
  */
  toJSON() {
    return { ranges: this.ranges.map((e) => e.toJSON()), main: this.mainIndex };
  }
  /**
  Create a selection from a JSON representation.
  */
  static fromJSON(e) {
    if (!e || !Array.isArray(e.ranges) || typeof e.main != "number" || e.main >= e.ranges.length)
      throw new RangeError("Invalid JSON representation for EditorSelection");
    return new ne(e.ranges.map((n) => ks.fromJSON(n)), e.main);
  }
  /**
  Create a selection holding a single range.
  */
  static single(e, n = e) {
    return new ne([ne.range(e, n)], 0);
  }
  /**
  Sort and merge the given set of ranges, creating a valid
  selection.
  */
  static create(e, n = 0) {
    if (e.length == 0)
      throw new RangeError("A selection needs at least one range");
    for (let r = 0, i = 0; i < e.length; i++) {
      let s = e[i];
      if (s.empty ? s.from <= r : s.from < r)
        return ne.normalized(e.slice(), n);
      r = s.to;
    }
    return new ne(e, n);
  }
  /**
  Create a cursor selection range at the given position. You can
  safely ignore the optional arguments in most situations.
  */
  static cursor(e, n = 0, r, i) {
    return ks.create(e, e, (n == 0 ? 0 : n < 0 ? 8 : 16) | (r == null ? 7 : Math.min(6, r)) | (i ?? 16777215) << 6);
  }
  /**
  Create a selection range.
  */
  static range(e, n, r, i) {
    let s = (r ?? 16777215) << 6 | (i == null ? 7 : Math.min(6, i));
    return n < e ? ks.create(n, e, 48 | s) : ks.create(e, n, (n > e ? 8 : 0) | s);
  }
  /**
  @internal
  */
  static normalized(e, n = 0) {
    let r = e[n];
    e.sort((i, s) => i.from - s.from), n = e.indexOf(r);
    for (let i = 1; i < e.length; i++) {
      let s = e[i], a = e[i - 1];
      if (s.empty ? s.from <= a.to : s.from < a.to) {
        let o = a.from, l = Math.max(s.to, a.to);
        i <= n && n--, e.splice(--i, 2, s.anchor > s.head ? ne.range(l, o) : ne.range(o, l));
      }
    }
    return new ne(e, n);
  }
}
function Aw(t, e) {
  for (let n of t.ranges)
    if (n.to > e)
      throw new RangeError("Selection points outside of document");
}
let Md = 0;
class Ae {
  constructor(e, n, r, i, s) {
    this.combine = e, this.compareInput = n, this.compare = r, this.isStatic = i, this.id = Md++, this.default = e([]), this.extensions = typeof s == "function" ? s(this) : s;
  }
  /**
  Returns a facet reader for this facet, which can be used to
  [read](https://codemirror.net/6/docs/ref/#state.EditorState.facet) it but not to define values for it.
  */
  get reader() {
    return this;
  }
  /**
  Define a new facet.
  */
  static define(e = {}) {
    return new Ae(e.combine || ((n) => n), e.compareInput || ((n, r) => n === r), e.compare || (e.combine ? (n, r) => n === r : Qd), !!e.static, e.enables);
  }
  /**
  Returns an extension that adds the given value to this facet.
  */
  of(e) {
    return new eu([], this, 0, e);
  }
  /**
  Create an extension that computes a value for the facet from a
  state. You must take care to declare the parts of the state that
  this value depends on, since your function is only called again
  for a new state when one of those parts changed.
  
  In cases where your value depends only on a single field, you'll
  want to use the [`from`](https://codemirror.net/6/docs/ref/#state.Facet.from) method instead.
  */
  compute(e, n) {
    if (this.isStatic)
      throw new Error("Can't compute a static facet");
    return new eu(e, this, 1, n);
  }
  /**
  Create an extension that computes zero or more values for this
  facet from a state.
  */
  computeN(e, n) {
    if (this.isStatic)
      throw new Error("Can't compute a static facet");
    return new eu(e, this, 2, n);
  }
  from(e, n) {
    return n || (n = (r) => r), this.compute([e], (r) => n(r.field(e)));
  }
}
function Qd(t, e) {
  return t == e || t.length == e.length && t.every((n, r) => n === e[r]);
}
class eu {
  constructor(e, n, r, i) {
    this.dependencies = e, this.facet = n, this.type = r, this.value = i, this.id = Md++;
  }
  dynamicSlot(e) {
    var n;
    let r = this.value, i = this.facet.compareInput, s = this.id, a = e[s] >> 1, o = this.type == 2, l = !1, c = !1, h = [];
    for (let f of this.dependencies)
      f == "doc" ? l = !0 : f == "selection" ? c = !0 : ((n = e[f.id]) !== null && n !== void 0 ? n : 1) & 1 || h.push(e[f.id]);
    return {
      create(f) {
        return f.values[a] = r(f), 1;
      },
      update(f, m) {
        if (l && m.docChanged || c && (m.docChanged || m.selection) || Mp(f, h)) {
          let y = r(f);
          if (o ? !yg(y, f.values[a], i) : !i(y, f.values[a]))
            return f.values[a] = y, 1;
        }
        return 0;
      },
      reconfigure: (f, m) => {
        let y, x = m.config.address[s];
        if (x != null) {
          let C = ku(m, x);
          if (this.dependencies.every((S) => S instanceof Ae ? m.facet(S) === f.facet(S) : S instanceof Vt ? m.field(S, !1) == f.field(S, !1) : !0) || (o ? yg(y = r(f), C, i) : i(y = r(f), C)))
            return f.values[a] = C, 0;
        } else
          y = r(f);
        return f.values[a] = y, 1;
      }
    };
  }
}
function yg(t, e, n) {
  if (t.length != e.length)
    return !1;
  for (let r = 0; r < t.length; r++)
    if (!n(t[r], e[r]))
      return !1;
  return !0;
}
function Mp(t, e) {
  let n = !1;
  for (let r of e)
    fo(t, r) & 1 && (n = !0);
  return n;
}
function M4(t, e, n) {
  let r = n.map((l) => t[l.id]), i = n.map((l) => l.type), s = r.filter((l) => !(l & 1)), a = t[e.id] >> 1;
  function o(l) {
    let c = [];
    for (let h = 0; h < r.length; h++) {
      let f = ku(l, r[h]);
      if (i[h] == 2)
        for (let m of f)
          c.push(m);
      else
        c.push(f);
    }
    return e.combine(c);
  }
  return {
    create(l) {
      for (let c of r)
        fo(l, c);
      return l.values[a] = o(l), 1;
    },
    update(l, c) {
      if (!Mp(l, s))
        return 0;
      let h = o(l);
      return e.compare(h, l.values[a]) ? 0 : (l.values[a] = h, 1);
    },
    reconfigure(l, c) {
      let h = Mp(l, r), f = c.config.facets[e.id], m = c.facet(e);
      if (f && !h && Qd(n, f))
        return l.values[a] = m, 0;
      let y = o(l);
      return e.compare(y, m) ? (l.values[a] = m, 0) : (l.values[a] = y, 1);
    }
  };
}
const Og = /* @__PURE__ */ Ae.define({ static: !0 });
class Vt {
  constructor(e, n, r, i, s) {
    this.id = e, this.createF = n, this.updateF = r, this.compareF = i, this.spec = s, this.provides = void 0;
  }
  /**
  Define a state field.
  */
  static define(e) {
    let n = new Vt(Md++, e.create, e.update, e.compare || ((r, i) => r === i), e);
    return e.provide && (n.provides = e.provide(n)), n;
  }
  create(e) {
    let n = e.facet(Og).find((r) => r.field == this);
    return (n?.create || this.createF)(e);
  }
  /**
  @internal
  */
  slot(e) {
    let n = e[this.id] >> 1;
    return {
      create: (r) => (r.values[n] = this.create(r), 1),
      update: (r, i) => {
        let s = r.values[n], a = this.updateF(s, i);
        return this.compareF(s, a) ? 0 : (r.values[n] = a, 1);
      },
      reconfigure: (r, i) => i.config.address[this.id] != null ? (r.values[n] = i.field(this), 0) : (r.values[n] = this.create(r), 1)
    };
  }
  /**
  Returns an extension that enables this field and overrides the
  way it is initialized. Can be useful when you need to provide a
  non-default starting value for the field.
  */
  init(e) {
    return [this, Og.of({ field: this, create: e })];
  }
  /**
  State field instances can be used as
  [`Extension`](https://codemirror.net/6/docs/ref/#state.Extension) values to enable the field in a
  given state.
  */
  get extension() {
    return this;
  }
}
const Os = { lowest: 4, low: 3, default: 2, high: 1, highest: 0 };
function Ka(t) {
  return (e) => new Dw(e, t);
}
const Tr = {
  /**
  The highest precedence level, for extensions that should end up
  near the start of the precedence ordering.
  */
  highest: /* @__PURE__ */ Ka(Os.highest),
  /**
  A higher-than-default precedence, for extensions that should
  come before those with default precedence.
  */
  high: /* @__PURE__ */ Ka(Os.high),
  /**
  The default precedence, which is also used for extensions
  without an explicit precedence.
  */
  default: /* @__PURE__ */ Ka(Os.default),
  /**
  A lower-than-default precedence.
  */
  low: /* @__PURE__ */ Ka(Os.low),
  /**
  The lowest precedence level. Meant for things that should end up
  near the end of the extension order.
  */
  lowest: /* @__PURE__ */ Ka(Os.lowest)
};
class Dw {
  constructor(e, n) {
    this.inner = e, this.prec = n;
  }
}
class qo {
  /**
  Create an instance of this compartment to add to your [state
  configuration](https://codemirror.net/6/docs/ref/#state.EditorStateConfig.extensions).
  */
  of(e) {
    return new Qp(this, e);
  }
  /**
  Create an [effect](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) that
  reconfigures this compartment.
  */
  reconfigure(e) {
    return qo.reconfigure.of({ compartment: this, extension: e });
  }
  /**
  Get the current content of the compartment in the state, or
  `undefined` if it isn't present.
  */
  get(e) {
    return e.config.compartments.get(this);
  }
}
class Qp {
  constructor(e, n) {
    this.compartment = e, this.inner = n;
  }
}
class xu {
  constructor(e, n, r, i, s, a) {
    for (this.base = e, this.compartments = n, this.dynamicSlots = r, this.address = i, this.staticValues = s, this.facets = a, this.statusTemplate = []; this.statusTemplate.length < r.length; )
      this.statusTemplate.push(
        0
        /* SlotStatus.Unresolved */
      );
  }
  staticFacet(e) {
    let n = this.address[e.id];
    return n == null ? e.default : this.staticValues[n >> 1];
  }
  static resolve(e, n, r) {
    let i = [], s = /* @__PURE__ */ Object.create(null), a = /* @__PURE__ */ new Map();
    for (let m of Q4(e, n, a))
      m instanceof Vt ? i.push(m) : (s[m.facet.id] || (s[m.facet.id] = [])).push(m);
    let o = /* @__PURE__ */ Object.create(null), l = [], c = [];
    for (let m of i)
      o[m.id] = c.length << 1, c.push((y) => m.slot(y));
    let h = r?.config.facets;
    for (let m in s) {
      let y = s[m], x = y[0].facet, C = h && h[m] || [];
      if (y.every(
        (S) => S.type == 0
        /* Provider.Static */
      ))
        if (o[x.id] = l.length << 1 | 1, Qd(C, y))
          l.push(r.facet(x));
        else {
          let S = x.combine(y.map((M) => M.value));
          l.push(r && x.compare(S, r.facet(x)) ? r.facet(x) : S);
        }
      else {
        for (let S of y)
          S.type == 0 ? (o[S.id] = l.length << 1 | 1, l.push(S.value)) : (o[S.id] = c.length << 1, c.push((M) => S.dynamicSlot(M)));
        o[x.id] = c.length << 1, c.push((S) => M4(S, x, y));
      }
    }
    let f = c.map((m) => m(o));
    return new xu(e, a, f, o, l, s);
  }
}
function Q4(t, e, n) {
  let r = [[], [], [], [], []], i = /* @__PURE__ */ new Map();
  function s(a, o) {
    let l = i.get(a);
    if (l != null) {
      if (l <= o)
        return;
      let c = r[l].indexOf(a);
      c > -1 && r[l].splice(c, 1), a instanceof Qp && n.delete(a.compartment);
    }
    if (i.set(a, o), Array.isArray(a))
      for (let c of a)
        s(c, o);
    else if (a instanceof Qp) {
      if (n.has(a.compartment))
        throw new RangeError("Duplicate use of compartment in extensions");
      let c = e.get(a.compartment) || a.inner;
      n.set(a.compartment, c), s(c, o);
    } else if (a instanceof Dw)
      s(a.inner, a.prec);
    else if (a instanceof Vt)
      r[o].push(a), a.provides && s(a.provides, o);
    else if (a instanceof eu)
      r[o].push(a), a.facet.extensions && s(a.facet.extensions, Os.default);
    else {
      let c = a.extension;
      if (!c)
        throw new Error(`Unrecognized extension value in extension set (${a}). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks.`);
      s(c, o);
    }
  }
  return s(t, Os.default), r.reduce((a, o) => a.concat(o));
}
function fo(t, e) {
  if (e & 1)
    return 2;
  let n = e >> 1, r = t.status[n];
  if (r == 4)
    throw new Error("Cyclic dependency between fields and/or facets");
  if (r & 2)
    return r;
  t.status[n] = 4;
  let i = t.computeSlot(t, t.config.dynamicSlots[n]);
  return t.status[n] = 2 | i;
}
function ku(t, e) {
  return e & 1 ? t.config.staticValues[e >> 1] : t.values[e >> 1];
}
const Pw = /* @__PURE__ */ Ae.define(), Tp = /* @__PURE__ */ Ae.define({
  combine: (t) => t.some((e) => e),
  static: !0
}), Ew = /* @__PURE__ */ Ae.define({
  combine: (t) => t.length ? t[0] : void 0,
  static: !0
}), Fw = /* @__PURE__ */ Ae.define(), Bw = /* @__PURE__ */ Ae.define(), Mw = /* @__PURE__ */ Ae.define(), Qw = /* @__PURE__ */ Ae.define({
  combine: (t) => t.length ? t[0] : !1
});
class _i {
  /**
  @internal
  */
  constructor(e, n) {
    this.type = e, this.value = n;
  }
  /**
  Define a new type of annotation.
  */
  static define() {
    return new T4();
  }
}
class T4 {
  /**
  Create an instance of this annotation.
  */
  of(e) {
    return new _i(this, e);
  }
}
class j4 {
  /**
  @internal
  */
  constructor(e) {
    this.map = e;
  }
  /**
  Create a [state effect](https://codemirror.net/6/docs/ref/#state.StateEffect) instance of this
  type.
  */
  of(e) {
    return new Ie(this, e);
  }
}
class Ie {
  /**
  @internal
  */
  constructor(e, n) {
    this.type = e, this.value = n;
  }
  /**
  Map this effect through a position mapping. Will return
  `undefined` when that ends up deleting the effect.
  */
  map(e) {
    let n = this.type.map(this.value, e);
    return n === void 0 ? void 0 : n == this.value ? this : new Ie(this.type, n);
  }
  /**
  Tells you whether this effect object is of a given
  [type](https://codemirror.net/6/docs/ref/#state.StateEffectType).
  */
  is(e) {
    return this.type == e;
  }
  /**
  Define a new effect type. The type parameter indicates the type
  of values that his effect holds. It should be a type that
  doesn't include `undefined`, since that is used in
  [mapping](https://codemirror.net/6/docs/ref/#state.StateEffect.map) to indicate that an effect is
  removed.
  */
  static define(e = {}) {
    return new j4(e.map || ((n) => n));
  }
  /**
  Map an array of effects through a change set.
  */
  static mapEffects(e, n) {
    if (!e.length)
      return e;
    let r = [];
    for (let i of e) {
      let s = i.map(n);
      s && r.push(s);
    }
    return r;
  }
}
Ie.reconfigure = /* @__PURE__ */ Ie.define();
Ie.appendConfig = /* @__PURE__ */ Ie.define();
class sn {
  constructor(e, n, r, i, s, a) {
    this.startState = e, this.changes = n, this.selection = r, this.effects = i, this.annotations = s, this.scrollIntoView = a, this._doc = null, this._state = null, r && Aw(r, n.newLength), s.some((o) => o.type == sn.time) || (this.annotations = s.concat(sn.time.of(Date.now())));
  }
  /**
  @internal
  */
  static create(e, n, r, i, s, a) {
    return new sn(e, n, r, i, s, a);
  }
  /**
  The new document produced by the transaction. Contrary to
  [`.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state)`.doc`, accessing this won't
  force the entire new state to be computed right away, so it is
  recommended that [transaction
  filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) use this getter
  when they need to look at the new document.
  */
  get newDoc() {
    return this._doc || (this._doc = this.changes.apply(this.startState.doc));
  }
  /**
  The new selection produced by the transaction. If
  [`this.selection`](https://codemirror.net/6/docs/ref/#state.Transaction.selection) is undefined,
  this will [map](https://codemirror.net/6/docs/ref/#state.EditorSelection.map) the start state's
  current selection through the changes made by the transaction.
  */
  get newSelection() {
    return this.selection || this.startState.selection.map(this.changes);
  }
  /**
  The new state created by the transaction. Computed on demand
  (but retained for subsequent access), so it is recommended not to
  access it in [transaction
  filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) when possible.
  */
  get state() {
    return this._state || this.startState.applyTransaction(this), this._state;
  }
  /**
  Get the value of the given annotation type, if any.
  */
  annotation(e) {
    for (let n of this.annotations)
      if (n.type == e)
        return n.value;
  }
  /**
  Indicates whether the transaction changed the document.
  */
  get docChanged() {
    return !this.changes.empty;
  }
  /**
  Indicates whether this transaction reconfigures the state
  (through a [configuration compartment](https://codemirror.net/6/docs/ref/#state.Compartment) or
  with a top-level configuration
  [effect](https://codemirror.net/6/docs/ref/#state.StateEffect^reconfigure).
  */
  get reconfigured() {
    return this.startState.config != this.state.config;
  }
  /**
  Returns true if the transaction has a [user
  event](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent) annotation that is equal to
  or more specific than `event`. For example, if the transaction
  has `"select.pointer"` as user event, `"select"` and
  `"select.pointer"` will match it.
  */
  isUserEvent(e) {
    let n = this.annotation(sn.userEvent);
    return !!(n && (n == e || n.length > e.length && n.slice(0, e.length) == e && n[e.length] == "."));
  }
}
sn.time = /* @__PURE__ */ _i.define();
sn.userEvent = /* @__PURE__ */ _i.define();
sn.addToHistory = /* @__PURE__ */ _i.define();
sn.remote = /* @__PURE__ */ _i.define();
function _4(t, e) {
  let n = [];
  for (let r = 0, i = 0; ; ) {
    let s, a;
    if (r < t.length && (i == e.length || e[i] >= t[r]))
      s = t[r++], a = t[r++];
    else if (i < e.length)
      s = e[i++], a = e[i++];
    else
      return n;
    !n.length || n[n.length - 1] < s ? n.push(s, a) : n[n.length - 1] < a && (n[n.length - 1] = a);
  }
}
function Tw(t, e, n) {
  var r;
  let i, s, a;
  return n ? (i = e.changes, s = un.empty(e.changes.length), a = t.changes.compose(e.changes)) : (i = e.changes.map(t.changes), s = t.changes.mapDesc(e.changes, !0), a = t.changes.compose(i)), {
    changes: a,
    selection: e.selection ? e.selection.map(s) : (r = t.selection) === null || r === void 0 ? void 0 : r.map(i),
    effects: Ie.mapEffects(t.effects, i).concat(Ie.mapEffects(e.effects, s)),
    annotations: t.annotations.length ? t.annotations.concat(e.annotations) : e.annotations,
    scrollIntoView: t.scrollIntoView || e.scrollIntoView
  };
}
function jp(t, e, n) {
  let r = e.selection, i = ia(e.annotations);
  return e.userEvent && (i = i.concat(sn.userEvent.of(e.userEvent))), {
    changes: e.changes instanceof un ? e.changes : un.of(e.changes || [], n, t.facet(Ew)),
    selection: r && (r instanceof ne ? r : ne.single(r.anchor, r.head)),
    effects: ia(e.effects),
    annotations: i,
    scrollIntoView: !!e.scrollIntoView
  };
}
function jw(t, e, n) {
  let r = jp(t, e.length ? e[0] : {}, t.doc.length);
  e.length && e[0].filter === !1 && (n = !1);
  for (let s = 1; s < e.length; s++) {
    e[s].filter === !1 && (n = !1);
    let a = !!e[s].sequential;
    r = Tw(r, jp(t, e[s], a ? r.changes.newLength : t.doc.length), a);
  }
  let i = sn.create(t, r.changes, r.selection, r.effects, r.annotations, r.scrollIntoView);
  return $4(n ? R4(i) : i);
}
function R4(t) {
  let e = t.startState, n = !0;
  for (let i of e.facet(Fw)) {
    let s = i(t);
    if (s === !1) {
      n = !1;
      break;
    }
    Array.isArray(s) && (n = n === !0 ? s : _4(n, s));
  }
  if (n !== !0) {
    let i, s;
    if (n === !1)
      s = t.changes.invertedDesc, i = un.empty(e.doc.length);
    else {
      let a = t.changes.filter(n);
      i = a.changes, s = a.filtered.mapDesc(a.changes).invertedDesc;
    }
    t = sn.create(e, i, t.selection && t.selection.map(s), Ie.mapEffects(t.effects, s), t.annotations, t.scrollIntoView);
  }
  let r = e.facet(Bw);
  for (let i = r.length - 1; i >= 0; i--) {
    let s = r[i](t);
    s instanceof sn ? t = s : Array.isArray(s) && s.length == 1 && s[0] instanceof sn ? t = s[0] : t = jw(e, ia(s), !1);
  }
  return t;
}
function $4(t) {
  let e = t.startState, n = e.facet(Mw), r = t;
  for (let i = n.length - 1; i >= 0; i--) {
    let s = n[i](t);
    s && Object.keys(s).length && (r = Tw(r, jp(e, s, t.changes.newLength), !0));
  }
  return r == t ? t : sn.create(e, t.changes, t.selection, r.effects, r.annotations, r.scrollIntoView);
}
const Z4 = [];
function ia(t) {
  return t == null ? Z4 : Array.isArray(t) ? t : [t];
}
var an = /* @__PURE__ */ function(t) {
  return t[t.Word = 0] = "Word", t[t.Space = 1] = "Space", t[t.Other = 2] = "Other", t;
}(an || (an = {}));
const L4 = /[\u00df\u0587\u0590-\u05f4\u0600-\u06ff\u3040-\u309f\u30a0-\u30ff\u3400-\u4db5\u4e00-\u9fcc\uac00-\ud7af]/;
let _p;
try {
  _p = /* @__PURE__ */ new RegExp("[\\p{Alphabetic}\\p{Number}_]", "u");
} catch {
}
function I4(t) {
  if (_p)
    return _p.test(t);
  for (let e = 0; e < t.length; e++) {
    let n = t[e];
    if (/\w/.test(n) || n > "" && (n.toUpperCase() != n.toLowerCase() || L4.test(n)))
      return !0;
  }
  return !1;
}
function N4(t) {
  return (e) => {
    if (!/\S/.test(e))
      return an.Space;
    if (I4(e))
      return an.Word;
    for (let n = 0; n < t.length; n++)
      if (e.indexOf(t[n]) > -1)
        return an.Word;
    return an.Other;
  };
}
class dt {
  constructor(e, n, r, i, s, a) {
    this.config = e, this.doc = n, this.selection = r, this.values = i, this.status = e.statusTemplate.slice(), this.computeSlot = s, a && (a._state = this);
    for (let o = 0; o < this.config.dynamicSlots.length; o++)
      fo(this, o << 1);
    this.computeSlot = null;
  }
  field(e, n = !0) {
    let r = this.config.address[e.id];
    if (r == null) {
      if (n)
        throw new RangeError("Field is not present in this state");
      return;
    }
    return fo(this, r), ku(this, r);
  }
  /**
  Create a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction) that updates this
  state. Any number of [transaction specs](https://codemirror.net/6/docs/ref/#state.TransactionSpec)
  can be passed. Unless
  [`sequential`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.sequential) is set, the
  [changes](https://codemirror.net/6/docs/ref/#state.TransactionSpec.changes) (if any) of each spec
  are assumed to start in the _current_ document (not the document
  produced by previous specs), and its
  [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) and
  [effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) are assumed to refer
  to the document created by its _own_ changes. The resulting
  transaction contains the combined effect of all the different
  specs. For [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection), later
  specs take precedence over earlier ones.
  */
  update(...e) {
    return jw(this, e, !0);
  }
  /**
  @internal
  */
  applyTransaction(e) {
    let n = this.config, { base: r, compartments: i } = n;
    for (let o of e.effects)
      o.is(qo.reconfigure) ? (n && (i = /* @__PURE__ */ new Map(), n.compartments.forEach((l, c) => i.set(c, l)), n = null), i.set(o.value.compartment, o.value.extension)) : o.is(Ie.reconfigure) ? (n = null, r = o.value) : o.is(Ie.appendConfig) && (n = null, r = ia(r).concat(o.value));
    let s;
    n ? s = e.startState.values.slice() : (n = xu.resolve(r, i, this), s = new dt(n, this.doc, this.selection, n.dynamicSlots.map(() => null), (l, c) => c.reconfigure(l, this), null).values);
    let a = e.startState.facet(Tp) ? e.newSelection : e.newSelection.asSingle();
    new dt(n, e.newDoc, a, s, (o, l) => l.update(o, e), e);
  }
  /**
  Create a [transaction spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec) that
  replaces every selection range with the given content.
  */
  replaceSelection(e) {
    return typeof e == "string" && (e = this.toText(e)), this.changeByRange((n) => ({
      changes: { from: n.from, to: n.to, insert: e },
      range: ne.cursor(n.from + e.length)
    }));
  }
  /**
  Create a set of changes and a new selection by running the given
  function for each range in the active selection. The function
  can return an optional set of changes (in the coordinate space
  of the start document), plus an updated range (in the coordinate
  space of the document produced by the call's own changes). This
  method will merge all the changes and ranges into a single
  changeset and selection, and return it as a [transaction
  spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec), which can be passed to
  [`update`](https://codemirror.net/6/docs/ref/#state.EditorState.update).
  */
  changeByRange(e) {
    let n = this.selection, r = e(n.ranges[0]), i = this.changes(r.changes), s = [r.range], a = ia(r.effects);
    for (let o = 1; o < n.ranges.length; o++) {
      let l = e(n.ranges[o]), c = this.changes(l.changes), h = c.map(i);
      for (let m = 0; m < o; m++)
        s[m] = s[m].map(h);
      let f = i.mapDesc(c, !0);
      s.push(l.range.map(f)), i = i.compose(h), a = Ie.mapEffects(a, h).concat(Ie.mapEffects(ia(l.effects), f));
    }
    return {
      changes: i,
      selection: ne.create(s, n.mainIndex),
      effects: a
    };
  }
  /**
  Create a [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet) from the given change
  description, taking the state's document length and line
  separator into account.
  */
  changes(e = []) {
    return e instanceof un ? e : un.of(e, this.doc.length, this.facet(dt.lineSeparator));
  }
  /**
  Using the state's [line
  separator](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator), create a
  [`Text`](https://codemirror.net/6/docs/ref/#state.Text) instance from the given string.
  */
  toText(e) {
    return ct.of(e.split(this.facet(dt.lineSeparator) || Ep));
  }
  /**
  Return the given range of the document as a string.
  */
  sliceDoc(e = 0, n = this.doc.length) {
    return this.doc.sliceString(e, n, this.lineBreak);
  }
  /**
  Get the value of a state [facet](https://codemirror.net/6/docs/ref/#state.Facet).
  */
  facet(e) {
    let n = this.config.address[e.id];
    return n == null ? e.default : (fo(this, n), ku(this, n));
  }
  /**
  Convert this state to a JSON-serializable object. When custom
  fields should be serialized, you can pass them in as an object
  mapping property names (in the resulting object, which should
  not use `doc` or `selection`) to fields.
  */
  toJSON(e) {
    let n = {
      doc: this.sliceDoc(),
      selection: this.selection.toJSON()
    };
    if (e)
      for (let r in e) {
        let i = e[r];
        i instanceof Vt && this.config.address[i.id] != null && (n[r] = i.spec.toJSON(this.field(e[r]), this));
      }
    return n;
  }
  /**
  Deserialize a state from its JSON representation. When custom
  fields should be deserialized, pass the same object you passed
  to [`toJSON`](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) when serializing as
  third argument.
  */
  static fromJSON(e, n = {}, r) {
    if (!e || typeof e.doc != "string")
      throw new RangeError("Invalid JSON representation for EditorState");
    let i = [];
    if (r) {
      for (let s in r)
        if (Object.prototype.hasOwnProperty.call(e, s)) {
          let a = r[s], o = e[s];
          i.push(a.init((l) => a.spec.fromJSON(o, l)));
        }
    }
    return dt.create({
      doc: e.doc,
      selection: ne.fromJSON(e.selection),
      extensions: n.extensions ? i.concat([n.extensions]) : i
    });
  }
  /**
  Create a new state. You'll usually only need this when
  initializing an editor—updated states are created by applying
  transactions.
  */
  static create(e = {}) {
    let n = xu.resolve(e.extensions || [], /* @__PURE__ */ new Map()), r = e.doc instanceof ct ? e.doc : ct.of((e.doc || "").split(n.staticFacet(dt.lineSeparator) || Ep)), i = e.selection ? e.selection instanceof ne ? e.selection : ne.single(e.selection.anchor, e.selection.head) : ne.single(0);
    return Aw(i, r.length), n.staticFacet(Tp) || (i = i.asSingle()), new dt(n, r, i, n.dynamicSlots.map(() => null), (s, a) => a.create(s), null);
  }
  /**
  The size (in columns) of a tab in the document, determined by
  the [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) facet.
  */
  get tabSize() {
    return this.facet(dt.tabSize);
  }
  /**
  Get the proper [line-break](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator)
  string for this state.
  */
  get lineBreak() {
    return this.facet(dt.lineSeparator) || `
`;
  }
  /**
  Returns true when the editor is
  [configured](https://codemirror.net/6/docs/ref/#state.EditorState^readOnly) to be read-only.
  */
  get readOnly() {
    return this.facet(Qw);
  }
  /**
  Look up a translation for the given phrase (via the
  [`phrases`](https://codemirror.net/6/docs/ref/#state.EditorState^phrases) facet), or return the
  original string if no translation is found.
  
  If additional arguments are passed, they will be inserted in
  place of markers like `$1` (for the first value) and `$2`, etc.
  A single `$` is equivalent to `$1`, and `$$` will produce a
  literal dollar sign.
  */
  phrase(e, ...n) {
    for (let r of this.facet(dt.phrases))
      if (Object.prototype.hasOwnProperty.call(r, e)) {
        e = r[e];
        break;
      }
    return n.length && (e = e.replace(/\$(\$|\d*)/g, (r, i) => {
      if (i == "$")
        return "$";
      let s = +(i || 1);
      return !s || s > n.length ? r : n[s - 1];
    })), e;
  }
  /**
  Find the values for a given language data field, provided by the
  the [`languageData`](https://codemirror.net/6/docs/ref/#state.EditorState^languageData) facet.
  
  Examples of language data fields are...
  
  - [`"commentTokens"`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) for specifying
    comment syntax.
  - [`"autocomplete"`](https://codemirror.net/6/docs/ref/#autocomplete.autocompletion^config.override)
    for providing language-specific completion sources.
  - [`"wordChars"`](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) for adding
    characters that should be considered part of words in this
    language.
  - [`"closeBrackets"`](https://codemirror.net/6/docs/ref/#autocomplete.CloseBracketConfig) controls
    bracket closing behavior.
  */
  languageDataAt(e, n, r = -1) {
    let i = [];
    for (let s of this.facet(Pw))
      for (let a of s(this, n, r))
        Object.prototype.hasOwnProperty.call(a, e) && i.push(a[e]);
    return i;
  }
  /**
  Return a function that can categorize strings (expected to
  represent a single [grapheme cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak))
  into one of:
  
   - Word (contains an alphanumeric character or a character
     explicitly listed in the local language's `"wordChars"`
     language data, which should be a string)
   - Space (contains only whitespace)
   - Other (anything else)
  */
  charCategorizer(e) {
    return N4(this.languageDataAt("wordChars", e).join(""));
  }
  /**
  Find the word at the given position, meaning the range
  containing all [word](https://codemirror.net/6/docs/ref/#state.CharCategory.Word) characters
  around it. If no word characters are adjacent to the position,
  this returns null.
  */
  wordAt(e) {
    let { text: n, from: r, length: i } = this.doc.lineAt(e), s = this.charCategorizer(e), a = e - r, o = e - r;
    for (; a > 0; ) {
      let l = Cn(n, a, !1);
      if (s(n.slice(l, a)) != an.Word)
        break;
      a = l;
    }
    for (; o < i; ) {
      let l = Cn(n, o);
      if (s(n.slice(o, l)) != an.Word)
        break;
      o = l;
    }
    return a == o ? null : ne.range(a + r, o + r);
  }
}
dt.allowMultipleSelections = Tp;
dt.tabSize = /* @__PURE__ */ Ae.define({
  combine: (t) => t.length ? t[0] : 4
});
dt.lineSeparator = Ew;
dt.readOnly = Qw;
dt.phrases = /* @__PURE__ */ Ae.define({
  compare(t, e) {
    let n = Object.keys(t), r = Object.keys(e);
    return n.length == r.length && n.every((i) => t[i] == e[i]);
  }
});
dt.languageData = Pw;
dt.changeFilter = Fw;
dt.transactionFilter = Bw;
dt.transactionExtender = Mw;
qo.reconfigure = /* @__PURE__ */ Ie.define();
function os(t, e, n = {}) {
  let r = {};
  for (let i of t)
    for (let s of Object.keys(i)) {
      let a = i[s], o = r[s];
      if (o === void 0)
        r[s] = a;
      else if (!(o === a || a === void 0)) if (Object.hasOwnProperty.call(n, s))
        r[s] = n[s](o, a);
      else
        throw new Error("Config merge conflict for field " + s);
    }
  for (let i in e)
    r[i] === void 0 && (r[i] = e[i]);
  return r;
}
class Bs {
  /**
  Compare this value with another value. Used when comparing
  rangesets. The default implementation compares by identity.
  Unless you are only creating a fixed number of unique instances
  of your value type, it is a good idea to implement this
  properly.
  */
  eq(e) {
    return this == e;
  }
  /**
  Create a [range](https://codemirror.net/6/docs/ref/#state.Range) with this value.
  */
  range(e, n = e) {
    return Rp.create(e, n, this);
  }
}
Bs.prototype.startSide = Bs.prototype.endSide = 0;
Bs.prototype.point = !1;
Bs.prototype.mapMode = rn.TrackDel;
let Rp = class _w {
  constructor(e, n, r) {
    this.from = e, this.to = n, this.value = r;
  }
  /**
  @internal
  */
  static create(e, n, r) {
    return new _w(e, n, r);
  }
};
function $p(t, e) {
  return t.from - e.from || t.value.startSide - e.value.startSide;
}
class Td {
  constructor(e, n, r, i) {
    this.from = e, this.to = n, this.value = r, this.maxPoint = i;
  }
  get length() {
    return this.to[this.to.length - 1];
  }
  // Find the index of the given position and side. Use the ranges'
  // `from` pos when `end == false`, `to` when `end == true`.
  findIndex(e, n, r, i = 0) {
    let s = r ? this.to : this.from;
    for (let a = i, o = s.length; ; ) {
      if (a == o)
        return a;
      let l = a + o >> 1, c = s[l] - e || (r ? this.value[l].endSide : this.value[l].startSide) - n;
      if (l == a)
        return c >= 0 ? a : o;
      c >= 0 ? o = l : a = l + 1;
    }
  }
  between(e, n, r, i) {
    for (let s = this.findIndex(n, -1e9, !0), a = this.findIndex(r, 1e9, !1, s); s < a; s++)
      if (i(this.from[s] + e, this.to[s] + e, this.value[s]) === !1)
        return !1;
  }
  map(e, n) {
    let r = [], i = [], s = [], a = -1, o = -1;
    for (let l = 0; l < this.value.length; l++) {
      let c = this.value[l], h = this.from[l] + e, f = this.to[l] + e, m, y;
      if (h == f) {
        let x = n.mapPos(h, c.startSide, c.mapMode);
        if (x == null || (m = y = x, c.startSide != c.endSide && (y = n.mapPos(h, c.endSide), y < m)))
          continue;
      } else if (m = n.mapPos(h, c.startSide), y = n.mapPos(f, c.endSide), m > y || m == y && c.startSide > 0 && c.endSide <= 0)
        continue;
      (y - m || c.endSide - c.startSide) < 0 || (a < 0 && (a = m), c.point && (o = Math.max(o, y - m)), r.push(c), i.push(m - a), s.push(y - a));
    }
    return { mapped: r.length ? new Td(i, s, r, o) : null, pos: a };
  }
}
class mt {
  constructor(e, n, r, i) {
    this.chunkPos = e, this.chunk = n, this.nextLayer = r, this.maxPoint = i;
  }
  /**
  @internal
  */
  static create(e, n, r, i) {
    return new mt(e, n, r, i);
  }
  /**
  @internal
  */
  get length() {
    let e = this.chunk.length - 1;
    return e < 0 ? 0 : Math.max(this.chunkEnd(e), this.nextLayer.length);
  }
  /**
  The number of ranges in the set.
  */
  get size() {
    if (this.isEmpty)
      return 0;
    let e = this.nextLayer.size;
    for (let n of this.chunk)
      e += n.value.length;
    return e;
  }
  /**
  @internal
  */
  chunkEnd(e) {
    return this.chunkPos[e] + this.chunk[e].length;
  }
  /**
  Update the range set, optionally adding new ranges or filtering
  out existing ones.
  
  (Note: The type parameter is just there as a kludge to work
  around TypeScript variance issues that prevented `RangeSet<X>`
  from being a subtype of `RangeSet<Y>` when `X` is a subtype of
  `Y`.)
  */
  update(e) {
    let { add: n = [], sort: r = !1, filterFrom: i = 0, filterTo: s = this.length } = e, a = e.filter;
    if (n.length == 0 && !a)
      return this;
    if (r && (n = n.slice().sort($p)), this.isEmpty)
      return n.length ? mt.of(n) : this;
    let o = new Rw(this, null, -1).goto(0), l = 0, c = [], h = new Mi();
    for (; o.value || l < n.length; )
      if (l < n.length && (o.from - n[l].from || o.startSide - n[l].value.startSide) >= 0) {
        let f = n[l++];
        h.addInner(f.from, f.to, f.value) || c.push(f);
      } else o.rangeIndex == 1 && o.chunkIndex < this.chunk.length && (l == n.length || this.chunkEnd(o.chunkIndex) < n[l].from) && (!a || i > this.chunkEnd(o.chunkIndex) || s < this.chunkPos[o.chunkIndex]) && h.addChunk(this.chunkPos[o.chunkIndex], this.chunk[o.chunkIndex]) ? o.nextChunk() : ((!a || i > o.to || s < o.from || a(o.from, o.to, o.value)) && (h.addInner(o.from, o.to, o.value) || c.push(Rp.create(o.from, o.to, o.value))), o.next());
    return h.finishInner(this.nextLayer.isEmpty && !c.length ? mt.empty : this.nextLayer.update({ add: c, filter: a, filterFrom: i, filterTo: s }));
  }
  /**
  Map this range set through a set of changes, return the new set.
  */
  map(e) {
    if (e.empty || this.isEmpty)
      return this;
    let n = [], r = [], i = -1;
    for (let a = 0; a < this.chunk.length; a++) {
      let o = this.chunkPos[a], l = this.chunk[a], c = e.touchesRange(o, o + l.length);
      if (c === !1)
        i = Math.max(i, l.maxPoint), n.push(l), r.push(e.mapPos(o));
      else if (c === !0) {
        let { mapped: h, pos: f } = l.map(o, e);
        h && (i = Math.max(i, h.maxPoint), n.push(h), r.push(f));
      }
    }
    let s = this.nextLayer.map(e);
    return n.length == 0 ? s : new mt(r, n, s || mt.empty, i);
  }
  /**
  Iterate over the ranges that touch the region `from` to `to`,
  calling `f` for each. There is no guarantee that the ranges will
  be reported in any specific order. When the callback returns
  `false`, iteration stops.
  */
  between(e, n, r) {
    if (!this.isEmpty) {
      for (let i = 0; i < this.chunk.length; i++) {
        let s = this.chunkPos[i], a = this.chunk[i];
        if (n >= s && e <= s + a.length && a.between(s, e - s, n - s, r) === !1)
          return;
      }
      this.nextLayer.between(e, n, r);
    }
  }
  /**
  Iterate over the ranges in this set, in order, including all
  ranges that end at or after `from`.
  */
  iter(e = 0) {
    return Co.from([this]).goto(e);
  }
  /**
  @internal
  */
  get isEmpty() {
    return this.nextLayer == this;
  }
  /**
  Iterate over the ranges in a collection of sets, in order,
  starting from `from`.
  */
  static iter(e, n = 0) {
    return Co.from(e).goto(n);
  }
  /**
  Iterate over two groups of sets, calling methods on `comparator`
  to notify it of possible differences.
  */
  static compare(e, n, r, i, s = -1) {
    let a = e.filter((f) => f.maxPoint > 0 || !f.isEmpty && f.maxPoint >= s), o = n.filter((f) => f.maxPoint > 0 || !f.isEmpty && f.maxPoint >= s), l = vg(a, o, r), c = new Ja(a, l, s), h = new Ja(o, l, s);
    r.iterGaps((f, m, y) => xg(c, f, h, m, y, i)), r.empty && r.length == 0 && xg(c, 0, h, 0, 0, i);
  }
  /**
  Compare the contents of two groups of range sets, returning true
  if they are equivalent in the given range.
  */
  static eq(e, n, r = 0, i) {
    i == null && (i = 999999999);
    let s = e.filter((h) => !h.isEmpty && n.indexOf(h) < 0), a = n.filter((h) => !h.isEmpty && e.indexOf(h) < 0);
    if (s.length != a.length)
      return !1;
    if (!s.length)
      return !0;
    let o = vg(s, a), l = new Ja(s, o, 0).goto(r), c = new Ja(a, o, 0).goto(r);
    for (; ; ) {
      if (l.to != c.to || !Zp(l.active, c.active) || l.point && (!c.point || !l.point.eq(c.point)))
        return !1;
      if (l.to > i)
        return !0;
      l.next(), c.next();
    }
  }
  /**
  Iterate over a group of range sets at the same time, notifying
  the iterator about the ranges covering every given piece of
  content. Returns the open count (see
  [`SpanIterator.span`](https://codemirror.net/6/docs/ref/#state.SpanIterator.span)) at the end
  of the iteration.
  */
  static spans(e, n, r, i, s = -1) {
    let a = new Ja(e, null, s).goto(n), o = n, l = a.openStart;
    for (; ; ) {
      let c = Math.min(a.to, r);
      if (a.point) {
        let h = a.activeForPoint(a.to), f = a.pointFrom < n ? h.length + 1 : a.point.startSide < 0 ? h.length : Math.min(h.length, l);
        i.point(o, c, a.point, h, f, a.pointRank), l = Math.min(a.openEnd(c), h.length);
      } else c > o && (i.span(o, c, a.active, l), l = a.openEnd(c));
      if (a.to > r)
        return l + (a.point && a.to > r ? 1 : 0);
      o = a.to, a.next();
    }
  }
  /**
  Create a range set for the given range or array of ranges. By
  default, this expects the ranges to be _sorted_ (by start
  position and, if two start at the same position,
  `value.startSide`). You can pass `true` as second argument to
  cause the method to sort them.
  */
  static of(e, n = !1) {
    let r = new Mi();
    for (let i of e instanceof Rp ? [e] : n ? V4(e) : e)
      r.add(i.from, i.to, i.value);
    return r.finish();
  }
  /**
  Join an array of range sets into a single set.
  */
  static join(e) {
    if (!e.length)
      return mt.empty;
    let n = e[e.length - 1];
    for (let r = e.length - 2; r >= 0; r--)
      for (let i = e[r]; i != mt.empty; i = i.nextLayer)
        n = new mt(i.chunkPos, i.chunk, n, Math.max(i.maxPoint, n.maxPoint));
    return n;
  }
}
mt.empty = /* @__PURE__ */ new mt([], [], null, -1);
function V4(t) {
  if (t.length > 1)
    for (let e = t[0], n = 1; n < t.length; n++) {
      let r = t[n];
      if ($p(e, r) > 0)
        return t.slice().sort($p);
      e = r;
    }
  return t;
}
mt.empty.nextLayer = mt.empty;
class Mi {
  finishChunk(e) {
    this.chunks.push(new Td(this.from, this.to, this.value, this.maxPoint)), this.chunkPos.push(this.chunkStart), this.chunkStart = -1, this.setMaxPoint = Math.max(this.setMaxPoint, this.maxPoint), this.maxPoint = -1, e && (this.from = [], this.to = [], this.value = []);
  }
  /**
  Create an empty builder.
  */
  constructor() {
    this.chunks = [], this.chunkPos = [], this.chunkStart = -1, this.last = null, this.lastFrom = -1e9, this.lastTo = -1e9, this.from = [], this.to = [], this.value = [], this.maxPoint = -1, this.setMaxPoint = -1, this.nextLayer = null;
  }
  /**
  Add a range. Ranges should be added in sorted (by `from` and
  `value.startSide`) order.
  */
  add(e, n, r) {
    this.addInner(e, n, r) || (this.nextLayer || (this.nextLayer = new Mi())).add(e, n, r);
  }
  /**
  @internal
  */
  addInner(e, n, r) {
    let i = e - this.lastTo || r.startSide - this.last.endSide;
    if (i <= 0 && (e - this.lastFrom || r.startSide - this.last.startSide) < 0)
      throw new Error("Ranges must be added sorted by `from` position and `startSide`");
    return i < 0 ? !1 : (this.from.length == 250 && this.finishChunk(!0), this.chunkStart < 0 && (this.chunkStart = e), this.from.push(e - this.chunkStart), this.to.push(n - this.chunkStart), this.last = r, this.lastFrom = e, this.lastTo = n, this.value.push(r), r.point && (this.maxPoint = Math.max(this.maxPoint, n - e)), !0);
  }
  /**
  @internal
  */
  addChunk(e, n) {
    if ((e - this.lastTo || n.value[0].startSide - this.last.endSide) < 0)
      return !1;
    this.from.length && this.finishChunk(!0), this.setMaxPoint = Math.max(this.setMaxPoint, n.maxPoint), this.chunks.push(n), this.chunkPos.push(e);
    let r = n.value.length - 1;
    return this.last = n.value[r], this.lastFrom = n.from[r] + e, this.lastTo = n.to[r] + e, !0;
  }
  /**
  Finish the range set. Returns the new set. The builder can't be
  used anymore after this has been called.
  */
  finish() {
    return this.finishInner(mt.empty);
  }
  /**
  @internal
  */
  finishInner(e) {
    if (this.from.length && this.finishChunk(!1), this.chunks.length == 0)
      return e;
    let n = mt.create(this.chunkPos, this.chunks, this.nextLayer ? this.nextLayer.finishInner(e) : e, this.setMaxPoint);
    return this.from = null, n;
  }
}
function vg(t, e, n) {
  let r = /* @__PURE__ */ new Map();
  for (let s of t)
    for (let a = 0; a < s.chunk.length; a++)
      s.chunk[a].maxPoint <= 0 && r.set(s.chunk[a], s.chunkPos[a]);
  let i = /* @__PURE__ */ new Set();
  for (let s of e)
    for (let a = 0; a < s.chunk.length; a++) {
      let o = r.get(s.chunk[a]);
      o != null && (n ? n.mapPos(o) : o) == s.chunkPos[a] && !n?.touchesRange(o, o + s.chunk[a].length) && i.add(s.chunk[a]);
    }
  return i;
}
class Rw {
  constructor(e, n, r, i = 0) {
    this.layer = e, this.skip = n, this.minPoint = r, this.rank = i;
  }
  get startSide() {
    return this.value ? this.value.startSide : 0;
  }
  get endSide() {
    return this.value ? this.value.endSide : 0;
  }
  goto(e, n = -1e9) {
    return this.chunkIndex = this.rangeIndex = 0, this.gotoInner(e, n, !1), this;
  }
  gotoInner(e, n, r) {
    for (; this.chunkIndex < this.layer.chunk.length; ) {
      let i = this.layer.chunk[this.chunkIndex];
      if (!(this.skip && this.skip.has(i) || this.layer.chunkEnd(this.chunkIndex) < e || i.maxPoint < this.minPoint))
        break;
      this.chunkIndex++, r = !1;
    }
    if (this.chunkIndex < this.layer.chunk.length) {
      let i = this.layer.chunk[this.chunkIndex].findIndex(e - this.layer.chunkPos[this.chunkIndex], n, !0);
      (!r || this.rangeIndex < i) && this.setRangeIndex(i);
    }
    this.next();
  }
  forward(e, n) {
    (this.to - e || this.endSide - n) < 0 && this.gotoInner(e, n, !0);
  }
  next() {
    for (; ; )
      if (this.chunkIndex == this.layer.chunk.length) {
        this.from = this.to = 1e9, this.value = null;
        break;
      } else {
        let e = this.layer.chunkPos[this.chunkIndex], n = this.layer.chunk[this.chunkIndex], r = e + n.from[this.rangeIndex];
        if (this.from = r, this.to = e + n.to[this.rangeIndex], this.value = n.value[this.rangeIndex], this.setRangeIndex(this.rangeIndex + 1), this.minPoint < 0 || this.value.point && this.to - this.from >= this.minPoint)
          break;
      }
  }
  setRangeIndex(e) {
    if (e == this.layer.chunk[this.chunkIndex].value.length) {
      if (this.chunkIndex++, this.skip)
        for (; this.chunkIndex < this.layer.chunk.length && this.skip.has(this.layer.chunk[this.chunkIndex]); )
          this.chunkIndex++;
      this.rangeIndex = 0;
    } else
      this.rangeIndex = e;
  }
  nextChunk() {
    this.chunkIndex++, this.rangeIndex = 0, this.next();
  }
  compare(e) {
    return this.from - e.from || this.startSide - e.startSide || this.rank - e.rank || this.to - e.to || this.endSide - e.endSide;
  }
}
class Co {
  constructor(e) {
    this.heap = e;
  }
  static from(e, n = null, r = -1) {
    let i = [];
    for (let s = 0; s < e.length; s++)
      for (let a = e[s]; !a.isEmpty; a = a.nextLayer)
        a.maxPoint >= r && i.push(new Rw(a, n, r, s));
    return i.length == 1 ? i[0] : new Co(i);
  }
  get startSide() {
    return this.value ? this.value.startSide : 0;
  }
  goto(e, n = -1e9) {
    for (let r of this.heap)
      r.goto(e, n);
    for (let r = this.heap.length >> 1; r >= 0; r--)
      Th(this.heap, r);
    return this.next(), this;
  }
  forward(e, n) {
    for (let r of this.heap)
      r.forward(e, n);
    for (let r = this.heap.length >> 1; r >= 0; r--)
      Th(this.heap, r);
    (this.to - e || this.value.endSide - n) < 0 && this.next();
  }
  next() {
    if (this.heap.length == 0)
      this.from = this.to = 1e9, this.value = null, this.rank = -1;
    else {
      let e = this.heap[0];
      this.from = e.from, this.to = e.to, this.value = e.value, this.rank = e.rank, e.value && e.next(), Th(this.heap, 0);
    }
  }
}
function Th(t, e) {
  for (let n = t[e]; ; ) {
    let r = (e << 1) + 1;
    if (r >= t.length)
      break;
    let i = t[r];
    if (r + 1 < t.length && i.compare(t[r + 1]) >= 0 && (i = t[r + 1], r++), n.compare(i) < 0)
      break;
    t[r] = n, t[e] = i, e = r;
  }
}
class Ja {
  constructor(e, n, r) {
    this.minPoint = r, this.active = [], this.activeTo = [], this.activeRank = [], this.minActive = -1, this.point = null, this.pointFrom = 0, this.pointRank = 0, this.to = -1e9, this.endSide = 0, this.openStart = -1, this.cursor = Co.from(e, n, r);
  }
  goto(e, n = -1e9) {
    return this.cursor.goto(e, n), this.active.length = this.activeTo.length = this.activeRank.length = 0, this.minActive = -1, this.to = e, this.endSide = n, this.openStart = -1, this.next(), this;
  }
  forward(e, n) {
    for (; this.minActive > -1 && (this.activeTo[this.minActive] - e || this.active[this.minActive].endSide - n) < 0; )
      this.removeActive(this.minActive);
    this.cursor.forward(e, n);
  }
  removeActive(e) {
    El(this.active, e), El(this.activeTo, e), El(this.activeRank, e), this.minActive = kg(this.active, this.activeTo);
  }
  addActive(e) {
    let n = 0, { value: r, to: i, rank: s } = this.cursor;
    for (; n < this.activeRank.length && (s - this.activeRank[n] || i - this.activeTo[n]) > 0; )
      n++;
    Fl(this.active, n, r), Fl(this.activeTo, n, i), Fl(this.activeRank, n, s), e && Fl(e, n, this.cursor.from), this.minActive = kg(this.active, this.activeTo);
  }
  // After calling this, if `this.point` != null, the next range is a
  // point. Otherwise, it's a regular range, covered by `this.active`.
  next() {
    let e = this.to, n = this.point;
    this.point = null;
    let r = this.openStart < 0 ? [] : null;
    for (; ; ) {
      let i = this.minActive;
      if (i > -1 && (this.activeTo[i] - this.cursor.from || this.active[i].endSide - this.cursor.startSide) < 0) {
        if (this.activeTo[i] > e) {
          this.to = this.activeTo[i], this.endSide = this.active[i].endSide;
          break;
        }
        this.removeActive(i), r && El(r, i);
      } else if (this.cursor.value)
        if (this.cursor.from > e) {
          this.to = this.cursor.from, this.endSide = this.cursor.startSide;
          break;
        } else {
          let s = this.cursor.value;
          if (!s.point)
            this.addActive(r), this.cursor.next();
          else if (n && this.cursor.to == this.to && this.cursor.from < this.cursor.to)
            this.cursor.next();
          else {
            this.point = s, this.pointFrom = this.cursor.from, this.pointRank = this.cursor.rank, this.to = this.cursor.to, this.endSide = s.endSide, this.cursor.next(), this.forward(this.to, this.endSide);
            break;
          }
        }
      else {
        this.to = this.endSide = 1e9;
        break;
      }
    }
    if (r) {
      this.openStart = 0;
      for (let i = r.length - 1; i >= 0 && r[i] < e; i--)
        this.openStart++;
    }
  }
  activeForPoint(e) {
    if (!this.active.length)
      return this.active;
    let n = [];
    for (let r = this.active.length - 1; r >= 0 && !(this.activeRank[r] < this.pointRank); r--)
      (this.activeTo[r] > e || this.activeTo[r] == e && this.active[r].endSide >= this.point.endSide) && n.push(this.active[r]);
    return n.reverse();
  }
  openEnd(e) {
    let n = 0;
    for (let r = this.activeTo.length - 1; r >= 0 && this.activeTo[r] > e; r--)
      n++;
    return n;
  }
}
function xg(t, e, n, r, i, s) {
  t.goto(e), n.goto(r);
  let a = r + i, o = r, l = r - e;
  for (; ; ) {
    let c = t.to + l - n.to, h = c || t.endSide - n.endSide, f = h < 0 ? t.to + l : n.to, m = Math.min(f, a);
    if (t.point || n.point ? t.point && n.point && (t.point == n.point || t.point.eq(n.point)) && Zp(t.activeForPoint(t.to), n.activeForPoint(n.to)) || s.comparePoint(o, m, t.point, n.point) : m > o && !Zp(t.active, n.active) && s.compareRange(o, m, t.active, n.active), f > a)
      break;
    (c || t.openEnd != n.openEnd) && s.boundChange && s.boundChange(f), o = f, h <= 0 && t.next(), h >= 0 && n.next();
  }
}
function Zp(t, e) {
  if (t.length != e.length)
    return !1;
  for (let n = 0; n < t.length; n++)
    if (t[n] != e[n] && !t[n].eq(e[n]))
      return !1;
  return !0;
}
function El(t, e) {
  for (let n = e, r = t.length - 1; n < r; n++)
    t[n] = t[n + 1];
  t.pop();
}
function Fl(t, e, n) {
  for (let r = t.length - 1; r >= e; r--)
    t[r + 1] = t[r];
  t[e] = n;
}
function kg(t, e) {
  let n = -1, r = 1e9;
  for (let i = 0; i < e.length; i++)
    (e[i] - r || t[i].endSide - t[n].endSide) < 0 && (n = i, r = e[i]);
  return n;
}
function Pc(t, e, n = t.length) {
  let r = 0;
  for (let i = 0; i < n && i < t.length; )
    t.charCodeAt(i) == 9 ? (r += e - r % e, i++) : (r++, i = Cn(t, i));
  return r;
}
function X4(t, e, n, r) {
  for (let i = 0, s = 0; ; ) {
    if (s >= e)
      return i;
    if (i == t.length)
      break;
    s += t.charCodeAt(i) == 9 ? n - s % n : 1, i = Cn(t, i);
  }
  return r === !0 ? -1 : t.length;
}
const Lp = "ͼ", wg = typeof Symbol > "u" ? "__" + Lp : Symbol.for(Lp), Ip = typeof Symbol > "u" ? "__styleSet" + Math.floor(Math.random() * 1e8) : Symbol("styleSet"), Cg = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : {};
class Ki {
  // :: (Object<Style>, ?{finish: ?(string) → string})
  // Create a style module from the given spec.
  //
  // When `finish` is given, it is called on regular (non-`@`)
  // selectors (after `&` expansion) to compute the final selector.
  constructor(e, n) {
    this.rules = [];
    let { finish: r } = n || {};
    function i(a) {
      return /^@/.test(a) ? [a] : a.split(/,\s*/);
    }
    function s(a, o, l, c) {
      let h = [], f = /^@(\w+)\b/.exec(a[0]), m = f && f[1] == "keyframes";
      if (f && o == null) return l.push(a[0] + ";");
      for (let y in o) {
        let x = o[y];
        if (/&/.test(y))
          s(
            y.split(/,\s*/).map((C) => a.map((S) => C.replace(/&/, S))).reduce((C, S) => C.concat(S)),
            x,
            l
          );
        else if (x && typeof x == "object") {
          if (!f) throw new RangeError("The value of a property (" + y + ") should be a primitive value.");
          s(i(y), x, h, m);
        } else x != null && h.push(y.replace(/_.*/, "").replace(/[A-Z]/g, (C) => "-" + C.toLowerCase()) + ": " + x + ";");
      }
      (h.length || m) && l.push((r && !f && !c ? a.map(r) : a).join(", ") + " {" + h.join(" ") + "}");
    }
    for (let a in e) s(i(a), e[a], this.rules);
  }
  // :: () → string
  // Returns a string containing the module's CSS rules.
  getRules() {
    return this.rules.join(`
`);
  }
  // :: () → string
  // Generate a new unique CSS class name.
  static newName() {
    let e = Cg[wg] || 1;
    return Cg[wg] = e + 1, Lp + e.toString(36);
  }
  // :: (union<Document, ShadowRoot>, union<[StyleModule], StyleModule>, ?{nonce: ?string})
  //
  // Mount the given set of modules in the given DOM root, which ensures
  // that the CSS rules defined by the module are available in that
  // context.
  //
  // Rules are only added to the document once per root.
  //
  // Rule order will follow the order of the modules, so that rules from
  // modules later in the array take precedence of those from earlier
  // modules. If you call this function multiple times for the same root
  // in a way that changes the order of already mounted modules, the old
  // order will be changed.
  //
  // If a Content Security Policy nonce is provided, it is added to
  // the `<style>` tag generated by the library.
  static mount(e, n, r) {
    let i = e[Ip], s = r && r.nonce;
    i ? s && i.setNonce(s) : i = new W4(e, s), i.mount(Array.isArray(n) ? n : [n], e);
  }
}
let Sg = /* @__PURE__ */ new Map();
class W4 {
  constructor(e, n) {
    let r = e.ownerDocument || e, i = r.defaultView;
    if (!e.head && e.adoptedStyleSheets && i.CSSStyleSheet) {
      let s = Sg.get(r);
      if (s) return e[Ip] = s;
      this.sheet = new i.CSSStyleSheet(), Sg.set(r, this);
    } else
      this.styleTag = r.createElement("style"), n && this.styleTag.setAttribute("nonce", n);
    this.modules = [], e[Ip] = this;
  }
  mount(e, n) {
    let r = this.sheet, i = 0, s = 0;
    for (let a = 0; a < e.length; a++) {
      let o = e[a], l = this.modules.indexOf(o);
      if (l < s && l > -1 && (this.modules.splice(l, 1), s--, l = -1), l == -1) {
        if (this.modules.splice(s++, 0, o), r) for (let c = 0; c < o.rules.length; c++)
          r.insertRule(o.rules[c], i++);
      } else {
        for (; s < l; ) i += this.modules[s++].rules.length;
        i += o.rules.length, s++;
      }
    }
    if (r)
      n.adoptedStyleSheets.indexOf(this.sheet) < 0 && (n.adoptedStyleSheets = [this.sheet, ...n.adoptedStyleSheets]);
    else {
      let a = "";
      for (let l = 0; l < this.modules.length; l++)
        a += this.modules[l].getRules() + `
`;
      this.styleTag.textContent = a;
      let o = n.head || n;
      this.styleTag.parentNode != o && o.insertBefore(this.styleTag, o.firstChild);
    }
  }
  setNonce(e) {
    this.styleTag && this.styleTag.getAttribute("nonce") != e && this.styleTag.setAttribute("nonce", e);
  }
}
var Ji = {
  8: "Backspace",
  9: "Tab",
  10: "Enter",
  12: "NumLock",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  44: "PrintScreen",
  45: "Insert",
  46: "Delete",
  59: ";",
  61: "=",
  91: "Meta",
  92: "Meta",
  106: "*",
  107: "+",
  108: ",",
  109: "-",
  110: ".",
  111: "/",
  144: "NumLock",
  145: "ScrollLock",
  160: "Shift",
  161: "Shift",
  162: "Control",
  163: "Control",
  164: "Alt",
  165: "Alt",
  173: "-",
  186: ";",
  187: "=",
  188: ",",
  189: "-",
  190: ".",
  191: "/",
  192: "`",
  219: "[",
  220: "\\",
  221: "]",
  222: "'"
}, So = {
  48: ")",
  49: "!",
  50: "@",
  51: "#",
  52: "$",
  53: "%",
  54: "^",
  55: "&",
  56: "*",
  57: "(",
  59: ":",
  61: "+",
  173: "_",
  186: ":",
  187: "+",
  188: "<",
  189: "_",
  190: ">",
  191: "?",
  192: "~",
  219: "{",
  220: "|",
  221: "}",
  222: '"'
}, q4 = typeof navigator < "u" && /Mac/.test(navigator.platform), U4 = typeof navigator < "u" && /MSIE \d|Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(navigator.userAgent);
for (var wn = 0; wn < 10; wn++) Ji[48 + wn] = Ji[96 + wn] = String(wn);
for (var wn = 1; wn <= 24; wn++) Ji[wn + 111] = "F" + wn;
for (var wn = 65; wn <= 90; wn++)
  Ji[wn] = String.fromCharCode(wn + 32), So[wn] = String.fromCharCode(wn);
for (var jh in Ji) So.hasOwnProperty(jh) || (So[jh] = Ji[jh]);
function G4(t) {
  var e = q4 && t.metaKey && t.shiftKey && !t.ctrlKey && !t.altKey || U4 && t.shiftKey && t.key && t.key.length == 1 || t.key == "Unidentified", n = !e && t.key || (t.shiftKey ? So : Ji)[t.keyCode] || t.key || "Unidentified";
  return n == "Esc" && (n = "Escape"), n == "Del" && (n = "Delete"), n == "Left" && (n = "ArrowLeft"), n == "Up" && (n = "ArrowUp"), n == "Right" && (n = "ArrowRight"), n == "Down" && (n = "ArrowDown"), n;
}
function Ao(t) {
  let e;
  return t.nodeType == 11 ? e = t.getSelection ? t : t.ownerDocument : e = t, e.getSelection();
}
function Np(t, e) {
  return e ? t == e || t.contains(e.nodeType != 1 ? e.parentNode : e) : !1;
}
function tu(t, e) {
  if (!e.anchorNode)
    return !1;
  try {
    return Np(t, e.anchorNode);
  } catch {
    return !1;
  }
}
function Do(t) {
  return t.nodeType == 3 ? Qs(t, 0, t.nodeValue.length).getClientRects() : t.nodeType == 1 ? t.getClientRects() : [];
}
function mo(t, e, n, r) {
  return n ? Ag(t, e, n, r, -1) || Ag(t, e, n, r, 1) : !1;
}
function Ms(t) {
  for (var e = 0; ; e++)
    if (t = t.previousSibling, !t)
      return e;
}
function wu(t) {
  return t.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\d|SECTION|PRE)$/.test(t.nodeName);
}
function Ag(t, e, n, r, i) {
  for (; ; ) {
    if (t == n && e == r)
      return !0;
    if (e == (i < 0 ? 0 : hi(t))) {
      if (t.nodeName == "DIV")
        return !1;
      let s = t.parentNode;
      if (!s || s.nodeType != 1)
        return !1;
      e = Ms(t) + (i < 0 ? 0 : 1), t = s;
    } else if (t.nodeType == 1) {
      if (t = t.childNodes[e + (i < 0 ? -1 : 0)], t.nodeType == 1 && t.contentEditable == "false")
        return !1;
      e = i < 0 ? hi(t) : 0;
    } else
      return !1;
  }
}
function hi(t) {
  return t.nodeType == 3 ? t.nodeValue.length : t.childNodes.length;
}
function Ec(t, e) {
  let n = e ? t.left : t.right;
  return { left: n, right: n, top: t.top, bottom: t.bottom };
}
function z4(t) {
  let e = t.visualViewport;
  return e ? {
    left: 0,
    right: e.width,
    top: 0,
    bottom: e.height
  } : {
    left: 0,
    right: t.innerWidth,
    top: 0,
    bottom: t.innerHeight
  };
}
function $w(t, e) {
  let n = e.width / t.offsetWidth, r = e.height / t.offsetHeight;
  return (n > 0.995 && n < 1.005 || !isFinite(n) || Math.abs(e.width - t.offsetWidth) < 1) && (n = 1), (r > 0.995 && r < 1.005 || !isFinite(r) || Math.abs(e.height - t.offsetHeight) < 1) && (r = 1), { scaleX: n, scaleY: r };
}
function H4(t, e, n, r, i, s, a, o) {
  let l = t.ownerDocument, c = l.defaultView || window;
  for (let h = t, f = !1; h && !f; )
    if (h.nodeType == 1) {
      let m, y = h == l.body, x = 1, C = 1;
      if (y)
        m = z4(c);
      else {
        if (/^(fixed|sticky)$/.test(getComputedStyle(h).position) && (f = !0), h.scrollHeight <= h.clientHeight && h.scrollWidth <= h.clientWidth) {
          h = h.assignedSlot || h.parentNode;
          continue;
        }
        let Z = h.getBoundingClientRect();
        ({ scaleX: x, scaleY: C } = $w(h, Z)), m = {
          left: Z.left,
          right: Z.left + h.clientWidth * x,
          top: Z.top,
          bottom: Z.top + h.clientHeight * C
        };
      }
      let S = 0, M = 0;
      if (i == "nearest")
        e.top < m.top ? (M = -(m.top - e.top + a), n > 0 && e.bottom > m.bottom + M && (M = e.bottom - m.bottom + M + a)) : e.bottom > m.bottom && (M = e.bottom - m.bottom + a, n < 0 && e.top - M < m.top && (M = -(m.top + M - e.top + a)));
      else {
        let Z = e.bottom - e.top, q = m.bottom - m.top;
        M = (i == "center" && Z <= q ? e.top + Z / 2 - q / 2 : i == "start" || i == "center" && n < 0 ? e.top - a : e.bottom - q + a) - m.top;
      }
      if (r == "nearest" ? e.left < m.left ? (S = -(m.left - e.left + s), n > 0 && e.right > m.right + S && (S = e.right - m.right + S + s)) : e.right > m.right && (S = e.right - m.right + s, n < 0 && e.left < m.left + S && (S = -(m.left + S - e.left + s))) : S = (r == "center" ? e.left + (e.right - e.left) / 2 - (m.right - m.left) / 2 : r == "start" == o ? e.left - s : e.right - (m.right - m.left) + s) - m.left, S || M)
        if (y)
          c.scrollBy(S, M);
        else {
          let Z = 0, q = 0;
          if (M) {
            let _ = h.scrollTop;
            h.scrollTop += M / C, q = (h.scrollTop - _) * C;
          }
          if (S) {
            let _ = h.scrollLeft;
            h.scrollLeft += S / x, Z = (h.scrollLeft - _) * x;
          }
          e = {
            left: e.left - Z,
            top: e.top - q,
            right: e.right - Z,
            bottom: e.bottom - q
          }, Z && Math.abs(Z - S) < 1 && (r = "nearest"), q && Math.abs(q - M) < 1 && (i = "nearest");
        }
      if (y)
        break;
      h = h.assignedSlot || h.parentNode;
    } else if (h.nodeType == 11)
      h = h.host;
    else
      break;
}
function Y4(t) {
  let e = t.ownerDocument, n, r;
  for (let i = t.parentNode; i && !(i == e.body || n && r); )
    if (i.nodeType == 1)
      !r && i.scrollHeight > i.clientHeight && (r = i), !n && i.scrollWidth > i.clientWidth && (n = i), i = i.assignedSlot || i.parentNode;
    else if (i.nodeType == 11)
      i = i.host;
    else
      break;
  return { x: n, y: r };
}
class K4 {
  constructor() {
    this.anchorNode = null, this.anchorOffset = 0, this.focusNode = null, this.focusOffset = 0;
  }
  eq(e) {
    return this.anchorNode == e.anchorNode && this.anchorOffset == e.anchorOffset && this.focusNode == e.focusNode && this.focusOffset == e.focusOffset;
  }
  setRange(e) {
    let { anchorNode: n, focusNode: r } = e;
    this.set(n, Math.min(e.anchorOffset, n ? hi(n) : 0), r, Math.min(e.focusOffset, r ? hi(r) : 0));
  }
  set(e, n, r, i) {
    this.anchorNode = e, this.anchorOffset = n, this.focusNode = r, this.focusOffset = i;
  }
}
let qs = null;
function Zw(t) {
  if (t.setActive)
    return t.setActive();
  if (qs)
    return t.focus(qs);
  let e = [];
  for (let n = t; n && (e.push(n, n.scrollTop, n.scrollLeft), n != n.ownerDocument); n = n.parentNode)
    ;
  if (t.focus(qs == null ? {
    get preventScroll() {
      return qs = { preventScroll: !0 }, !0;
    }
  } : void 0), !qs) {
    qs = !1;
    for (let n = 0; n < e.length; ) {
      let r = e[n++], i = e[n++], s = e[n++];
      r.scrollTop != i && (r.scrollTop = i), r.scrollLeft != s && (r.scrollLeft = s);
    }
  }
}
let Dg;
function Qs(t, e, n = e) {
  let r = Dg || (Dg = document.createRange());
  return r.setEnd(t, n), r.setStart(t, e), r;
}
function sa(t, e, n, r) {
  let i = { key: e, code: e, keyCode: n, which: n, cancelable: !0 };
  r && ({ altKey: i.altKey, ctrlKey: i.ctrlKey, shiftKey: i.shiftKey, metaKey: i.metaKey } = r);
  let s = new KeyboardEvent("keydown", i);
  s.synthetic = !0, t.dispatchEvent(s);
  let a = new KeyboardEvent("keyup", i);
  return a.synthetic = !0, t.dispatchEvent(a), s.defaultPrevented || a.defaultPrevented;
}
function J4(t) {
  for (; t; ) {
    if (t && (t.nodeType == 9 || t.nodeType == 11 && t.host))
      return t;
    t = t.assignedSlot || t.parentNode;
  }
  return null;
}
function Lw(t) {
  for (; t.attributes.length; )
    t.removeAttributeNode(t.attributes[0]);
}
function e8(t, e) {
  let n = e.focusNode, r = e.focusOffset;
  if (!n || e.anchorNode != n || e.anchorOffset != r)
    return !1;
  for (r = Math.min(r, hi(n)); ; )
    if (r) {
      if (n.nodeType != 1)
        return !1;
      let i = n.childNodes[r - 1];
      i.contentEditable == "false" ? r-- : (n = i, r = hi(n));
    } else {
      if (n == t)
        return !0;
      r = Ms(n), n = n.parentNode;
    }
}
function Iw(t) {
  return t.scrollTop > Math.max(1, t.scrollHeight - t.clientHeight - 4);
}
function Nw(t, e) {
  for (let n = t, r = e; ; ) {
    if (n.nodeType == 3 && r > 0)
      return { node: n, offset: r };
    if (n.nodeType == 1 && r > 0) {
      if (n.contentEditable == "false")
        return null;
      n = n.childNodes[r - 1], r = hi(n);
    } else if (n.parentNode && !wu(n))
      r = Ms(n), n = n.parentNode;
    else
      return null;
  }
}
function Vw(t, e) {
  for (let n = t, r = e; ; ) {
    if (n.nodeType == 3 && r < n.nodeValue.length)
      return { node: n, offset: r };
    if (n.nodeType == 1 && r < n.childNodes.length) {
      if (n.contentEditable == "false")
        return null;
      n = n.childNodes[r], r = 0;
    } else if (n.parentNode && !wu(n))
      r = Ms(n) + 1, n = n.parentNode;
    else
      return null;
  }
}
class Pn {
  constructor(e, n, r = !0) {
    this.node = e, this.offset = n, this.precise = r;
  }
  static before(e, n) {
    return new Pn(e.parentNode, Ms(e), n);
  }
  static after(e, n) {
    return new Pn(e.parentNode, Ms(e) + 1, n);
  }
}
const jd = [];
class At {
  constructor() {
    this.parent = null, this.dom = null, this.flags = 2;
  }
  get overrideDOMText() {
    return null;
  }
  get posAtStart() {
    return this.parent ? this.parent.posBefore(this) : 0;
  }
  get posAtEnd() {
    return this.posAtStart + this.length;
  }
  posBefore(e) {
    let n = this.posAtStart;
    for (let r of this.children) {
      if (r == e)
        return n;
      n += r.length + r.breakAfter;
    }
    throw new RangeError("Invalid child in posBefore");
  }
  posAfter(e) {
    return this.posBefore(e) + e.length;
  }
  sync(e, n) {
    if (this.flags & 2) {
      let r = this.dom, i = null, s;
      for (let a of this.children) {
        if (a.flags & 7) {
          if (!a.dom && (s = i ? i.nextSibling : r.firstChild)) {
            let o = At.get(s);
            (!o || !o.parent && o.canReuseDOM(a)) && a.reuseDOM(s);
          }
          a.sync(e, n), a.flags &= -8;
        }
        if (s = i ? i.nextSibling : r.firstChild, n && !n.written && n.node == r && s != a.dom && (n.written = !0), a.dom.parentNode == r)
          for (; s && s != a.dom; )
            s = Pg(s);
        else
          r.insertBefore(a.dom, s);
        i = a.dom;
      }
      for (s = i ? i.nextSibling : r.firstChild, s && n && n.node == r && (n.written = !0); s; )
        s = Pg(s);
    } else if (this.flags & 1)
      for (let r of this.children)
        r.flags & 7 && (r.sync(e, n), r.flags &= -8);
  }
  reuseDOM(e) {
  }
  localPosFromDOM(e, n) {
    let r;
    if (e == this.dom)
      r = this.dom.childNodes[n];
    else {
      let i = hi(e) == 0 ? 0 : n == 0 ? -1 : 1;
      for (; ; ) {
        let s = e.parentNode;
        if (s == this.dom)
          break;
        i == 0 && s.firstChild != s.lastChild && (e == s.firstChild ? i = -1 : i = 1), e = s;
      }
      i < 0 ? r = e : r = e.nextSibling;
    }
    if (r == this.dom.firstChild)
      return 0;
    for (; r && !At.get(r); )
      r = r.nextSibling;
    if (!r)
      return this.length;
    for (let i = 0, s = 0; ; i++) {
      let a = this.children[i];
      if (a.dom == r)
        return s;
      s += a.length + a.breakAfter;
    }
  }
  domBoundsAround(e, n, r = 0) {
    let i = -1, s = -1, a = -1, o = -1;
    for (let l = 0, c = r, h = r; l < this.children.length; l++) {
      let f = this.children[l], m = c + f.length;
      if (c < e && m > n)
        return f.domBoundsAround(e, n, c);
      if (m >= e && i == -1 && (i = l, s = c), c > n && f.dom.parentNode == this.dom) {
        a = l, o = h;
        break;
      }
      h = m, c = m + f.breakAfter;
    }
    return {
      from: s,
      to: o < 0 ? r + this.length : o,
      startDOM: (i ? this.children[i - 1].dom.nextSibling : null) || this.dom.firstChild,
      endDOM: a < this.children.length && a >= 0 ? this.children[a].dom : null
    };
  }
  markDirty(e = !1) {
    this.flags |= 2, this.markParentsDirty(e);
  }
  markParentsDirty(e) {
    for (let n = this.parent; n; n = n.parent) {
      if (e && (n.flags |= 2), n.flags & 1)
        return;
      n.flags |= 1, e = !1;
    }
  }
  setParent(e) {
    this.parent != e && (this.parent = e, this.flags & 7 && this.markParentsDirty(!0));
  }
  setDOM(e) {
    this.dom != e && (this.dom && (this.dom.cmView = null), this.dom = e, e.cmView = this);
  }
  get rootView() {
    for (let e = this; ; ) {
      let n = e.parent;
      if (!n)
        return e;
      e = n;
    }
  }
  replaceChildren(e, n, r = jd) {
    this.markDirty();
    for (let i = e; i < n; i++) {
      let s = this.children[i];
      s.parent == this && r.indexOf(s) < 0 && s.destroy();
    }
    r.length < 250 ? this.children.splice(e, n - e, ...r) : this.children = [].concat(this.children.slice(0, e), r, this.children.slice(n));
    for (let i = 0; i < r.length; i++)
      r[i].setParent(this);
  }
  ignoreMutation(e) {
    return !1;
  }
  ignoreEvent(e) {
    return !1;
  }
  childCursor(e = this.length) {
    return new Xw(this.children, e, this.children.length);
  }
  childPos(e, n = 1) {
    return this.childCursor().findPos(e, n);
  }
  toString() {
    let e = this.constructor.name.replace("View", "");
    return e + (this.children.length ? "(" + this.children.join() + ")" : this.length ? "[" + (e == "Text" ? this.text : this.length) + "]" : "") + (this.breakAfter ? "#" : "");
  }
  static get(e) {
    return e.cmView;
  }
  get isEditable() {
    return !0;
  }
  get isWidget() {
    return !1;
  }
  get isHidden() {
    return !1;
  }
  merge(e, n, r, i, s, a) {
    return !1;
  }
  become(e) {
    return !1;
  }
  canReuseDOM(e) {
    return e.constructor == this.constructor && !((this.flags | e.flags) & 8);
  }
  // When this is a zero-length view with a side, this should return a
  // number <= 0 to indicate it is before its position, or a
  // number > 0 when after its position.
  getSide() {
    return 0;
  }
  destroy() {
    for (let e of this.children)
      e.parent == this && e.destroy();
    this.parent = null;
  }
}
At.prototype.breakAfter = 0;
function Pg(t) {
  let e = t.nextSibling;
  return t.parentNode.removeChild(t), e;
}
class Xw {
  constructor(e, n, r) {
    this.children = e, this.pos = n, this.i = r, this.off = 0;
  }
  findPos(e, n = 1) {
    for (; ; ) {
      if (e > this.pos || e == this.pos && (n > 0 || this.i == 0 || this.children[this.i - 1].breakAfter))
        return this.off = e - this.pos, this;
      let r = this.children[--this.i];
      this.pos -= r.length + r.breakAfter;
    }
  }
}
function Ww(t, e, n, r, i, s, a, o, l) {
  let { children: c } = t, h = c.length ? c[e] : null, f = s.length ? s[s.length - 1] : null, m = f ? f.breakAfter : a;
  if (!(e == r && h && !a && !m && s.length < 2 && h.merge(n, i, s.length ? f : null, n == 0, o, l))) {
    if (r < c.length) {
      let y = c[r];
      y && (i < y.length || y.breakAfter && f?.breakAfter) ? (e == r && (y = y.split(i), i = 0), !m && f && y.merge(0, i, f, !0, 0, l) ? s[s.length - 1] = y : ((i || y.children.length && !y.children[0].length) && y.merge(0, i, null, !1, 0, l), s.push(y))) : y?.breakAfter && (f ? f.breakAfter = 1 : a = 1), r++;
    }
    for (h && (h.breakAfter = a, n > 0 && (!a && s.length && h.merge(n, h.length, s[0], !1, o, 0) ? h.breakAfter = s.shift().breakAfter : (n < h.length || h.children.length && h.children[h.children.length - 1].length == 0) && h.merge(n, h.length, null, !1, o, 0), e++)); e < r && s.length; )
      if (c[r - 1].become(s[s.length - 1]))
        r--, s.pop(), l = s.length ? 0 : o;
      else if (c[e].become(s[0]))
        e++, s.shift(), o = s.length ? 0 : l;
      else
        break;
    !s.length && e && r < c.length && !c[e - 1].breakAfter && c[r].merge(0, 0, c[e - 1], !1, o, l) && e--, (e < r || s.length) && t.replaceChildren(e, r, s);
  }
}
function qw(t, e, n, r, i, s) {
  let a = t.childCursor(), { i: o, off: l } = a.findPos(n, 1), { i: c, off: h } = a.findPos(e, -1), f = e - n;
  for (let m of r)
    f += m.length;
  t.length += f, Ww(t, c, h, o, l, r, 0, i, s);
}
let Xn = typeof navigator < "u" ? navigator : { userAgent: "", vendor: "", platform: "" }, Vp = typeof document < "u" ? document : { documentElement: { style: {} } };
const Xp = /* @__PURE__ */ /Edge\/(\d+)/.exec(Xn.userAgent), Uw = /* @__PURE__ */ /MSIE \d/.test(Xn.userAgent), Wp = /* @__PURE__ */ /Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(Xn.userAgent), Fc = !!(Uw || Wp || Xp), Eg = !Fc && /* @__PURE__ */ /gecko\/(\d+)/i.test(Xn.userAgent), _h = !Fc && /* @__PURE__ */ /Chrome\/(\d+)/.exec(Xn.userAgent), Fg = "webkitFontSmoothing" in Vp.documentElement.style, Gw = !Fc && /* @__PURE__ */ /Apple Computer/.test(Xn.vendor), Bg = Gw && (/* @__PURE__ */ /Mobile\/\w+/.test(Xn.userAgent) || Xn.maxTouchPoints > 2);
var we = {
  mac: Bg || /* @__PURE__ */ /Mac/.test(Xn.platform),
  windows: /* @__PURE__ */ /Win/.test(Xn.platform),
  linux: /* @__PURE__ */ /Linux|X11/.test(Xn.platform),
  ie: Fc,
  ie_version: Uw ? Vp.documentMode || 6 : Wp ? +Wp[1] : Xp ? +Xp[1] : 0,
  gecko: Eg,
  gecko_version: Eg ? +(/* @__PURE__ */ /Firefox\/(\d+)/.exec(Xn.userAgent) || [0, 0])[1] : 0,
  chrome: !!_h,
  chrome_version: _h ? +_h[1] : 0,
  ios: Bg,
  android: /* @__PURE__ */ /Android\b/.test(Xn.userAgent),
  webkit: Fg,
  safari: Gw,
  webkit_version: Fg ? +(/* @__PURE__ */ /\bAppleWebKit\/(\d+)/.exec(Xn.userAgent) || [0, 0])[1] : 0,
  tabSize: Vp.documentElement.style.tabSize != null ? "tab-size" : "-moz-tab-size"
};
const t8 = 256;
class qr extends At {
  constructor(e) {
    super(), this.text = e;
  }
  get length() {
    return this.text.length;
  }
  createDOM(e) {
    this.setDOM(e || document.createTextNode(this.text));
  }
  sync(e, n) {
    this.dom || this.createDOM(), this.dom.nodeValue != this.text && (n && n.node == this.dom && (n.written = !0), this.dom.nodeValue = this.text);
  }
  reuseDOM(e) {
    e.nodeType == 3 && this.createDOM(e);
  }
  merge(e, n, r) {
    return this.flags & 8 || r && (!(r instanceof qr) || this.length - (n - e) + r.length > t8 || r.flags & 8) ? !1 : (this.text = this.text.slice(0, e) + (r ? r.text : "") + this.text.slice(n), this.markDirty(), !0);
  }
  split(e) {
    let n = new qr(this.text.slice(e));
    return this.text = this.text.slice(0, e), this.markDirty(), n.flags |= this.flags & 8, n;
  }
  localPosFromDOM(e, n) {
    return e == this.dom ? n : n ? this.text.length : 0;
  }
  domAtPos(e) {
    return new Pn(this.dom, e);
  }
  domBoundsAround(e, n, r) {
    return { from: r, to: r + this.length, startDOM: this.dom, endDOM: this.dom.nextSibling };
  }
  coordsAt(e, n) {
    return n8(this.dom, e, n);
  }
}
class Qi extends At {
  constructor(e, n = [], r = 0) {
    super(), this.mark = e, this.children = n, this.length = r;
    for (let i of n)
      i.setParent(this);
  }
  setAttrs(e) {
    if (Lw(e), this.mark.class && (e.className = this.mark.class), this.mark.attrs)
      for (let n in this.mark.attrs)
        e.setAttribute(n, this.mark.attrs[n]);
    return e;
  }
  canReuseDOM(e) {
    return super.canReuseDOM(e) && !((this.flags | e.flags) & 8);
  }
  reuseDOM(e) {
    e.nodeName == this.mark.tagName.toUpperCase() && (this.setDOM(e), this.flags |= 6);
  }
  sync(e, n) {
    this.dom ? this.flags & 4 && this.setAttrs(this.dom) : this.setDOM(this.setAttrs(document.createElement(this.mark.tagName))), super.sync(e, n);
  }
  merge(e, n, r, i, s, a) {
    return r && (!(r instanceof Qi && r.mark.eq(this.mark)) || e && s <= 0 || n < this.length && a <= 0) ? !1 : (qw(this, e, n, r ? r.children.slice() : [], s - 1, a - 1), this.markDirty(), !0);
  }
  split(e) {
    let n = [], r = 0, i = -1, s = 0;
    for (let o of this.children) {
      let l = r + o.length;
      l > e && n.push(r < e ? o.split(e - r) : o), i < 0 && r >= e && (i = s), r = l, s++;
    }
    let a = this.length - e;
    return this.length = e, i > -1 && (this.children.length = i, this.markDirty()), new Qi(this.mark, n, a);
  }
  domAtPos(e) {
    return zw(this, e);
  }
  coordsAt(e, n) {
    return Yw(this, e, n);
  }
}
function n8(t, e, n) {
  let r = t.nodeValue.length;
  e > r && (e = r);
  let i = e, s = e, a = 0;
  e == 0 && n < 0 || e == r && n >= 0 ? we.chrome || we.gecko || (e ? (i--, a = 1) : s < r && (s++, a = -1)) : n < 0 ? i-- : s < r && s++;
  let o = Qs(t, i, s).getClientRects();
  if (!o.length)
    return null;
  let l = o[(a ? a < 0 : n >= 0) ? 0 : o.length - 1];
  return we.safari && !a && l.width == 0 && (l = Array.prototype.find.call(o, (c) => c.width) || l), a ? Ec(l, a < 0) : l || null;
}
class Gi extends At {
  static create(e, n, r) {
    return new Gi(e, n, r);
  }
  constructor(e, n, r) {
    super(), this.widget = e, this.length = n, this.side = r, this.prevWidget = null;
  }
  split(e) {
    let n = Gi.create(this.widget, this.length - e, this.side);
    return this.length -= e, n;
  }
  sync(e) {
    (!this.dom || !this.widget.updateDOM(this.dom, e)) && (this.dom && this.prevWidget && this.prevWidget.destroy(this.dom), this.prevWidget = null, this.setDOM(this.widget.toDOM(e)), this.widget.editable || (this.dom.contentEditable = "false"));
  }
  getSide() {
    return this.side;
  }
  merge(e, n, r, i, s, a) {
    return r && (!(r instanceof Gi) || !this.widget.compare(r.widget) || e > 0 && s <= 0 || n < this.length && a <= 0) ? !1 : (this.length = e + (r ? r.length : 0) + (this.length - n), !0);
  }
  become(e) {
    return e instanceof Gi && e.side == this.side && this.widget.constructor == e.widget.constructor ? (this.widget.compare(e.widget) || this.markDirty(!0), this.dom && !this.prevWidget && (this.prevWidget = this.widget), this.widget = e.widget, this.length = e.length, !0) : !1;
  }
  ignoreMutation() {
    return !0;
  }
  ignoreEvent(e) {
    return this.widget.ignoreEvent(e);
  }
  get overrideDOMText() {
    if (this.length == 0)
      return ct.empty;
    let e = this;
    for (; e.parent; )
      e = e.parent;
    let { view: n } = e, r = n && n.state.doc, i = this.posAtStart;
    return r ? r.slice(i, i + this.length) : ct.empty;
  }
  domAtPos(e) {
    return (this.length ? e == 0 : this.side > 0) ? Pn.before(this.dom) : Pn.after(this.dom, e == this.length);
  }
  domBoundsAround() {
    return null;
  }
  coordsAt(e, n) {
    let r = this.widget.coordsAt(this.dom, e, n);
    if (r)
      return r;
    let i = this.dom.getClientRects(), s = null;
    if (!i.length)
      return null;
    let a = this.side ? this.side < 0 : e > 0;
    for (let o = a ? i.length - 1 : 0; s = i[o], !(e > 0 ? o == 0 : o == i.length - 1 || s.top < s.bottom); o += a ? -1 : 1)
      ;
    return Ec(s, !a);
  }
  get isEditable() {
    return !1;
  }
  get isWidget() {
    return !0;
  }
  get isHidden() {
    return this.widget.isHidden;
  }
  destroy() {
    super.destroy(), this.dom && this.widget.destroy(this.dom);
  }
}
class Oa extends At {
  constructor(e) {
    super(), this.side = e;
  }
  get length() {
    return 0;
  }
  merge() {
    return !1;
  }
  become(e) {
    return e instanceof Oa && e.side == this.side;
  }
  split() {
    return new Oa(this.side);
  }
  sync() {
    if (!this.dom) {
      let e = document.createElement("img");
      e.className = "cm-widgetBuffer", e.setAttribute("aria-hidden", "true"), this.setDOM(e);
    }
  }
  getSide() {
    return this.side;
  }
  domAtPos(e) {
    return this.side > 0 ? Pn.before(this.dom) : Pn.after(this.dom);
  }
  localPosFromDOM() {
    return 0;
  }
  domBoundsAround() {
    return null;
  }
  coordsAt(e) {
    return this.dom.getBoundingClientRect();
  }
  get overrideDOMText() {
    return ct.empty;
  }
  get isHidden() {
    return !0;
  }
}
qr.prototype.children = Gi.prototype.children = Oa.prototype.children = jd;
function zw(t, e) {
  let n = t.dom, { children: r } = t, i = 0;
  for (let s = 0; i < r.length; i++) {
    let a = r[i], o = s + a.length;
    if (!(o == s && a.getSide() <= 0)) {
      if (e > s && e < o && a.dom.parentNode == n)
        return a.domAtPos(e - s);
      if (e <= s)
        break;
      s = o;
    }
  }
  for (let s = i; s > 0; s--) {
    let a = r[s - 1];
    if (a.dom.parentNode == n)
      return a.domAtPos(a.length);
  }
  for (let s = i; s < r.length; s++) {
    let a = r[s];
    if (a.dom.parentNode == n)
      return a.domAtPos(0);
  }
  return new Pn(n, 0);
}
function Hw(t, e, n) {
  let r, { children: i } = t;
  n > 0 && e instanceof Qi && i.length && (r = i[i.length - 1]) instanceof Qi && r.mark.eq(e.mark) ? Hw(r, e.children[0], n - 1) : (i.push(e), e.setParent(t)), t.length += e.length;
}
function Yw(t, e, n) {
  let r = null, i = -1, s = null, a = -1;
  function o(c, h) {
    for (let f = 0, m = 0; f < c.children.length && m <= h; f++) {
      let y = c.children[f], x = m + y.length;
      x >= h && (y.children.length ? o(y, h - m) : (!s || s.isHidden && n > 0) && (x > h || m == x && y.getSide() > 0) ? (s = y, a = h - m) : (m < h || m == x && y.getSide() < 0 && !y.isHidden) && (r = y, i = h - m)), m = x;
    }
  }
  o(t, e);
  let l = (n < 0 ? r : s) || r || s;
  return l ? l.coordsAt(Math.max(0, l == r ? i : a), n) : r8(t);
}
function r8(t) {
  let e = t.dom.lastChild;
  if (!e)
    return t.dom.getBoundingClientRect();
  let n = Do(e);
  return n[n.length - 1] || null;
}
function qp(t, e) {
  for (let n in t)
    n == "class" && e.class ? e.class += " " + t.class : n == "style" && e.style ? e.style += ";" + t.style : e[n] = t[n];
  return e;
}
const Mg = /* @__PURE__ */ Object.create(null);
function Cu(t, e, n) {
  if (t == e)
    return !0;
  t || (t = Mg), e || (e = Mg);
  let r = Object.keys(t), i = Object.keys(e);
  if (r.length - (n && r.indexOf(n) > -1 ? 1 : 0) != i.length - (n && i.indexOf(n) > -1 ? 1 : 0))
    return !1;
  for (let s of r)
    if (s != n && (i.indexOf(s) == -1 || t[s] !== e[s]))
      return !1;
  return !0;
}
function Up(t, e, n) {
  let r = !1;
  if (e)
    for (let i in e)
      n && i in n || (r = !0, i == "style" ? t.style.cssText = "" : t.removeAttribute(i));
  if (n)
    for (let i in n)
      e && e[i] == n[i] || (r = !0, i == "style" ? t.style.cssText = n[i] : t.setAttribute(i, n[i]));
  return r;
}
function i8(t) {
  let e = /* @__PURE__ */ Object.create(null);
  for (let n = 0; n < t.attributes.length; n++) {
    let r = t.attributes[n];
    e[r.name] = r.value;
  }
  return e;
}
class Ri {
  /**
  Compare this instance to another instance of the same type.
  (TypeScript can't express this, but only instances of the same
  specific class will be passed to this method.) This is used to
  avoid redrawing widgets when they are replaced by a new
  decoration of the same type. The default implementation just
  returns `false`, which will cause new instances of the widget to
  always be redrawn.
  */
  eq(e) {
    return !1;
  }
  /**
  Update a DOM element created by a widget of the same type (but
  different, non-`eq` content) to reflect this widget. May return
  true to indicate that it could update, false to indicate it
  couldn't (in which case the widget will be redrawn). The default
  implementation just returns false.
  */
  updateDOM(e, n) {
    return !1;
  }
  /**
  @internal
  */
  compare(e) {
    return this == e || this.constructor == e.constructor && this.eq(e);
  }
  /**
  The estimated height this widget will have, to be used when
  estimating the height of content that hasn't been drawn. May
  return -1 to indicate you don't know. The default implementation
  returns -1.
  */
  get estimatedHeight() {
    return -1;
  }
  /**
  For inline widgets that are displayed inline (as opposed to
  `inline-block`) and introduce line breaks (through `<br>` tags
  or textual newlines), this must indicate the amount of line
  breaks they introduce. Defaults to 0.
  */
  get lineBreaks() {
    return 0;
  }
  /**
  Can be used to configure which kinds of events inside the widget
  should be ignored by the editor. The default is to ignore all
  events.
  */
  ignoreEvent(e) {
    return !0;
  }
  /**
  Override the way screen coordinates for positions at/in the
  widget are found. `pos` will be the offset into the widget, and
  `side` the side of the position that is being queried—less than
  zero for before, greater than zero for after, and zero for
  directly at that position.
  */
  coordsAt(e, n, r) {
    return null;
  }
  /**
  @internal
  */
  get isHidden() {
    return !1;
  }
  /**
  @internal
  */
  get editable() {
    return !1;
  }
  /**
  This is called when the an instance of the widget is removed
  from the editor view.
  */
  destroy(e) {
  }
}
var _n = /* @__PURE__ */ function(t) {
  return t[t.Text = 0] = "Text", t[t.WidgetBefore = 1] = "WidgetBefore", t[t.WidgetAfter = 2] = "WidgetAfter", t[t.WidgetRange = 3] = "WidgetRange", t;
}(_n || (_n = {}));
class Te extends Bs {
  constructor(e, n, r, i) {
    super(), this.startSide = e, this.endSide = n, this.widget = r, this.spec = i;
  }
  /**
  @internal
  */
  get heightRelevant() {
    return !1;
  }
  /**
  Create a mark decoration, which influences the styling of the
  content in its range. Nested mark decorations will cause nested
  DOM elements to be created. Nesting order is determined by
  precedence of the [facet](https://codemirror.net/6/docs/ref/#view.EditorView^decorations), with
  the higher-precedence decorations creating the inner DOM nodes.
  Such elements are split on line boundaries and on the boundaries
  of lower-precedence decorations.
  */
  static mark(e) {
    return new Uo(e);
  }
  /**
  Create a widget decoration, which displays a DOM element at the
  given position.
  */
  static widget(e) {
    let n = Math.max(-1e4, Math.min(1e4, e.side || 0)), r = !!e.block;
    return n += r && !e.inlineOrder ? n > 0 ? 3e8 : -4e8 : n > 0 ? 1e8 : -1e8, new es(e, n, n, r, e.widget || null, !1);
  }
  /**
  Create a replace decoration which replaces the given range with
  a widget, or simply hides it.
  */
  static replace(e) {
    let n = !!e.block, r, i;
    if (e.isBlockGap)
      r = -5e8, i = 4e8;
    else {
      let { start: s, end: a } = Kw(e, n);
      r = (s ? n ? -3e8 : -1 : 5e8) - 1, i = (a ? n ? 2e8 : 1 : -6e8) + 1;
    }
    return new es(e, r, i, n, e.widget || null, !0);
  }
  /**
  Create a line decoration, which can add DOM attributes to the
  line starting at the given position.
  */
  static line(e) {
    return new Go(e);
  }
  /**
  Build a [`DecorationSet`](https://codemirror.net/6/docs/ref/#view.DecorationSet) from the given
  decorated range or ranges. If the ranges aren't already sorted,
  pass `true` for `sort` to make the library sort them for you.
  */
  static set(e, n = !1) {
    return mt.of(e, n);
  }
  /**
  @internal
  */
  hasHeight() {
    return this.widget ? this.widget.estimatedHeight > -1 : !1;
  }
}
Te.none = mt.empty;
class Uo extends Te {
  constructor(e) {
    let { start: n, end: r } = Kw(e);
    super(n ? -1 : 5e8, r ? 1 : -6e8, null, e), this.tagName = e.tagName || "span", this.class = e.class || "", this.attrs = e.attributes || null;
  }
  eq(e) {
    var n, r;
    return this == e || e instanceof Uo && this.tagName == e.tagName && (this.class || ((n = this.attrs) === null || n === void 0 ? void 0 : n.class)) == (e.class || ((r = e.attrs) === null || r === void 0 ? void 0 : r.class)) && Cu(this.attrs, e.attrs, "class");
  }
  range(e, n = e) {
    if (e >= n)
      throw new RangeError("Mark decorations may not be empty");
    return super.range(e, n);
  }
}
Uo.prototype.point = !1;
class Go extends Te {
  constructor(e) {
    super(-2e8, -2e8, null, e);
  }
  eq(e) {
    return e instanceof Go && this.spec.class == e.spec.class && Cu(this.spec.attributes, e.spec.attributes);
  }
  range(e, n = e) {
    if (n != e)
      throw new RangeError("Line decoration ranges must be zero-length");
    return super.range(e, n);
  }
}
Go.prototype.mapMode = rn.TrackBefore;
Go.prototype.point = !0;
class es extends Te {
  constructor(e, n, r, i, s, a) {
    super(n, r, s, e), this.block = i, this.isReplace = a, this.mapMode = i ? n <= 0 ? rn.TrackBefore : rn.TrackAfter : rn.TrackDel;
  }
  // Only relevant when this.block == true
  get type() {
    return this.startSide != this.endSide ? _n.WidgetRange : this.startSide <= 0 ? _n.WidgetBefore : _n.WidgetAfter;
  }
  get heightRelevant() {
    return this.block || !!this.widget && (this.widget.estimatedHeight >= 5 || this.widget.lineBreaks > 0);
  }
  eq(e) {
    return e instanceof es && s8(this.widget, e.widget) && this.block == e.block && this.startSide == e.startSide && this.endSide == e.endSide;
  }
  range(e, n = e) {
    if (this.isReplace && (e > n || e == n && this.startSide > 0 && this.endSide <= 0))
      throw new RangeError("Invalid range for replacement decoration");
    if (!this.isReplace && n != e)
      throw new RangeError("Widget decorations can only have zero-length ranges");
    return super.range(e, n);
  }
}
es.prototype.point = !0;
function Kw(t, e = !1) {
  let { inclusiveStart: n, inclusiveEnd: r } = t;
  return n == null && (n = t.inclusive), r == null && (r = t.inclusive), { start: n ?? e, end: r ?? e };
}
function s8(t, e) {
  return t == e || !!(t && e && t.compare(e));
}
function nu(t, e, n, r = 0) {
  let i = n.length - 1;
  i >= 0 && n[i] + r >= t ? n[i] = Math.max(n[i], e) : n.push(t, e);
}
class tn extends At {
  constructor() {
    super(...arguments), this.children = [], this.length = 0, this.prevAttrs = void 0, this.attrs = null, this.breakAfter = 0;
  }
  // Consumes source
  merge(e, n, r, i, s, a) {
    if (r) {
      if (!(r instanceof tn))
        return !1;
      this.dom || r.transferDOM(this);
    }
    return i && this.setDeco(r ? r.attrs : null), qw(this, e, n, r ? r.children.slice() : [], s, a), !0;
  }
  split(e) {
    let n = new tn();
    if (n.breakAfter = this.breakAfter, this.length == 0)
      return n;
    let { i: r, off: i } = this.childPos(e);
    i && (n.append(this.children[r].split(i), 0), this.children[r].merge(i, this.children[r].length, null, !1, 0, 0), r++);
    for (let s = r; s < this.children.length; s++)
      n.append(this.children[s], 0);
    for (; r > 0 && this.children[r - 1].length == 0; )
      this.children[--r].destroy();
    return this.children.length = r, this.markDirty(), this.length = e, n;
  }
  transferDOM(e) {
    this.dom && (this.markDirty(), e.setDOM(this.dom), e.prevAttrs = this.prevAttrs === void 0 ? this.attrs : this.prevAttrs, this.prevAttrs = void 0, this.dom = null);
  }
  setDeco(e) {
    Cu(this.attrs, e) || (this.dom && (this.prevAttrs = this.attrs, this.markDirty()), this.attrs = e);
  }
  append(e, n) {
    Hw(this, e, n);
  }
  // Only called when building a line view in ContentBuilder
  addLineDeco(e) {
    let n = e.spec.attributes, r = e.spec.class;
    n && (this.attrs = qp(n, this.attrs || {})), r && (this.attrs = qp({ class: r }, this.attrs || {}));
  }
  domAtPos(e) {
    return zw(this, e);
  }
  reuseDOM(e) {
    e.nodeName == "DIV" && (this.setDOM(e), this.flags |= 6);
  }
  sync(e, n) {
    var r;
    this.dom ? this.flags & 4 && (Lw(this.dom), this.dom.className = "cm-line", this.prevAttrs = this.attrs ? null : void 0) : (this.setDOM(document.createElement("div")), this.dom.className = "cm-line", this.prevAttrs = this.attrs ? null : void 0), this.prevAttrs !== void 0 && (Up(this.dom, this.prevAttrs, this.attrs), this.dom.classList.add("cm-line"), this.prevAttrs = void 0), super.sync(e, n);
    let i = this.dom.lastChild;
    for (; i && At.get(i) instanceof Qi; )
      i = i.lastChild;
    if (!i || !this.length || i.nodeName != "BR" && ((r = At.get(i)) === null || r === void 0 ? void 0 : r.isEditable) == !1 && (!we.ios || !this.children.some((s) => s instanceof qr))) {
      let s = document.createElement("BR");
      s.cmIgnore = !0, this.dom.appendChild(s);
    }
  }
  measureTextSize() {
    if (this.children.length == 0 || this.length > 20)
      return null;
    let e = 0, n;
    for (let r of this.children) {
      if (!(r instanceof qr) || /[^ -~]/.test(r.text))
        return null;
      let i = Do(r.dom);
      if (i.length != 1)
        return null;
      e += i[0].width, n = i[0].height;
    }
    return e ? {
      lineHeight: this.dom.getBoundingClientRect().height,
      charWidth: e / this.length,
      textHeight: n
    } : null;
  }
  coordsAt(e, n) {
    let r = Yw(this, e, n);
    if (!this.children.length && r && this.parent) {
      let { heightOracle: i } = this.parent.view.viewState, s = r.bottom - r.top;
      if (Math.abs(s - i.lineHeight) < 2 && i.textHeight < s) {
        let a = (s - i.textHeight) / 2;
        return { top: r.top + a, bottom: r.bottom - a, left: r.left, right: r.left };
      }
    }
    return r;
  }
  become(e) {
    return e instanceof tn && this.children.length == 0 && e.children.length == 0 && Cu(this.attrs, e.attrs) && this.breakAfter == e.breakAfter;
  }
  covers() {
    return !0;
  }
  static find(e, n) {
    for (let r = 0, i = 0; r < e.children.length; r++) {
      let s = e.children[r], a = i + s.length;
      if (a >= n) {
        if (s instanceof tn)
          return s;
        if (a > n)
          break;
      }
      i = a + s.breakAfter;
    }
    return null;
  }
}
class Pi extends At {
  constructor(e, n, r) {
    super(), this.widget = e, this.length = n, this.deco = r, this.breakAfter = 0, this.prevWidget = null;
  }
  merge(e, n, r, i, s, a) {
    return r && (!(r instanceof Pi) || !this.widget.compare(r.widget) || e > 0 && s <= 0 || n < this.length && a <= 0) ? !1 : (this.length = e + (r ? r.length : 0) + (this.length - n), !0);
  }
  domAtPos(e) {
    return e == 0 ? Pn.before(this.dom) : Pn.after(this.dom, e == this.length);
  }
  split(e) {
    let n = this.length - e;
    this.length = e;
    let r = new Pi(this.widget, n, this.deco);
    return r.breakAfter = this.breakAfter, r;
  }
  get children() {
    return jd;
  }
  sync(e) {
    (!this.dom || !this.widget.updateDOM(this.dom, e)) && (this.dom && this.prevWidget && this.prevWidget.destroy(this.dom), this.prevWidget = null, this.setDOM(this.widget.toDOM(e)), this.widget.editable || (this.dom.contentEditable = "false"));
  }
  get overrideDOMText() {
    return this.parent ? this.parent.view.state.doc.slice(this.posAtStart, this.posAtEnd) : ct.empty;
  }
  domBoundsAround() {
    return null;
  }
  become(e) {
    return e instanceof Pi && e.widget.constructor == this.widget.constructor ? (e.widget.compare(this.widget) || this.markDirty(!0), this.dom && !this.prevWidget && (this.prevWidget = this.widget), this.widget = e.widget, this.length = e.length, this.deco = e.deco, this.breakAfter = e.breakAfter, !0) : !1;
  }
  ignoreMutation() {
    return !0;
  }
  ignoreEvent(e) {
    return this.widget.ignoreEvent(e);
  }
  get isEditable() {
    return !1;
  }
  get isWidget() {
    return !0;
  }
  coordsAt(e, n) {
    let r = this.widget.coordsAt(this.dom, e, n);
    return r || (this.widget instanceof Gp ? null : Ec(this.dom.getBoundingClientRect(), this.length ? e == 0 : n <= 0));
  }
  destroy() {
    super.destroy(), this.dom && this.widget.destroy(this.dom);
  }
  covers(e) {
    let { startSide: n, endSide: r } = this.deco;
    return n == r ? !1 : e < 0 ? n < 0 : r > 0;
  }
}
class Gp extends Ri {
  constructor(e) {
    super(), this.height = e;
  }
  toDOM() {
    let e = document.createElement("div");
    return e.className = "cm-gap", this.updateDOM(e), e;
  }
  eq(e) {
    return e.height == this.height;
  }
  updateDOM(e) {
    return e.style.height = this.height + "px", !0;
  }
  get editable() {
    return !0;
  }
  get estimatedHeight() {
    return this.height;
  }
  ignoreEvent() {
    return !1;
  }
}
class go {
  constructor(e, n, r, i) {
    this.doc = e, this.pos = n, this.end = r, this.disallowBlockEffectsFor = i, this.content = [], this.curLine = null, this.breakAtStart = 0, this.pendingBuffer = 0, this.bufferMarks = [], this.atCursorPos = !0, this.openStart = -1, this.openEnd = -1, this.text = "", this.textOff = 0, this.cursor = e.iter(), this.skip = n;
  }
  posCovered() {
    if (this.content.length == 0)
      return !this.breakAtStart && this.doc.lineAt(this.pos).from != this.pos;
    let e = this.content[this.content.length - 1];
    return !(e.breakAfter || e instanceof Pi && e.deco.endSide < 0);
  }
  getLine() {
    return this.curLine || (this.content.push(this.curLine = new tn()), this.atCursorPos = !0), this.curLine;
  }
  flushBuffer(e = this.bufferMarks) {
    this.pendingBuffer && (this.curLine.append(Bl(new Oa(-1), e), e.length), this.pendingBuffer = 0);
  }
  addBlockWidget(e) {
    this.flushBuffer(), this.curLine = null, this.content.push(e);
  }
  finish(e) {
    this.pendingBuffer && e <= this.bufferMarks.length ? this.flushBuffer() : this.pendingBuffer = 0, !this.posCovered() && !(e && this.content.length && this.content[this.content.length - 1] instanceof Pi) && this.getLine();
  }
  buildText(e, n, r) {
    for (; e > 0; ) {
      if (this.textOff == this.text.length) {
        let { value: s, lineBreak: a, done: o } = this.cursor.next(this.skip);
        if (this.skip = 0, o)
          throw new Error("Ran out of text content when drawing inline views");
        if (a) {
          this.posCovered() || this.getLine(), this.content.length ? this.content[this.content.length - 1].breakAfter = 1 : this.breakAtStart = 1, this.flushBuffer(), this.curLine = null, this.atCursorPos = !0, e--;
          continue;
        } else
          this.text = s, this.textOff = 0;
      }
      let i = Math.min(
        this.text.length - this.textOff,
        e,
        512
        /* T.Chunk */
      );
      this.flushBuffer(n.slice(n.length - r)), this.getLine().append(Bl(new qr(this.text.slice(this.textOff, this.textOff + i)), n), r), this.atCursorPos = !0, this.textOff += i, e -= i, r = 0;
    }
  }
  span(e, n, r, i) {
    this.buildText(n - e, r, i), this.pos = n, this.openStart < 0 && (this.openStart = i);
  }
  point(e, n, r, i, s, a) {
    if (this.disallowBlockEffectsFor[a] && r instanceof es) {
      if (r.block)
        throw new RangeError("Block decorations may not be specified via plugins");
      if (n > this.doc.lineAt(this.pos).to)
        throw new RangeError("Decorations that replace line breaks may not be specified via plugins");
    }
    let o = n - e;
    if (r instanceof es)
      if (r.block)
        r.startSide > 0 && !this.posCovered() && this.getLine(), this.addBlockWidget(new Pi(r.widget || va.block, o, r));
      else {
        let l = Gi.create(r.widget || va.inline, o, o ? 0 : r.startSide), c = this.atCursorPos && !l.isEditable && s <= i.length && (e < n || r.startSide > 0), h = !l.isEditable && (e < n || s > i.length || r.startSide <= 0), f = this.getLine();
        this.pendingBuffer == 2 && !c && !l.isEditable && (this.pendingBuffer = 0), this.flushBuffer(i), c && (f.append(Bl(new Oa(1), i), s), s = i.length + Math.max(0, s - i.length)), f.append(Bl(l, i), s), this.atCursorPos = h, this.pendingBuffer = h ? e < n || s > i.length ? 1 : 2 : 0, this.pendingBuffer && (this.bufferMarks = i.slice());
      }
    else this.doc.lineAt(this.pos).from == this.pos && this.getLine().addLineDeco(r);
    o && (this.textOff + o <= this.text.length ? this.textOff += o : (this.skip += o - (this.text.length - this.textOff), this.text = "", this.textOff = 0), this.pos = n), this.openStart < 0 && (this.openStart = s);
  }
  static build(e, n, r, i, s) {
    let a = new go(e, n, r, s);
    return a.openEnd = mt.spans(i, n, r, a), a.openStart < 0 && (a.openStart = a.openEnd), a.finish(a.openEnd), a;
  }
}
function Bl(t, e) {
  for (let n of e)
    t = new Qi(n, [t], t.length);
  return t;
}
class va extends Ri {
  constructor(e) {
    super(), this.tag = e;
  }
  eq(e) {
    return e.tag == this.tag;
  }
  toDOM() {
    return document.createElement(this.tag);
  }
  updateDOM(e) {
    return e.nodeName.toLowerCase() == this.tag;
  }
  get isHidden() {
    return !0;
  }
}
va.inline = /* @__PURE__ */ new va("span");
va.block = /* @__PURE__ */ new va("div");
var Dt = /* @__PURE__ */ function(t) {
  return t[t.LTR = 0] = "LTR", t[t.RTL = 1] = "RTL", t;
}(Dt || (Dt = {}));
const Ts = Dt.LTR, _d = Dt.RTL;
function Jw(t) {
  let e = [];
  for (let n = 0; n < t.length; n++)
    e.push(1 << +t[n]);
  return e;
}
const a8 = /* @__PURE__ */ Jw("88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008"), o8 = /* @__PURE__ */ Jw("4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333"), zp = /* @__PURE__ */ Object.create(null), Kr = [];
for (let t of ["()", "[]", "{}"]) {
  let e = /* @__PURE__ */ t.charCodeAt(0), n = /* @__PURE__ */ t.charCodeAt(1);
  zp[e] = n, zp[n] = -e;
}
function eC(t) {
  return t <= 247 ? a8[t] : 1424 <= t && t <= 1524 ? 2 : 1536 <= t && t <= 1785 ? o8[t - 1536] : 1774 <= t && t <= 2220 ? 4 : 8192 <= t && t <= 8204 ? 256 : 64336 <= t && t <= 65023 ? 4 : 1;
}
const l8 = /[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac\ufb50-\ufdff]/;
class zi {
  /**
  The direction of this span.
  */
  get dir() {
    return this.level % 2 ? _d : Ts;
  }
  /**
  @internal
  */
  constructor(e, n, r) {
    this.from = e, this.to = n, this.level = r;
  }
  /**
  @internal
  */
  side(e, n) {
    return this.dir == n == e ? this.to : this.from;
  }
  /**
  @internal
  */
  forward(e, n) {
    return e == (this.dir == n);
  }
  /**
  @internal
  */
  static find(e, n, r, i) {
    let s = -1;
    for (let a = 0; a < e.length; a++) {
      let o = e[a];
      if (o.from <= n && o.to >= n) {
        if (o.level == r)
          return a;
        (s < 0 || (i != 0 ? i < 0 ? o.from < n : o.to > n : e[s].level > o.level)) && (s = a);
      }
    }
    if (s < 0)
      throw new RangeError("Index out of range");
    return s;
  }
}
function tC(t, e) {
  if (t.length != e.length)
    return !1;
  for (let n = 0; n < t.length; n++) {
    let r = t[n], i = e[n];
    if (r.from != i.from || r.to != i.to || r.direction != i.direction || !tC(r.inner, i.inner))
      return !1;
  }
  return !0;
}
const Ct = [];
function u8(t, e, n, r, i) {
  for (let s = 0; s <= r.length; s++) {
    let a = s ? r[s - 1].to : e, o = s < r.length ? r[s].from : n, l = s ? 256 : i;
    for (let c = a, h = l, f = l; c < o; c++) {
      let m = eC(t.charCodeAt(c));
      m == 512 ? m = h : m == 8 && f == 4 && (m = 16), Ct[c] = m == 4 ? 2 : m, m & 7 && (f = m), h = m;
    }
    for (let c = a, h = l, f = l; c < o; c++) {
      let m = Ct[c];
      if (m == 128)
        c < o - 1 && h == Ct[c + 1] && h & 24 ? m = Ct[c] = h : Ct[c] = 256;
      else if (m == 64) {
        let y = c + 1;
        for (; y < o && Ct[y] == 64; )
          y++;
        let x = c && h == 8 || y < n && Ct[y] == 8 ? f == 1 ? 1 : 8 : 256;
        for (let C = c; C < y; C++)
          Ct[C] = x;
        c = y - 1;
      } else m == 8 && f == 1 && (Ct[c] = 1);
      h = m, m & 7 && (f = m);
    }
  }
}
function c8(t, e, n, r, i) {
  let s = i == 1 ? 2 : 1;
  for (let a = 0, o = 0, l = 0; a <= r.length; a++) {
    let c = a ? r[a - 1].to : e, h = a < r.length ? r[a].from : n;
    for (let f = c, m, y, x; f < h; f++)
      if (y = zp[m = t.charCodeAt(f)])
        if (y < 0) {
          for (let C = o - 3; C >= 0; C -= 3)
            if (Kr[C + 1] == -y) {
              let S = Kr[C + 2], M = S & 2 ? i : S & 4 ? S & 1 ? s : i : 0;
              M && (Ct[f] = Ct[Kr[C]] = M), o = C;
              break;
            }
        } else {
          if (Kr.length == 189)
            break;
          Kr[o++] = f, Kr[o++] = m, Kr[o++] = l;
        }
      else if ((x = Ct[f]) == 2 || x == 1) {
        let C = x == i;
        l = C ? 0 : 1;
        for (let S = o - 3; S >= 0; S -= 3) {
          let M = Kr[S + 2];
          if (M & 2)
            break;
          if (C)
            Kr[S + 2] |= 2;
          else {
            if (M & 4)
              break;
            Kr[S + 2] |= 4;
          }
        }
      }
  }
}
function h8(t, e, n, r) {
  for (let i = 0, s = r; i <= n.length; i++) {
    let a = i ? n[i - 1].to : t, o = i < n.length ? n[i].from : e;
    for (let l = a; l < o; ) {
      let c = Ct[l];
      if (c == 256) {
        let h = l + 1;
        for (; ; )
          if (h == o) {
            if (i == n.length)
              break;
            h = n[i++].to, o = i < n.length ? n[i].from : e;
          } else if (Ct[h] == 256)
            h++;
          else
            break;
        let f = s == 1, m = (h < e ? Ct[h] : r) == 1, y = f == m ? f ? 1 : 2 : r;
        for (let x = h, C = i, S = C ? n[C - 1].to : t; x > l; )
          x == S && (x = n[--C].from, S = C ? n[C - 1].to : t), Ct[--x] = y;
        l = h;
      } else
        s = c, l++;
    }
  }
}
function Hp(t, e, n, r, i, s, a) {
  let o = r % 2 ? 2 : 1;
  if (r % 2 == i % 2)
    for (let l = e, c = 0; l < n; ) {
      let h = !0, f = !1;
      if (c == s.length || l < s[c].from) {
        let C = Ct[l];
        C != o && (h = !1, f = C == 16);
      }
      let m = !h && o == 1 ? [] : null, y = h ? r : r + 1, x = l;
      e: for (; ; )
        if (c < s.length && x == s[c].from) {
          if (f)
            break e;
          let C = s[c];
          if (!h)
            for (let S = C.to, M = c + 1; ; ) {
              if (S == n)
                break e;
              if (M < s.length && s[M].from == S)
                S = s[M++].to;
              else {
                if (Ct[S] == o)
                  break e;
                break;
              }
            }
          if (c++, m)
            m.push(C);
          else {
            C.from > l && a.push(new zi(l, C.from, y));
            let S = C.direction == Ts != !(y % 2);
            Yp(t, S ? r + 1 : r, i, C.inner, C.from, C.to, a), l = C.to;
          }
          x = C.to;
        } else {
          if (x == n || (h ? Ct[x] != o : Ct[x] == o))
            break;
          x++;
        }
      m ? Hp(t, l, x, r + 1, i, m, a) : l < x && a.push(new zi(l, x, y)), l = x;
    }
  else
    for (let l = n, c = s.length; l > e; ) {
      let h = !0, f = !1;
      if (!c || l > s[c - 1].to) {
        let C = Ct[l - 1];
        C != o && (h = !1, f = C == 16);
      }
      let m = !h && o == 1 ? [] : null, y = h ? r : r + 1, x = l;
      e: for (; ; )
        if (c && x == s[c - 1].to) {
          if (f)
            break e;
          let C = s[--c];
          if (!h)
            for (let S = C.from, M = c; ; ) {
              if (S == e)
                break e;
              if (M && s[M - 1].to == S)
                S = s[--M].from;
              else {
                if (Ct[S - 1] == o)
                  break e;
                break;
              }
            }
          if (m)
            m.push(C);
          else {
            C.to < l && a.push(new zi(C.to, l, y));
            let S = C.direction == Ts != !(y % 2);
            Yp(t, S ? r + 1 : r, i, C.inner, C.from, C.to, a), l = C.from;
          }
          x = C.from;
        } else {
          if (x == e || (h ? Ct[x - 1] != o : Ct[x - 1] == o))
            break;
          x--;
        }
      m ? Hp(t, x, l, r + 1, i, m, a) : x < l && a.push(new zi(x, l, y)), l = x;
    }
}
function Yp(t, e, n, r, i, s, a) {
  let o = e % 2 ? 2 : 1;
  u8(t, i, s, r, o), c8(t, i, s, r, o), h8(i, s, r, o), Hp(t, i, s, e, n, r, a);
}
function p8(t, e, n) {
  if (!t)
    return [new zi(0, 0, e == _d ? 1 : 0)];
  if (e == Ts && !n.length && !l8.test(t))
    return nC(t.length);
  if (n.length)
    for (; t.length > Ct.length; )
      Ct[Ct.length] = 256;
  let r = [], i = e == Ts ? 0 : 1;
  return Yp(t, i, i, n, 0, t.length, r), r;
}
function nC(t) {
  return [new zi(0, t, 0)];
}
let rC = "";
function f8(t, e, n, r, i) {
  var s;
  let a = r.head - t.from, o = zi.find(e, a, (s = r.bidiLevel) !== null && s !== void 0 ? s : -1, r.assoc), l = e[o], c = l.side(i, n);
  if (a == c) {
    let m = o += i ? 1 : -1;
    if (m < 0 || m >= e.length)
      return null;
    l = e[o = m], a = l.side(!i, n), c = l.side(i, n);
  }
  let h = Cn(t.text, a, l.forward(i, n));
  (h < l.from || h > l.to) && (h = c), rC = t.text.slice(Math.min(a, h), Math.max(a, h));
  let f = o == (i ? e.length - 1 : 0) ? null : e[o + (i ? 1 : -1)];
  return f && h == c && f.level + (i ? 0 : 1) < l.level ? ne.cursor(f.side(!i, n) + t.from, f.forward(i, n) ? 1 : -1, f.level) : ne.cursor(h + t.from, l.forward(i, n) ? -1 : 1, l.level);
}
function d8(t, e, n) {
  for (let r = e; r < n; r++) {
    let i = eC(t.charCodeAt(r));
    if (i == 1)
      return Ts;
    if (i == 2 || i == 4)
      return _d;
  }
  return Ts;
}
const iC = /* @__PURE__ */ Ae.define(), sC = /* @__PURE__ */ Ae.define(), aC = /* @__PURE__ */ Ae.define(), oC = /* @__PURE__ */ Ae.define(), Kp = /* @__PURE__ */ Ae.define(), lC = /* @__PURE__ */ Ae.define(), uC = /* @__PURE__ */ Ae.define(), Rd = /* @__PURE__ */ Ae.define(), $d = /* @__PURE__ */ Ae.define(), cC = /* @__PURE__ */ Ae.define({
  combine: (t) => t.some((e) => e)
}), hC = /* @__PURE__ */ Ae.define({
  combine: (t) => t.some((e) => e)
}), pC = /* @__PURE__ */ Ae.define();
class aa {
  constructor(e, n = "nearest", r = "nearest", i = 5, s = 5, a = !1) {
    this.range = e, this.y = n, this.x = r, this.yMargin = i, this.xMargin = s, this.isSnapshot = a;
  }
  map(e) {
    return e.empty ? this : new aa(this.range.map(e), this.y, this.x, this.yMargin, this.xMargin, this.isSnapshot);
  }
  clip(e) {
    return this.range.to <= e.doc.length ? this : new aa(ne.cursor(e.doc.length), this.y, this.x, this.yMargin, this.xMargin, this.isSnapshot);
  }
}
const Ml = /* @__PURE__ */ Ie.define({ map: (t, e) => t.map(e) }), fC = /* @__PURE__ */ Ie.define();
function Wn(t, e, n) {
  let r = t.facet(oC);
  r.length ? r[0](e) : window.onerror ? window.onerror(String(e), n, void 0, void 0, e) : n ? console.error(n + ":", e) : console.error(e);
}
const ki = /* @__PURE__ */ Ae.define({ combine: (t) => t.length ? t[0] : !0 });
let m8 = 0;
const so = /* @__PURE__ */ Ae.define();
class fn {
  constructor(e, n, r, i, s) {
    this.id = e, this.create = n, this.domEventHandlers = r, this.domEventObservers = i, this.extension = s(this);
  }
  /**
  Define a plugin from a constructor function that creates the
  plugin's value, given an editor view.
  */
  static define(e, n) {
    const { eventHandlers: r, eventObservers: i, provide: s, decorations: a } = n || {};
    return new fn(m8++, e, r, i, (o) => {
      let l = [so.of(o)];
      return a && l.push(Po.of((c) => {
        let h = c.plugin(o);
        return h ? a(h) : Te.none;
      })), s && l.push(s(o)), l;
    });
  }
  /**
  Create a plugin for a class whose constructor takes a single
  editor view as argument.
  */
  static fromClass(e, n) {
    return fn.define((r) => new e(r), n);
  }
}
class Rh {
  constructor(e) {
    this.spec = e, this.mustUpdate = null, this.value = null;
  }
  update(e) {
    if (this.value) {
      if (this.mustUpdate) {
        let n = this.mustUpdate;
        if (this.mustUpdate = null, this.value.update)
          try {
            this.value.update(n);
          } catch (r) {
            if (Wn(n.state, r, "CodeMirror plugin crashed"), this.value.destroy)
              try {
                this.value.destroy();
              } catch {
              }
            this.deactivate();
          }
      }
    } else if (this.spec)
      try {
        this.value = this.spec.create(e);
      } catch (n) {
        Wn(e.state, n, "CodeMirror plugin crashed"), this.deactivate();
      }
    return this;
  }
  destroy(e) {
    var n;
    if (!((n = this.value) === null || n === void 0) && n.destroy)
      try {
        this.value.destroy();
      } catch (r) {
        Wn(e.state, r, "CodeMirror plugin crashed");
      }
  }
  deactivate() {
    this.spec = this.value = null;
  }
}
const dC = /* @__PURE__ */ Ae.define(), Zd = /* @__PURE__ */ Ae.define(), Po = /* @__PURE__ */ Ae.define(), mC = /* @__PURE__ */ Ae.define(), Ld = /* @__PURE__ */ Ae.define(), gC = /* @__PURE__ */ Ae.define();
function Qg(t, e) {
  let n = t.state.facet(gC);
  if (!n.length)
    return n;
  let r = n.map((s) => s instanceof Function ? s(t) : s), i = [];
  return mt.spans(r, e.from, e.to, {
    point() {
    },
    span(s, a, o, l) {
      let c = s - e.from, h = a - e.from, f = i;
      for (let m = o.length - 1; m >= 0; m--, l--) {
        let y = o[m].spec.bidiIsolate, x;
        if (y == null && (y = d8(e.text, c, h)), l > 0 && f.length && (x = f[f.length - 1]).to == c && x.direction == y)
          x.to = h, f = x.inner;
        else {
          let C = { from: c, to: h, direction: y, inner: [] };
          f.push(C), f = C.inner;
        }
      }
    }
  }), i;
}
const bC = /* @__PURE__ */ Ae.define();
function Id(t) {
  let e = 0, n = 0, r = 0, i = 0;
  for (let s of t.state.facet(bC)) {
    let a = s(t);
    a && (a.left != null && (e = Math.max(e, a.left)), a.right != null && (n = Math.max(n, a.right)), a.top != null && (r = Math.max(r, a.top)), a.bottom != null && (i = Math.max(i, a.bottom)));
  }
  return { left: e, right: n, top: r, bottom: i };
}
const ao = /* @__PURE__ */ Ae.define();
class Pr {
  constructor(e, n, r, i) {
    this.fromA = e, this.toA = n, this.fromB = r, this.toB = i;
  }
  join(e) {
    return new Pr(Math.min(this.fromA, e.fromA), Math.max(this.toA, e.toA), Math.min(this.fromB, e.fromB), Math.max(this.toB, e.toB));
  }
  addToSet(e) {
    let n = e.length, r = this;
    for (; n > 0; n--) {
      let i = e[n - 1];
      if (!(i.fromA > r.toA)) {
        if (i.toA < r.fromA)
          break;
        r = r.join(i), e.splice(n - 1, 1);
      }
    }
    return e.splice(n, 0, r), e;
  }
  static extendWithRanges(e, n) {
    if (n.length == 0)
      return e;
    let r = [];
    for (let i = 0, s = 0, a = 0, o = 0; ; i++) {
      let l = i == e.length ? null : e[i], c = a - o, h = l ? l.fromB : 1e9;
      for (; s < n.length && n[s] < h; ) {
        let f = n[s], m = n[s + 1], y = Math.max(o, f), x = Math.min(h, m);
        if (y <= x && new Pr(y + c, x + c, y, x).addToSet(r), m > h)
          break;
        s += 2;
      }
      if (!l)
        return r;
      new Pr(l.fromA, l.toA, l.fromB, l.toB).addToSet(r), a = l.toA, o = l.toB;
    }
  }
}
class Su {
  constructor(e, n, r) {
    this.view = e, this.state = n, this.transactions = r, this.flags = 0, this.startState = e.state, this.changes = un.empty(this.startState.doc.length);
    for (let s of r)
      this.changes = this.changes.compose(s.changes);
    let i = [];
    this.changes.iterChangedRanges((s, a, o, l) => i.push(new Pr(s, a, o, l))), this.changedRanges = i;
  }
  /**
  @internal
  */
  static create(e, n, r) {
    return new Su(e, n, r);
  }
  /**
  Tells you whether the [viewport](https://codemirror.net/6/docs/ref/#view.EditorView.viewport) or
  [visible ranges](https://codemirror.net/6/docs/ref/#view.EditorView.visibleRanges) changed in this
  update.
  */
  get viewportChanged() {
    return (this.flags & 4) > 0;
  }
  /**
  Returns true when
  [`viewportChanged`](https://codemirror.net/6/docs/ref/#view.ViewUpdate.viewportChanged) is true
  and the viewport change is not just the result of mapping it in
  response to document changes.
  */
  get viewportMoved() {
    return (this.flags & 8) > 0;
  }
  /**
  Indicates whether the height of a block element in the editor
  changed in this update.
  */
  get heightChanged() {
    return (this.flags & 2) > 0;
  }
  /**
  Returns true when the document was modified or the size of the
  editor, or elements within the editor, changed.
  */
  get geometryChanged() {
    return this.docChanged || (this.flags & 18) > 0;
  }
  /**
  True when this update indicates a focus change.
  */
  get focusChanged() {
    return (this.flags & 1) > 0;
  }
  /**
  Whether the document changed in this update.
  */
  get docChanged() {
    return !this.changes.empty;
  }
  /**
  Whether the selection was explicitly set in this update.
  */
  get selectionSet() {
    return this.transactions.some((e) => e.selection);
  }
  /**
  @internal
  */
  get empty() {
    return this.flags == 0 && this.transactions.length == 0;
  }
}
class Tg extends At {
  get length() {
    return this.view.state.doc.length;
  }
  constructor(e) {
    super(), this.view = e, this.decorations = [], this.dynamicDecorationMap = [!1], this.domChanged = null, this.hasComposition = null, this.markedForComposition = /* @__PURE__ */ new Set(), this.editContextFormatting = Te.none, this.lastCompositionAfterCursor = !1, this.minWidth = 0, this.minWidthFrom = 0, this.minWidthTo = 0, this.impreciseAnchor = null, this.impreciseHead = null, this.forceSelection = !1, this.lastUpdate = Date.now(), this.setDOM(e.contentDOM), this.children = [new tn()], this.children[0].setParent(this), this.updateDeco(), this.updateInner([new Pr(0, 0, 0, e.state.doc.length)], 0, null);
  }
  // Update the document view to a given state.
  update(e) {
    var n;
    let r = e.changedRanges;
    this.minWidth > 0 && r.length && (r.every(({ fromA: c, toA: h }) => h < this.minWidthFrom || c > this.minWidthTo) ? (this.minWidthFrom = e.changes.mapPos(this.minWidthFrom, 1), this.minWidthTo = e.changes.mapPos(this.minWidthTo, 1)) : this.minWidth = this.minWidthFrom = this.minWidthTo = 0), this.updateEditContextFormatting(e);
    let i = -1;
    this.view.inputState.composing >= 0 && !this.view.observer.editContext && (!((n = this.domChanged) === null || n === void 0) && n.newSel ? i = this.domChanged.newSel.head : !k8(e.changes, this.hasComposition) && !e.selectionSet && (i = e.state.selection.main.head));
    let s = i > -1 ? b8(this.view, e.changes, i) : null;
    if (this.domChanged = null, this.hasComposition) {
      this.markedForComposition.clear();
      let { from: c, to: h } = this.hasComposition;
      r = new Pr(c, h, e.changes.mapPos(c, -1), e.changes.mapPos(h, 1)).addToSet(r.slice());
    }
    this.hasComposition = s ? { from: s.range.fromB, to: s.range.toB } : null, (we.ie || we.chrome) && !s && e && e.state.doc.lines != e.startState.doc.lines && (this.forceSelection = !0);
    let a = this.decorations, o = this.updateDeco(), l = v8(a, o, e.changes);
    return r = Pr.extendWithRanges(r, l), !(this.flags & 7) && r.length == 0 ? !1 : (this.updateInner(r, e.startState.doc.length, s), e.transactions.length && (this.lastUpdate = Date.now()), !0);
  }
  // Used by update and the constructor do perform the actual DOM
  // update
  updateInner(e, n, r) {
    this.view.viewState.mustMeasureContent = !0, this.updateChildren(e, n, r);
    let { observer: i } = this.view;
    i.ignore(() => {
      this.dom.style.height = this.view.viewState.contentHeight / this.view.scaleY + "px", this.dom.style.flexBasis = this.minWidth ? this.minWidth + "px" : "";
      let a = we.chrome || we.ios ? { node: i.selectionRange.focusNode, written: !1 } : void 0;
      this.sync(this.view, a), this.flags &= -8, a && (a.written || i.selectionRange.focusNode != a.node) && (this.forceSelection = !0), this.dom.style.height = "";
    }), this.markedForComposition.forEach(
      (a) => a.flags &= -9
      /* ViewFlag.Composition */
    );
    let s = [];
    if (this.view.viewport.from || this.view.viewport.to < this.view.state.doc.length)
      for (let a of this.children)
        a instanceof Pi && a.widget instanceof Gp && s.push(a.dom);
    i.updateGaps(s);
  }
  updateChildren(e, n, r) {
    let i = r ? r.range.addToSet(e.slice()) : e, s = this.childCursor(n);
    for (let a = i.length - 1; ; a--) {
      let o = a >= 0 ? i[a] : null;
      if (!o)
        break;
      let { fromA: l, toA: c, fromB: h, toB: f } = o, m, y, x, C;
      if (r && r.range.fromB < f && r.range.toB > h) {
        let _ = go.build(this.view.state.doc, h, r.range.fromB, this.decorations, this.dynamicDecorationMap), B = go.build(this.view.state.doc, r.range.toB, f, this.decorations, this.dynamicDecorationMap);
        y = _.breakAtStart, x = _.openStart, C = B.openEnd;
        let $ = this.compositionView(r);
        B.breakAtStart ? $.breakAfter = 1 : B.content.length && $.merge($.length, $.length, B.content[0], !1, B.openStart, 0) && ($.breakAfter = B.content[0].breakAfter, B.content.shift()), _.content.length && $.merge(0, 0, _.content[_.content.length - 1], !0, 0, _.openEnd) && _.content.pop(), m = _.content.concat($).concat(B.content);
      } else
        ({ content: m, breakAtStart: y, openStart: x, openEnd: C } = go.build(this.view.state.doc, h, f, this.decorations, this.dynamicDecorationMap));
      let { i: S, off: M } = s.findPos(c, 1), { i: Z, off: q } = s.findPos(l, -1);
      Ww(this, Z, q, S, M, m, y, x, C);
    }
    r && this.fixCompositionDOM(r);
  }
  updateEditContextFormatting(e) {
    this.editContextFormatting = this.editContextFormatting.map(e.changes);
    for (let n of e.transactions)
      for (let r of n.effects)
        r.is(fC) && (this.editContextFormatting = r.value);
  }
  compositionView(e) {
    let n = new qr(e.text.nodeValue);
    n.flags |= 8;
    for (let { deco: i } of e.marks)
      n = new Qi(i, [n], n.length);
    let r = new tn();
    return r.append(n, 0), r;
  }
  fixCompositionDOM(e) {
    let n = (s, a) => {
      a.flags |= 8 | (a.children.some(
        (l) => l.flags & 7
        /* ViewFlag.Dirty */
      ) ? 1 : 0), this.markedForComposition.add(a);
      let o = At.get(s);
      o && o != a && (o.dom = null), a.setDOM(s);
    }, r = this.childPos(e.range.fromB, 1), i = this.children[r.i];
    n(e.line, i);
    for (let s = e.marks.length - 1; s >= -1; s--)
      r = i.childPos(r.off, 1), i = i.children[r.i], n(s >= 0 ? e.marks[s].node : e.text, i);
  }
  // Sync the DOM selection to this.state.selection
  updateSelection(e = !1, n = !1) {
    (e || !this.view.observer.selectionRange.focusNode) && this.view.observer.readSelectionRange();
    let r = this.view.root.activeElement, i = r == this.dom, s = !i && !(this.view.state.facet(ki) || this.dom.tabIndex > -1) && tu(this.dom, this.view.observer.selectionRange) && !(r && this.dom.contains(r));
    if (!(i || n || s))
      return;
    let a = this.forceSelection;
    this.forceSelection = !1;
    let o = this.view.state.selection.main, l = this.moveToLine(this.domAtPos(o.anchor)), c = o.empty ? l : this.moveToLine(this.domAtPos(o.head));
    if (we.gecko && o.empty && !this.hasComposition && g8(l)) {
      let f = document.createTextNode("");
      this.view.observer.ignore(() => l.node.insertBefore(f, l.node.childNodes[l.offset] || null)), l = c = new Pn(f, 0), a = !0;
    }
    let h = this.view.observer.selectionRange;
    (a || !h.focusNode || (!mo(l.node, l.offset, h.anchorNode, h.anchorOffset) || !mo(c.node, c.offset, h.focusNode, h.focusOffset)) && !this.suppressWidgetCursorChange(h, o)) && (this.view.observer.ignore(() => {
      we.android && we.chrome && this.dom.contains(h.focusNode) && x8(h.focusNode, this.dom) && (this.dom.blur(), this.dom.focus({ preventScroll: !0 }));
      let f = Ao(this.view.root);
      if (f) if (o.empty) {
        if (we.gecko) {
          let m = y8(l.node, l.offset);
          if (m && m != 3) {
            let y = (m == 1 ? Nw : Vw)(l.node, l.offset);
            y && (l = new Pn(y.node, y.offset));
          }
        }
        f.collapse(l.node, l.offset), o.bidiLevel != null && f.caretBidiLevel !== void 0 && (f.caretBidiLevel = o.bidiLevel);
      } else if (f.extend) {
        f.collapse(l.node, l.offset);
        try {
          f.extend(c.node, c.offset);
        } catch {
        }
      } else {
        let m = document.createRange();
        o.anchor > o.head && ([l, c] = [c, l]), m.setEnd(c.node, c.offset), m.setStart(l.node, l.offset), f.removeAllRanges(), f.addRange(m);
      }
      s && this.view.root.activeElement == this.dom && (this.dom.blur(), r && r.focus());
    }), this.view.observer.setSelectionRange(l, c)), this.impreciseAnchor = l.precise ? null : new Pn(h.anchorNode, h.anchorOffset), this.impreciseHead = c.precise ? null : new Pn(h.focusNode, h.focusOffset);
  }
  // If a zero-length widget is inserted next to the cursor during
  // composition, avoid moving it across it and disrupting the
  // composition.
  suppressWidgetCursorChange(e, n) {
    return this.hasComposition && n.empty && mo(e.focusNode, e.focusOffset, e.anchorNode, e.anchorOffset) && this.posFromDOM(e.focusNode, e.focusOffset) == n.head;
  }
  enforceCursorAssoc() {
    if (this.hasComposition)
      return;
    let { view: e } = this, n = e.state.selection.main, r = Ao(e.root), { anchorNode: i, anchorOffset: s } = e.observer.selectionRange;
    if (!r || !n.empty || !n.assoc || !r.modify)
      return;
    let a = tn.find(this, n.head);
    if (!a)
      return;
    let o = a.posAtStart;
    if (n.head == o || n.head == o + a.length)
      return;
    let l = this.coordsAt(n.head, -1), c = this.coordsAt(n.head, 1);
    if (!l || !c || l.bottom > c.top)
      return;
    let h = this.domAtPos(n.head + n.assoc);
    r.collapse(h.node, h.offset), r.modify("move", n.assoc < 0 ? "forward" : "backward", "lineboundary"), e.observer.readSelectionRange();
    let f = e.observer.selectionRange;
    e.docView.posFromDOM(f.anchorNode, f.anchorOffset) != n.from && r.collapse(i, s);
  }
  // If a position is in/near a block widget, move it to a nearby text
  // line, since we don't want the cursor inside a block widget.
  moveToLine(e) {
    let n = this.dom, r;
    if (e.node != n)
      return e;
    for (let i = e.offset; !r && i < n.childNodes.length; i++) {
      let s = At.get(n.childNodes[i]);
      s instanceof tn && (r = s.domAtPos(0));
    }
    for (let i = e.offset - 1; !r && i >= 0; i--) {
      let s = At.get(n.childNodes[i]);
      s instanceof tn && (r = s.domAtPos(s.length));
    }
    return r ? new Pn(r.node, r.offset, !0) : e;
  }
  nearest(e) {
    for (let n = e; n; ) {
      let r = At.get(n);
      if (r && r.rootView == this)
        return r;
      n = n.parentNode;
    }
    return null;
  }
  posFromDOM(e, n) {
    let r = this.nearest(e);
    if (!r)
      throw new RangeError("Trying to find position for a DOM position outside of the document");
    return r.localPosFromDOM(e, n) + r.posAtStart;
  }
  domAtPos(e) {
    let { i: n, off: r } = this.childCursor().findPos(e, -1);
    for (; n < this.children.length - 1; ) {
      let i = this.children[n];
      if (r < i.length || i instanceof tn)
        break;
      n++, r = 0;
    }
    return this.children[n].domAtPos(r);
  }
  coordsAt(e, n) {
    let r = null, i = 0;
    for (let s = this.length, a = this.children.length - 1; a >= 0; a--) {
      let o = this.children[a], l = s - o.breakAfter, c = l - o.length;
      if (l < e)
        break;
      if (c <= e && (c < e || o.covers(-1)) && (l > e || o.covers(1)) && (!r || o instanceof tn && !(r instanceof tn && n >= 0)))
        r = o, i = c;
      else if (r && c == e && l == e && o instanceof Pi && Math.abs(n) < 2) {
        if (o.deco.startSide < 0)
          break;
        a && (r = null);
      }
      s = c;
    }
    return r ? r.coordsAt(e - i, n) : null;
  }
  coordsForChar(e) {
    let { i: n, off: r } = this.childPos(e, 1), i = this.children[n];
    if (!(i instanceof tn))
      return null;
    for (; i.children.length; ) {
      let { i: o, off: l } = i.childPos(r, 1);
      for (; ; o++) {
        if (o == i.children.length)
          return null;
        if ((i = i.children[o]).length)
          break;
      }
      r = l;
    }
    if (!(i instanceof qr))
      return null;
    let s = Cn(i.text, r);
    if (s == r)
      return null;
    let a = Qs(i.dom, r, s).getClientRects();
    for (let o = 0; o < a.length; o++) {
      let l = a[o];
      if (o == a.length - 1 || l.top < l.bottom && l.left < l.right)
        return l;
    }
    return null;
  }
  measureVisibleLineHeights(e) {
    let n = [], { from: r, to: i } = e, s = this.view.contentDOM.clientWidth, a = s > Math.max(this.view.scrollDOM.clientWidth, this.minWidth) + 1, o = -1, l = this.view.textDirection == Dt.LTR;
    for (let c = 0, h = 0; h < this.children.length; h++) {
      let f = this.children[h], m = c + f.length;
      if (m > i)
        break;
      if (c >= r) {
        let y = f.dom.getBoundingClientRect();
        if (n.push(y.height), a) {
          let x = f.dom.lastChild, C = x ? Do(x) : [];
          if (C.length) {
            let S = C[C.length - 1], M = l ? S.right - y.left : y.right - S.left;
            M > o && (o = M, this.minWidth = s, this.minWidthFrom = c, this.minWidthTo = m);
          }
        }
      }
      c = m + f.breakAfter;
    }
    return n;
  }
  textDirectionAt(e) {
    let { i: n } = this.childPos(e, 1);
    return getComputedStyle(this.children[n].dom).direction == "rtl" ? Dt.RTL : Dt.LTR;
  }
  measureTextSize() {
    for (let s of this.children)
      if (s instanceof tn) {
        let a = s.measureTextSize();
        if (a)
          return a;
      }
    let e = document.createElement("div"), n, r, i;
    return e.className = "cm-line", e.style.width = "99999px", e.style.position = "absolute", e.textContent = "abc def ghi jkl mno pqr stu", this.view.observer.ignore(() => {
      this.dom.appendChild(e);
      let s = Do(e.firstChild)[0];
      n = e.getBoundingClientRect().height, r = s ? s.width / 27 : 7, i = s ? s.height : n, e.remove();
    }), { lineHeight: n, charWidth: r, textHeight: i };
  }
  childCursor(e = this.length) {
    let n = this.children.length;
    return n && (e -= this.children[--n].length), new Xw(this.children, e, n);
  }
  computeBlockGapDeco() {
    let e = [], n = this.view.viewState;
    for (let r = 0, i = 0; ; i++) {
      let s = i == n.viewports.length ? null : n.viewports[i], a = s ? s.from - 1 : this.length;
      if (a > r) {
        let o = (n.lineBlockAt(a).bottom - n.lineBlockAt(r).top) / this.view.scaleY;
        e.push(Te.replace({
          widget: new Gp(o),
          block: !0,
          inclusive: !0,
          isBlockGap: !0
        }).range(r, a));
      }
      if (!s)
        break;
      r = s.to + 1;
    }
    return Te.set(e);
  }
  updateDeco() {
    let e = 1, n = this.view.state.facet(Po).map((s) => (this.dynamicDecorationMap[e++] = typeof s == "function") ? s(this.view) : s), r = !1, i = this.view.state.facet(mC).map((s, a) => {
      let o = typeof s == "function";
      return o && (r = !0), o ? s(this.view) : s;
    });
    for (i.length && (this.dynamicDecorationMap[e++] = r, n.push(mt.join(i))), this.decorations = [
      this.editContextFormatting,
      ...n,
      this.computeBlockGapDeco(),
      this.view.viewState.lineGapDeco
    ]; e < this.decorations.length; )
      this.dynamicDecorationMap[e++] = !1;
    return this.decorations;
  }
  scrollIntoView(e) {
    if (e.isSnapshot) {
      let c = this.view.viewState.lineBlockAt(e.range.head);
      this.view.scrollDOM.scrollTop = c.top - e.yMargin, this.view.scrollDOM.scrollLeft = e.xMargin;
      return;
    }
    for (let c of this.view.state.facet(pC))
      try {
        if (c(this.view, e.range, e))
          return !0;
      } catch (h) {
        Wn(this.view.state, h, "scroll handler");
      }
    let { range: n } = e, r = this.coordsAt(n.head, n.empty ? n.assoc : n.head > n.anchor ? -1 : 1), i;
    if (!r)
      return;
    !n.empty && (i = this.coordsAt(n.anchor, n.anchor > n.head ? -1 : 1)) && (r = {
      left: Math.min(r.left, i.left),
      top: Math.min(r.top, i.top),
      right: Math.max(r.right, i.right),
      bottom: Math.max(r.bottom, i.bottom)
    });
    let s = Id(this.view), a = {
      left: r.left - s.left,
      top: r.top - s.top,
      right: r.right + s.right,
      bottom: r.bottom + s.bottom
    }, { offsetWidth: o, offsetHeight: l } = this.view.scrollDOM;
    H4(this.view.scrollDOM, a, n.head < n.anchor ? -1 : 1, e.x, e.y, Math.max(Math.min(e.xMargin, o), -o), Math.max(Math.min(e.yMargin, l), -l), this.view.textDirection == Dt.LTR);
  }
}
function g8(t) {
  return t.node.nodeType == 1 && t.node.firstChild && (t.offset == 0 || t.node.childNodes[t.offset - 1].contentEditable == "false") && (t.offset == t.node.childNodes.length || t.node.childNodes[t.offset].contentEditable == "false");
}
function yC(t, e) {
  let n = t.observer.selectionRange;
  if (!n.focusNode)
    return null;
  let r = Nw(n.focusNode, n.focusOffset), i = Vw(n.focusNode, n.focusOffset), s = r || i;
  if (i && r && i.node != r.node) {
    let o = At.get(i.node);
    if (!o || o instanceof qr && o.text != i.node.nodeValue)
      s = i;
    else if (t.docView.lastCompositionAfterCursor) {
      let l = At.get(r.node);
      !l || l instanceof qr && l.text != r.node.nodeValue || (s = i);
    }
  }
  if (t.docView.lastCompositionAfterCursor = s != r, !s)
    return null;
  let a = e - s.offset;
  return { from: a, to: a + s.node.nodeValue.length, node: s.node };
}
function b8(t, e, n) {
  let r = yC(t, n);
  if (!r)
    return null;
  let { node: i, from: s, to: a } = r, o = i.nodeValue;
  if (/[\n\r]/.test(o) || t.state.doc.sliceString(r.from, r.to) != o)
    return null;
  let l = e.invertedDesc, c = new Pr(l.mapPos(s), l.mapPos(a), s, a), h = [];
  for (let f = i.parentNode; ; f = f.parentNode) {
    let m = At.get(f);
    if (m instanceof Qi)
      h.push({ node: f, deco: m.mark });
    else {
      if (m instanceof tn || f.nodeName == "DIV" && f.parentNode == t.contentDOM)
        return { range: c, text: i, marks: h, line: f };
      if (f != t.contentDOM)
        h.push({ node: f, deco: new Uo({
          inclusive: !0,
          attributes: i8(f),
          tagName: f.tagName.toLowerCase()
        }) });
      else
        return null;
    }
  }
}
function y8(t, e) {
  return t.nodeType != 1 ? 0 : (e && t.childNodes[e - 1].contentEditable == "false" ? 1 : 0) | (e < t.childNodes.length && t.childNodes[e].contentEditable == "false" ? 2 : 0);
}
let O8 = class {
  constructor() {
    this.changes = [];
  }
  compareRange(e, n) {
    nu(e, n, this.changes);
  }
  comparePoint(e, n) {
    nu(e, n, this.changes);
  }
  boundChange(e) {
    nu(e, e, this.changes);
  }
};
function v8(t, e, n) {
  let r = new O8();
  return mt.compare(t, e, n, r), r.changes;
}
function x8(t, e) {
  for (let n = t; n && n != e; n = n.assignedSlot || n.parentNode)
    if (n.nodeType == 1 && n.contentEditable == "false")
      return !0;
  return !1;
}
function k8(t, e) {
  let n = !1;
  return e && t.iterChangedRanges((r, i) => {
    r < e.to && i > e.from && (n = !0);
  }), n;
}
function w8(t, e, n = 1) {
  let r = t.charCategorizer(e), i = t.doc.lineAt(e), s = e - i.from;
  if (i.length == 0)
    return ne.cursor(e);
  s == 0 ? n = 1 : s == i.length && (n = -1);
  let a = s, o = s;
  n < 0 ? a = Cn(i.text, s, !1) : o = Cn(i.text, s);
  let l = r(i.text.slice(a, o));
  for (; a > 0; ) {
    let c = Cn(i.text, a, !1);
    if (r(i.text.slice(c, a)) != l)
      break;
    a = c;
  }
  for (; o < i.length; ) {
    let c = Cn(i.text, o);
    if (r(i.text.slice(o, c)) != l)
      break;
    o = c;
  }
  return ne.range(a + i.from, o + i.from);
}
function C8(t, e) {
  return e.left > t ? e.left - t : Math.max(0, t - e.right);
}
function S8(t, e) {
  return e.top > t ? e.top - t : Math.max(0, t - e.bottom);
}
function $h(t, e) {
  return t.top < e.bottom - 1 && t.bottom > e.top + 1;
}
function jg(t, e) {
  return e < t.top ? { top: e, left: t.left, right: t.right, bottom: t.bottom } : t;
}
function _g(t, e) {
  return e > t.bottom ? { top: t.top, left: t.left, right: t.right, bottom: e } : t;
}
function Jp(t, e, n) {
  let r, i, s, a, o = !1, l, c, h, f;
  for (let x = t.firstChild; x; x = x.nextSibling) {
    let C = Do(x);
    for (let S = 0; S < C.length; S++) {
      let M = C[S];
      i && $h(i, M) && (M = jg(_g(M, i.bottom), i.top));
      let Z = C8(e, M), q = S8(n, M);
      if (Z == 0 && q == 0)
        return x.nodeType == 3 ? Rg(x, e, n) : Jp(x, e, n);
      if (!r || a > q || a == q && s > Z) {
        r = x, i = M, s = Z, a = q;
        let _ = q ? n < M.top ? -1 : 1 : Z ? e < M.left ? -1 : 1 : 0;
        o = !_ || (_ > 0 ? S < C.length - 1 : S > 0);
      }
      Z == 0 ? n > M.bottom && (!h || h.bottom < M.bottom) ? (l = x, h = M) : n < M.top && (!f || f.top > M.top) && (c = x, f = M) : h && $h(h, M) ? h = _g(h, M.bottom) : f && $h(f, M) && (f = jg(f, M.top));
    }
  }
  if (h && h.bottom >= n ? (r = l, i = h) : f && f.top <= n && (r = c, i = f), !r)
    return { node: t, offset: 0 };
  let m = Math.max(i.left, Math.min(i.right, e));
  if (r.nodeType == 3)
    return Rg(r, m, n);
  if (o && r.contentEditable != "false")
    return Jp(r, m, n);
  let y = Array.prototype.indexOf.call(t.childNodes, r) + (e >= (i.left + i.right) / 2 ? 1 : 0);
  return { node: t, offset: y };
}
function Rg(t, e, n) {
  let r = t.nodeValue.length, i = -1, s = 1e9, a = 0;
  for (let o = 0; o < r; o++) {
    let l = Qs(t, o, o + 1).getClientRects();
    for (let c = 0; c < l.length; c++) {
      let h = l[c];
      if (h.top == h.bottom)
        continue;
      a || (a = e - h.left);
      let f = (h.top > n ? h.top - n : n - h.bottom) - 1;
      if (h.left - 1 <= e && h.right + 1 >= e && f < s) {
        let m = e >= (h.left + h.right) / 2, y = m;
        if ((we.chrome || we.gecko) && Qs(t, o).getBoundingClientRect().left == h.right && (y = !m), f <= 0)
          return { node: t, offset: o + (y ? 1 : 0) };
        i = o + (y ? 1 : 0), s = f;
      }
    }
  }
  return { node: t, offset: i > -1 ? i : a > 0 ? t.nodeValue.length : 0 };
}
function OC(t, e, n, r = -1) {
  var i, s;
  let a = t.contentDOM.getBoundingClientRect(), o = a.top + t.viewState.paddingTop, l, { docHeight: c } = t.viewState, { x: h, y: f } = e, m = f - o;
  if (m < 0)
    return 0;
  if (m > c)
    return t.state.doc.length;
  for (let _ = t.viewState.heightOracle.textHeight / 2, B = !1; l = t.elementAtHeight(m), l.type != _n.Text; )
    for (; m = r > 0 ? l.bottom + _ : l.top - _, !(m >= 0 && m <= c); ) {
      if (B)
        return n ? null : 0;
      B = !0, r = -r;
    }
  f = o + m;
  let y = l.from;
  if (y < t.viewport.from)
    return t.viewport.from == 0 ? 0 : n ? null : $g(t, a, l, h, f);
  if (y > t.viewport.to)
    return t.viewport.to == t.state.doc.length ? t.state.doc.length : n ? null : $g(t, a, l, h, f);
  let x = t.dom.ownerDocument, C = t.root.elementFromPoint ? t.root : x, S = C.elementFromPoint(h, f);
  S && !t.contentDOM.contains(S) && (S = null), S || (h = Math.max(a.left + 1, Math.min(a.right - 1, h)), S = C.elementFromPoint(h, f), S && !t.contentDOM.contains(S) && (S = null));
  let M, Z = -1;
  if (S && ((i = t.docView.nearest(S)) === null || i === void 0 ? void 0 : i.isEditable) != !1) {
    if (x.caretPositionFromPoint) {
      let _ = x.caretPositionFromPoint(h, f);
      _ && ({ offsetNode: M, offset: Z } = _);
    } else if (x.caretRangeFromPoint) {
      let _ = x.caretRangeFromPoint(h, f);
      _ && ({ startContainer: M, startOffset: Z } = _, (!t.contentDOM.contains(M) || we.safari && A8(M, Z, h) || we.chrome && D8(M, Z, h)) && (M = void 0));
    }
    M && (Z = Math.min(hi(M), Z));
  }
  if (!M || !t.docView.dom.contains(M)) {
    let _ = tn.find(t.docView, y);
    if (!_)
      return m > l.top + l.height / 2 ? l.to : l.from;
    ({ node: M, offset: Z } = Jp(_.dom, h, f));
  }
  let q = t.docView.nearest(M);
  if (!q)
    return null;
  if (q.isWidget && ((s = q.dom) === null || s === void 0 ? void 0 : s.nodeType) == 1) {
    let _ = q.dom.getBoundingClientRect();
    return e.y < _.top || e.y <= _.bottom && e.x <= (_.left + _.right) / 2 ? q.posAtStart : q.posAtEnd;
  } else
    return q.localPosFromDOM(M, Z) + q.posAtStart;
}
function $g(t, e, n, r, i) {
  let s = Math.round((r - e.left) * t.defaultCharacterWidth);
  if (t.lineWrapping && n.height > t.defaultLineHeight * 1.5) {
    let o = t.viewState.heightOracle.textHeight, l = Math.floor((i - n.top - (t.defaultLineHeight - o) * 0.5) / o);
    s += l * t.viewState.heightOracle.lineLength;
  }
  let a = t.state.sliceDoc(n.from, n.to);
  return n.from + X4(a, s, t.state.tabSize);
}
function A8(t, e, n) {
  let r;
  if (t.nodeType != 3 || e != (r = t.nodeValue.length))
    return !1;
  for (let i = t.nextSibling; i; i = i.nextSibling)
    if (i.nodeType != 1 || i.nodeName != "BR")
      return !1;
  return Qs(t, r - 1, r).getBoundingClientRect().left > n;
}
function D8(t, e, n) {
  if (e != 0)
    return !1;
  for (let i = t; ; ) {
    let s = i.parentNode;
    if (!s || s.nodeType != 1 || s.firstChild != i)
      return !1;
    if (s.classList.contains("cm-line"))
      break;
    i = s;
  }
  let r = t.nodeType == 1 ? t.getBoundingClientRect() : Qs(t, 0, Math.max(t.nodeValue.length, 1)).getBoundingClientRect();
  return n - r.left > 5;
}
function ef(t, e) {
  let n = t.lineBlockAt(e);
  if (Array.isArray(n.type)) {
    for (let r of n.type)
      if (r.to > e || r.to == e && (r.to == n.to || r.type == _n.Text))
        return r;
  }
  return n;
}
function P8(t, e, n, r) {
  let i = ef(t, e.head), s = !r || i.type != _n.Text || !(t.lineWrapping || i.widgetLineBreaks) ? null : t.coordsAtPos(e.assoc < 0 && e.head > i.from ? e.head - 1 : e.head);
  if (s) {
    let a = t.dom.getBoundingClientRect(), o = t.textDirectionAt(i.from), l = t.posAtCoords({
      x: n == (o == Dt.LTR) ? a.right - 1 : a.left + 1,
      y: (s.top + s.bottom) / 2
    });
    if (l != null)
      return ne.cursor(l, n ? -1 : 1);
  }
  return ne.cursor(n ? i.to : i.from, n ? -1 : 1);
}
function Zg(t, e, n, r) {
  let i = t.state.doc.lineAt(e.head), s = t.bidiSpans(i), a = t.textDirectionAt(i.from);
  for (let o = e, l = null; ; ) {
    let c = f8(i, s, a, o, n), h = rC;
    if (!c) {
      if (i.number == (n ? t.state.doc.lines : 1))
        return o;
      h = `
`, i = t.state.doc.line(i.number + (n ? 1 : -1)), s = t.bidiSpans(i), c = t.visualLineSide(i, !n);
    }
    if (l) {
      if (!l(h))
        return o;
    } else {
      if (!r)
        return c;
      l = r(h);
    }
    o = c;
  }
}
function E8(t, e, n) {
  let r = t.state.charCategorizer(e), i = r(n);
  return (s) => {
    let a = r(s);
    return i == an.Space && (i = a), i == a;
  };
}
function F8(t, e, n, r) {
  let i = e.head, s = n ? 1 : -1;
  if (i == (n ? t.state.doc.length : 0))
    return ne.cursor(i, e.assoc);
  let a = e.goalColumn, o, l = t.contentDOM.getBoundingClientRect(), c = t.coordsAtPos(i, e.assoc || -1), h = t.documentTop;
  if (c)
    a == null && (a = c.left - l.left), o = s < 0 ? c.top : c.bottom;
  else {
    let y = t.viewState.lineBlockAt(i);
    a == null && (a = Math.min(l.right - l.left, t.defaultCharacterWidth * (i - y.from))), o = (s < 0 ? y.top : y.bottom) + h;
  }
  let f = l.left + a, m = r ?? t.viewState.heightOracle.textHeight >> 1;
  for (let y = 0; ; y += 10) {
    let x = o + (m + y) * s, C = OC(t, { x: f, y: x }, !1, s);
    if (x < l.top || x > l.bottom || (s < 0 ? C < i : C > i)) {
      let S = t.docView.coordsForChar(C), M = !S || x < S.top ? -1 : 1;
      return ne.cursor(C, M, void 0, a);
    }
  }
}
function ru(t, e, n) {
  for (; ; ) {
    let r = 0;
    for (let i of t)
      i.between(e - 1, e + 1, (s, a, o) => {
        if (e > s && e < a) {
          let l = r || n || (e - s < a - e ? -1 : 1);
          e = l < 0 ? s : a, r = l;
        }
      });
    if (!r)
      return e;
  }
}
function Zh(t, e, n) {
  let r = ru(t.state.facet(Ld).map((i) => i(t)), n.from, e.head > n.from ? -1 : 1);
  return r == n.from ? n : ne.cursor(r, r < n.from ? 1 : -1);
}
const oo = "￿";
class B8 {
  constructor(e, n) {
    this.points = e, this.text = "", this.lineSeparator = n.facet(dt.lineSeparator);
  }
  append(e) {
    this.text += e;
  }
  lineBreak() {
    this.text += oo;
  }
  readRange(e, n) {
    if (!e)
      return this;
    let r = e.parentNode;
    for (let i = e; ; ) {
      this.findPointBefore(r, i);
      let s = this.text.length;
      this.readNode(i);
      let a = i.nextSibling;
      if (a == n)
        break;
      let o = At.get(i), l = At.get(a);
      (o && l ? o.breakAfter : (o ? o.breakAfter : wu(i)) || wu(a) && (i.nodeName != "BR" || i.cmIgnore) && this.text.length > s) && this.lineBreak(), i = a;
    }
    return this.findPointBefore(r, n), this;
  }
  readTextNode(e) {
    let n = e.nodeValue;
    for (let r of this.points)
      r.node == e && (r.pos = this.text.length + Math.min(r.offset, n.length));
    for (let r = 0, i = this.lineSeparator ? null : /\r\n?|\n/g; ; ) {
      let s = -1, a = 1, o;
      if (this.lineSeparator ? (s = n.indexOf(this.lineSeparator, r), a = this.lineSeparator.length) : (o = i.exec(n)) && (s = o.index, a = o[0].length), this.append(n.slice(r, s < 0 ? n.length : s)), s < 0)
        break;
      if (this.lineBreak(), a > 1)
        for (let l of this.points)
          l.node == e && l.pos > this.text.length && (l.pos -= a - 1);
      r = s + a;
    }
  }
  readNode(e) {
    if (e.cmIgnore)
      return;
    let n = At.get(e), r = n && n.overrideDOMText;
    if (r != null) {
      this.findPointInside(e, r.length);
      for (let i = r.iter(); !i.next().done; )
        i.lineBreak ? this.lineBreak() : this.append(i.value);
    } else e.nodeType == 3 ? this.readTextNode(e) : e.nodeName == "BR" ? e.nextSibling && this.lineBreak() : e.nodeType == 1 && this.readRange(e.firstChild, null);
  }
  findPointBefore(e, n) {
    for (let r of this.points)
      r.node == e && e.childNodes[r.offset] == n && (r.pos = this.text.length);
  }
  findPointInside(e, n) {
    for (let r of this.points)
      (e.nodeType == 3 ? r.node == e : e.contains(r.node)) && (r.pos = this.text.length + (M8(e, r.node, r.offset) ? n : 0));
  }
}
function M8(t, e, n) {
  for (; ; ) {
    if (!e || n < hi(e))
      return !1;
    if (e == t)
      return !0;
    n = Ms(e) + 1, e = e.parentNode;
  }
}
class Lg {
  constructor(e, n) {
    this.node = e, this.offset = n, this.pos = -1;
  }
}
class Q8 {
  constructor(e, n, r, i) {
    this.typeOver = i, this.bounds = null, this.text = "", this.domChanged = n > -1;
    let { impreciseHead: s, impreciseAnchor: a } = e.docView;
    if (e.state.readOnly && n > -1)
      this.newSel = null;
    else if (n > -1 && (this.bounds = e.docView.domBoundsAround(n, r, 0))) {
      let o = s || a ? [] : _8(e), l = new B8(o, e.state);
      l.readRange(this.bounds.startDOM, this.bounds.endDOM), this.text = l.text, this.newSel = R8(o, this.bounds.from);
    } else {
      let o = e.observer.selectionRange, l = s && s.node == o.focusNode && s.offset == o.focusOffset || !Np(e.contentDOM, o.focusNode) ? e.state.selection.main.head : e.docView.posFromDOM(o.focusNode, o.focusOffset), c = a && a.node == o.anchorNode && a.offset == o.anchorOffset || !Np(e.contentDOM, o.anchorNode) ? e.state.selection.main.anchor : e.docView.posFromDOM(o.anchorNode, o.anchorOffset), h = e.viewport;
      if ((we.ios || we.chrome) && e.state.selection.main.empty && l != c && (h.from > 0 || h.to < e.state.doc.length)) {
        let f = Math.min(l, c), m = Math.max(l, c), y = h.from - f, x = h.to - m;
        (y == 0 || y == 1 || f == 0) && (x == 0 || x == -1 || m == e.state.doc.length) && (l = 0, c = e.state.doc.length);
      }
      this.newSel = ne.single(c, l);
    }
  }
}
function vC(t, e) {
  let n, { newSel: r } = e, i = t.state.selection.main, s = t.inputState.lastKeyTime > Date.now() - 100 ? t.inputState.lastKeyCode : -1;
  if (e.bounds) {
    let { from: a, to: o } = e.bounds, l = i.from, c = null;
    (s === 8 || we.android && e.text.length < o - a) && (l = i.to, c = "end");
    let h = j8(t.state.doc.sliceString(a, o, oo), e.text, l - a, c);
    h && (we.chrome && s == 13 && h.toB == h.from + 2 && e.text.slice(h.from, h.toB) == oo + oo && h.toB--, n = {
      from: a + h.from,
      to: a + h.toA,
      insert: ct.of(e.text.slice(h.from, h.toB).split(oo))
    });
  } else r && (!t.hasFocus && t.state.facet(ki) || r.main.eq(i)) && (r = null);
  if (!n && !r)
    return !1;
  if (!n && e.typeOver && !i.empty && r && r.main.empty ? n = { from: i.from, to: i.to, insert: t.state.doc.slice(i.from, i.to) } : (we.mac || we.android) && n && n.from == n.to && n.from == i.head - 1 && /^\. ?$/.test(n.insert.toString()) && t.contentDOM.getAttribute("autocorrect") == "off" ? (r && n.insert.length == 2 && (r = ne.single(r.main.anchor - 1, r.main.head - 1)), n = { from: n.from, to: n.to, insert: ct.of([n.insert.toString().replace(".", " ")]) }) : n && n.from >= i.from && n.to <= i.to && (n.from != i.from || n.to != i.to) && i.to - i.from - (n.to - n.from) <= 4 ? n = {
    from: i.from,
    to: i.to,
    insert: t.state.doc.slice(i.from, n.from).append(n.insert).append(t.state.doc.slice(n.to, i.to))
  } : we.chrome && n && n.from == n.to && n.from == i.head && n.insert.toString() == `
 ` && t.lineWrapping && (r && (r = ne.single(r.main.anchor - 1, r.main.head - 1)), n = { from: i.from, to: i.to, insert: ct.of([" "]) }), n)
    return Nd(t, n, r, s);
  if (r && !r.main.eq(i)) {
    let a = !1, o = "select";
    return t.inputState.lastSelectionTime > Date.now() - 50 && (t.inputState.lastSelectionOrigin == "select" && (a = !0), o = t.inputState.lastSelectionOrigin), t.dispatch({ selection: r, scrollIntoView: a, userEvent: o }), !0;
  } else
    return !1;
}
function Nd(t, e, n, r = -1) {
  if (we.ios && t.inputState.flushIOSKey(e))
    return !0;
  let i = t.state.selection.main;
  if (we.android && (e.to == i.to && // GBoard will sometimes remove a space it just inserted
  // after a completion when you press enter
  (e.from == i.from || e.from == i.from - 1 && t.state.sliceDoc(e.from, i.from) == " ") && e.insert.length == 1 && e.insert.lines == 2 && sa(t.contentDOM, "Enter", 13) || (e.from == i.from - 1 && e.to == i.to && e.insert.length == 0 || r == 8 && e.insert.length < e.to - e.from && e.to > i.head) && sa(t.contentDOM, "Backspace", 8) || e.from == i.from && e.to == i.to + 1 && e.insert.length == 0 && sa(t.contentDOM, "Delete", 46)))
    return !0;
  let s = e.insert.toString();
  t.inputState.composing >= 0 && t.inputState.composing++;
  let a, o = () => a || (a = T8(t, e, n));
  return t.state.facet(lC).some((l) => l(t, e.from, e.to, s, o)) || t.dispatch(o()), !0;
}
function T8(t, e, n) {
  let r, i = t.state, s = i.selection.main;
  if (e.from >= s.from && e.to <= s.to && e.to - e.from >= (s.to - s.from) / 3 && (!n || n.main.empty && n.main.from == e.from + e.insert.length) && t.inputState.composing < 0) {
    let o = s.from < e.from ? i.sliceDoc(s.from, e.from) : "", l = s.to > e.to ? i.sliceDoc(e.to, s.to) : "";
    r = i.replaceSelection(t.state.toText(o + e.insert.sliceString(0, void 0, t.state.lineBreak) + l));
  } else {
    let o = i.changes(e), l = n && n.main.to <= o.newLength ? n.main : void 0;
    if (i.selection.ranges.length > 1 && t.inputState.composing >= 0 && e.to <= s.to && e.to >= s.to - 10) {
      let c = t.state.sliceDoc(e.from, e.to), h, f = n && yC(t, n.main.head);
      if (f) {
        let x = e.insert.length - (e.to - e.from);
        h = { from: f.from, to: f.to - x };
      } else
        h = t.state.doc.lineAt(s.head);
      let m = s.to - e.to, y = s.to - s.from;
      r = i.changeByRange((x) => {
        if (x.from == s.from && x.to == s.to)
          return { changes: o, range: l || x.map(o) };
        let C = x.to - m, S = C - c.length;
        if (x.to - x.from != y || t.state.sliceDoc(S, C) != c || // Unfortunately, there's no way to make multiple
        // changes in the same node work without aborting
        // composition, so cursors in the composition range are
        // ignored.
        x.to >= h.from && x.from <= h.to)
          return { range: x };
        let M = i.changes({ from: S, to: C, insert: e.insert }), Z = x.to - s.to;
        return {
          changes: M,
          range: l ? ne.range(Math.max(0, l.anchor + Z), Math.max(0, l.head + Z)) : x.map(M)
        };
      });
    } else
      r = {
        changes: o,
        selection: l && i.selection.replaceRange(l)
      };
  }
  let a = "input.type";
  return (t.composing || t.inputState.compositionPendingChange && t.inputState.compositionEndedAt > Date.now() - 50) && (t.inputState.compositionPendingChange = !1, a += ".compose", t.inputState.compositionFirstChange && (a += ".start", t.inputState.compositionFirstChange = !1)), i.update(r, { userEvent: a, scrollIntoView: !0 });
}
function j8(t, e, n, r) {
  let i = Math.min(t.length, e.length), s = 0;
  for (; s < i && t.charCodeAt(s) == e.charCodeAt(s); )
    s++;
  if (s == i && t.length == e.length)
    return null;
  let a = t.length, o = e.length;
  for (; a > 0 && o > 0 && t.charCodeAt(a - 1) == e.charCodeAt(o - 1); )
    a--, o--;
  if (r == "end") {
    let l = Math.max(0, s - Math.min(a, o));
    n -= a + l - s;
  }
  if (a < s && t.length < e.length) {
    let l = n <= s && n >= a ? s - n : 0;
    s -= l, o = s + (o - a), a = s;
  } else if (o < s) {
    let l = n <= s && n >= o ? s - n : 0;
    s -= l, a = s + (a - o), o = s;
  }
  return { from: s, toA: a, toB: o };
}
function _8(t) {
  let e = [];
  if (t.root.activeElement != t.contentDOM)
    return e;
  let { anchorNode: n, anchorOffset: r, focusNode: i, focusOffset: s } = t.observer.selectionRange;
  return n && (e.push(new Lg(n, r)), (i != n || s != r) && e.push(new Lg(i, s))), e;
}
function R8(t, e) {
  if (t.length == 0)
    return null;
  let n = t[0].pos, r = t.length == 2 ? t[1].pos : n;
  return n > -1 && r > -1 ? ne.single(n + e, r + e) : null;
}
class $8 {
  setSelectionOrigin(e) {
    this.lastSelectionOrigin = e, this.lastSelectionTime = Date.now();
  }
  constructor(e) {
    this.view = e, this.lastKeyCode = 0, this.lastKeyTime = 0, this.lastTouchTime = 0, this.lastFocusTime = 0, this.lastScrollTop = 0, this.lastScrollLeft = 0, this.pendingIOSKey = void 0, this.tabFocusMode = -1, this.lastSelectionOrigin = null, this.lastSelectionTime = 0, this.lastContextMenu = 0, this.scrollHandlers = [], this.handlers = /* @__PURE__ */ Object.create(null), this.composing = -1, this.compositionFirstChange = null, this.compositionEndedAt = 0, this.compositionPendingKey = !1, this.compositionPendingChange = !1, this.mouseSelection = null, this.draggedContent = null, this.handleEvent = this.handleEvent.bind(this), this.notifiedFocused = e.hasFocus, we.safari && e.contentDOM.addEventListener("input", () => null), we.gecko && e6(e.contentDOM.ownerDocument);
  }
  handleEvent(e) {
    !q8(this.view, e) || this.ignoreDuringComposition(e) || e.type == "keydown" && this.keydown(e) || this.runHandlers(e.type, e);
  }
  runHandlers(e, n) {
    let r = this.handlers[e];
    if (r) {
      for (let i of r.observers)
        i(this.view, n);
      for (let i of r.handlers) {
        if (n.defaultPrevented)
          break;
        if (i(this.view, n)) {
          n.preventDefault();
          break;
        }
      }
    }
  }
  ensureHandlers(e) {
    let n = Z8(e), r = this.handlers, i = this.view.contentDOM;
    for (let s in n)
      if (s != "scroll") {
        let a = !n[s].handlers.length, o = r[s];
        o && a != !o.handlers.length && (i.removeEventListener(s, this.handleEvent), o = null), o || i.addEventListener(s, this.handleEvent, { passive: a });
      }
    for (let s in r)
      s != "scroll" && !n[s] && i.removeEventListener(s, this.handleEvent);
    this.handlers = n;
  }
  keydown(e) {
    if (this.lastKeyCode = e.keyCode, this.lastKeyTime = Date.now(), e.keyCode == 9 && this.tabFocusMode > -1 && (!this.tabFocusMode || Date.now() <= this.tabFocusMode))
      return !0;
    if (this.tabFocusMode > 0 && e.keyCode != 27 && kC.indexOf(e.keyCode) < 0 && (this.tabFocusMode = -1), we.android && we.chrome && !e.synthetic && (e.keyCode == 13 || e.keyCode == 8))
      return this.view.observer.delayAndroidKey(e.key, e.keyCode), !0;
    let n;
    return we.ios && !e.synthetic && !e.altKey && !e.metaKey && ((n = xC.find((r) => r.keyCode == e.keyCode)) && !e.ctrlKey || L8.indexOf(e.key) > -1 && e.ctrlKey && !e.shiftKey) ? (this.pendingIOSKey = n || e, setTimeout(() => this.flushIOSKey(), 250), !0) : (e.keyCode != 229 && this.view.observer.forceFlush(), !1);
  }
  flushIOSKey(e) {
    let n = this.pendingIOSKey;
    return !n || n.key == "Enter" && e && e.from < e.to && /^\S+$/.test(e.insert.toString()) ? !1 : (this.pendingIOSKey = void 0, sa(this.view.contentDOM, n.key, n.keyCode, n instanceof KeyboardEvent ? n : void 0));
  }
  ignoreDuringComposition(e) {
    return /^key/.test(e.type) ? this.composing > 0 ? !0 : we.safari && !we.ios && this.compositionPendingKey && Date.now() - this.compositionEndedAt < 100 ? (this.compositionPendingKey = !1, !0) : !1 : !1;
  }
  startMouseSelection(e) {
    this.mouseSelection && this.mouseSelection.destroy(), this.mouseSelection = e;
  }
  update(e) {
    this.view.observer.update(e), this.mouseSelection && this.mouseSelection.update(e), this.draggedContent && e.docChanged && (this.draggedContent = this.draggedContent.map(e.changes)), e.transactions.length && (this.lastKeyCode = this.lastSelectionTime = 0);
  }
  destroy() {
    this.mouseSelection && this.mouseSelection.destroy();
  }
}
function Ig(t, e) {
  return (n, r) => {
    try {
      return e.call(t, r, n);
    } catch (i) {
      Wn(n.state, i);
    }
  };
}
function Z8(t) {
  let e = /* @__PURE__ */ Object.create(null);
  function n(r) {
    return e[r] || (e[r] = { observers: [], handlers: [] });
  }
  for (let r of t) {
    let i = r.spec;
    if (i && i.domEventHandlers)
      for (let s in i.domEventHandlers) {
        let a = i.domEventHandlers[s];
        a && n(s).handlers.push(Ig(r.value, a));
      }
    if (i && i.domEventObservers)
      for (let s in i.domEventObservers) {
        let a = i.domEventObservers[s];
        a && n(s).observers.push(Ig(r.value, a));
      }
  }
  for (let r in Ur)
    n(r).handlers.push(Ur[r]);
  for (let r in Fr)
    n(r).observers.push(Fr[r]);
  return e;
}
const xC = [
  { key: "Backspace", keyCode: 8, inputType: "deleteContentBackward" },
  { key: "Enter", keyCode: 13, inputType: "insertParagraph" },
  { key: "Enter", keyCode: 13, inputType: "insertLineBreak" },
  { key: "Delete", keyCode: 46, inputType: "deleteContentForward" }
], L8 = "dthko", kC = [16, 17, 18, 20, 91, 92, 224, 225], Ql = 6;
function Tl(t) {
  return Math.max(0, t) * 0.7 + 8;
}
function I8(t, e) {
  return Math.max(Math.abs(t.clientX - e.clientX), Math.abs(t.clientY - e.clientY));
}
class N8 {
  constructor(e, n, r, i) {
    this.view = e, this.startEvent = n, this.style = r, this.mustSelect = i, this.scrollSpeed = { x: 0, y: 0 }, this.scrolling = -1, this.lastEvent = n, this.scrollParents = Y4(e.contentDOM), this.atoms = e.state.facet(Ld).map((a) => a(e));
    let s = e.contentDOM.ownerDocument;
    s.addEventListener("mousemove", this.move = this.move.bind(this)), s.addEventListener("mouseup", this.up = this.up.bind(this)), this.extend = n.shiftKey, this.multiple = e.state.facet(dt.allowMultipleSelections) && V8(e, n), this.dragging = W8(e, n) && SC(n) == 1 ? null : !1;
  }
  start(e) {
    this.dragging === !1 && this.select(e);
  }
  move(e) {
    if (e.buttons == 0)
      return this.destroy();
    if (this.dragging || this.dragging == null && I8(this.startEvent, e) < 10)
      return;
    this.select(this.lastEvent = e);
    let n = 0, r = 0, i = 0, s = 0, a = this.view.win.innerWidth, o = this.view.win.innerHeight;
    this.scrollParents.x && ({ left: i, right: a } = this.scrollParents.x.getBoundingClientRect()), this.scrollParents.y && ({ top: s, bottom: o } = this.scrollParents.y.getBoundingClientRect());
    let l = Id(this.view);
    e.clientX - l.left <= i + Ql ? n = -Tl(i - e.clientX) : e.clientX + l.right >= a - Ql && (n = Tl(e.clientX - a)), e.clientY - l.top <= s + Ql ? r = -Tl(s - e.clientY) : e.clientY + l.bottom >= o - Ql && (r = Tl(e.clientY - o)), this.setScrollSpeed(n, r);
  }
  up(e) {
    this.dragging == null && this.select(this.lastEvent), this.dragging || e.preventDefault(), this.destroy();
  }
  destroy() {
    this.setScrollSpeed(0, 0);
    let e = this.view.contentDOM.ownerDocument;
    e.removeEventListener("mousemove", this.move), e.removeEventListener("mouseup", this.up), this.view.inputState.mouseSelection = this.view.inputState.draggedContent = null;
  }
  setScrollSpeed(e, n) {
    this.scrollSpeed = { x: e, y: n }, e || n ? this.scrolling < 0 && (this.scrolling = setInterval(() => this.scroll(), 50)) : this.scrolling > -1 && (clearInterval(this.scrolling), this.scrolling = -1);
  }
  scroll() {
    let { x: e, y: n } = this.scrollSpeed;
    e && this.scrollParents.x && (this.scrollParents.x.scrollLeft += e, e = 0), n && this.scrollParents.y && (this.scrollParents.y.scrollTop += n, n = 0), (e || n) && this.view.win.scrollBy(e, n), this.dragging === !1 && this.select(this.lastEvent);
  }
  skipAtoms(e) {
    let n = null;
    for (let r = 0; r < e.ranges.length; r++) {
      let i = e.ranges[r], s = null;
      if (i.empty) {
        let a = ru(this.atoms, i.from, 0);
        a != i.from && (s = ne.cursor(a, -1));
      } else {
        let a = ru(this.atoms, i.from, -1), o = ru(this.atoms, i.to, 1);
        (a != i.from || o != i.to) && (s = ne.range(i.from == i.anchor ? a : o, i.from == i.head ? a : o));
      }
      s && (n || (n = e.ranges.slice()), n[r] = s);
    }
    return n ? ne.create(n, e.mainIndex) : e;
  }
  select(e) {
    let { view: n } = this, r = this.skipAtoms(this.style.get(e, this.extend, this.multiple));
    (this.mustSelect || !r.eq(n.state.selection, this.dragging === !1)) && this.view.dispatch({
      selection: r,
      userEvent: "select.pointer"
    }), this.mustSelect = !1;
  }
  update(e) {
    e.transactions.some((n) => n.isUserEvent("input.type")) ? this.destroy() : this.style.update(e) && setTimeout(() => this.select(this.lastEvent), 20);
  }
}
function V8(t, e) {
  let n = t.state.facet(iC);
  return n.length ? n[0](e) : we.mac ? e.metaKey : e.ctrlKey;
}
function X8(t, e) {
  let n = t.state.facet(sC);
  return n.length ? n[0](e) : we.mac ? !e.altKey : !e.ctrlKey;
}
function W8(t, e) {
  let { main: n } = t.state.selection;
  if (n.empty)
    return !1;
  let r = Ao(t.root);
  if (!r || r.rangeCount == 0)
    return !0;
  let i = r.getRangeAt(0).getClientRects();
  for (let s = 0; s < i.length; s++) {
    let a = i[s];
    if (a.left <= e.clientX && a.right >= e.clientX && a.top <= e.clientY && a.bottom >= e.clientY)
      return !0;
  }
  return !1;
}
function q8(t, e) {
  if (!e.bubbles)
    return !0;
  if (e.defaultPrevented)
    return !1;
  for (let n = e.target, r; n != t.contentDOM; n = n.parentNode)
    if (!n || n.nodeType == 11 || (r = At.get(n)) && r.ignoreEvent(e))
      return !1;
  return !0;
}
const Ur = /* @__PURE__ */ Object.create(null), Fr = /* @__PURE__ */ Object.create(null), wC = we.ie && we.ie_version < 15 || we.ios && we.webkit_version < 604;
function U8(t) {
  let e = t.dom.parentNode;
  if (!e)
    return;
  let n = e.appendChild(document.createElement("textarea"));
  n.style.cssText = "position: fixed; left: -10000px; top: 10px", n.focus(), setTimeout(() => {
    t.focus(), n.remove(), CC(t, n.value);
  }, 50);
}
function Bc(t, e, n) {
  for (let r of t.facet(e))
    n = r(n, t);
  return n;
}
function CC(t, e) {
  e = Bc(t.state, Rd, e);
  let { state: n } = t, r, i = 1, s = n.toText(e), a = s.lines == n.selection.ranges.length;
  if (tf != null && n.selection.ranges.every((l) => l.empty) && tf == s.toString()) {
    let l = -1;
    r = n.changeByRange((c) => {
      let h = n.doc.lineAt(c.from);
      if (h.from == l)
        return { range: c };
      l = h.from;
      let f = n.toText((a ? s.line(i++).text : e) + n.lineBreak);
      return {
        changes: { from: h.from, insert: f },
        range: ne.cursor(c.from + f.length)
      };
    });
  } else a ? r = n.changeByRange((l) => {
    let c = s.line(i++);
    return {
      changes: { from: l.from, to: l.to, insert: c.text },
      range: ne.cursor(l.from + c.length)
    };
  }) : r = n.replaceSelection(s);
  t.dispatch(r, {
    userEvent: "input.paste",
    scrollIntoView: !0
  });
}
Fr.scroll = (t) => {
  t.inputState.lastScrollTop = t.scrollDOM.scrollTop, t.inputState.lastScrollLeft = t.scrollDOM.scrollLeft;
};
Ur.keydown = (t, e) => (t.inputState.setSelectionOrigin("select"), e.keyCode == 27 && t.inputState.tabFocusMode != 0 && (t.inputState.tabFocusMode = Date.now() + 2e3), !1);
Fr.touchstart = (t, e) => {
  t.inputState.lastTouchTime = Date.now(), t.inputState.setSelectionOrigin("select.pointer");
};
Fr.touchmove = (t) => {
  t.inputState.setSelectionOrigin("select.pointer");
};
Ur.mousedown = (t, e) => {
  if (t.observer.flush(), t.inputState.lastTouchTime > Date.now() - 2e3)
    return !1;
  let n = null;
  for (let r of t.state.facet(aC))
    if (n = r(t, e), n)
      break;
  if (!n && e.button == 0 && (n = H8(t, e)), n) {
    let r = !t.hasFocus;
    t.inputState.startMouseSelection(new N8(t, e, n, r)), r && t.observer.ignore(() => {
      Zw(t.contentDOM);
      let s = t.root.activeElement;
      s && !s.contains(t.contentDOM) && s.blur();
    });
    let i = t.inputState.mouseSelection;
    if (i)
      return i.start(e), i.dragging === !1;
  }
  return !1;
};
function Ng(t, e, n, r) {
  if (r == 1)
    return ne.cursor(e, n);
  if (r == 2)
    return w8(t.state, e, n);
  {
    let i = tn.find(t.docView, e), s = t.state.doc.lineAt(i ? i.posAtEnd : e), a = i ? i.posAtStart : s.from, o = i ? i.posAtEnd : s.to;
    return o < t.state.doc.length && o == s.to && o++, ne.range(a, o);
  }
}
let Vg = (t, e, n) => e >= n.top && e <= n.bottom && t >= n.left && t <= n.right;
function G8(t, e, n, r) {
  let i = tn.find(t.docView, e);
  if (!i)
    return 1;
  let s = e - i.posAtStart;
  if (s == 0)
    return 1;
  if (s == i.length)
    return -1;
  let a = i.coordsAt(s, -1);
  if (a && Vg(n, r, a))
    return -1;
  let o = i.coordsAt(s, 1);
  return o && Vg(n, r, o) ? 1 : a && a.bottom >= r ? -1 : 1;
}
function Xg(t, e) {
  let n = t.posAtCoords({ x: e.clientX, y: e.clientY }, !1);
  return { pos: n, bias: G8(t, n, e.clientX, e.clientY) };
}
const z8 = we.ie && we.ie_version <= 11;
let Wg = null, qg = 0, Ug = 0;
function SC(t) {
  if (!z8)
    return t.detail;
  let e = Wg, n = Ug;
  return Wg = t, Ug = Date.now(), qg = !e || n > Date.now() - 400 && Math.abs(e.clientX - t.clientX) < 2 && Math.abs(e.clientY - t.clientY) < 2 ? (qg + 1) % 3 : 1;
}
function H8(t, e) {
  let n = Xg(t, e), r = SC(e), i = t.state.selection;
  return {
    update(s) {
      s.docChanged && (n.pos = s.changes.mapPos(n.pos), i = i.map(s.changes));
    },
    get(s, a, o) {
      let l = Xg(t, s), c, h = Ng(t, l.pos, l.bias, r);
      if (n.pos != l.pos && !a) {
        let f = Ng(t, n.pos, n.bias, r), m = Math.min(f.from, h.from), y = Math.max(f.to, h.to);
        h = m < h.from ? ne.range(m, y) : ne.range(y, m);
      }
      return a ? i.replaceRange(i.main.extend(h.from, h.to)) : o && r == 1 && i.ranges.length > 1 && (c = Y8(i, l.pos)) ? c : o ? i.addRange(h) : ne.create([h]);
    }
  };
}
function Y8(t, e) {
  for (let n = 0; n < t.ranges.length; n++) {
    let { from: r, to: i } = t.ranges[n];
    if (r <= e && i >= e)
      return ne.create(t.ranges.slice(0, n).concat(t.ranges.slice(n + 1)), t.mainIndex == n ? 0 : t.mainIndex - (t.mainIndex > n ? 1 : 0));
  }
  return null;
}
Ur.dragstart = (t, e) => {
  let { selection: { main: n } } = t.state;
  if (e.target.draggable) {
    let i = t.docView.nearest(e.target);
    if (i && i.isWidget) {
      let s = i.posAtStart, a = s + i.length;
      (s >= n.to || a <= n.from) && (n = ne.range(s, a));
    }
  }
  let { inputState: r } = t;
  return r.mouseSelection && (r.mouseSelection.dragging = !0), r.draggedContent = n, e.dataTransfer && (e.dataTransfer.setData("Text", Bc(t.state, $d, t.state.sliceDoc(n.from, n.to))), e.dataTransfer.effectAllowed = "copyMove"), !1;
};
Ur.dragend = (t) => (t.inputState.draggedContent = null, !1);
function Gg(t, e, n, r) {
  if (n = Bc(t.state, Rd, n), !n)
    return;
  let i = t.posAtCoords({ x: e.clientX, y: e.clientY }, !1), { draggedContent: s } = t.inputState, a = r && s && X8(t, e) ? { from: s.from, to: s.to } : null, o = { from: i, insert: n }, l = t.state.changes(a ? [a, o] : o);
  t.focus(), t.dispatch({
    changes: l,
    selection: { anchor: l.mapPos(i, -1), head: l.mapPos(i, 1) },
    userEvent: a ? "move.drop" : "input.drop"
  }), t.inputState.draggedContent = null;
}
Ur.drop = (t, e) => {
  if (!e.dataTransfer)
    return !1;
  if (t.state.readOnly)
    return !0;
  let n = e.dataTransfer.files;
  if (n && n.length) {
    let r = Array(n.length), i = 0, s = () => {
      ++i == n.length && Gg(t, e, r.filter((a) => a != null).join(t.state.lineBreak), !1);
    };
    for (let a = 0; a < n.length; a++) {
      let o = new FileReader();
      o.onerror = s, o.onload = () => {
        /[\x00-\x08\x0e-\x1f]{2}/.test(o.result) || (r[a] = o.result), s();
      }, o.readAsText(n[a]);
    }
    return !0;
  } else {
    let r = e.dataTransfer.getData("Text");
    if (r)
      return Gg(t, e, r, !0), !0;
  }
  return !1;
};
Ur.paste = (t, e) => {
  if (t.state.readOnly)
    return !0;
  t.observer.flush();
  let n = wC ? null : e.clipboardData;
  return n ? (CC(t, n.getData("text/plain") || n.getData("text/uri-list")), !0) : (U8(t), !1);
};
function K8(t, e) {
  let n = t.dom.parentNode;
  if (!n)
    return;
  let r = n.appendChild(document.createElement("textarea"));
  r.style.cssText = "position: fixed; left: -10000px; top: 10px", r.value = e, r.focus(), r.selectionEnd = e.length, r.selectionStart = 0, setTimeout(() => {
    r.remove(), t.focus();
  }, 50);
}
function J8(t) {
  let e = [], n = [], r = !1;
  for (let i of t.selection.ranges)
    i.empty || (e.push(t.sliceDoc(i.from, i.to)), n.push(i));
  if (!e.length) {
    let i = -1;
    for (let { from: s } of t.selection.ranges) {
      let a = t.doc.lineAt(s);
      a.number > i && (e.push(a.text), n.push({ from: a.from, to: Math.min(t.doc.length, a.to + 1) })), i = a.number;
    }
    r = !0;
  }
  return { text: Bc(t, $d, e.join(t.lineBreak)), ranges: n, linewise: r };
}
let tf = null;
Ur.copy = Ur.cut = (t, e) => {
  let { text: n, ranges: r, linewise: i } = J8(t.state);
  if (!n && !i)
    return !1;
  tf = i ? n : null, e.type == "cut" && !t.state.readOnly && t.dispatch({
    changes: r,
    scrollIntoView: !0,
    userEvent: "delete.cut"
  });
  let s = wC ? null : e.clipboardData;
  return s ? (s.clearData(), s.setData("text/plain", n), !0) : (K8(t, n), !1);
};
const AC = /* @__PURE__ */ _i.define();
function DC(t, e) {
  let n = [];
  for (let r of t.facet(uC)) {
    let i = r(t, e);
    i && n.push(i);
  }
  return n ? t.update({ effects: n, annotations: AC.of(!0) }) : null;
}
function PC(t) {
  setTimeout(() => {
    let e = t.hasFocus;
    if (e != t.inputState.notifiedFocused) {
      let n = DC(t.state, e);
      n ? t.dispatch(n) : t.update([]);
    }
  }, 10);
}
Fr.focus = (t) => {
  t.inputState.lastFocusTime = Date.now(), !t.scrollDOM.scrollTop && (t.inputState.lastScrollTop || t.inputState.lastScrollLeft) && (t.scrollDOM.scrollTop = t.inputState.lastScrollTop, t.scrollDOM.scrollLeft = t.inputState.lastScrollLeft), PC(t);
};
Fr.blur = (t) => {
  t.observer.clearSelectionRange(), PC(t);
};
Fr.compositionstart = Fr.compositionupdate = (t) => {
  t.observer.editContext || (t.inputState.compositionFirstChange == null && (t.inputState.compositionFirstChange = !0), t.inputState.composing < 0 && (t.inputState.composing = 0));
};
Fr.compositionend = (t) => {
  t.observer.editContext || (t.inputState.composing = -1, t.inputState.compositionEndedAt = Date.now(), t.inputState.compositionPendingKey = !0, t.inputState.compositionPendingChange = t.observer.pendingRecords().length > 0, t.inputState.compositionFirstChange = null, we.chrome && we.android ? t.observer.flushSoon() : t.inputState.compositionPendingChange ? Promise.resolve().then(() => t.observer.flush()) : setTimeout(() => {
    t.inputState.composing < 0 && t.docView.hasComposition && t.update([]);
  }, 50));
};
Fr.contextmenu = (t) => {
  t.inputState.lastContextMenu = Date.now();
};
Ur.beforeinput = (t, e) => {
  var n, r;
  if (e.inputType == "insertReplacementText" && t.observer.editContext) {
    let s = (n = e.dataTransfer) === null || n === void 0 ? void 0 : n.getData("text/plain"), a = e.getTargetRanges();
    if (s && a.length) {
      let o = a[0], l = t.posAtDOM(o.startContainer, o.startOffset), c = t.posAtDOM(o.endContainer, o.endOffset);
      return Nd(t, { from: l, to: c, insert: t.state.toText(s) }, null), !0;
    }
  }
  let i;
  if (we.chrome && we.android && (i = xC.find((s) => s.inputType == e.inputType)) && (t.observer.delayAndroidKey(i.key, i.keyCode), i.key == "Backspace" || i.key == "Delete")) {
    let s = ((r = window.visualViewport) === null || r === void 0 ? void 0 : r.height) || 0;
    setTimeout(() => {
      var a;
      (((a = window.visualViewport) === null || a === void 0 ? void 0 : a.height) || 0) > s + 10 && t.hasFocus && (t.contentDOM.blur(), t.focus());
    }, 100);
  }
  return we.ios && e.inputType == "deleteContentForward" && t.observer.flushSoon(), we.safari && e.inputType == "insertText" && t.inputState.composing >= 0 && setTimeout(() => Fr.compositionend(t, e), 20), !1;
};
const zg = /* @__PURE__ */ new Set();
function e6(t) {
  zg.has(t) || (zg.add(t), t.addEventListener("copy", () => {
  }), t.addEventListener("cut", () => {
  }));
}
const Hg = ["pre-wrap", "normal", "pre-line", "break-spaces"];
let xa = !1;
function Yg() {
  xa = !1;
}
class t6 {
  constructor(e) {
    this.lineWrapping = e, this.doc = ct.empty, this.heightSamples = {}, this.lineHeight = 14, this.charWidth = 7, this.textHeight = 14, this.lineLength = 30;
  }
  heightForGap(e, n) {
    let r = this.doc.lineAt(n).number - this.doc.lineAt(e).number + 1;
    return this.lineWrapping && (r += Math.max(0, Math.ceil((n - e - r * this.lineLength * 0.5) / this.lineLength))), this.lineHeight * r;
  }
  heightForLine(e) {
    return this.lineWrapping ? (1 + Math.max(0, Math.ceil((e - this.lineLength) / (this.lineLength - 5)))) * this.lineHeight : this.lineHeight;
  }
  setDoc(e) {
    return this.doc = e, this;
  }
  mustRefreshForWrapping(e) {
    return Hg.indexOf(e) > -1 != this.lineWrapping;
  }
  mustRefreshForHeights(e) {
    let n = !1;
    for (let r = 0; r < e.length; r++) {
      let i = e[r];
      i < 0 ? r++ : this.heightSamples[Math.floor(i * 10)] || (n = !0, this.heightSamples[Math.floor(i * 10)] = !0);
    }
    return n;
  }
  refresh(e, n, r, i, s, a) {
    let o = Hg.indexOf(e) > -1, l = Math.round(n) != Math.round(this.lineHeight) || this.lineWrapping != o;
    if (this.lineWrapping = o, this.lineHeight = n, this.charWidth = r, this.textHeight = i, this.lineLength = s, l) {
      this.heightSamples = {};
      for (let c = 0; c < a.length; c++) {
        let h = a[c];
        h < 0 ? c++ : this.heightSamples[Math.floor(h * 10)] = !0;
      }
    }
    return l;
  }
}
class n6 {
  constructor(e, n) {
    this.from = e, this.heights = n, this.index = 0;
  }
  get more() {
    return this.index < this.heights.length;
  }
}
class oi {
  /**
  @internal
  */
  constructor(e, n, r, i, s) {
    this.from = e, this.length = n, this.top = r, this.height = i, this._content = s;
  }
  /**
  The type of element this is. When querying lines, this may be
  an array of all the blocks that make up the line.
  */
  get type() {
    return typeof this._content == "number" ? _n.Text : Array.isArray(this._content) ? this._content : this._content.type;
  }
  /**
  The end of the element as a document position.
  */
  get to() {
    return this.from + this.length;
  }
  /**
  The bottom position of the element.
  */
  get bottom() {
    return this.top + this.height;
  }
  /**
  If this is a widget block, this will return the widget
  associated with it.
  */
  get widget() {
    return this._content instanceof es ? this._content.widget : null;
  }
  /**
  If this is a textblock, this holds the number of line breaks
  that appear in widgets inside the block.
  */
  get widgetLineBreaks() {
    return typeof this._content == "number" ? this._content : 0;
  }
  /**
  @internal
  */
  join(e) {
    let n = (Array.isArray(this._content) ? this._content : [this]).concat(Array.isArray(e._content) ? e._content : [e]);
    return new oi(this.from, this.length + e.length, this.top, this.height + e.height, n);
  }
}
var jt = /* @__PURE__ */ function(t) {
  return t[t.ByPos = 0] = "ByPos", t[t.ByHeight = 1] = "ByHeight", t[t.ByPosNoHeight = 2] = "ByPosNoHeight", t;
}(jt || (jt = {}));
const iu = 1e-3;
class Rn {
  constructor(e, n, r = 2) {
    this.length = e, this.height = n, this.flags = r;
  }
  get outdated() {
    return (this.flags & 2) > 0;
  }
  set outdated(e) {
    this.flags = (e ? 2 : 0) | this.flags & -3;
  }
  setHeight(e) {
    this.height != e && (Math.abs(this.height - e) > iu && (xa = !0), this.height = e);
  }
  // Base case is to replace a leaf node, which simply builds a tree
  // from the new nodes and returns that (HeightMapBranch and
  // HeightMapGap override this to actually use from/to)
  replace(e, n, r) {
    return Rn.of(r);
  }
  // Again, these are base cases, and are overridden for branch and gap nodes.
  decomposeLeft(e, n) {
    n.push(this);
  }
  decomposeRight(e, n) {
    n.push(this);
  }
  applyChanges(e, n, r, i) {
    let s = this, a = r.doc;
    for (let o = i.length - 1; o >= 0; o--) {
      let { fromA: l, toA: c, fromB: h, toB: f } = i[o], m = s.lineAt(l, jt.ByPosNoHeight, r.setDoc(n), 0, 0), y = m.to >= c ? m : s.lineAt(c, jt.ByPosNoHeight, r, 0, 0);
      for (f += y.to - c, c = y.to; o > 0 && m.from <= i[o - 1].toA; )
        l = i[o - 1].fromA, h = i[o - 1].fromB, o--, l < m.from && (m = s.lineAt(l, jt.ByPosNoHeight, r, 0, 0));
      h += m.from - l, l = m.from;
      let x = Vd.build(r.setDoc(a), e, h, f);
      s = Au(s, s.replace(l, c, x));
    }
    return s.updateHeight(r, 0);
  }
  static empty() {
    return new lr(0, 0);
  }
  // nodes uses null values to indicate the position of line breaks.
  // There are never line breaks at the start or end of the array, or
  // two line breaks next to each other, and the array isn't allowed
  // to be empty (same restrictions as return value from the builder).
  static of(e) {
    if (e.length == 1)
      return e[0];
    let n = 0, r = e.length, i = 0, s = 0;
    for (; ; )
      if (n == r)
        if (i > s * 2) {
          let o = e[n - 1];
          o.break ? e.splice(--n, 1, o.left, null, o.right) : e.splice(--n, 1, o.left, o.right), r += 1 + o.break, i -= o.size;
        } else if (s > i * 2) {
          let o = e[r];
          o.break ? e.splice(r, 1, o.left, null, o.right) : e.splice(r, 1, o.left, o.right), r += 2 + o.break, s -= o.size;
        } else
          break;
      else if (i < s) {
        let o = e[n++];
        o && (i += o.size);
      } else {
        let o = e[--r];
        o && (s += o.size);
      }
    let a = 0;
    return e[n - 1] == null ? (a = 1, n--) : e[n] == null && (a = 1, r++), new r6(Rn.of(e.slice(0, n)), a, Rn.of(e.slice(r)));
  }
}
function Au(t, e) {
  return t == e ? t : (t.constructor != e.constructor && (xa = !0), e);
}
Rn.prototype.size = 1;
class EC extends Rn {
  constructor(e, n, r) {
    super(e, n), this.deco = r;
  }
  blockAt(e, n, r, i) {
    return new oi(i, this.length, r, this.height, this.deco || 0);
  }
  lineAt(e, n, r, i, s) {
    return this.blockAt(0, r, i, s);
  }
  forEachLine(e, n, r, i, s, a) {
    e <= s + this.length && n >= s && a(this.blockAt(0, r, i, s));
  }
  updateHeight(e, n = 0, r = !1, i) {
    return i && i.from <= n && i.more && this.setHeight(i.heights[i.index++]), this.outdated = !1, this;
  }
  toString() {
    return `block(${this.length})`;
  }
}
class lr extends EC {
  constructor(e, n) {
    super(e, n, null), this.collapsed = 0, this.widgetHeight = 0, this.breaks = 0;
  }
  blockAt(e, n, r, i) {
    return new oi(i, this.length, r, this.height, this.breaks);
  }
  replace(e, n, r) {
    let i = r[0];
    return r.length == 1 && (i instanceof lr || i instanceof kn && i.flags & 4) && Math.abs(this.length - i.length) < 10 ? (i instanceof kn ? i = new lr(i.length, this.height) : i.height = this.height, this.outdated || (i.outdated = !1), i) : Rn.of(r);
  }
  updateHeight(e, n = 0, r = !1, i) {
    return i && i.from <= n && i.more ? this.setHeight(i.heights[i.index++]) : (r || this.outdated) && this.setHeight(Math.max(this.widgetHeight, e.heightForLine(this.length - this.collapsed)) + this.breaks * e.lineHeight), this.outdated = !1, this;
  }
  toString() {
    return `line(${this.length}${this.collapsed ? -this.collapsed : ""}${this.widgetHeight ? ":" + this.widgetHeight : ""})`;
  }
}
class kn extends Rn {
  constructor(e) {
    super(e, 0);
  }
  heightMetrics(e, n) {
    let r = e.doc.lineAt(n).number, i = e.doc.lineAt(n + this.length).number, s = i - r + 1, a, o = 0;
    if (e.lineWrapping) {
      let l = Math.min(this.height, e.lineHeight * s);
      a = l / s, this.length > s + 1 && (o = (this.height - l) / (this.length - s - 1));
    } else
      a = this.height / s;
    return { firstLine: r, lastLine: i, perLine: a, perChar: o };
  }
  blockAt(e, n, r, i) {
    let { firstLine: s, lastLine: a, perLine: o, perChar: l } = this.heightMetrics(n, i);
    if (n.lineWrapping) {
      let c = i + (e < n.lineHeight ? 0 : Math.round(Math.max(0, Math.min(1, (e - r) / this.height)) * this.length)), h = n.doc.lineAt(c), f = o + h.length * l, m = Math.max(r, e - f / 2);
      return new oi(h.from, h.length, m, f, 0);
    } else {
      let c = Math.max(0, Math.min(a - s, Math.floor((e - r) / o))), { from: h, length: f } = n.doc.line(s + c);
      return new oi(h, f, r + o * c, o, 0);
    }
  }
  lineAt(e, n, r, i, s) {
    if (n == jt.ByHeight)
      return this.blockAt(e, r, i, s);
    if (n == jt.ByPosNoHeight) {
      let { from: y, to: x } = r.doc.lineAt(e);
      return new oi(y, x - y, 0, 0, 0);
    }
    let { firstLine: a, perLine: o, perChar: l } = this.heightMetrics(r, s), c = r.doc.lineAt(e), h = o + c.length * l, f = c.number - a, m = i + o * f + l * (c.from - s - f);
    return new oi(c.from, c.length, Math.max(i, Math.min(m, i + this.height - h)), h, 0);
  }
  forEachLine(e, n, r, i, s, a) {
    e = Math.max(e, s), n = Math.min(n, s + this.length);
    let { firstLine: o, perLine: l, perChar: c } = this.heightMetrics(r, s);
    for (let h = e, f = i; h <= n; ) {
      let m = r.doc.lineAt(h);
      if (h == e) {
        let x = m.number - o;
        f += l * x + c * (e - s - x);
      }
      let y = l + c * m.length;
      a(new oi(m.from, m.length, f, y, 0)), f += y, h = m.to + 1;
    }
  }
  replace(e, n, r) {
    let i = this.length - n;
    if (i > 0) {
      let s = r[r.length - 1];
      s instanceof kn ? r[r.length - 1] = new kn(s.length + i) : r.push(null, new kn(i - 1));
    }
    if (e > 0) {
      let s = r[0];
      s instanceof kn ? r[0] = new kn(e + s.length) : r.unshift(new kn(e - 1), null);
    }
    return Rn.of(r);
  }
  decomposeLeft(e, n) {
    n.push(new kn(e - 1), null);
  }
  decomposeRight(e, n) {
    n.push(null, new kn(this.length - e - 1));
  }
  updateHeight(e, n = 0, r = !1, i) {
    let s = n + this.length;
    if (i && i.from <= n + this.length && i.more) {
      let a = [], o = Math.max(n, i.from), l = -1;
      for (i.from > n && a.push(new kn(i.from - n - 1).updateHeight(e, n)); o <= s && i.more; ) {
        let h = e.doc.lineAt(o).length;
        a.length && a.push(null);
        let f = i.heights[i.index++];
        l == -1 ? l = f : Math.abs(f - l) >= iu && (l = -2);
        let m = new lr(h, f);
        m.outdated = !1, a.push(m), o += h + 1;
      }
      o <= s && a.push(null, new kn(s - o).updateHeight(e, o));
      let c = Rn.of(a);
      return (l < 0 || Math.abs(c.height - this.height) >= iu || Math.abs(l - this.heightMetrics(e, n).perLine) >= iu) && (xa = !0), Au(this, c);
    } else (r || this.outdated) && (this.setHeight(e.heightForGap(n, n + this.length)), this.outdated = !1);
    return this;
  }
  toString() {
    return `gap(${this.length})`;
  }
}
class r6 extends Rn {
  constructor(e, n, r) {
    super(e.length + n + r.length, e.height + r.height, n | (e.outdated || r.outdated ? 2 : 0)), this.left = e, this.right = r, this.size = e.size + r.size;
  }
  get break() {
    return this.flags & 1;
  }
  blockAt(e, n, r, i) {
    let s = r + this.left.height;
    return e < s ? this.left.blockAt(e, n, r, i) : this.right.blockAt(e, n, s, i + this.left.length + this.break);
  }
  lineAt(e, n, r, i, s) {
    let a = i + this.left.height, o = s + this.left.length + this.break, l = n == jt.ByHeight ? e < a : e < o, c = l ? this.left.lineAt(e, n, r, i, s) : this.right.lineAt(e, n, r, a, o);
    if (this.break || (l ? c.to < o : c.from > o))
      return c;
    let h = n == jt.ByPosNoHeight ? jt.ByPosNoHeight : jt.ByPos;
    return l ? c.join(this.right.lineAt(o, h, r, a, o)) : this.left.lineAt(o, h, r, i, s).join(c);
  }
  forEachLine(e, n, r, i, s, a) {
    let o = i + this.left.height, l = s + this.left.length + this.break;
    if (this.break)
      e < l && this.left.forEachLine(e, n, r, i, s, a), n >= l && this.right.forEachLine(e, n, r, o, l, a);
    else {
      let c = this.lineAt(l, jt.ByPos, r, i, s);
      e < c.from && this.left.forEachLine(e, c.from - 1, r, i, s, a), c.to >= e && c.from <= n && a(c), n > c.to && this.right.forEachLine(c.to + 1, n, r, o, l, a);
    }
  }
  replace(e, n, r) {
    let i = this.left.length + this.break;
    if (n < i)
      return this.balanced(this.left.replace(e, n, r), this.right);
    if (e > this.left.length)
      return this.balanced(this.left, this.right.replace(e - i, n - i, r));
    let s = [];
    e > 0 && this.decomposeLeft(e, s);
    let a = s.length;
    for (let o of r)
      s.push(o);
    if (e > 0 && Kg(s, a - 1), n < this.length) {
      let o = s.length;
      this.decomposeRight(n, s), Kg(s, o);
    }
    return Rn.of(s);
  }
  decomposeLeft(e, n) {
    let r = this.left.length;
    if (e <= r)
      return this.left.decomposeLeft(e, n);
    n.push(this.left), this.break && (r++, e >= r && n.push(null)), e > r && this.right.decomposeLeft(e - r, n);
  }
  decomposeRight(e, n) {
    let r = this.left.length, i = r + this.break;
    if (e >= i)
      return this.right.decomposeRight(e - i, n);
    e < r && this.left.decomposeRight(e, n), this.break && e < i && n.push(null), n.push(this.right);
  }
  balanced(e, n) {
    return e.size > 2 * n.size || n.size > 2 * e.size ? Rn.of(this.break ? [e, null, n] : [e, n]) : (this.left = Au(this.left, e), this.right = Au(this.right, n), this.setHeight(e.height + n.height), this.outdated = e.outdated || n.outdated, this.size = e.size + n.size, this.length = e.length + this.break + n.length, this);
  }
  updateHeight(e, n = 0, r = !1, i) {
    let { left: s, right: a } = this, o = n + s.length + this.break, l = null;
    return i && i.from <= n + s.length && i.more ? l = s = s.updateHeight(e, n, r, i) : s.updateHeight(e, n, r), i && i.from <= o + a.length && i.more ? l = a = a.updateHeight(e, o, r, i) : a.updateHeight(e, o, r), l ? this.balanced(s, a) : (this.height = this.left.height + this.right.height, this.outdated = !1, this);
  }
  toString() {
    return this.left + (this.break ? " " : "-") + this.right;
  }
}
function Kg(t, e) {
  let n, r;
  t[e] == null && (n = t[e - 1]) instanceof kn && (r = t[e + 1]) instanceof kn && t.splice(e - 1, 3, new kn(n.length + 1 + r.length));
}
const i6 = 5;
class Vd {
  constructor(e, n) {
    this.pos = e, this.oracle = n, this.nodes = [], this.lineStart = -1, this.lineEnd = -1, this.covering = null, this.writtenTo = e;
  }
  get isCovered() {
    return this.covering && this.nodes[this.nodes.length - 1] == this.covering;
  }
  span(e, n) {
    if (this.lineStart > -1) {
      let r = Math.min(n, this.lineEnd), i = this.nodes[this.nodes.length - 1];
      i instanceof lr ? i.length += r - this.pos : (r > this.pos || !this.isCovered) && this.nodes.push(new lr(r - this.pos, -1)), this.writtenTo = r, n > r && (this.nodes.push(null), this.writtenTo++, this.lineStart = -1);
    }
    this.pos = n;
  }
  point(e, n, r) {
    if (e < n || r.heightRelevant) {
      let i = r.widget ? r.widget.estimatedHeight : 0, s = r.widget ? r.widget.lineBreaks : 0;
      i < 0 && (i = this.oracle.lineHeight);
      let a = n - e;
      r.block ? this.addBlock(new EC(a, i, r)) : (a || s || i >= i6) && this.addLineDeco(i, s, a);
    } else n > e && this.span(e, n);
    this.lineEnd > -1 && this.lineEnd < this.pos && (this.lineEnd = this.oracle.doc.lineAt(this.pos).to);
  }
  enterLine() {
    if (this.lineStart > -1)
      return;
    let { from: e, to: n } = this.oracle.doc.lineAt(this.pos);
    this.lineStart = e, this.lineEnd = n, this.writtenTo < e && ((this.writtenTo < e - 1 || this.nodes[this.nodes.length - 1] == null) && this.nodes.push(this.blankContent(this.writtenTo, e - 1)), this.nodes.push(null)), this.pos > e && this.nodes.push(new lr(this.pos - e, -1)), this.writtenTo = this.pos;
  }
  blankContent(e, n) {
    let r = new kn(n - e);
    return this.oracle.doc.lineAt(e).to == n && (r.flags |= 4), r;
  }
  ensureLine() {
    this.enterLine();
    let e = this.nodes.length ? this.nodes[this.nodes.length - 1] : null;
    if (e instanceof lr)
      return e;
    let n = new lr(0, -1);
    return this.nodes.push(n), n;
  }
  addBlock(e) {
    this.enterLine();
    let n = e.deco;
    n && n.startSide > 0 && !this.isCovered && this.ensureLine(), this.nodes.push(e), this.writtenTo = this.pos = this.pos + e.length, n && n.endSide > 0 && (this.covering = e);
  }
  addLineDeco(e, n, r) {
    let i = this.ensureLine();
    i.length += r, i.collapsed += r, i.widgetHeight = Math.max(i.widgetHeight, e), i.breaks += n, this.writtenTo = this.pos = this.pos + r;
  }
  finish(e) {
    let n = this.nodes.length == 0 ? null : this.nodes[this.nodes.length - 1];
    this.lineStart > -1 && !(n instanceof lr) && !this.isCovered ? this.nodes.push(new lr(0, -1)) : (this.writtenTo < this.pos || n == null) && this.nodes.push(this.blankContent(this.writtenTo, this.pos));
    let r = e;
    for (let i of this.nodes)
      i instanceof lr && i.updateHeight(this.oracle, r), r += i ? i.length : 1;
    return this.nodes;
  }
  // Always called with a region that on both sides either stretches
  // to a line break or the end of the document.
  // The returned array uses null to indicate line breaks, but never
  // starts or ends in a line break, or has multiple line breaks next
  // to each other.
  static build(e, n, r, i) {
    let s = new Vd(r, e);
    return mt.spans(n, r, i, s, 0), s.finish(r);
  }
}
function s6(t, e, n) {
  let r = new a6();
  return mt.compare(t, e, n, r, 0), r.changes;
}
class a6 {
  constructor() {
    this.changes = [];
  }
  compareRange() {
  }
  comparePoint(e, n, r, i) {
    (e < n || r && r.heightRelevant || i && i.heightRelevant) && nu(e, n, this.changes, 5);
  }
}
function o6(t, e) {
  let n = t.getBoundingClientRect(), r = t.ownerDocument, i = r.defaultView || window, s = Math.max(0, n.left), a = Math.min(i.innerWidth, n.right), o = Math.max(0, n.top), l = Math.min(i.innerHeight, n.bottom);
  for (let c = t.parentNode; c && c != r.body; )
    if (c.nodeType == 1) {
      let h = c, f = window.getComputedStyle(h);
      if ((h.scrollHeight > h.clientHeight || h.scrollWidth > h.clientWidth) && f.overflow != "visible") {
        let m = h.getBoundingClientRect();
        s = Math.max(s, m.left), a = Math.min(a, m.right), o = Math.max(o, m.top), l = Math.min(c == t.parentNode ? i.innerHeight : l, m.bottom);
      }
      c = f.position == "absolute" || f.position == "fixed" ? h.offsetParent : h.parentNode;
    } else if (c.nodeType == 11)
      c = c.host;
    else
      break;
  return {
    left: s - n.left,
    right: Math.max(s, a) - n.left,
    top: o - (n.top + e),
    bottom: Math.max(o, l) - (n.top + e)
  };
}
function l6(t) {
  let e = t.getBoundingClientRect(), n = t.ownerDocument.defaultView || window;
  return e.left < n.innerWidth && e.right > 0 && e.top < n.innerHeight && e.bottom > 0;
}
function u6(t, e) {
  let n = t.getBoundingClientRect();
  return {
    left: 0,
    right: n.right - n.left,
    top: e,
    bottom: n.bottom - (n.top + e)
  };
}
class Lh {
  constructor(e, n, r, i) {
    this.from = e, this.to = n, this.size = r, this.displaySize = i;
  }
  static same(e, n) {
    if (e.length != n.length)
      return !1;
    for (let r = 0; r < e.length; r++) {
      let i = e[r], s = n[r];
      if (i.from != s.from || i.to != s.to || i.size != s.size)
        return !1;
    }
    return !0;
  }
  draw(e, n) {
    return Te.replace({
      widget: new c6(this.displaySize * (n ? e.scaleY : e.scaleX), n)
    }).range(this.from, this.to);
  }
}
class c6 extends Ri {
  constructor(e, n) {
    super(), this.size = e, this.vertical = n;
  }
  eq(e) {
    return e.size == this.size && e.vertical == this.vertical;
  }
  toDOM() {
    let e = document.createElement("div");
    return this.vertical ? e.style.height = this.size + "px" : (e.style.width = this.size + "px", e.style.height = "2px", e.style.display = "inline-block"), e;
  }
  get estimatedHeight() {
    return this.vertical ? this.size : -1;
  }
}
class Jg {
  constructor(e) {
    this.state = e, this.pixelViewport = { left: 0, right: window.innerWidth, top: 0, bottom: 0 }, this.inView = !0, this.paddingTop = 0, this.paddingBottom = 0, this.contentDOMWidth = 0, this.contentDOMHeight = 0, this.editorHeight = 0, this.editorWidth = 0, this.scrollTop = 0, this.scrolledToBottom = !1, this.scaleX = 1, this.scaleY = 1, this.scrollAnchorPos = 0, this.scrollAnchorHeight = -1, this.scaler = e0, this.scrollTarget = null, this.printing = !1, this.mustMeasureContent = !0, this.defaultTextDirection = Dt.LTR, this.visibleRanges = [], this.mustEnforceCursorAssoc = !1;
    let n = e.facet(Zd).some((r) => typeof r != "function" && r.class == "cm-lineWrapping");
    this.heightOracle = new t6(n), this.stateDeco = e.facet(Po).filter((r) => typeof r != "function"), this.heightMap = Rn.empty().applyChanges(this.stateDeco, ct.empty, this.heightOracle.setDoc(e.doc), [new Pr(0, 0, 0, e.doc.length)]);
    for (let r = 0; r < 2 && (this.viewport = this.getViewport(0, null), !!this.updateForViewport()); r++)
      ;
    this.updateViewportLines(), this.lineGaps = this.ensureLineGaps([]), this.lineGapDeco = Te.set(this.lineGaps.map((r) => r.draw(this, !1))), this.computeVisibleRanges();
  }
  updateForViewport() {
    let e = [this.viewport], { main: n } = this.state.selection;
    for (let r = 0; r <= 1; r++) {
      let i = r ? n.head : n.anchor;
      if (!e.some(({ from: s, to: a }) => i >= s && i <= a)) {
        let { from: s, to: a } = this.lineBlockAt(i);
        e.push(new jl(s, a));
      }
    }
    return this.viewports = e.sort((r, i) => r.from - i.from), this.updateScaler();
  }
  updateScaler() {
    let e = this.scaler;
    return this.scaler = this.heightMap.height <= 7e6 ? e0 : new Xd(this.heightOracle, this.heightMap, this.viewports), e.eq(this.scaler) ? 0 : 2;
  }
  updateViewportLines() {
    this.viewportLines = [], this.heightMap.forEachLine(this.viewport.from, this.viewport.to, this.heightOracle.setDoc(this.state.doc), 0, 0, (e) => {
      this.viewportLines.push(lo(e, this.scaler));
    });
  }
  update(e, n = null) {
    this.state = e.state;
    let r = this.stateDeco;
    this.stateDeco = this.state.facet(Po).filter((h) => typeof h != "function");
    let i = e.changedRanges, s = Pr.extendWithRanges(i, s6(r, this.stateDeco, e ? e.changes : un.empty(this.state.doc.length))), a = this.heightMap.height, o = this.scrolledToBottom ? null : this.scrollAnchorAt(this.scrollTop);
    Yg(), this.heightMap = this.heightMap.applyChanges(this.stateDeco, e.startState.doc, this.heightOracle.setDoc(this.state.doc), s), (this.heightMap.height != a || xa) && (e.flags |= 2), o ? (this.scrollAnchorPos = e.changes.mapPos(o.from, -1), this.scrollAnchorHeight = o.top) : (this.scrollAnchorPos = -1, this.scrollAnchorHeight = this.heightMap.height);
    let l = s.length ? this.mapViewport(this.viewport, e.changes) : this.viewport;
    (n && (n.range.head < l.from || n.range.head > l.to) || !this.viewportIsAppropriate(l)) && (l = this.getViewport(0, n));
    let c = l.from != this.viewport.from || l.to != this.viewport.to;
    this.viewport = l, e.flags |= this.updateForViewport(), (c || !e.changes.empty || e.flags & 2) && this.updateViewportLines(), (this.lineGaps.length || this.viewport.to - this.viewport.from > 4e3) && this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps, e.changes))), e.flags |= this.computeVisibleRanges(e.changes), n && (this.scrollTarget = n), !this.mustEnforceCursorAssoc && e.selectionSet && e.view.lineWrapping && e.state.selection.main.empty && e.state.selection.main.assoc && !e.state.facet(hC) && (this.mustEnforceCursorAssoc = !0);
  }
  measure(e) {
    let n = e.contentDOM, r = window.getComputedStyle(n), i = this.heightOracle, s = r.whiteSpace;
    this.defaultTextDirection = r.direction == "rtl" ? Dt.RTL : Dt.LTR;
    let a = this.heightOracle.mustRefreshForWrapping(s), o = n.getBoundingClientRect(), l = a || this.mustMeasureContent || this.contentDOMHeight != o.height;
    this.contentDOMHeight = o.height, this.mustMeasureContent = !1;
    let c = 0, h = 0;
    if (o.width && o.height) {
      let { scaleX: _, scaleY: B } = $w(n, o);
      (_ > 5e-3 && Math.abs(this.scaleX - _) > 5e-3 || B > 5e-3 && Math.abs(this.scaleY - B) > 5e-3) && (this.scaleX = _, this.scaleY = B, c |= 16, a = l = !0);
    }
    let f = (parseInt(r.paddingTop) || 0) * this.scaleY, m = (parseInt(r.paddingBottom) || 0) * this.scaleY;
    (this.paddingTop != f || this.paddingBottom != m) && (this.paddingTop = f, this.paddingBottom = m, c |= 18), this.editorWidth != e.scrollDOM.clientWidth && (i.lineWrapping && (l = !0), this.editorWidth = e.scrollDOM.clientWidth, c |= 16);
    let y = e.scrollDOM.scrollTop * this.scaleY;
    this.scrollTop != y && (this.scrollAnchorHeight = -1, this.scrollTop = y), this.scrolledToBottom = Iw(e.scrollDOM);
    let x = (this.printing ? u6 : o6)(n, this.paddingTop), C = x.top - this.pixelViewport.top, S = x.bottom - this.pixelViewport.bottom;
    this.pixelViewport = x;
    let M = this.pixelViewport.bottom > this.pixelViewport.top && this.pixelViewport.right > this.pixelViewport.left;
    if (M != this.inView && (this.inView = M, M && (l = !0)), !this.inView && !this.scrollTarget && !l6(e.dom))
      return 0;
    let Z = o.width;
    if ((this.contentDOMWidth != Z || this.editorHeight != e.scrollDOM.clientHeight) && (this.contentDOMWidth = o.width, this.editorHeight = e.scrollDOM.clientHeight, c |= 16), l) {
      let _ = e.docView.measureVisibleLineHeights(this.viewport);
      if (i.mustRefreshForHeights(_) && (a = !0), a || i.lineWrapping && Math.abs(Z - this.contentDOMWidth) > i.charWidth) {
        let { lineHeight: B, charWidth: $, textHeight: N } = e.docView.measureTextSize();
        a = B > 0 && i.refresh(s, B, $, N, Z / $, _), a && (e.docView.minWidth = 0, c |= 16);
      }
      C > 0 && S > 0 ? h = Math.max(C, S) : C < 0 && S < 0 && (h = Math.min(C, S)), Yg();
      for (let B of this.viewports) {
        let $ = B.from == this.viewport.from ? _ : e.docView.measureVisibleLineHeights(B);
        this.heightMap = (a ? Rn.empty().applyChanges(this.stateDeco, ct.empty, this.heightOracle, [new Pr(0, 0, 0, e.state.doc.length)]) : this.heightMap).updateHeight(i, 0, a, new n6(B.from, $));
      }
      xa && (c |= 2);
    }
    let q = !this.viewportIsAppropriate(this.viewport, h) || this.scrollTarget && (this.scrollTarget.range.head < this.viewport.from || this.scrollTarget.range.head > this.viewport.to);
    return q && (c & 2 && (c |= this.updateScaler()), this.viewport = this.getViewport(h, this.scrollTarget), c |= this.updateForViewport()), (c & 2 || q) && this.updateViewportLines(), (this.lineGaps.length || this.viewport.to - this.viewport.from > 4e3) && this.updateLineGaps(this.ensureLineGaps(a ? [] : this.lineGaps, e)), c |= this.computeVisibleRanges(), this.mustEnforceCursorAssoc && (this.mustEnforceCursorAssoc = !1, e.docView.enforceCursorAssoc()), c;
  }
  get visibleTop() {
    return this.scaler.fromDOM(this.pixelViewport.top);
  }
  get visibleBottom() {
    return this.scaler.fromDOM(this.pixelViewport.bottom);
  }
  getViewport(e, n) {
    let r = 0.5 - Math.max(-0.5, Math.min(0.5, e / 1e3 / 2)), i = this.heightMap, s = this.heightOracle, { visibleTop: a, visibleBottom: o } = this, l = new jl(i.lineAt(a - r * 1e3, jt.ByHeight, s, 0, 0).from, i.lineAt(o + (1 - r) * 1e3, jt.ByHeight, s, 0, 0).to);
    if (n) {
      let { head: c } = n.range;
      if (c < l.from || c > l.to) {
        let h = Math.min(this.editorHeight, this.pixelViewport.bottom - this.pixelViewport.top), f = i.lineAt(c, jt.ByPos, s, 0, 0), m;
        n.y == "center" ? m = (f.top + f.bottom) / 2 - h / 2 : n.y == "start" || n.y == "nearest" && c < l.from ? m = f.top : m = f.bottom - h, l = new jl(i.lineAt(m - 1e3 / 2, jt.ByHeight, s, 0, 0).from, i.lineAt(m + h + 1e3 / 2, jt.ByHeight, s, 0, 0).to);
      }
    }
    return l;
  }
  mapViewport(e, n) {
    let r = n.mapPos(e.from, -1), i = n.mapPos(e.to, 1);
    return new jl(this.heightMap.lineAt(r, jt.ByPos, this.heightOracle, 0, 0).from, this.heightMap.lineAt(i, jt.ByPos, this.heightOracle, 0, 0).to);
  }
  // Checks if a given viewport covers the visible part of the
  // document and not too much beyond that.
  viewportIsAppropriate({ from: e, to: n }, r = 0) {
    if (!this.inView)
      return !0;
    let { top: i } = this.heightMap.lineAt(e, jt.ByPos, this.heightOracle, 0, 0), { bottom: s } = this.heightMap.lineAt(n, jt.ByPos, this.heightOracle, 0, 0), { visibleTop: a, visibleBottom: o } = this;
    return (e == 0 || i <= a - Math.max(10, Math.min(
      -r,
      250
      /* VP.MaxCoverMargin */
    ))) && (n == this.state.doc.length || s >= o + Math.max(10, Math.min(
      r,
      250
      /* VP.MaxCoverMargin */
    ))) && i > a - 2 * 1e3 && s < o + 2 * 1e3;
  }
  mapLineGaps(e, n) {
    if (!e.length || n.empty)
      return e;
    let r = [];
    for (let i of e)
      n.touchesRange(i.from, i.to) || r.push(new Lh(n.mapPos(i.from), n.mapPos(i.to), i.size, i.displaySize));
    return r;
  }
  // Computes positions in the viewport where the start or end of a
  // line should be hidden, trying to reuse existing line gaps when
  // appropriate to avoid unneccesary redraws.
  // Uses crude character-counting for the positioning and sizing,
  // since actual DOM coordinates aren't always available and
  // predictable. Relies on generous margins (see LG.Margin) to hide
  // the artifacts this might produce from the user.
  ensureLineGaps(e, n) {
    let r = this.heightOracle.lineWrapping, i = r ? 1e4 : 2e3, s = i >> 1, a = i << 1;
    if (this.defaultTextDirection != Dt.LTR && !r)
      return [];
    let o = [], l = (h, f, m, y) => {
      if (f - h < s)
        return;
      let x = this.state.selection.main, C = [x.from];
      x.empty || C.push(x.to);
      for (let M of C)
        if (M > h && M < f) {
          l(h, M - 10, m, y), l(M + 10, f, m, y);
          return;
        }
      let S = p6(e, (M) => M.from >= m.from && M.to <= m.to && Math.abs(M.from - h) < s && Math.abs(M.to - f) < s && !C.some((Z) => M.from < Z && M.to > Z));
      if (!S) {
        if (f < m.to && n && r && n.visibleRanges.some((q) => q.from <= f && q.to >= f)) {
          let q = n.moveToLineBoundary(ne.cursor(f), !1, !0).head;
          q > h && (f = q);
        }
        let M = this.gapSize(m, h, f, y), Z = r || M < 2e6 ? M : 2e6;
        S = new Lh(h, f, M, Z);
      }
      o.push(S);
    }, c = (h) => {
      if (h.length < a || h.type != _n.Text)
        return;
      let f = h6(h.from, h.to, this.stateDeco);
      if (f.total < a)
        return;
      let m = this.scrollTarget ? this.scrollTarget.range.head : null, y, x;
      if (r) {
        let C = i / this.heightOracle.lineLength * this.heightOracle.lineHeight, S, M;
        if (m != null) {
          let Z = Rl(f, m), q = ((this.visibleBottom - this.visibleTop) / 2 + C) / h.height;
          S = Z - q, M = Z + q;
        } else
          S = (this.visibleTop - h.top - C) / h.height, M = (this.visibleBottom - h.top + C) / h.height;
        y = _l(f, S), x = _l(f, M);
      } else {
        let C = f.total * this.heightOracle.charWidth, S = i * this.heightOracle.charWidth, M = 0;
        if (C > 2e6)
          for (let $ of e)
            $.from >= h.from && $.from < h.to && $.size != $.displaySize && $.from * this.heightOracle.charWidth + M < this.pixelViewport.left && (M = $.size - $.displaySize);
        let Z = this.pixelViewport.left + M, q = this.pixelViewport.right + M, _, B;
        if (m != null) {
          let $ = Rl(f, m), N = ((q - Z) / 2 + S) / C;
          _ = $ - N, B = $ + N;
        } else
          _ = (Z - S) / C, B = (q + S) / C;
        y = _l(f, _), x = _l(f, B);
      }
      y > h.from && l(h.from, y, h, f), x < h.to && l(x, h.to, h, f);
    };
    for (let h of this.viewportLines)
      Array.isArray(h.type) ? h.type.forEach(c) : c(h);
    return o;
  }
  gapSize(e, n, r, i) {
    let s = Rl(i, r) - Rl(i, n);
    return this.heightOracle.lineWrapping ? e.height * s : i.total * this.heightOracle.charWidth * s;
  }
  updateLineGaps(e) {
    Lh.same(e, this.lineGaps) || (this.lineGaps = e, this.lineGapDeco = Te.set(e.map((n) => n.draw(this, this.heightOracle.lineWrapping))));
  }
  computeVisibleRanges(e) {
    let n = this.stateDeco;
    this.lineGaps.length && (n = n.concat(this.lineGapDeco));
    let r = [];
    mt.spans(n, this.viewport.from, this.viewport.to, {
      span(s, a) {
        r.push({ from: s, to: a });
      },
      point() {
      }
    }, 20);
    let i = 0;
    if (r.length != this.visibleRanges.length)
      i = 12;
    else
      for (let s = 0; s < r.length && !(i & 8); s++) {
        let a = this.visibleRanges[s], o = r[s];
        (a.from != o.from || a.to != o.to) && (i |= 4, e && e.mapPos(a.from, -1) == o.from && e.mapPos(a.to, 1) == o.to || (i |= 8));
      }
    return this.visibleRanges = r, i;
  }
  lineBlockAt(e) {
    return e >= this.viewport.from && e <= this.viewport.to && this.viewportLines.find((n) => n.from <= e && n.to >= e) || lo(this.heightMap.lineAt(e, jt.ByPos, this.heightOracle, 0, 0), this.scaler);
  }
  lineBlockAtHeight(e) {
    return e >= this.viewportLines[0].top && e <= this.viewportLines[this.viewportLines.length - 1].bottom && this.viewportLines.find((n) => n.top <= e && n.bottom >= e) || lo(this.heightMap.lineAt(this.scaler.fromDOM(e), jt.ByHeight, this.heightOracle, 0, 0), this.scaler);
  }
  scrollAnchorAt(e) {
    let n = this.lineBlockAtHeight(e + 8);
    return n.from >= this.viewport.from || this.viewportLines[0].top - e > 200 ? n : this.viewportLines[0];
  }
  elementAtHeight(e) {
    return lo(this.heightMap.blockAt(this.scaler.fromDOM(e), this.heightOracle, 0, 0), this.scaler);
  }
  get docHeight() {
    return this.scaler.toDOM(this.heightMap.height);
  }
  get contentHeight() {
    return this.docHeight + this.paddingTop + this.paddingBottom;
  }
}
class jl {
  constructor(e, n) {
    this.from = e, this.to = n;
  }
}
function h6(t, e, n) {
  let r = [], i = t, s = 0;
  return mt.spans(n, t, e, {
    span() {
    },
    point(a, o) {
      a > i && (r.push({ from: i, to: a }), s += a - i), i = o;
    }
  }, 20), i < e && (r.push({ from: i, to: e }), s += e - i), { total: s, ranges: r };
}
function _l({ total: t, ranges: e }, n) {
  if (n <= 0)
    return e[0].from;
  if (n >= 1)
    return e[e.length - 1].to;
  let r = Math.floor(t * n);
  for (let i = 0; ; i++) {
    let { from: s, to: a } = e[i], o = a - s;
    if (r <= o)
      return s + r;
    r -= o;
  }
}
function Rl(t, e) {
  let n = 0;
  for (let { from: r, to: i } of t.ranges) {
    if (e <= i) {
      n += e - r;
      break;
    }
    n += i - r;
  }
  return n / t.total;
}
function p6(t, e) {
  for (let n of t)
    if (e(n))
      return n;
}
const e0 = {
  toDOM(t) {
    return t;
  },
  fromDOM(t) {
    return t;
  },
  scale: 1,
  eq(t) {
    return t == this;
  }
};
class Xd {
  constructor(e, n, r) {
    let i = 0, s = 0, a = 0;
    this.viewports = r.map(({ from: o, to: l }) => {
      let c = n.lineAt(o, jt.ByPos, e, 0, 0).top, h = n.lineAt(l, jt.ByPos, e, 0, 0).bottom;
      return i += h - c, { from: o, to: l, top: c, bottom: h, domTop: 0, domBottom: 0 };
    }), this.scale = (7e6 - i) / (n.height - i);
    for (let o of this.viewports)
      o.domTop = a + (o.top - s) * this.scale, a = o.domBottom = o.domTop + (o.bottom - o.top), s = o.bottom;
  }
  toDOM(e) {
    for (let n = 0, r = 0, i = 0; ; n++) {
      let s = n < this.viewports.length ? this.viewports[n] : null;
      if (!s || e < s.top)
        return i + (e - r) * this.scale;
      if (e <= s.bottom)
        return s.domTop + (e - s.top);
      r = s.bottom, i = s.domBottom;
    }
  }
  fromDOM(e) {
    for (let n = 0, r = 0, i = 0; ; n++) {
      let s = n < this.viewports.length ? this.viewports[n] : null;
      if (!s || e < s.domTop)
        return r + (e - i) / this.scale;
      if (e <= s.domBottom)
        return s.top + (e - s.domTop);
      r = s.bottom, i = s.domBottom;
    }
  }
  eq(e) {
    return e instanceof Xd ? this.scale == e.scale && this.viewports.length == e.viewports.length && this.viewports.every((n, r) => n.from == e.viewports[r].from && n.to == e.viewports[r].to) : !1;
  }
}
function lo(t, e) {
  if (e.scale == 1)
    return t;
  let n = e.toDOM(t.top), r = e.toDOM(t.bottom);
  return new oi(t.from, t.length, n, r - n, Array.isArray(t._content) ? t._content.map((i) => lo(i, e)) : t._content);
}
const $l = /* @__PURE__ */ Ae.define({ combine: (t) => t.join(" ") }), nf = /* @__PURE__ */ Ae.define({ combine: (t) => t.indexOf(!0) > -1 }), rf = /* @__PURE__ */ Ki.newName(), FC = /* @__PURE__ */ Ki.newName(), BC = /* @__PURE__ */ Ki.newName(), MC = { "&light": "." + FC, "&dark": "." + BC };
function sf(t, e, n) {
  return new Ki(e, {
    finish(r) {
      return /&/.test(r) ? r.replace(/&\w*/, (i) => {
        if (i == "&")
          return t;
        if (!n || !n[i])
          throw new RangeError(`Unsupported selector: ${i}`);
        return n[i];
      }) : t + " " + r;
    }
  });
}
const f6 = /* @__PURE__ */ sf("." + rf, {
  "&": {
    position: "relative !important",
    boxSizing: "border-box",
    "&.cm-focused": {
      // Provide a simple default outline to make sure a focused
      // editor is visually distinct. Can't leave the default behavior
      // because that will apply to the content element, which is
      // inside the scrollable container and doesn't include the
      // gutters. We also can't use an 'auto' outline, since those
      // are, for some reason, drawn behind the element content, which
      // will cause things like the active line background to cover
      // the outline (#297).
      outline: "1px dotted #212121"
    },
    display: "flex !important",
    flexDirection: "column"
  },
  ".cm-scroller": {
    display: "flex !important",
    alignItems: "flex-start !important",
    fontFamily: "monospace",
    lineHeight: 1.4,
    height: "100%",
    overflowX: "auto",
    position: "relative",
    zIndex: 0,
    overflowAnchor: "none"
  },
  ".cm-content": {
    margin: 0,
    flexGrow: 2,
    flexShrink: 0,
    display: "block",
    whiteSpace: "pre",
    wordWrap: "normal",
    // https://github.com/codemirror/dev/issues/456
    boxSizing: "border-box",
    minHeight: "100%",
    padding: "4px 0",
    outline: "none",
    "&[contenteditable=true]": {
      WebkitUserModify: "read-write-plaintext-only"
    }
  },
  ".cm-lineWrapping": {
    whiteSpace_fallback: "pre-wrap",
    // For IE
    whiteSpace: "break-spaces",
    wordBreak: "break-word",
    // For Safari, which doesn't support overflow-wrap: anywhere
    overflowWrap: "anywhere",
    flexShrink: 1
  },
  "&light .cm-content": { caretColor: "black" },
  "&dark .cm-content": { caretColor: "white" },
  ".cm-line": {
    display: "block",
    padding: "0 2px 0 6px"
  },
  ".cm-layer": {
    position: "absolute",
    left: 0,
    top: 0,
    contain: "size style",
    "& > *": {
      position: "absolute"
    }
  },
  "&light .cm-selectionBackground": {
    background: "#d9d9d9"
  },
  "&dark .cm-selectionBackground": {
    background: "#222"
  },
  "&light.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground": {
    background: "#d7d4f0"
  },
  "&dark.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground": {
    background: "#233"
  },
  ".cm-cursorLayer": {
    pointerEvents: "none"
  },
  "&.cm-focused > .cm-scroller > .cm-cursorLayer": {
    animation: "steps(1) cm-blink 1.2s infinite"
  },
  // Two animations defined so that we can switch between them to
  // restart the animation without forcing another style
  // recomputation.
  "@keyframes cm-blink": { "0%": {}, "50%": { opacity: 0 }, "100%": {} },
  "@keyframes cm-blink2": { "0%": {}, "50%": { opacity: 0 }, "100%": {} },
  ".cm-cursor, .cm-dropCursor": {
    borderLeft: "1.2px solid black",
    marginLeft: "-0.6px",
    pointerEvents: "none"
  },
  ".cm-cursor": {
    display: "none"
  },
  "&dark .cm-cursor": {
    borderLeftColor: "#ddd"
  },
  ".cm-dropCursor": {
    position: "absolute"
  },
  "&.cm-focused > .cm-scroller > .cm-cursorLayer .cm-cursor": {
    display: "block"
  },
  ".cm-iso": {
    unicodeBidi: "isolate"
  },
  ".cm-announced": {
    position: "fixed",
    top: "-10000px"
  },
  "@media print": {
    ".cm-announced": { display: "none" }
  },
  "&light .cm-activeLine": { backgroundColor: "#cceeff44" },
  "&dark .cm-activeLine": { backgroundColor: "#99eeff33" },
  "&light .cm-specialChar": { color: "red" },
  "&dark .cm-specialChar": { color: "#f78" },
  ".cm-gutters": {
    flexShrink: 0,
    display: "flex",
    height: "100%",
    boxSizing: "border-box",
    insetInlineStart: 0,
    zIndex: 200
  },
  "&light .cm-gutters": {
    backgroundColor: "#f5f5f5",
    color: "#6c6c6c",
    borderRight: "1px solid #ddd"
  },
  "&dark .cm-gutters": {
    backgroundColor: "#333338",
    color: "#ccc"
  },
  ".cm-gutter": {
    display: "flex !important",
    // Necessary -- prevents margin collapsing
    flexDirection: "column",
    flexShrink: 0,
    boxSizing: "border-box",
    minHeight: "100%",
    overflow: "hidden"
  },
  ".cm-gutterElement": {
    boxSizing: "border-box"
  },
  ".cm-lineNumbers .cm-gutterElement": {
    padding: "0 3px 0 5px",
    minWidth: "20px",
    textAlign: "right",
    whiteSpace: "nowrap"
  },
  "&light .cm-activeLineGutter": {
    backgroundColor: "#e2f2ff"
  },
  "&dark .cm-activeLineGutter": {
    backgroundColor: "#222227"
  },
  ".cm-panels": {
    boxSizing: "border-box",
    position: "sticky",
    left: 0,
    right: 0,
    zIndex: 300
  },
  "&light .cm-panels": {
    backgroundColor: "#f5f5f5",
    color: "black"
  },
  "&light .cm-panels-top": {
    borderBottom: "1px solid #ddd"
  },
  "&light .cm-panels-bottom": {
    borderTop: "1px solid #ddd"
  },
  "&dark .cm-panels": {
    backgroundColor: "#333338",
    color: "white"
  },
  ".cm-tab": {
    display: "inline-block",
    overflow: "hidden",
    verticalAlign: "bottom"
  },
  ".cm-widgetBuffer": {
    verticalAlign: "text-top",
    height: "1em",
    width: 0,
    display: "inline"
  },
  ".cm-placeholder": {
    color: "#888",
    display: "inline-block",
    verticalAlign: "top"
  },
  ".cm-highlightSpace": {
    backgroundImage: "radial-gradient(circle at 50% 55%, #aaa 20%, transparent 5%)",
    backgroundPosition: "center"
  },
  ".cm-highlightTab": {
    backgroundImage: `url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="200" height="20"><path stroke="%23888" stroke-width="1" fill="none" d="M1 10H196L190 5M190 15L196 10M197 4L197 16"/></svg>')`,
    backgroundSize: "auto 100%",
    backgroundPosition: "right 90%",
    backgroundRepeat: "no-repeat"
  },
  ".cm-trailingSpace": {
    backgroundColor: "#ff332255"
  },
  ".cm-button": {
    verticalAlign: "middle",
    color: "inherit",
    fontSize: "70%",
    padding: ".2em 1em",
    borderRadius: "1px"
  },
  "&light .cm-button": {
    backgroundImage: "linear-gradient(#eff1f5, #d9d9df)",
    border: "1px solid #888",
    "&:active": {
      backgroundImage: "linear-gradient(#b4b4b4, #d0d3d6)"
    }
  },
  "&dark .cm-button": {
    backgroundImage: "linear-gradient(#393939, #111)",
    border: "1px solid #888",
    "&:active": {
      backgroundImage: "linear-gradient(#111, #333)"
    }
  },
  ".cm-textfield": {
    verticalAlign: "middle",
    color: "inherit",
    fontSize: "70%",
    border: "1px solid silver",
    padding: ".2em .5em"
  },
  "&light .cm-textfield": {
    backgroundColor: "white"
  },
  "&dark .cm-textfield": {
    border: "1px solid #555",
    backgroundColor: "inherit"
  }
}, MC), d6 = {
  childList: !0,
  characterData: !0,
  subtree: !0,
  attributes: !0,
  characterDataOldValue: !0
}, Ih = we.ie && we.ie_version <= 11;
class m6 {
  constructor(e) {
    this.view = e, this.active = !1, this.editContext = null, this.selectionRange = new K4(), this.selectionChanged = !1, this.delayedFlush = -1, this.resizeTimeout = -1, this.queue = [], this.delayedAndroidKey = null, this.flushingAndroidKey = -1, this.lastChange = 0, this.scrollTargets = [], this.intersection = null, this.resizeScroll = null, this.intersecting = !1, this.gapIntersection = null, this.gaps = [], this.printQuery = null, this.parentCheck = -1, this.dom = e.contentDOM, this.observer = new MutationObserver((n) => {
      for (let r of n)
        this.queue.push(r);
      (we.ie && we.ie_version <= 11 || we.ios && e.composing) && n.some((r) => r.type == "childList" && r.removedNodes.length || r.type == "characterData" && r.oldValue.length > r.target.nodeValue.length) ? this.flushSoon() : this.flush();
    }), window.EditContext && e.constructor.EDIT_CONTEXT !== !1 && // Chrome <126 doesn't support inverted selections in edit context (#1392)
    !(we.chrome && we.chrome_version < 126) && (this.editContext = new b6(e), e.state.facet(ki) && (e.contentDOM.editContext = this.editContext.editContext)), Ih && (this.onCharData = (n) => {
      this.queue.push({
        target: n.target,
        type: "characterData",
        oldValue: n.prevValue
      }), this.flushSoon();
    }), this.onSelectionChange = this.onSelectionChange.bind(this), this.onResize = this.onResize.bind(this), this.onPrint = this.onPrint.bind(this), this.onScroll = this.onScroll.bind(this), window.matchMedia && (this.printQuery = window.matchMedia("print")), typeof ResizeObserver == "function" && (this.resizeScroll = new ResizeObserver(() => {
      var n;
      ((n = this.view.docView) === null || n === void 0 ? void 0 : n.lastUpdate) < Date.now() - 75 && this.onResize();
    }), this.resizeScroll.observe(e.scrollDOM)), this.addWindowListeners(this.win = e.win), this.start(), typeof IntersectionObserver == "function" && (this.intersection = new IntersectionObserver((n) => {
      this.parentCheck < 0 && (this.parentCheck = setTimeout(this.listenForScroll.bind(this), 1e3)), n.length > 0 && n[n.length - 1].intersectionRatio > 0 != this.intersecting && (this.intersecting = !this.intersecting, this.intersecting != this.view.inView && this.onScrollChanged(document.createEvent("Event")));
    }, { threshold: [0, 1e-3] }), this.intersection.observe(this.dom), this.gapIntersection = new IntersectionObserver((n) => {
      n.length > 0 && n[n.length - 1].intersectionRatio > 0 && this.onScrollChanged(document.createEvent("Event"));
    }, {})), this.listenForScroll(), this.readSelectionRange();
  }
  onScrollChanged(e) {
    this.view.inputState.runHandlers("scroll", e), this.intersecting && this.view.measure();
  }
  onScroll(e) {
    this.intersecting && this.flush(!1), this.editContext && this.view.requestMeasure(this.editContext.measureReq), this.onScrollChanged(e);
  }
  onResize() {
    this.resizeTimeout < 0 && (this.resizeTimeout = setTimeout(() => {
      this.resizeTimeout = -1, this.view.requestMeasure();
    }, 50));
  }
  onPrint(e) {
    (e.type == "change" || !e.type) && !e.matches || (this.view.viewState.printing = !0, this.view.measure(), setTimeout(() => {
      this.view.viewState.printing = !1, this.view.requestMeasure();
    }, 500));
  }
  updateGaps(e) {
    if (this.gapIntersection && (e.length != this.gaps.length || this.gaps.some((n, r) => n != e[r]))) {
      this.gapIntersection.disconnect();
      for (let n of e)
        this.gapIntersection.observe(n);
      this.gaps = e;
    }
  }
  onSelectionChange(e) {
    let n = this.selectionChanged;
    if (!this.readSelectionRange() || this.delayedAndroidKey)
      return;
    let { view: r } = this, i = this.selectionRange;
    if (r.state.facet(ki) ? r.root.activeElement != this.dom : !tu(this.dom, i))
      return;
    let s = i.anchorNode && r.docView.nearest(i.anchorNode);
    if (s && s.ignoreEvent(e)) {
      n || (this.selectionChanged = !1);
      return;
    }
    (we.ie && we.ie_version <= 11 || we.android && we.chrome) && !r.state.selection.main.empty && // (Selection.isCollapsed isn't reliable on IE)
    i.focusNode && mo(i.focusNode, i.focusOffset, i.anchorNode, i.anchorOffset) ? this.flushSoon() : this.flush(!1);
  }
  readSelectionRange() {
    let { view: e } = this, n = Ao(e.root);
    if (!n)
      return !1;
    let r = we.safari && e.root.nodeType == 11 && e.root.activeElement == this.dom && g6(this.view, n) || n;
    if (!r || this.selectionRange.eq(r))
      return !1;
    let i = tu(this.dom, r);
    return i && !this.selectionChanged && e.inputState.lastFocusTime > Date.now() - 200 && e.inputState.lastTouchTime < Date.now() - 300 && e8(this.dom, r) ? (this.view.inputState.lastFocusTime = 0, e.docView.updateSelection(), !1) : (this.selectionRange.setRange(r), i && (this.selectionChanged = !0), !0);
  }
  setSelectionRange(e, n) {
    this.selectionRange.set(e.node, e.offset, n.node, n.offset), this.selectionChanged = !1;
  }
  clearSelectionRange() {
    this.selectionRange.set(null, 0, null, 0);
  }
  listenForScroll() {
    this.parentCheck = -1;
    let e = 0, n = null;
    for (let r = this.dom; r; )
      if (r.nodeType == 1)
        !n && e < this.scrollTargets.length && this.scrollTargets[e] == r ? e++ : n || (n = this.scrollTargets.slice(0, e)), n && n.push(r), r = r.assignedSlot || r.parentNode;
      else if (r.nodeType == 11)
        r = r.host;
      else
        break;
    if (e < this.scrollTargets.length && !n && (n = this.scrollTargets.slice(0, e)), n) {
      for (let r of this.scrollTargets)
        r.removeEventListener("scroll", this.onScroll);
      for (let r of this.scrollTargets = n)
        r.addEventListener("scroll", this.onScroll);
    }
  }
  ignore(e) {
    if (!this.active)
      return e();
    try {
      return this.stop(), e();
    } finally {
      this.start(), this.clear();
    }
  }
  start() {
    this.active || (this.observer.observe(this.dom, d6), Ih && this.dom.addEventListener("DOMCharacterDataModified", this.onCharData), this.active = !0);
  }
  stop() {
    this.active && (this.active = !1, this.observer.disconnect(), Ih && this.dom.removeEventListener("DOMCharacterDataModified", this.onCharData));
  }
  // Throw away any pending changes
  clear() {
    this.processRecords(), this.queue.length = 0, this.selectionChanged = !1;
  }
  // Chrome Android, especially in combination with GBoard, not only
  // doesn't reliably fire regular key events, but also often
  // surrounds the effect of enter or backspace with a bunch of
  // composition events that, when interrupted, cause text duplication
  // or other kinds of corruption. This hack makes the editor back off
  // from handling DOM changes for a moment when such a key is
  // detected (via beforeinput or keydown), and then tries to flush
  // them or, if that has no effect, dispatches the given key.
  delayAndroidKey(e, n) {
    var r;
    if (!this.delayedAndroidKey) {
      let i = () => {
        let s = this.delayedAndroidKey;
        s && (this.clearDelayedAndroidKey(), this.view.inputState.lastKeyCode = s.keyCode, this.view.inputState.lastKeyTime = Date.now(), !this.flush() && s.force && sa(this.dom, s.key, s.keyCode));
      };
      this.flushingAndroidKey = this.view.win.requestAnimationFrame(i);
    }
    (!this.delayedAndroidKey || e == "Enter") && (this.delayedAndroidKey = {
      key: e,
      keyCode: n,
      // Only run the key handler when no changes are detected if
      // this isn't coming right after another change, in which case
      // it is probably part of a weird chain of updates, and should
      // be ignored if it returns the DOM to its previous state.
      force: this.lastChange < Date.now() - 50 || !!(!((r = this.delayedAndroidKey) === null || r === void 0) && r.force)
    });
  }
  clearDelayedAndroidKey() {
    this.win.cancelAnimationFrame(this.flushingAndroidKey), this.delayedAndroidKey = null, this.flushingAndroidKey = -1;
  }
  flushSoon() {
    this.delayedFlush < 0 && (this.delayedFlush = this.view.win.requestAnimationFrame(() => {
      this.delayedFlush = -1, this.flush();
    }));
  }
  forceFlush() {
    this.delayedFlush >= 0 && (this.view.win.cancelAnimationFrame(this.delayedFlush), this.delayedFlush = -1), this.flush();
  }
  pendingRecords() {
    for (let e of this.observer.takeRecords())
      this.queue.push(e);
    return this.queue;
  }
  processRecords() {
    let e = this.pendingRecords();
    e.length && (this.queue = []);
    let n = -1, r = -1, i = !1;
    for (let s of e) {
      let a = this.readMutation(s);
      a && (a.typeOver && (i = !0), n == -1 ? { from: n, to: r } = a : (n = Math.min(a.from, n), r = Math.max(a.to, r)));
    }
    return { from: n, to: r, typeOver: i };
  }
  readChange() {
    let { from: e, to: n, typeOver: r } = this.processRecords(), i = this.selectionChanged && tu(this.dom, this.selectionRange);
    if (e < 0 && !i)
      return null;
    e > -1 && (this.lastChange = Date.now()), this.view.inputState.lastFocusTime = 0, this.selectionChanged = !1;
    let s = new Q8(this.view, e, n, r);
    return this.view.docView.domChanged = { newSel: s.newSel ? s.newSel.main : null }, s;
  }
  // Apply pending changes, if any
  flush(e = !0) {
    if (this.delayedFlush >= 0 || this.delayedAndroidKey)
      return !1;
    e && this.readSelectionRange();
    let n = this.readChange();
    if (!n)
      return this.view.requestMeasure(), !1;
    let r = this.view.state, i = vC(this.view, n);
    return this.view.state == r && (n.domChanged || n.newSel && !n.newSel.main.eq(this.view.state.selection.main)) && this.view.update([]), i;
  }
  readMutation(e) {
    let n = this.view.docView.nearest(e.target);
    if (!n || n.ignoreMutation(e))
      return null;
    if (n.markDirty(e.type == "attributes"), e.type == "attributes" && (n.flags |= 4), e.type == "childList") {
      let r = t0(n, e.previousSibling || e.target.previousSibling, -1), i = t0(n, e.nextSibling || e.target.nextSibling, 1);
      return {
        from: r ? n.posAfter(r) : n.posAtStart,
        to: i ? n.posBefore(i) : n.posAtEnd,
        typeOver: !1
      };
    } else return e.type == "characterData" ? { from: n.posAtStart, to: n.posAtEnd, typeOver: e.target.nodeValue == e.oldValue } : null;
  }
  setWindow(e) {
    e != this.win && (this.removeWindowListeners(this.win), this.win = e, this.addWindowListeners(this.win));
  }
  addWindowListeners(e) {
    e.addEventListener("resize", this.onResize), this.printQuery ? this.printQuery.addEventListener ? this.printQuery.addEventListener("change", this.onPrint) : this.printQuery.addListener(this.onPrint) : e.addEventListener("beforeprint", this.onPrint), e.addEventListener("scroll", this.onScroll), e.document.addEventListener("selectionchange", this.onSelectionChange);
  }
  removeWindowListeners(e) {
    e.removeEventListener("scroll", this.onScroll), e.removeEventListener("resize", this.onResize), this.printQuery ? this.printQuery.removeEventListener ? this.printQuery.removeEventListener("change", this.onPrint) : this.printQuery.removeListener(this.onPrint) : e.removeEventListener("beforeprint", this.onPrint), e.document.removeEventListener("selectionchange", this.onSelectionChange);
  }
  update(e) {
    this.editContext && (this.editContext.update(e), e.startState.facet(ki) != e.state.facet(ki) && (e.view.contentDOM.editContext = e.state.facet(ki) ? this.editContext.editContext : null));
  }
  destroy() {
    var e, n, r;
    this.stop(), (e = this.intersection) === null || e === void 0 || e.disconnect(), (n = this.gapIntersection) === null || n === void 0 || n.disconnect(), (r = this.resizeScroll) === null || r === void 0 || r.disconnect();
    for (let i of this.scrollTargets)
      i.removeEventListener("scroll", this.onScroll);
    this.removeWindowListeners(this.win), clearTimeout(this.parentCheck), clearTimeout(this.resizeTimeout), this.win.cancelAnimationFrame(this.delayedFlush), this.win.cancelAnimationFrame(this.flushingAndroidKey), this.editContext && (this.view.contentDOM.editContext = null, this.editContext.destroy());
  }
}
function t0(t, e, n) {
  for (; e; ) {
    let r = At.get(e);
    if (r && r.parent == t)
      return r;
    let i = e.parentNode;
    e = i != t.dom ? i : n > 0 ? e.nextSibling : e.previousSibling;
  }
  return null;
}
function n0(t, e) {
  let n = e.startContainer, r = e.startOffset, i = e.endContainer, s = e.endOffset, a = t.docView.domAtPos(t.state.selection.main.anchor);
  return mo(a.node, a.offset, i, s) && ([n, r, i, s] = [i, s, n, r]), { anchorNode: n, anchorOffset: r, focusNode: i, focusOffset: s };
}
function g6(t, e) {
  if (e.getComposedRanges) {
    let i = e.getComposedRanges(t.root)[0];
    if (i)
      return n0(t, i);
  }
  let n = null;
  function r(i) {
    i.preventDefault(), i.stopImmediatePropagation(), n = i.getTargetRanges()[0];
  }
  return t.contentDOM.addEventListener("beforeinput", r, !0), t.dom.ownerDocument.execCommand("indent"), t.contentDOM.removeEventListener("beforeinput", r, !0), n ? n0(t, n) : null;
}
class b6 {
  constructor(e) {
    this.from = 0, this.to = 0, this.pendingContextChange = null, this.handlers = /* @__PURE__ */ Object.create(null), this.composing = null, this.resetRange(e.state);
    let n = this.editContext = new window.EditContext({
      text: e.state.doc.sliceString(this.from, this.to),
      selectionStart: this.toContextPos(Math.max(this.from, Math.min(this.to, e.state.selection.main.anchor))),
      selectionEnd: this.toContextPos(e.state.selection.main.head)
    });
    this.handlers.textupdate = (r) => {
      let i = e.state.selection.main, { anchor: s, head: a } = i, o = this.toEditorPos(r.updateRangeStart), l = this.toEditorPos(r.updateRangeEnd);
      e.inputState.composing >= 0 && !this.composing && (this.composing = { contextBase: r.updateRangeStart, editorBase: o, drifted: !1 });
      let c = { from: o, to: l, insert: ct.of(r.text.split(`
`)) };
      if (c.from == this.from && s < this.from ? c.from = s : c.to == this.to && s > this.to && (c.to = s), c.from == c.to && !c.insert.length) {
        let h = ne.single(this.toEditorPos(r.selectionStart), this.toEditorPos(r.selectionEnd));
        h.main.eq(i) || e.dispatch({ selection: h, userEvent: "select" });
        return;
      }
      if ((we.mac || we.android) && c.from == a - 1 && /^\. ?$/.test(r.text) && e.contentDOM.getAttribute("autocorrect") == "off" && (c = { from: o, to: l, insert: ct.of([r.text.replace(".", " ")]) }), this.pendingContextChange = c, !e.state.readOnly) {
        let h = this.to - this.from + (c.to - c.from + c.insert.length);
        Nd(e, c, ne.single(this.toEditorPos(r.selectionStart, h), this.toEditorPos(r.selectionEnd, h)));
      }
      this.pendingContextChange && (this.revertPending(e.state), this.setSelection(e.state));
    }, this.handlers.characterboundsupdate = (r) => {
      let i = [], s = null;
      for (let a = this.toEditorPos(r.rangeStart), o = this.toEditorPos(r.rangeEnd); a < o; a++) {
        let l = e.coordsForChar(a);
        s = l && new DOMRect(l.left, l.top, l.right - l.left, l.bottom - l.top) || s || new DOMRect(), i.push(s);
      }
      n.updateCharacterBounds(r.rangeStart, i);
    }, this.handlers.textformatupdate = (r) => {
      let i = [];
      for (let s of r.getTextFormats()) {
        let a = s.underlineStyle, o = s.underlineThickness;
        if (a != "None" && o != "None") {
          let l = this.toEditorPos(s.rangeStart), c = this.toEditorPos(s.rangeEnd);
          if (l < c) {
            let h = `text-decoration: underline ${a == "Dashed" ? "dashed " : a == "Squiggle" ? "wavy " : ""}${o == "Thin" ? 1 : 2}px`;
            i.push(Te.mark({ attributes: { style: h } }).range(l, c));
          }
        }
      }
      e.dispatch({ effects: fC.of(Te.set(i)) });
    }, this.handlers.compositionstart = () => {
      e.inputState.composing < 0 && (e.inputState.composing = 0, e.inputState.compositionFirstChange = !0);
    }, this.handlers.compositionend = () => {
      if (e.inputState.composing = -1, e.inputState.compositionFirstChange = null, this.composing) {
        let { drifted: r } = this.composing;
        this.composing = null, r && this.reset(e.state);
      }
    };
    for (let r in this.handlers)
      n.addEventListener(r, this.handlers[r]);
    this.measureReq = { read: (r) => {
      this.editContext.updateControlBounds(r.contentDOM.getBoundingClientRect());
      let i = Ao(r.root);
      i && i.rangeCount && this.editContext.updateSelectionBounds(i.getRangeAt(0).getBoundingClientRect());
    } };
  }
  applyEdits(e) {
    let n = 0, r = !1, i = this.pendingContextChange;
    return e.changes.iterChanges((s, a, o, l, c) => {
      if (r)
        return;
      let h = c.length - (a - s);
      if (i && a >= i.to)
        if (i.from == s && i.to == a && i.insert.eq(c)) {
          i = this.pendingContextChange = null, n += h, this.to += h;
          return;
        } else
          i = null, this.revertPending(e.state);
      if (s += n, a += n, a <= this.from)
        this.from += h, this.to += h;
      else if (s < this.to) {
        if (s < this.from || a > this.to || this.to - this.from + c.length > 3e4) {
          r = !0;
          return;
        }
        this.editContext.updateText(this.toContextPos(s), this.toContextPos(a), c.toString()), this.to += h;
      }
      n += h;
    }), i && !r && this.revertPending(e.state), !r;
  }
  update(e) {
    let n = this.pendingContextChange;
    this.composing && (this.composing.drifted || e.transactions.some((r) => !r.isUserEvent("input.type") && r.changes.touchesRange(this.from, this.to))) ? (this.composing.drifted = !0, this.composing.editorBase = e.changes.mapPos(this.composing.editorBase)) : !this.applyEdits(e) || !this.rangeIsValid(e.state) ? (this.pendingContextChange = null, this.reset(e.state)) : (e.docChanged || e.selectionSet || n) && this.setSelection(e.state), (e.geometryChanged || e.docChanged || e.selectionSet) && e.view.requestMeasure(this.measureReq);
  }
  resetRange(e) {
    let { head: n } = e.selection.main;
    this.from = Math.max(
      0,
      n - 1e4
      /* CxVp.Margin */
    ), this.to = Math.min(
      e.doc.length,
      n + 1e4
      /* CxVp.Margin */
    );
  }
  reset(e) {
    this.resetRange(e), this.editContext.updateText(0, this.editContext.text.length, e.doc.sliceString(this.from, this.to)), this.setSelection(e);
  }
  revertPending(e) {
    let n = this.pendingContextChange;
    this.pendingContextChange = null, this.editContext.updateText(this.toContextPos(n.from), this.toContextPos(n.from + n.insert.length), e.doc.sliceString(n.from, n.to));
  }
  setSelection(e) {
    let { main: n } = e.selection, r = this.toContextPos(Math.max(this.from, Math.min(this.to, n.anchor))), i = this.toContextPos(n.head);
    (this.editContext.selectionStart != r || this.editContext.selectionEnd != i) && this.editContext.updateSelection(r, i);
  }
  rangeIsValid(e) {
    let { head: n } = e.selection.main;
    return !(this.from > 0 && n - this.from < 500 || this.to < e.doc.length && this.to - n < 500 || this.to - this.from > 1e4 * 3);
  }
  toEditorPos(e, n = this.to - this.from) {
    e = Math.min(e, n);
    let r = this.composing;
    return r && r.drifted ? r.editorBase + (e - r.contextBase) : e + this.from;
  }
  toContextPos(e) {
    let n = this.composing;
    return n && n.drifted ? n.contextBase + (e - n.editorBase) : e - this.from;
  }
  destroy() {
    for (let e in this.handlers)
      this.editContext.removeEventListener(e, this.handlers[e]);
  }
}
class be {
  /**
  The current editor state.
  */
  get state() {
    return this.viewState.state;
  }
  /**
  To be able to display large documents without consuming too much
  memory or overloading the browser, CodeMirror only draws the
  code that is visible (plus a margin around it) to the DOM. This
  property tells you the extent of the current drawn viewport, in
  document positions.
  */
  get viewport() {
    return this.viewState.viewport;
  }
  /**
  When there are, for example, large collapsed ranges in the
  viewport, its size can be a lot bigger than the actual visible
  content. Thus, if you are doing something like styling the
  content in the viewport, it is preferable to only do so for
  these ranges, which are the subset of the viewport that is
  actually drawn.
  */
  get visibleRanges() {
    return this.viewState.visibleRanges;
  }
  /**
  Returns false when the editor is entirely scrolled out of view
  or otherwise hidden.
  */
  get inView() {
    return this.viewState.inView;
  }
  /**
  Indicates whether the user is currently composing text via
  [IME](https://en.wikipedia.org/wiki/Input_method), and at least
  one change has been made in the current composition.
  */
  get composing() {
    return this.inputState.composing > 0;
  }
  /**
  Indicates whether the user is currently in composing state. Note
  that on some platforms, like Android, this will be the case a
  lot, since just putting the cursor on a word starts a
  composition there.
  */
  get compositionStarted() {
    return this.inputState.composing >= 0;
  }
  /**
  The document or shadow root that the view lives in.
  */
  get root() {
    return this._root;
  }
  /**
  @internal
  */
  get win() {
    return this.dom.ownerDocument.defaultView || window;
  }
  /**
  Construct a new view. You'll want to either provide a `parent`
  option, or put `view.dom` into your document after creating a
  view, so that the user can see the editor.
  */
  constructor(e = {}) {
    var n;
    this.plugins = [], this.pluginMap = /* @__PURE__ */ new Map(), this.editorAttrs = {}, this.contentAttrs = {}, this.bidiCache = [], this.destroyed = !1, this.updateState = 2, this.measureScheduled = -1, this.measureRequests = [], this.contentDOM = document.createElement("div"), this.scrollDOM = document.createElement("div"), this.scrollDOM.tabIndex = -1, this.scrollDOM.className = "cm-scroller", this.scrollDOM.appendChild(this.contentDOM), this.announceDOM = document.createElement("div"), this.announceDOM.className = "cm-announced", this.announceDOM.setAttribute("aria-live", "polite"), this.dom = document.createElement("div"), this.dom.appendChild(this.announceDOM), this.dom.appendChild(this.scrollDOM), e.parent && e.parent.appendChild(this.dom);
    let { dispatch: r } = e;
    this.dispatchTransactions = e.dispatchTransactions || r && ((i) => i.forEach((s) => r(s, this))) || ((i) => this.update(i)), this.dispatch = this.dispatch.bind(this), this._root = e.root || J4(e.parent) || document, this.viewState = new Jg(e.state || dt.create(e)), e.scrollTo && e.scrollTo.is(Ml) && (this.viewState.scrollTarget = e.scrollTo.value.clip(this.viewState.state)), this.plugins = this.state.facet(so).map((i) => new Rh(i));
    for (let i of this.plugins)
      i.update(this);
    this.observer = new m6(this), this.inputState = new $8(this), this.inputState.ensureHandlers(this.plugins), this.docView = new Tg(this), this.mountStyles(), this.updateAttrs(), this.updateState = 0, this.requestMeasure(), !((n = document.fonts) === null || n === void 0) && n.ready && document.fonts.ready.then(() => this.requestMeasure());
  }
  dispatch(...e) {
    let n = e.length == 1 && e[0] instanceof sn ? e : e.length == 1 && Array.isArray(e[0]) ? e[0] : [this.state.update(...e)];
    this.dispatchTransactions(n, this);
  }
  /**
  Update the view for the given array of transactions. This will
  update the visible document and selection to match the state
  produced by the transactions, and notify view plugins of the
  change. You should usually call
  [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead, which uses this
  as a primitive.
  */
  update(e) {
    if (this.updateState != 0)
      throw new Error("Calls to EditorView.update are not allowed while an update is in progress");
    let n = !1, r = !1, i, s = this.state;
    for (let m of e) {
      if (m.startState != s)
        throw new RangeError("Trying to update state with a transaction that doesn't start from the previous state.");
      s = m.state;
    }
    if (this.destroyed) {
      this.viewState.state = s;
      return;
    }
    let a = this.hasFocus, o = 0, l = null;
    e.some((m) => m.annotation(AC)) ? (this.inputState.notifiedFocused = a, o = 1) : a != this.inputState.notifiedFocused && (this.inputState.notifiedFocused = a, l = DC(s, a), l || (o = 1));
    let c = this.observer.delayedAndroidKey, h = null;
    if (c ? (this.observer.clearDelayedAndroidKey(), h = this.observer.readChange(), (h && !this.state.doc.eq(s.doc) || !this.state.selection.eq(s.selection)) && (h = null)) : this.observer.clear(), s.facet(dt.phrases) != this.state.facet(dt.phrases))
      return this.setState(s);
    i = Su.create(this, s, e), i.flags |= o;
    let f = this.viewState.scrollTarget;
    try {
      this.updateState = 2;
      for (let m of e) {
        if (f && (f = f.map(m.changes)), m.scrollIntoView) {
          let { main: y } = m.state.selection;
          f = new aa(y.empty ? y : ne.cursor(y.head, y.head > y.anchor ? -1 : 1));
        }
        for (let y of m.effects)
          y.is(Ml) && (f = y.value.clip(this.state));
      }
      this.viewState.update(i, f), this.bidiCache = Du.update(this.bidiCache, i.changes), i.empty || (this.updatePlugins(i), this.inputState.update(i)), n = this.docView.update(i), this.state.facet(ao) != this.styleModules && this.mountStyles(), r = this.updateAttrs(), this.showAnnouncements(e), this.docView.updateSelection(n, e.some((m) => m.isUserEvent("select.pointer")));
    } finally {
      this.updateState = 0;
    }
    if (i.startState.facet($l) != i.state.facet($l) && (this.viewState.mustMeasureContent = !0), (n || r || f || this.viewState.mustEnforceCursorAssoc || this.viewState.mustMeasureContent) && this.requestMeasure(), n && this.docViewUpdate(), !i.empty)
      for (let m of this.state.facet(Kp))
        try {
          m(i);
        } catch (y) {
          Wn(this.state, y, "update listener");
        }
    (l || h) && Promise.resolve().then(() => {
      l && this.state == l.startState && this.dispatch(l), h && !vC(this, h) && c.force && sa(this.contentDOM, c.key, c.keyCode);
    });
  }
  /**
  Reset the view to the given state. (This will cause the entire
  document to be redrawn and all view plugins to be reinitialized,
  so you should probably only use it when the new state isn't
  derived from the old state. Otherwise, use
  [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead.)
  */
  setState(e) {
    if (this.updateState != 0)
      throw new Error("Calls to EditorView.setState are not allowed while an update is in progress");
    if (this.destroyed) {
      this.viewState.state = e;
      return;
    }
    this.updateState = 2;
    let n = this.hasFocus;
    try {
      for (let r of this.plugins)
        r.destroy(this);
      this.viewState = new Jg(e), this.plugins = e.facet(so).map((r) => new Rh(r)), this.pluginMap.clear();
      for (let r of this.plugins)
        r.update(this);
      this.docView.destroy(), this.docView = new Tg(this), this.inputState.ensureHandlers(this.plugins), this.mountStyles(), this.updateAttrs(), this.bidiCache = [];
    } finally {
      this.updateState = 0;
    }
    n && this.focus(), this.requestMeasure();
  }
  updatePlugins(e) {
    let n = e.startState.facet(so), r = e.state.facet(so);
    if (n != r) {
      let i = [];
      for (let s of r) {
        let a = n.indexOf(s);
        if (a < 0)
          i.push(new Rh(s));
        else {
          let o = this.plugins[a];
          o.mustUpdate = e, i.push(o);
        }
      }
      for (let s of this.plugins)
        s.mustUpdate != e && s.destroy(this);
      this.plugins = i, this.pluginMap.clear();
    } else
      for (let i of this.plugins)
        i.mustUpdate = e;
    for (let i = 0; i < this.plugins.length; i++)
      this.plugins[i].update(this);
    n != r && this.inputState.ensureHandlers(this.plugins);
  }
  docViewUpdate() {
    for (let e of this.plugins) {
      let n = e.value;
      if (n && n.docViewUpdate)
        try {
          n.docViewUpdate(this);
        } catch (r) {
          Wn(this.state, r, "doc view update listener");
        }
    }
  }
  /**
  @internal
  */
  measure(e = !0) {
    if (this.destroyed)
      return;
    if (this.measureScheduled > -1 && this.win.cancelAnimationFrame(this.measureScheduled), this.observer.delayedAndroidKey) {
      this.measureScheduled = -1, this.requestMeasure();
      return;
    }
    this.measureScheduled = 0, e && this.observer.forceFlush();
    let n = null, r = this.scrollDOM, i = r.scrollTop * this.scaleY, { scrollAnchorPos: s, scrollAnchorHeight: a } = this.viewState;
    Math.abs(i - this.viewState.scrollTop) > 1 && (a = -1), this.viewState.scrollAnchorHeight = -1;
    try {
      for (let o = 0; ; o++) {
        if (a < 0)
          if (Iw(r))
            s = -1, a = this.viewState.heightMap.height;
          else {
            let y = this.viewState.scrollAnchorAt(i);
            s = y.from, a = y.top;
          }
        this.updateState = 1;
        let l = this.viewState.measure(this);
        if (!l && !this.measureRequests.length && this.viewState.scrollTarget == null)
          break;
        if (o > 5) {
          console.warn(this.measureRequests.length ? "Measure loop restarted more than 5 times" : "Viewport failed to stabilize");
          break;
        }
        let c = [];
        l & 4 || ([this.measureRequests, c] = [c, this.measureRequests]);
        let h = c.map((y) => {
          try {
            return y.read(this);
          } catch (x) {
            return Wn(this.state, x), r0;
          }
        }), f = Su.create(this, this.state, []), m = !1;
        f.flags |= l, n ? n.flags |= l : n = f, this.updateState = 2, f.empty || (this.updatePlugins(f), this.inputState.update(f), this.updateAttrs(), m = this.docView.update(f), m && this.docViewUpdate());
        for (let y = 0; y < c.length; y++)
          if (h[y] != r0)
            try {
              let x = c[y];
              x.write && x.write(h[y], this);
            } catch (x) {
              Wn(this.state, x);
            }
        if (m && this.docView.updateSelection(!0), !f.viewportChanged && this.measureRequests.length == 0) {
          if (this.viewState.editorHeight)
            if (this.viewState.scrollTarget) {
              this.docView.scrollIntoView(this.viewState.scrollTarget), this.viewState.scrollTarget = null, a = -1;
              continue;
            } else {
              let x = (s < 0 ? this.viewState.heightMap.height : this.viewState.lineBlockAt(s).top) - a;
              if (x > 1 || x < -1) {
                i = i + x, r.scrollTop = i / this.scaleY, a = -1;
                continue;
              }
            }
          break;
        }
      }
    } finally {
      this.updateState = 0, this.measureScheduled = -1;
    }
    if (n && !n.empty)
      for (let o of this.state.facet(Kp))
        o(n);
  }
  /**
  Get the CSS classes for the currently active editor themes.
  */
  get themeClasses() {
    return rf + " " + (this.state.facet(nf) ? BC : FC) + " " + this.state.facet($l);
  }
  updateAttrs() {
    let e = i0(this, dC, {
      class: "cm-editor" + (this.hasFocus ? " cm-focused " : " ") + this.themeClasses
    }), n = {
      spellcheck: "false",
      autocorrect: "off",
      autocapitalize: "off",
      writingsuggestions: "false",
      translate: "no",
      contenteditable: this.state.facet(ki) ? "true" : "false",
      class: "cm-content",
      style: `${we.tabSize}: ${this.state.tabSize}`,
      role: "textbox",
      "aria-multiline": "true"
    };
    this.state.readOnly && (n["aria-readonly"] = "true"), i0(this, Zd, n);
    let r = this.observer.ignore(() => {
      let i = Up(this.contentDOM, this.contentAttrs, n), s = Up(this.dom, this.editorAttrs, e);
      return i || s;
    });
    return this.editorAttrs = e, this.contentAttrs = n, r;
  }
  showAnnouncements(e) {
    let n = !0;
    for (let r of e)
      for (let i of r.effects)
        if (i.is(be.announce)) {
          n && (this.announceDOM.textContent = ""), n = !1;
          let s = this.announceDOM.appendChild(document.createElement("div"));
          s.textContent = i.value;
        }
  }
  mountStyles() {
    this.styleModules = this.state.facet(ao);
    let e = this.state.facet(be.cspNonce);
    Ki.mount(this.root, this.styleModules.concat(f6).reverse(), e ? { nonce: e } : void 0);
  }
  readMeasured() {
    if (this.updateState == 2)
      throw new Error("Reading the editor layout isn't allowed during an update");
    this.updateState == 0 && this.measureScheduled > -1 && this.measure(!1);
  }
  /**
  Schedule a layout measurement, optionally providing callbacks to
  do custom DOM measuring followed by a DOM write phase. Using
  this is preferable reading DOM layout directly from, for
  example, an event handler, because it'll make sure measuring and
  drawing done by other components is synchronized, avoiding
  unnecessary DOM layout computations.
  */
  requestMeasure(e) {
    if (this.measureScheduled < 0 && (this.measureScheduled = this.win.requestAnimationFrame(() => this.measure())), e) {
      if (this.measureRequests.indexOf(e) > -1)
        return;
      if (e.key != null) {
        for (let n = 0; n < this.measureRequests.length; n++)
          if (this.measureRequests[n].key === e.key) {
            this.measureRequests[n] = e;
            return;
          }
      }
      this.measureRequests.push(e);
    }
  }
  /**
  Get the value of a specific plugin, if present. Note that
  plugins that crash can be dropped from a view, so even when you
  know you registered a given plugin, it is recommended to check
  the return value of this method.
  */
  plugin(e) {
    let n = this.pluginMap.get(e);
    return (n === void 0 || n && n.spec != e) && this.pluginMap.set(e, n = this.plugins.find((r) => r.spec == e) || null), n && n.update(this).value;
  }
  /**
  The top position of the document, in screen coordinates. This
  may be negative when the editor is scrolled down. Points
  directly to the top of the first line, not above the padding.
  */
  get documentTop() {
    return this.contentDOM.getBoundingClientRect().top + this.viewState.paddingTop;
  }
  /**
  Reports the padding above and below the document.
  */
  get documentPadding() {
    return { top: this.viewState.paddingTop, bottom: this.viewState.paddingBottom };
  }
  /**
  If the editor is transformed with CSS, this provides the scale
  along the X axis. Otherwise, it will just be 1. Note that
  transforms other than translation and scaling are not supported.
  */
  get scaleX() {
    return this.viewState.scaleX;
  }
  /**
  Provide the CSS transformed scale along the Y axis.
  */
  get scaleY() {
    return this.viewState.scaleY;
  }
  /**
  Find the text line or block widget at the given vertical
  position (which is interpreted as relative to the [top of the
  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop)).
  */
  elementAtHeight(e) {
    return this.readMeasured(), this.viewState.elementAtHeight(e);
  }
  /**
  Find the line block (see
  [`lineBlockAt`](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) at the given
  height, again interpreted relative to the [top of the
  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop).
  */
  lineBlockAtHeight(e) {
    return this.readMeasured(), this.viewState.lineBlockAtHeight(e);
  }
  /**
  Get the extent and vertical position of all [line
  blocks](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) in the viewport. Positions
  are relative to the [top of the
  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop);
  */
  get viewportLineBlocks() {
    return this.viewState.viewportLines;
  }
  /**
  Find the line block around the given document position. A line
  block is a range delimited on both sides by either a
  non-[hidden](https://codemirror.net/6/docs/ref/#view.Decoration^replace) line break, or the
  start/end of the document. It will usually just hold a line of
  text, but may be broken into multiple textblocks by block
  widgets.
  */
  lineBlockAt(e) {
    return this.viewState.lineBlockAt(e);
  }
  /**
  The editor's total content height.
  */
  get contentHeight() {
    return this.viewState.contentHeight;
  }
  /**
  Move a cursor position by [grapheme
  cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak). `forward` determines whether
  the motion is away from the line start, or towards it. In
  bidirectional text, the line is traversed in visual order, using
  the editor's [text direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection).
  When the start position was the last one on the line, the
  returned position will be across the line break. If there is no
  further line, the original position is returned.
  
  By default, this method moves over a single cluster. The
  optional `by` argument can be used to move across more. It will
  be called with the first cluster as argument, and should return
  a predicate that determines, for each subsequent cluster,
  whether it should also be moved over.
  */
  moveByChar(e, n, r) {
    return Zh(this, e, Zg(this, e, n, r));
  }
  /**
  Move a cursor position across the next group of either
  [letters](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) or non-letter
  non-whitespace characters.
  */
  moveByGroup(e, n) {
    return Zh(this, e, Zg(this, e, n, (r) => E8(this, e.head, r)));
  }
  /**
  Get the cursor position visually at the start or end of a line.
  Note that this may differ from the _logical_ position at its
  start or end (which is simply at `line.from`/`line.to`) if text
  at the start or end goes against the line's base text direction.
  */
  visualLineSide(e, n) {
    let r = this.bidiSpans(e), i = this.textDirectionAt(e.from), s = r[n ? r.length - 1 : 0];
    return ne.cursor(s.side(n, i) + e.from, s.forward(!n, i) ? 1 : -1);
  }
  /**
  Move to the next line boundary in the given direction. If
  `includeWrap` is true, line wrapping is on, and there is a
  further wrap point on the current line, the wrap point will be
  returned. Otherwise this function will return the start or end
  of the line.
  */
  moveToLineBoundary(e, n, r = !0) {
    return P8(this, e, n, r);
  }
  /**
  Move a cursor position vertically. When `distance` isn't given,
  it defaults to moving to the next line (including wrapped
  lines). Otherwise, `distance` should provide a positive distance
  in pixels.
  
  When `start` has a
  [`goalColumn`](https://codemirror.net/6/docs/ref/#state.SelectionRange.goalColumn), the vertical
  motion will use that as a target horizontal position. Otherwise,
  the cursor's own horizontal position is used. The returned
  cursor will have its goal column set to whichever column was
  used.
  */
  moveVertically(e, n, r) {
    return Zh(this, e, F8(this, e, n, r));
  }
  /**
  Find the DOM parent node and offset (child offset if `node` is
  an element, character offset when it is a text node) at the
  given document position.
  
  Note that for positions that aren't currently in
  `visibleRanges`, the resulting DOM position isn't necessarily
  meaningful (it may just point before or after a placeholder
  element).
  */
  domAtPos(e) {
    return this.docView.domAtPos(e);
  }
  /**
  Find the document position at the given DOM node. Can be useful
  for associating positions with DOM events. Will raise an error
  when `node` isn't part of the editor content.
  */
  posAtDOM(e, n = 0) {
    return this.docView.posFromDOM(e, n);
  }
  posAtCoords(e, n = !0) {
    return this.readMeasured(), OC(this, e, n);
  }
  /**
  Get the screen coordinates at the given document position.
  `side` determines whether the coordinates are based on the
  element before (-1) or after (1) the position (if no element is
  available on the given side, the method will transparently use
  another strategy to get reasonable coordinates).
  */
  coordsAtPos(e, n = 1) {
    this.readMeasured();
    let r = this.docView.coordsAt(e, n);
    if (!r || r.left == r.right)
      return r;
    let i = this.state.doc.lineAt(e), s = this.bidiSpans(i), a = s[zi.find(s, e - i.from, -1, n)];
    return Ec(r, a.dir == Dt.LTR == n > 0);
  }
  /**
  Return the rectangle around a given character. If `pos` does not
  point in front of a character that is in the viewport and
  rendered (i.e. not replaced, not a line break), this will return
  null. For space characters that are a line wrap point, this will
  return the position before the line break.
  */
  coordsForChar(e) {
    return this.readMeasured(), this.docView.coordsForChar(e);
  }
  /**
  The default width of a character in the editor. May not
  accurately reflect the width of all characters (given variable
  width fonts or styling of invididual ranges).
  */
  get defaultCharacterWidth() {
    return this.viewState.heightOracle.charWidth;
  }
  /**
  The default height of a line in the editor. May not be accurate
  for all lines.
  */
  get defaultLineHeight() {
    return this.viewState.heightOracle.lineHeight;
  }
  /**
  The text direction
  ([`direction`](https://developer.mozilla.org/en-US/docs/Web/CSS/direction)
  CSS property) of the editor's content element.
  */
  get textDirection() {
    return this.viewState.defaultTextDirection;
  }
  /**
  Find the text direction of the block at the given position, as
  assigned by CSS. If
  [`perLineTextDirection`](https://codemirror.net/6/docs/ref/#view.EditorView^perLineTextDirection)
  isn't enabled, or the given position is outside of the viewport,
  this will always return the same as
  [`textDirection`](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection). Note that
  this may trigger a DOM layout.
  */
  textDirectionAt(e) {
    return !this.state.facet(cC) || e < this.viewport.from || e > this.viewport.to ? this.textDirection : (this.readMeasured(), this.docView.textDirectionAt(e));
  }
  /**
  Whether this editor [wraps lines](https://codemirror.net/6/docs/ref/#view.EditorView.lineWrapping)
  (as determined by the
  [`white-space`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space)
  CSS property of its content element).
  */
  get lineWrapping() {
    return this.viewState.heightOracle.lineWrapping;
  }
  /**
  Returns the bidirectional text structure of the given line
  (which should be in the current document) as an array of span
  objects. The order of these spans matches the [text
  direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection)—if that is
  left-to-right, the leftmost spans come first, otherwise the
  rightmost spans come first.
  */
  bidiSpans(e) {
    if (e.length > y6)
      return nC(e.length);
    let n = this.textDirectionAt(e.from), r;
    for (let s of this.bidiCache)
      if (s.from == e.from && s.dir == n && (s.fresh || tC(s.isolates, r = Qg(this, e))))
        return s.order;
    r || (r = Qg(this, e));
    let i = p8(e.text, n, r);
    return this.bidiCache.push(new Du(e.from, e.to, n, r, !0, i)), i;
  }
  /**
  Check whether the editor has focus.
  */
  get hasFocus() {
    var e;
    return (this.dom.ownerDocument.hasFocus() || we.safari && ((e = this.inputState) === null || e === void 0 ? void 0 : e.lastContextMenu) > Date.now() - 3e4) && this.root.activeElement == this.contentDOM;
  }
  /**
  Put focus on the editor.
  */
  focus() {
    this.observer.ignore(() => {
      Zw(this.contentDOM), this.docView.updateSelection();
    });
  }
  /**
  Update the [root](https://codemirror.net/6/docs/ref/##view.EditorViewConfig.root) in which the editor lives. This is only
  necessary when moving the editor's existing DOM to a new window or shadow root.
  */
  setRoot(e) {
    this._root != e && (this._root = e, this.observer.setWindow((e.nodeType == 9 ? e : e.ownerDocument).defaultView || window), this.mountStyles());
  }
  /**
  Clean up this editor view, removing its element from the
  document, unregistering event handlers, and notifying
  plugins. The view instance can no longer be used after
  calling this.
  */
  destroy() {
    this.root.activeElement == this.contentDOM && this.contentDOM.blur();
    for (let e of this.plugins)
      e.destroy(this);
    this.plugins = [], this.inputState.destroy(), this.docView.destroy(), this.dom.remove(), this.observer.destroy(), this.measureScheduled > -1 && this.win.cancelAnimationFrame(this.measureScheduled), this.destroyed = !0;
  }
  /**
  Returns an effect that can be
  [added](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) to a transaction to
  cause it to scroll the given position or range into view.
  */
  static scrollIntoView(e, n = {}) {
    return Ml.of(new aa(typeof e == "number" ? ne.cursor(e) : e, n.y, n.x, n.yMargin, n.xMargin));
  }
  /**
  Return an effect that resets the editor to its current (at the
  time this method was called) scroll position. Note that this
  only affects the editor's own scrollable element, not parents.
  See also
  [`EditorViewConfig.scrollTo`](https://codemirror.net/6/docs/ref/#view.EditorViewConfig.scrollTo).
  
  The effect should be used with a document identical to the one
  it was created for. Failing to do so is not an error, but may
  not scroll to the expected position. You can
  [map](https://codemirror.net/6/docs/ref/#state.StateEffect.map) the effect to account for changes.
  */
  scrollSnapshot() {
    let { scrollTop: e, scrollLeft: n } = this.scrollDOM, r = this.viewState.scrollAnchorAt(e);
    return Ml.of(new aa(ne.cursor(r.from), "start", "start", r.top - e, n, !0));
  }
  /**
  Enable or disable tab-focus mode, which disables key bindings
  for Tab and Shift-Tab, letting the browser's default
  focus-changing behavior go through instead. This is useful to
  prevent trapping keyboard users in your editor.
  
  Without argument, this toggles the mode. With a boolean, it
  enables (true) or disables it (false). Given a number, it
  temporarily enables the mode until that number of milliseconds
  have passed or another non-Tab key is pressed.
  */
  setTabFocusMode(e) {
    e == null ? this.inputState.tabFocusMode = this.inputState.tabFocusMode < 0 ? 0 : -1 : typeof e == "boolean" ? this.inputState.tabFocusMode = e ? 0 : -1 : this.inputState.tabFocusMode != 0 && (this.inputState.tabFocusMode = Date.now() + e);
  }
  /**
  Returns an extension that can be used to add DOM event handlers.
  The value should be an object mapping event names to handler
  functions. For any given event, such functions are ordered by
  extension precedence, and the first handler to return true will
  be assumed to have handled that event, and no other handlers or
  built-in behavior will be activated for it. These are registered
  on the [content element](https://codemirror.net/6/docs/ref/#view.EditorView.contentDOM), except
  for `scroll` handlers, which will be called any time the
  editor's [scroll element](https://codemirror.net/6/docs/ref/#view.EditorView.scrollDOM) or one of
  its parent nodes is scrolled.
  */
  static domEventHandlers(e) {
    return fn.define(() => ({}), { eventHandlers: e });
  }
  /**
  Create an extension that registers DOM event observers. Contrary
  to event [handlers](https://codemirror.net/6/docs/ref/#view.EditorView^domEventHandlers),
  observers can't be prevented from running by a higher-precedence
  handler returning true. They also don't prevent other handlers
  and observers from running when they return true, and should not
  call `preventDefault`.
  */
  static domEventObservers(e) {
    return fn.define(() => ({}), { eventObservers: e });
  }
  /**
  Create a theme extension. The first argument can be a
  [`style-mod`](https://github.com/marijnh/style-mod#documentation)
  style spec providing the styles for the theme. These will be
  prefixed with a generated class for the style.
  
  Because the selectors will be prefixed with a scope class, rule
  that directly match the editor's [wrapper
  element](https://codemirror.net/6/docs/ref/#view.EditorView.dom)—to which the scope class will be
  added—need to be explicitly differentiated by adding an `&` to
  the selector for that element—for example
  `&.cm-focused`.
  
  When `dark` is set to true, the theme will be marked as dark,
  which will cause the `&dark` rules from [base
  themes](https://codemirror.net/6/docs/ref/#view.EditorView^baseTheme) to be used (as opposed to
  `&light` when a light theme is active).
  */
  static theme(e, n) {
    let r = Ki.newName(), i = [$l.of(r), ao.of(sf(`.${r}`, e))];
    return n && n.dark && i.push(nf.of(!0)), i;
  }
  /**
  Create an extension that adds styles to the base theme. Like
  with [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme), use `&` to indicate the
  place of the editor wrapper element when directly targeting
  that. You can also use `&dark` or `&light` instead to only
  target editors with a dark or light theme.
  */
  static baseTheme(e) {
    return Tr.lowest(ao.of(sf("." + rf, e, MC)));
  }
  /**
  Retrieve an editor view instance from the view's DOM
  representation.
  */
  static findFromDOM(e) {
    var n;
    let r = e.querySelector(".cm-content"), i = r && At.get(r) || At.get(e);
    return ((n = i?.rootView) === null || n === void 0 ? void 0 : n.view) || null;
  }
}
be.styleModule = ao;
be.inputHandler = lC;
be.clipboardInputFilter = Rd;
be.clipboardOutputFilter = $d;
be.scrollHandler = pC;
be.focusChangeEffect = uC;
be.perLineTextDirection = cC;
be.exceptionSink = oC;
be.updateListener = Kp;
be.editable = ki;
be.mouseSelectionStyle = aC;
be.dragMovesSelection = sC;
be.clickAddsSelectionRange = iC;
be.decorations = Po;
be.outerDecorations = mC;
be.atomicRanges = Ld;
be.bidiIsolatedRanges = gC;
be.scrollMargins = bC;
be.darkTheme = nf;
be.cspNonce = /* @__PURE__ */ Ae.define({ combine: (t) => t.length ? t[0] : "" });
be.contentAttributes = Zd;
be.editorAttributes = dC;
be.lineWrapping = /* @__PURE__ */ be.contentAttributes.of({ class: "cm-lineWrapping" });
be.announce = /* @__PURE__ */ Ie.define();
const y6 = 4096, r0 = {};
class Du {
  constructor(e, n, r, i, s, a) {
    this.from = e, this.to = n, this.dir = r, this.isolates = i, this.fresh = s, this.order = a;
  }
  static update(e, n) {
    if (n.empty && !e.some((s) => s.fresh))
      return e;
    let r = [], i = e.length ? e[e.length - 1].dir : Dt.LTR;
    for (let s = Math.max(0, e.length - 10); s < e.length; s++) {
      let a = e[s];
      a.dir == i && !n.touchesRange(a.from, a.to) && r.push(new Du(n.mapPos(a.from, 1), n.mapPos(a.to, -1), a.dir, a.isolates, !1, a.order));
    }
    return r;
  }
}
function i0(t, e, n) {
  for (let r = t.state.facet(e), i = r.length - 1; i >= 0; i--) {
    let s = r[i], a = typeof s == "function" ? s(t) : s;
    a && qp(a, n);
  }
  return n;
}
const O6 = we.mac ? "mac" : we.windows ? "win" : we.linux ? "linux" : "key";
function v6(t, e) {
  const n = t.split(/-(?!$)/);
  let r = n[n.length - 1];
  r == "Space" && (r = " ");
  let i, s, a, o;
  for (let l = 0; l < n.length - 1; ++l) {
    const c = n[l];
    if (/^(cmd|meta|m)$/i.test(c))
      o = !0;
    else if (/^a(lt)?$/i.test(c))
      i = !0;
    else if (/^(c|ctrl|control)$/i.test(c))
      s = !0;
    else if (/^s(hift)?$/i.test(c))
      a = !0;
    else if (/^mod$/i.test(c))
      e == "mac" ? o = !0 : s = !0;
    else
      throw new Error("Unrecognized modifier name: " + c);
  }
  return i && (r = "Alt-" + r), s && (r = "Ctrl-" + r), o && (r = "Meta-" + r), a && (r = "Shift-" + r), r;
}
function Zl(t, e, n) {
  return e.altKey && (t = "Alt-" + t), e.ctrlKey && (t = "Ctrl-" + t), e.metaKey && (t = "Meta-" + t), n !== !1 && e.shiftKey && (t = "Shift-" + t), t;
}
const x6 = /* @__PURE__ */ Tr.default(/* @__PURE__ */ be.domEventHandlers({
  keydown(t, e) {
    return TC(QC(e.state), t, e, "editor");
  }
})), js = /* @__PURE__ */ Ae.define({ enables: x6 }), s0 = /* @__PURE__ */ new WeakMap();
function QC(t) {
  let e = t.facet(js), n = s0.get(e);
  return n || s0.set(e, n = C6(e.reduce((r, i) => r.concat(i), []))), n;
}
function k6(t, e, n) {
  return TC(QC(t.state), e, t, n);
}
let Wi = null;
const w6 = 4e3;
function C6(t, e = O6) {
  let n = /* @__PURE__ */ Object.create(null), r = /* @__PURE__ */ Object.create(null), i = (a, o) => {
    let l = r[a];
    if (l == null)
      r[a] = o;
    else if (l != o)
      throw new Error("Key binding " + a + " is used both as a regular binding and as a multi-stroke prefix");
  }, s = (a, o, l, c, h) => {
    var f, m;
    let y = n[a] || (n[a] = /* @__PURE__ */ Object.create(null)), x = o.split(/ (?!$)/).map((M) => v6(M, e));
    for (let M = 1; M < x.length; M++) {
      let Z = x.slice(0, M).join(" ");
      i(Z, !0), y[Z] || (y[Z] = {
        preventDefault: !0,
        stopPropagation: !1,
        run: [(q) => {
          let _ = Wi = { view: q, prefix: Z, scope: a };
          return setTimeout(() => {
            Wi == _ && (Wi = null);
          }, w6), !0;
        }]
      });
    }
    let C = x.join(" ");
    i(C, !1);
    let S = y[C] || (y[C] = {
      preventDefault: !1,
      stopPropagation: !1,
      run: ((m = (f = y._any) === null || f === void 0 ? void 0 : f.run) === null || m === void 0 ? void 0 : m.slice()) || []
    });
    l && S.run.push(l), c && (S.preventDefault = !0), h && (S.stopPropagation = !0);
  };
  for (let a of t) {
    let o = a.scope ? a.scope.split(" ") : ["editor"];
    if (a.any)
      for (let c of o) {
        let h = n[c] || (n[c] = /* @__PURE__ */ Object.create(null));
        h._any || (h._any = { preventDefault: !1, stopPropagation: !1, run: [] });
        let { any: f } = a;
        for (let m in h)
          h[m].run.push((y) => f(y, af));
      }
    let l = a[e] || a.key;
    if (l)
      for (let c of o)
        s(c, l, a.run, a.preventDefault, a.stopPropagation), a.shift && s(c, "Shift-" + l, a.shift, a.preventDefault, a.stopPropagation);
  }
  return n;
}
let af = null;
function TC(t, e, n, r) {
  af = e;
  let i = G4(e), s = ur(i, 0), a = ai(s) == i.length && i != " ", o = "", l = !1, c = !1, h = !1;
  Wi && Wi.view == n && Wi.scope == r && (o = Wi.prefix + " ", kC.indexOf(e.keyCode) < 0 && (c = !0, Wi = null));
  let f = /* @__PURE__ */ new Set(), m = (S) => {
    if (S) {
      for (let M of S.run)
        if (!f.has(M) && (f.add(M), M(n)))
          return S.stopPropagation && (h = !0), !0;
      S.preventDefault && (S.stopPropagation && (h = !0), c = !0);
    }
    return !1;
  }, y = t[r], x, C;
  return y && (m(y[o + Zl(i, e, !a)]) ? l = !0 : a && (e.altKey || e.metaKey || e.ctrlKey) && // Ctrl-Alt may be used for AltGr on Windows
  !(we.windows && e.ctrlKey && e.altKey) && (x = Ji[e.keyCode]) && x != i ? (m(y[o + Zl(x, e, !0)]) || e.shiftKey && (C = So[e.keyCode]) != i && C != x && m(y[o + Zl(C, e, !1)])) && (l = !0) : a && e.shiftKey && m(y[o + Zl(i, e, !0)]) && (l = !0), !l && m(y._any) && (l = !0)), c && (l = !0), l && h && e.stopPropagation(), af = null, l;
}
class zo {
  /**
  Create a marker with the given class and dimensions. If `width`
  is null, the DOM element will get no width style.
  */
  constructor(e, n, r, i, s) {
    this.className = e, this.left = n, this.top = r, this.width = i, this.height = s;
  }
  draw() {
    let e = document.createElement("div");
    return e.className = this.className, this.adjust(e), e;
  }
  update(e, n) {
    return n.className != this.className ? !1 : (this.adjust(e), !0);
  }
  adjust(e) {
    e.style.left = this.left + "px", e.style.top = this.top + "px", this.width != null && (e.style.width = this.width + "px"), e.style.height = this.height + "px";
  }
  eq(e) {
    return this.left == e.left && this.top == e.top && this.width == e.width && this.height == e.height && this.className == e.className;
  }
  /**
  Create a set of rectangles for the given selection range,
  assigning them theclass`className`. Will create a single
  rectangle for empty ranges, and a set of selection-style
  rectangles covering the range's content (in a bidi-aware
  way) for non-empty ones.
  */
  static forRange(e, n, r) {
    if (r.empty) {
      let i = e.coordsAtPos(r.head, r.assoc || 1);
      if (!i)
        return [];
      let s = jC(e);
      return [new zo(n, i.left - s.left, i.top - s.top, null, i.bottom - i.top)];
    } else
      return S6(e, n, r);
  }
}
function jC(t) {
  let e = t.scrollDOM.getBoundingClientRect();
  return { left: (t.textDirection == Dt.LTR ? e.left : e.right - t.scrollDOM.clientWidth * t.scaleX) - t.scrollDOM.scrollLeft * t.scaleX, top: e.top - t.scrollDOM.scrollTop * t.scaleY };
}
function a0(t, e, n, r) {
  let i = t.coordsAtPos(e, n * 2);
  if (!i)
    return r;
  let s = t.dom.getBoundingClientRect(), a = (i.top + i.bottom) / 2, o = t.posAtCoords({ x: s.left + 1, y: a }), l = t.posAtCoords({ x: s.right - 1, y: a });
  return o == null || l == null ? r : { from: Math.max(r.from, Math.min(o, l)), to: Math.min(r.to, Math.max(o, l)) };
}
function S6(t, e, n) {
  if (n.to <= t.viewport.from || n.from >= t.viewport.to)
    return [];
  let r = Math.max(n.from, t.viewport.from), i = Math.min(n.to, t.viewport.to), s = t.textDirection == Dt.LTR, a = t.contentDOM, o = a.getBoundingClientRect(), l = jC(t), c = a.querySelector(".cm-line"), h = c && window.getComputedStyle(c), f = o.left + (h ? parseInt(h.paddingLeft) + Math.min(0, parseInt(h.textIndent)) : 0), m = o.right - (h ? parseInt(h.paddingRight) : 0), y = ef(t, r), x = ef(t, i), C = y.type == _n.Text ? y : null, S = x.type == _n.Text ? x : null;
  if (C && (t.lineWrapping || y.widgetLineBreaks) && (C = a0(t, r, 1, C)), S && (t.lineWrapping || x.widgetLineBreaks) && (S = a0(t, i, -1, S)), C && S && C.from == S.from && C.to == S.to)
    return Z(q(n.from, n.to, C));
  {
    let B = C ? q(n.from, null, C) : _(y, !1), $ = S ? q(null, n.to, S) : _(x, !0), N = [];
    return (C || y).to < (S || x).from - (C && S ? 1 : 0) || y.widgetLineBreaks > 1 && B.bottom + t.defaultLineHeight / 2 < $.top ? N.push(M(f, B.bottom, m, $.top)) : B.bottom < $.top && t.elementAtHeight((B.bottom + $.top) / 2).type == _n.Text && (B.bottom = $.top = (B.bottom + $.top) / 2), Z(B).concat(N).concat(Z($));
  }
  function M(B, $, N, U) {
    return new zo(e, B - l.left, $ - l.top, N - B, U - $);
  }
  function Z({ top: B, bottom: $, horizontal: N }) {
    let U = [];
    for (let se = 0; se < N.length; se += 2)
      U.push(M(N[se], B, N[se + 1], $));
    return U;
  }
  function q(B, $, N) {
    let U = 1e9, se = -1e9, K = [];
    function ce(fe, De, Ee, re, ke) {
      let Le = t.coordsAtPos(fe, fe == N.to ? -2 : 2), xe = t.coordsAtPos(Ee, Ee == N.from ? 2 : -2);
      !Le || !xe || (U = Math.min(Le.top, xe.top, U), se = Math.max(Le.bottom, xe.bottom, se), ke == Dt.LTR ? K.push(s && De ? f : Le.left, s && re ? m : xe.right) : K.push(!s && re ? f : xe.left, !s && De ? m : Le.right));
    }
    let H = B ?? N.from, ie = $ ?? N.to;
    for (let fe of t.visibleRanges)
      if (fe.to > H && fe.from < ie)
        for (let De = Math.max(fe.from, H), Ee = Math.min(fe.to, ie); ; ) {
          let re = t.state.doc.lineAt(De);
          for (let ke of t.bidiSpans(re)) {
            let Le = ke.from + re.from, xe = ke.to + re.from;
            if (Le >= Ee)
              break;
            xe > De && ce(Math.max(Le, De), B == null && Le <= H, Math.min(xe, Ee), $ == null && xe >= ie, ke.dir);
          }
          if (De = re.to + 1, De >= Ee)
            break;
        }
    return K.length == 0 && ce(H, B == null, ie, $ == null, t.textDirection), { top: U, bottom: se, horizontal: K };
  }
  function _(B, $) {
    let N = o.top + ($ ? B.top : B.bottom);
    return { top: N, bottom: N, horizontal: [] };
  }
}
function A6(t, e) {
  return t.constructor == e.constructor && t.eq(e);
}
class D6 {
  constructor(e, n) {
    this.view = e, this.layer = n, this.drawn = [], this.scaleX = 1, this.scaleY = 1, this.measureReq = { read: this.measure.bind(this), write: this.draw.bind(this) }, this.dom = e.scrollDOM.appendChild(document.createElement("div")), this.dom.classList.add("cm-layer"), n.above && this.dom.classList.add("cm-layer-above"), n.class && this.dom.classList.add(n.class), this.scale(), this.dom.setAttribute("aria-hidden", "true"), this.setOrder(e.state), e.requestMeasure(this.measureReq), n.mount && n.mount(this.dom, e);
  }
  update(e) {
    e.startState.facet(su) != e.state.facet(su) && this.setOrder(e.state), (this.layer.update(e, this.dom) || e.geometryChanged) && (this.scale(), e.view.requestMeasure(this.measureReq));
  }
  docViewUpdate(e) {
    this.layer.updateOnDocViewUpdate !== !1 && e.requestMeasure(this.measureReq);
  }
  setOrder(e) {
    let n = 0, r = e.facet(su);
    for (; n < r.length && r[n] != this.layer; )
      n++;
    this.dom.style.zIndex = String((this.layer.above ? 150 : -1) - n);
  }
  measure() {
    return this.layer.markers(this.view);
  }
  scale() {
    let { scaleX: e, scaleY: n } = this.view;
    (e != this.scaleX || n != this.scaleY) && (this.scaleX = e, this.scaleY = n, this.dom.style.transform = `scale(${1 / e}, ${1 / n})`);
  }
  draw(e) {
    if (e.length != this.drawn.length || e.some((n, r) => !A6(n, this.drawn[r]))) {
      let n = this.dom.firstChild, r = 0;
      for (let i of e)
        i.update && n && i.constructor && this.drawn[r].constructor && i.update(n, this.drawn[r]) ? (n = n.nextSibling, r++) : this.dom.insertBefore(i.draw(), n);
      for (; n; ) {
        let i = n.nextSibling;
        n.remove(), n = i;
      }
      this.drawn = e;
    }
  }
  destroy() {
    this.layer.destroy && this.layer.destroy(this.dom, this.view), this.dom.remove();
  }
}
const su = /* @__PURE__ */ Ae.define();
function _C(t) {
  return [
    fn.define((e) => new D6(e, t)),
    su.of(t)
  ];
}
const RC = !(we.ios && we.webkit && we.webkit_version < 534), ka = /* @__PURE__ */ Ae.define({
  combine(t) {
    return os(t, {
      cursorBlinkRate: 1200,
      drawRangeCursor: !0
    }, {
      cursorBlinkRate: (e, n) => Math.min(e, n),
      drawRangeCursor: (e, n) => e || n
    });
  }
});
function P6(t = {}) {
  return [
    ka.of(t),
    E6,
    F6,
    B6,
    hC.of(!0)
  ];
}
function $C(t) {
  return t.facet(ka);
}
function ZC(t) {
  return t.startState.facet(ka) != t.state.facet(ka);
}
const E6 = /* @__PURE__ */ _C({
  above: !0,
  markers(t) {
    let { state: e } = t, n = e.facet(ka), r = [];
    for (let i of e.selection.ranges) {
      let s = i == e.selection.main;
      if (i.empty ? !s || RC : n.drawRangeCursor) {
        let a = s ? "cm-cursor cm-cursor-primary" : "cm-cursor cm-cursor-secondary", o = i.empty ? i : ne.cursor(i.head, i.head > i.anchor ? -1 : 1);
        for (let l of zo.forRange(t, a, o))
          r.push(l);
      }
    }
    return r;
  },
  update(t, e) {
    t.transactions.some((r) => r.selection) && (e.style.animationName = e.style.animationName == "cm-blink" ? "cm-blink2" : "cm-blink");
    let n = ZC(t);
    return n && o0(t.state, e), t.docChanged || t.selectionSet || n;
  },
  mount(t, e) {
    o0(e.state, t);
  },
  class: "cm-cursorLayer"
});
function o0(t, e) {
  e.style.animationDuration = t.facet(ka).cursorBlinkRate + "ms";
}
const F6 = /* @__PURE__ */ _C({
  above: !1,
  markers(t) {
    return t.state.selection.ranges.map((e) => e.empty ? [] : zo.forRange(t, "cm-selectionBackground", e)).reduce((e, n) => e.concat(n));
  },
  update(t, e) {
    return t.docChanged || t.selectionSet || t.viewportChanged || ZC(t);
  },
  class: "cm-selectionLayer"
}), of = {
  ".cm-line": {
    "& ::selection, &::selection": { backgroundColor: "transparent !important" }
  },
  ".cm-content": {
    "& :focus": {
      caretColor: "initial !important",
      "&::selection, & ::selection": {
        backgroundColor: "Highlight !important"
      }
    }
  }
};
RC && (of[".cm-line"].caretColor = of[".cm-content"].caretColor = "transparent !important");
const B6 = /* @__PURE__ */ Tr.highest(/* @__PURE__ */ be.theme(of));
function M6() {
  return T6;
}
const Q6 = /* @__PURE__ */ Te.line({ class: "cm-activeLine" }), T6 = /* @__PURE__ */ fn.fromClass(class {
  constructor(t) {
    this.decorations = this.getDeco(t);
  }
  update(t) {
    (t.docChanged || t.selectionSet) && (this.decorations = this.getDeco(t.view));
  }
  getDeco(t) {
    let e = -1, n = [];
    for (let r of t.state.selection.ranges) {
      let i = t.lineBlockAt(r.head);
      i.from > e && (n.push(Q6.range(i.from)), e = i.from);
    }
    return Te.set(n);
  }
}, {
  decorations: (t) => t.decorations
}), eo = "-10000px";
class LC {
  constructor(e, n, r, i) {
    this.facet = n, this.createTooltipView = r, this.removeTooltipView = i, this.input = e.state.facet(n), this.tooltips = this.input.filter((a) => a);
    let s = null;
    this.tooltipViews = this.tooltips.map((a) => s = r(a, s));
  }
  update(e, n) {
    var r;
    let i = e.state.facet(this.facet), s = i.filter((l) => l);
    if (i === this.input) {
      for (let l of this.tooltipViews)
        l.update && l.update(e);
      return !1;
    }
    let a = [], o = n ? [] : null;
    for (let l = 0; l < s.length; l++) {
      let c = s[l], h = -1;
      if (c) {
        for (let f = 0; f < this.tooltips.length; f++) {
          let m = this.tooltips[f];
          m && m.create == c.create && (h = f);
        }
        if (h < 0)
          a[l] = this.createTooltipView(c, l ? a[l - 1] : null), o && (o[l] = !!c.above);
        else {
          let f = a[l] = this.tooltipViews[h];
          o && (o[l] = n[h]), f.update && f.update(e);
        }
      }
    }
    for (let l of this.tooltipViews)
      a.indexOf(l) < 0 && (this.removeTooltipView(l), (r = l.destroy) === null || r === void 0 || r.call(l));
    return n && (o.forEach((l, c) => n[c] = l), n.length = o.length), this.input = i, this.tooltips = s, this.tooltipViews = a, !0;
  }
}
function j6(t) {
  let { win: e } = t;
  return { top: 0, left: 0, bottom: e.innerHeight, right: e.innerWidth };
}
const Nh = /* @__PURE__ */ Ae.define({
  combine: (t) => {
    var e, n, r;
    return {
      position: we.ios ? "absolute" : ((e = t.find((i) => i.position)) === null || e === void 0 ? void 0 : e.position) || "fixed",
      parent: ((n = t.find((i) => i.parent)) === null || n === void 0 ? void 0 : n.parent) || null,
      tooltipSpace: ((r = t.find((i) => i.tooltipSpace)) === null || r === void 0 ? void 0 : r.tooltipSpace) || j6
    };
  }
}), l0 = /* @__PURE__ */ new WeakMap(), Wd = /* @__PURE__ */ fn.fromClass(class {
  constructor(t) {
    this.view = t, this.above = [], this.inView = !0, this.madeAbsolute = !1, this.lastTransaction = 0, this.measureTimeout = -1;
    let e = t.state.facet(Nh);
    this.position = e.position, this.parent = e.parent, this.classes = t.themeClasses, this.createContainer(), this.measureReq = { read: this.readMeasure.bind(this), write: this.writeMeasure.bind(this), key: this }, this.resizeObserver = typeof ResizeObserver == "function" ? new ResizeObserver(() => this.measureSoon()) : null, this.manager = new LC(t, qd, (n, r) => this.createTooltip(n, r), (n) => {
      this.resizeObserver && this.resizeObserver.unobserve(n.dom), n.dom.remove();
    }), this.above = this.manager.tooltips.map((n) => !!n.above), this.intersectionObserver = typeof IntersectionObserver == "function" ? new IntersectionObserver((n) => {
      Date.now() > this.lastTransaction - 50 && n.length > 0 && n[n.length - 1].intersectionRatio < 1 && this.measureSoon();
    }, { threshold: [1] }) : null, this.observeIntersection(), t.win.addEventListener("resize", this.measureSoon = this.measureSoon.bind(this)), this.maybeMeasure();
  }
  createContainer() {
    this.parent ? (this.container = document.createElement("div"), this.container.style.position = "relative", this.container.className = this.view.themeClasses, this.parent.appendChild(this.container)) : this.container = this.view.dom;
  }
  observeIntersection() {
    if (this.intersectionObserver) {
      this.intersectionObserver.disconnect();
      for (let t of this.manager.tooltipViews)
        this.intersectionObserver.observe(t.dom);
    }
  }
  measureSoon() {
    this.measureTimeout < 0 && (this.measureTimeout = setTimeout(() => {
      this.measureTimeout = -1, this.maybeMeasure();
    }, 50));
  }
  update(t) {
    t.transactions.length && (this.lastTransaction = Date.now());
    let e = this.manager.update(t, this.above);
    e && this.observeIntersection();
    let n = e || t.geometryChanged, r = t.state.facet(Nh);
    if (r.position != this.position && !this.madeAbsolute) {
      this.position = r.position;
      for (let i of this.manager.tooltipViews)
        i.dom.style.position = this.position;
      n = !0;
    }
    if (r.parent != this.parent) {
      this.parent && this.container.remove(), this.parent = r.parent, this.createContainer();
      for (let i of this.manager.tooltipViews)
        this.container.appendChild(i.dom);
      n = !0;
    } else this.parent && this.view.themeClasses != this.classes && (this.classes = this.container.className = this.view.themeClasses);
    n && this.maybeMeasure();
  }
  createTooltip(t, e) {
    let n = t.create(this.view), r = e ? e.dom : null;
    if (n.dom.classList.add("cm-tooltip"), t.arrow && !n.dom.querySelector(".cm-tooltip > .cm-tooltip-arrow")) {
      let i = document.createElement("div");
      i.className = "cm-tooltip-arrow", n.dom.appendChild(i);
    }
    return n.dom.style.position = this.position, n.dom.style.top = eo, n.dom.style.left = "0px", this.container.insertBefore(n.dom, r), n.mount && n.mount(this.view), this.resizeObserver && this.resizeObserver.observe(n.dom), n;
  }
  destroy() {
    var t, e, n;
    this.view.win.removeEventListener("resize", this.measureSoon);
    for (let r of this.manager.tooltipViews)
      r.dom.remove(), (t = r.destroy) === null || t === void 0 || t.call(r);
    this.parent && this.container.remove(), (e = this.resizeObserver) === null || e === void 0 || e.disconnect(), (n = this.intersectionObserver) === null || n === void 0 || n.disconnect(), clearTimeout(this.measureTimeout);
  }
  readMeasure() {
    let t = 1, e = 1, n = !1;
    if (this.position == "fixed" && this.manager.tooltipViews.length) {
      let { dom: s } = this.manager.tooltipViews[0];
      if (we.gecko)
        n = s.offsetParent != this.container.ownerDocument.body;
      else if (s.style.top == eo && s.style.left == "0px") {
        let a = s.getBoundingClientRect();
        n = Math.abs(a.top + 1e4) > 1 || Math.abs(a.left) > 1;
      }
    }
    if (n || this.position == "absolute")
      if (this.parent) {
        let s = this.parent.getBoundingClientRect();
        s.width && s.height && (t = s.width / this.parent.offsetWidth, e = s.height / this.parent.offsetHeight);
      } else
        ({ scaleX: t, scaleY: e } = this.view.viewState);
    let r = this.view.scrollDOM.getBoundingClientRect(), i = Id(this.view);
    return {
      visible: {
        left: r.left + i.left,
        top: r.top + i.top,
        right: r.right - i.right,
        bottom: r.bottom - i.bottom
      },
      parent: this.parent ? this.container.getBoundingClientRect() : this.view.dom.getBoundingClientRect(),
      pos: this.manager.tooltips.map((s, a) => {
        let o = this.manager.tooltipViews[a];
        return o.getCoords ? o.getCoords(s.pos) : this.view.coordsAtPos(s.pos);
      }),
      size: this.manager.tooltipViews.map(({ dom: s }) => s.getBoundingClientRect()),
      space: this.view.state.facet(Nh).tooltipSpace(this.view),
      scaleX: t,
      scaleY: e,
      makeAbsolute: n
    };
  }
  writeMeasure(t) {
    var e;
    if (t.makeAbsolute) {
      this.madeAbsolute = !0, this.position = "absolute";
      for (let o of this.manager.tooltipViews)
        o.dom.style.position = "absolute";
    }
    let { visible: n, space: r, scaleX: i, scaleY: s } = t, a = [];
    for (let o = 0; o < this.manager.tooltips.length; o++) {
      let l = this.manager.tooltips[o], c = this.manager.tooltipViews[o], { dom: h } = c, f = t.pos[o], m = t.size[o];
      if (!f || l.clip !== !1 && (f.bottom <= Math.max(n.top, r.top) || f.top >= Math.min(n.bottom, r.bottom) || f.right < Math.max(n.left, r.left) - 0.1 || f.left > Math.min(n.right, r.right) + 0.1)) {
        h.style.top = eo;
        continue;
      }
      let y = l.arrow ? c.dom.querySelector(".cm-tooltip-arrow") : null, x = y ? 7 : 0, C = m.right - m.left, S = (e = l0.get(c)) !== null && e !== void 0 ? e : m.bottom - m.top, M = c.offset || R6, Z = this.view.textDirection == Dt.LTR, q = m.width > r.right - r.left ? Z ? r.left : r.right - m.width : Z ? Math.max(r.left, Math.min(f.left - (y ? 14 : 0) + M.x, r.right - C)) : Math.min(Math.max(r.left, f.left - C + (y ? 14 : 0) - M.x), r.right - C), _ = this.above[o];
      !l.strictSide && (_ ? f.top - S - x - M.y < r.top : f.bottom + S + x + M.y > r.bottom) && _ == r.bottom - f.bottom > f.top - r.top && (_ = this.above[o] = !_);
      let B = (_ ? f.top - r.top : r.bottom - f.bottom) - x;
      if (B < S && c.resize !== !1) {
        if (B < this.view.defaultLineHeight) {
          h.style.top = eo;
          continue;
        }
        l0.set(c, S), h.style.height = (S = B) / s + "px";
      } else h.style.height && (h.style.height = "");
      let $ = _ ? f.top - S - x - M.y : f.bottom + x + M.y, N = q + C;
      if (c.overlap !== !0)
        for (let U of a)
          U.left < N && U.right > q && U.top < $ + S && U.bottom > $ && ($ = _ ? U.top - S - 2 - x : U.bottom + x + 2);
      if (this.position == "absolute" ? (h.style.top = ($ - t.parent.top) / s + "px", u0(h, (q - t.parent.left) / i)) : (h.style.top = $ / s + "px", u0(h, q / i)), y) {
        let U = f.left + (Z ? M.x : -M.x) - (q + 14 - 7);
        y.style.left = U / i + "px";
      }
      c.overlap !== !0 && a.push({ left: q, top: $, right: N, bottom: $ + S }), h.classList.toggle("cm-tooltip-above", _), h.classList.toggle("cm-tooltip-below", !_), c.positioned && c.positioned(t.space);
    }
  }
  maybeMeasure() {
    if (this.manager.tooltips.length && (this.view.inView && this.view.requestMeasure(this.measureReq), this.inView != this.view.inView && (this.inView = this.view.inView, !this.inView)))
      for (let t of this.manager.tooltipViews)
        t.dom.style.top = eo;
  }
}, {
  eventObservers: {
    scroll() {
      this.maybeMeasure();
    }
  }
});
function u0(t, e) {
  let n = parseInt(t.style.left, 10);
  (isNaN(n) || Math.abs(e - n) > 1) && (t.style.left = e + "px");
}
const _6 = /* @__PURE__ */ be.baseTheme({
  ".cm-tooltip": {
    zIndex: 500,
    boxSizing: "border-box"
  },
  "&light .cm-tooltip": {
    border: "1px solid #bbb",
    backgroundColor: "#f5f5f5"
  },
  "&light .cm-tooltip-section:not(:first-child)": {
    borderTop: "1px solid #bbb"
  },
  "&dark .cm-tooltip": {
    backgroundColor: "#333338",
    color: "white"
  },
  ".cm-tooltip-arrow": {
    height: "7px",
    width: `${7 * 2}px`,
    position: "absolute",
    zIndex: -1,
    overflow: "hidden",
    "&:before, &:after": {
      content: "''",
      position: "absolute",
      width: 0,
      height: 0,
      borderLeft: "7px solid transparent",
      borderRight: "7px solid transparent"
    },
    ".cm-tooltip-above &": {
      bottom: "-7px",
      "&:before": {
        borderTop: "7px solid #bbb"
      },
      "&:after": {
        borderTop: "7px solid #f5f5f5",
        bottom: "1px"
      }
    },
    ".cm-tooltip-below &": {
      top: "-7px",
      "&:before": {
        borderBottom: "7px solid #bbb"
      },
      "&:after": {
        borderBottom: "7px solid #f5f5f5",
        top: "1px"
      }
    }
  },
  "&dark .cm-tooltip .cm-tooltip-arrow": {
    "&:before": {
      borderTopColor: "#333338",
      borderBottomColor: "#333338"
    },
    "&:after": {
      borderTopColor: "transparent",
      borderBottomColor: "transparent"
    }
  }
}), R6 = { x: 0, y: 0 }, qd = /* @__PURE__ */ Ae.define({
  enables: [Wd, _6]
}), Pu = /* @__PURE__ */ Ae.define({
  combine: (t) => t.reduce((e, n) => e.concat(n), [])
});
class Mc {
  // Needs to be static so that host tooltip instances always match
  static create(e) {
    return new Mc(e);
  }
  constructor(e) {
    this.view = e, this.mounted = !1, this.dom = document.createElement("div"), this.dom.classList.add("cm-tooltip-hover"), this.manager = new LC(e, Pu, (n, r) => this.createHostedView(n, r), (n) => n.dom.remove());
  }
  createHostedView(e, n) {
    let r = e.create(this.view);
    return r.dom.classList.add("cm-tooltip-section"), this.dom.insertBefore(r.dom, n ? n.dom.nextSibling : this.dom.firstChild), this.mounted && r.mount && r.mount(this.view), r;
  }
  mount(e) {
    for (let n of this.manager.tooltipViews)
      n.mount && n.mount(e);
    this.mounted = !0;
  }
  positioned(e) {
    for (let n of this.manager.tooltipViews)
      n.positioned && n.positioned(e);
  }
  update(e) {
    this.manager.update(e);
  }
  destroy() {
    var e;
    for (let n of this.manager.tooltipViews)
      (e = n.destroy) === null || e === void 0 || e.call(n);
  }
  passProp(e) {
    let n;
    for (let r of this.manager.tooltipViews) {
      let i = r[e];
      if (i !== void 0) {
        if (n === void 0)
          n = i;
        else if (n !== i)
          return;
      }
    }
    return n;
  }
  get offset() {
    return this.passProp("offset");
  }
  get getCoords() {
    return this.passProp("getCoords");
  }
  get overlap() {
    return this.passProp("overlap");
  }
  get resize() {
    return this.passProp("resize");
  }
}
const $6 = /* @__PURE__ */ qd.compute([Pu], (t) => {
  let e = t.facet(Pu);
  return e.length === 0 ? null : {
    pos: Math.min(...e.map((n) => n.pos)),
    end: Math.max(...e.map((n) => {
      var r;
      return (r = n.end) !== null && r !== void 0 ? r : n.pos;
    })),
    create: Mc.create,
    above: e[0].above,
    arrow: e.some((n) => n.arrow)
  };
});
class Z6 {
  constructor(e, n, r, i, s) {
    this.view = e, this.source = n, this.field = r, this.setHover = i, this.hoverTime = s, this.hoverTimeout = -1, this.restartTimeout = -1, this.pending = null, this.lastMove = { x: 0, y: 0, target: e.dom, time: 0 }, this.checkHover = this.checkHover.bind(this), e.dom.addEventListener("mouseleave", this.mouseleave = this.mouseleave.bind(this)), e.dom.addEventListener("mousemove", this.mousemove = this.mousemove.bind(this));
  }
  update() {
    this.pending && (this.pending = null, clearTimeout(this.restartTimeout), this.restartTimeout = setTimeout(() => this.startHover(), 20));
  }
  get active() {
    return this.view.state.field(this.field);
  }
  checkHover() {
    if (this.hoverTimeout = -1, this.active.length)
      return;
    let e = Date.now() - this.lastMove.time;
    e < this.hoverTime ? this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime - e) : this.startHover();
  }
  startHover() {
    clearTimeout(this.restartTimeout);
    let { view: e, lastMove: n } = this, r = e.docView.nearest(n.target);
    if (!r)
      return;
    let i, s = 1;
    if (r instanceof Gi)
      i = r.posAtStart;
    else {
      if (i = e.posAtCoords(n), i == null)
        return;
      let o = e.coordsAtPos(i);
      if (!o || n.y < o.top || n.y > o.bottom || n.x < o.left - e.defaultCharacterWidth || n.x > o.right + e.defaultCharacterWidth)
        return;
      let l = e.bidiSpans(e.state.doc.lineAt(i)).find((h) => h.from <= i && h.to >= i), c = l && l.dir == Dt.RTL ? -1 : 1;
      s = n.x < o.left ? -c : c;
    }
    let a = this.source(e, i, s);
    if (a?.then) {
      let o = this.pending = { pos: i };
      a.then((l) => {
        this.pending == o && (this.pending = null, l && !(Array.isArray(l) && !l.length) && e.dispatch({ effects: this.setHover.of(Array.isArray(l) ? l : [l]) }));
      }, (l) => Wn(e.state, l, "hover tooltip"));
    } else a && !(Array.isArray(a) && !a.length) && e.dispatch({ effects: this.setHover.of(Array.isArray(a) ? a : [a]) });
  }
  get tooltip() {
    let e = this.view.plugin(Wd), n = e ? e.manager.tooltips.findIndex((r) => r.create == Mc.create) : -1;
    return n > -1 ? e.manager.tooltipViews[n] : null;
  }
  mousemove(e) {
    var n, r;
    this.lastMove = { x: e.clientX, y: e.clientY, target: e.target, time: Date.now() }, this.hoverTimeout < 0 && (this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime));
    let { active: i, tooltip: s } = this;
    if (i.length && s && !L6(s.dom, e) || this.pending) {
      let { pos: a } = i[0] || this.pending, o = (r = (n = i[0]) === null || n === void 0 ? void 0 : n.end) !== null && r !== void 0 ? r : a;
      (a == o ? this.view.posAtCoords(this.lastMove) != a : !I6(this.view, a, o, e.clientX, e.clientY)) && (this.view.dispatch({ effects: this.setHover.of([]) }), this.pending = null);
    }
  }
  mouseleave(e) {
    clearTimeout(this.hoverTimeout), this.hoverTimeout = -1;
    let { active: n } = this;
    if (n.length) {
      let { tooltip: r } = this;
      r && r.dom.contains(e.relatedTarget) ? this.watchTooltipLeave(r.dom) : this.view.dispatch({ effects: this.setHover.of([]) });
    }
  }
  watchTooltipLeave(e) {
    let n = (r) => {
      e.removeEventListener("mouseleave", n), this.active.length && !this.view.dom.contains(r.relatedTarget) && this.view.dispatch({ effects: this.setHover.of([]) });
    };
    e.addEventListener("mouseleave", n);
  }
  destroy() {
    clearTimeout(this.hoverTimeout), this.view.dom.removeEventListener("mouseleave", this.mouseleave), this.view.dom.removeEventListener("mousemove", this.mousemove);
  }
}
const Ll = 4;
function L6(t, e) {
  let { left: n, right: r, top: i, bottom: s } = t.getBoundingClientRect(), a;
  if (a = t.querySelector(".cm-tooltip-arrow")) {
    let o = a.getBoundingClientRect();
    i = Math.min(o.top, i), s = Math.max(o.bottom, s);
  }
  return e.clientX >= n - Ll && e.clientX <= r + Ll && e.clientY >= i - Ll && e.clientY <= s + Ll;
}
function I6(t, e, n, r, i, s) {
  let a = t.scrollDOM.getBoundingClientRect(), o = t.documentTop + t.documentPadding.top + t.contentHeight;
  if (a.left > r || a.right < r || a.top > i || Math.min(a.bottom, o) < i)
    return !1;
  let l = t.posAtCoords({ x: r, y: i }, !1);
  return l >= e && l <= n;
}
function IC(t, e = {}) {
  let n = Ie.define(), r = Vt.define({
    create() {
      return [];
    },
    update(i, s) {
      if (i.length && (e.hideOnChange && (s.docChanged || s.selection) ? i = [] : e.hideOn && (i = i.filter((a) => !e.hideOn(s, a))), s.docChanged)) {
        let a = [];
        for (let o of i) {
          let l = s.changes.mapPos(o.pos, -1, rn.TrackDel);
          if (l != null) {
            let c = Object.assign(/* @__PURE__ */ Object.create(null), o);
            c.pos = l, c.end != null && (c.end = s.changes.mapPos(c.end)), a.push(c);
          }
        }
        i = a;
      }
      for (let a of s.effects)
        a.is(n) && (i = a.value), a.is(N6) && (i = []);
      return i;
    },
    provide: (i) => Pu.from(i)
  });
  return {
    active: r,
    extension: [
      r,
      fn.define((i) => new Z6(
        i,
        t,
        r,
        n,
        e.hoverTime || 300
        /* Hover.Time */
      )),
      $6
    ]
  };
}
function NC(t, e) {
  let n = t.plugin(Wd);
  if (!n)
    return null;
  let r = n.manager.tooltips.indexOf(e);
  return r < 0 ? null : n.manager.tooltipViews[r];
}
const N6 = /* @__PURE__ */ Ie.define(), c0 = /* @__PURE__ */ Ae.define({
  combine(t) {
    let e, n;
    for (let r of t)
      e = e || r.topContainer, n = n || r.bottomContainer;
    return { topContainer: e, bottomContainer: n };
  }
});
function Eo(t, e) {
  let n = t.plugin(VC), r = n ? n.specs.indexOf(e) : -1;
  return r > -1 ? n.panels[r] : null;
}
const VC = /* @__PURE__ */ fn.fromClass(class {
  constructor(t) {
    this.input = t.state.facet(ts), this.specs = this.input.filter((n) => n), this.panels = this.specs.map((n) => n(t));
    let e = t.state.facet(c0);
    this.top = new Il(t, !0, e.topContainer), this.bottom = new Il(t, !1, e.bottomContainer), this.top.sync(this.panels.filter((n) => n.top)), this.bottom.sync(this.panels.filter((n) => !n.top));
    for (let n of this.panels)
      n.dom.classList.add("cm-panel"), n.mount && n.mount();
  }
  update(t) {
    let e = t.state.facet(c0);
    this.top.container != e.topContainer && (this.top.sync([]), this.top = new Il(t.view, !0, e.topContainer)), this.bottom.container != e.bottomContainer && (this.bottom.sync([]), this.bottom = new Il(t.view, !1, e.bottomContainer)), this.top.syncClasses(), this.bottom.syncClasses();
    let n = t.state.facet(ts);
    if (n != this.input) {
      let r = n.filter((l) => l), i = [], s = [], a = [], o = [];
      for (let l of r) {
        let c = this.specs.indexOf(l), h;
        c < 0 ? (h = l(t.view), o.push(h)) : (h = this.panels[c], h.update && h.update(t)), i.push(h), (h.top ? s : a).push(h);
      }
      this.specs = r, this.panels = i, this.top.sync(s), this.bottom.sync(a);
      for (let l of o)
        l.dom.classList.add("cm-panel"), l.mount && l.mount();
    } else
      for (let r of this.panels)
        r.update && r.update(t);
  }
  destroy() {
    this.top.sync([]), this.bottom.sync([]);
  }
}, {
  provide: (t) => be.scrollMargins.of((e) => {
    let n = e.plugin(t);
    return n && { top: n.top.scrollMargin(), bottom: n.bottom.scrollMargin() };
  })
});
class Il {
  constructor(e, n, r) {
    this.view = e, this.top = n, this.container = r, this.dom = void 0, this.classes = "", this.panels = [], this.syncClasses();
  }
  sync(e) {
    for (let n of this.panels)
      n.destroy && e.indexOf(n) < 0 && n.destroy();
    this.panels = e, this.syncDOM();
  }
  syncDOM() {
    if (this.panels.length == 0) {
      this.dom && (this.dom.remove(), this.dom = void 0);
      return;
    }
    if (!this.dom) {
      this.dom = document.createElement("div"), this.dom.className = this.top ? "cm-panels cm-panels-top" : "cm-panels cm-panels-bottom", this.dom.style[this.top ? "top" : "bottom"] = "0";
      let n = this.container || this.view.dom;
      n.insertBefore(this.dom, this.top ? n.firstChild : null);
    }
    let e = this.dom.firstChild;
    for (let n of this.panels)
      if (n.dom.parentNode == this.dom) {
        for (; e != n.dom; )
          e = h0(e);
        e = e.nextSibling;
      } else
        this.dom.insertBefore(n.dom, e);
    for (; e; )
      e = h0(e);
  }
  scrollMargin() {
    return !this.dom || this.container ? 0 : Math.max(0, this.top ? this.dom.getBoundingClientRect().bottom - Math.max(0, this.view.scrollDOM.getBoundingClientRect().top) : Math.min(innerHeight, this.view.scrollDOM.getBoundingClientRect().bottom) - this.dom.getBoundingClientRect().top);
  }
  syncClasses() {
    if (!(!this.container || this.classes == this.view.themeClasses)) {
      for (let e of this.classes.split(" "))
        e && this.container.classList.remove(e);
      for (let e of (this.classes = this.view.themeClasses).split(" "))
        e && this.container.classList.add(e);
    }
  }
}
function h0(t) {
  let e = t.nextSibling;
  return t.remove(), e;
}
const ts = /* @__PURE__ */ Ae.define({
  enables: VC
});
class ns extends Bs {
  /**
  @internal
  */
  compare(e) {
    return this == e || this.constructor == e.constructor && this.eq(e);
  }
  /**
  Compare this marker to another marker of the same type.
  */
  eq(e) {
    return !1;
  }
  /**
  Called if the marker has a `toDOM` method and its representation
  was removed from a gutter.
  */
  destroy(e) {
  }
}
ns.prototype.elementClass = "";
ns.prototype.toDOM = void 0;
ns.prototype.mapMode = rn.TrackBefore;
ns.prototype.startSide = ns.prototype.endSide = -1;
ns.prototype.point = !0;
const au = /* @__PURE__ */ Ae.define(), V6 = /* @__PURE__ */ Ae.define(), ou = /* @__PURE__ */ Ae.define(), p0 = /* @__PURE__ */ Ae.define({
  combine: (t) => t.some((e) => e)
});
function X6(t) {
  return [
    W6
  ];
}
const W6 = /* @__PURE__ */ fn.fromClass(class {
  constructor(t) {
    this.view = t, this.prevViewport = t.viewport, this.dom = document.createElement("div"), this.dom.className = "cm-gutters", this.dom.setAttribute("aria-hidden", "true"), this.dom.style.minHeight = this.view.contentHeight / this.view.scaleY + "px", this.gutters = t.state.facet(ou).map((e) => new d0(t, e));
    for (let e of this.gutters)
      this.dom.appendChild(e.dom);
    this.fixed = !t.state.facet(p0), this.fixed && (this.dom.style.position = "sticky"), this.syncGutters(!1), t.scrollDOM.insertBefore(this.dom, t.contentDOM);
  }
  update(t) {
    if (this.updateGutters(t)) {
      let e = this.prevViewport, n = t.view.viewport, r = Math.min(e.to, n.to) - Math.max(e.from, n.from);
      this.syncGutters(r < (n.to - n.from) * 0.8);
    }
    t.geometryChanged && (this.dom.style.minHeight = this.view.contentHeight / this.view.scaleY + "px"), this.view.state.facet(p0) != !this.fixed && (this.fixed = !this.fixed, this.dom.style.position = this.fixed ? "sticky" : ""), this.prevViewport = t.view.viewport;
  }
  syncGutters(t) {
    let e = this.dom.nextSibling;
    t && this.dom.remove();
    let n = mt.iter(this.view.state.facet(au), this.view.viewport.from), r = [], i = this.gutters.map((s) => new q6(s, this.view.viewport, -this.view.documentPadding.top));
    for (let s of this.view.viewportLineBlocks)
      if (r.length && (r = []), Array.isArray(s.type)) {
        let a = !0;
        for (let o of s.type)
          if (o.type == _n.Text && a) {
            lf(n, r, o.from);
            for (let l of i)
              l.line(this.view, o, r);
            a = !1;
          } else if (o.widget)
            for (let l of i)
              l.widget(this.view, o);
      } else if (s.type == _n.Text) {
        lf(n, r, s.from);
        for (let a of i)
          a.line(this.view, s, r);
      } else if (s.widget)
        for (let a of i)
          a.widget(this.view, s);
    for (let s of i)
      s.finish();
    t && this.view.scrollDOM.insertBefore(this.dom, e);
  }
  updateGutters(t) {
    let e = t.startState.facet(ou), n = t.state.facet(ou), r = t.docChanged || t.heightChanged || t.viewportChanged || !mt.eq(t.startState.facet(au), t.state.facet(au), t.view.viewport.from, t.view.viewport.to);
    if (e == n)
      for (let i of this.gutters)
        i.update(t) && (r = !0);
    else {
      r = !0;
      let i = [];
      for (let s of n) {
        let a = e.indexOf(s);
        a < 0 ? i.push(new d0(this.view, s)) : (this.gutters[a].update(t), i.push(this.gutters[a]));
      }
      for (let s of this.gutters)
        s.dom.remove(), i.indexOf(s) < 0 && s.destroy();
      for (let s of i)
        this.dom.appendChild(s.dom);
      this.gutters = i;
    }
    return r;
  }
  destroy() {
    for (let t of this.gutters)
      t.destroy();
    this.dom.remove();
  }
}, {
  provide: (t) => be.scrollMargins.of((e) => {
    let n = e.plugin(t);
    return !n || n.gutters.length == 0 || !n.fixed ? null : e.textDirection == Dt.LTR ? { left: n.dom.offsetWidth * e.scaleX } : { right: n.dom.offsetWidth * e.scaleX };
  })
});
function f0(t) {
  return Array.isArray(t) ? t : [t];
}
function lf(t, e, n) {
  for (; t.value && t.from <= n; )
    t.from == n && e.push(t.value), t.next();
}
class q6 {
  constructor(e, n, r) {
    this.gutter = e, this.height = r, this.i = 0, this.cursor = mt.iter(e.markers, n.from);
  }
  addElement(e, n, r) {
    let { gutter: i } = this, s = (n.top - this.height) / e.scaleY, a = n.height / e.scaleY;
    if (this.i == i.elements.length) {
      let o = new XC(e, a, s, r);
      i.elements.push(o), i.dom.appendChild(o.dom);
    } else
      i.elements[this.i].update(e, a, s, r);
    this.height = n.bottom, this.i++;
  }
  line(e, n, r) {
    let i = [];
    lf(this.cursor, i, n.from), r.length && (i = i.concat(r));
    let s = this.gutter.config.lineMarker(e, n, i);
    s && i.unshift(s);
    let a = this.gutter;
    i.length == 0 && !a.config.renderEmptyElements || this.addElement(e, n, i);
  }
  widget(e, n) {
    let r = this.gutter.config.widgetMarker(e, n.widget, n), i = r ? [r] : null;
    for (let s of e.state.facet(V6)) {
      let a = s(e, n.widget, n);
      a && (i || (i = [])).push(a);
    }
    i && this.addElement(e, n, i);
  }
  finish() {
    let e = this.gutter;
    for (; e.elements.length > this.i; ) {
      let n = e.elements.pop();
      e.dom.removeChild(n.dom), n.destroy();
    }
  }
}
class d0 {
  constructor(e, n) {
    this.view = e, this.config = n, this.elements = [], this.spacer = null, this.dom = document.createElement("div"), this.dom.className = "cm-gutter" + (this.config.class ? " " + this.config.class : "");
    for (let r in n.domEventHandlers)
      this.dom.addEventListener(r, (i) => {
        let s = i.target, a;
        if (s != this.dom && this.dom.contains(s)) {
          for (; s.parentNode != this.dom; )
            s = s.parentNode;
          let l = s.getBoundingClientRect();
          a = (l.top + l.bottom) / 2;
        } else
          a = i.clientY;
        let o = e.lineBlockAtHeight(a - e.documentTop);
        n.domEventHandlers[r](e, o, i) && i.preventDefault();
      });
    this.markers = f0(n.markers(e)), n.initialSpacer && (this.spacer = new XC(e, 0, 0, [n.initialSpacer(e)]), this.dom.appendChild(this.spacer.dom), this.spacer.dom.style.cssText += "visibility: hidden; pointer-events: none");
  }
  update(e) {
    let n = this.markers;
    if (this.markers = f0(this.config.markers(e.view)), this.spacer && this.config.updateSpacer) {
      let i = this.config.updateSpacer(this.spacer.markers[0], e);
      i != this.spacer.markers[0] && this.spacer.update(e.view, 0, 0, [i]);
    }
    let r = e.view.viewport;
    return !mt.eq(this.markers, n, r.from, r.to) || (this.config.lineMarkerChange ? this.config.lineMarkerChange(e) : !1);
  }
  destroy() {
    for (let e of this.elements)
      e.destroy();
  }
}
class XC {
  constructor(e, n, r, i) {
    this.height = -1, this.above = 0, this.markers = [], this.dom = document.createElement("div"), this.dom.className = "cm-gutterElement", this.update(e, n, r, i);
  }
  update(e, n, r, i) {
    this.height != n && (this.height = n, this.dom.style.height = n + "px"), this.above != r && (this.dom.style.marginTop = (this.above = r) ? r + "px" : ""), U6(this.markers, i) || this.setMarkers(e, i);
  }
  setMarkers(e, n) {
    let r = "cm-gutterElement", i = this.dom.firstChild;
    for (let s = 0, a = 0; ; ) {
      let o = a, l = s < n.length ? n[s++] : null, c = !1;
      if (l) {
        let h = l.elementClass;
        h && (r += " " + h);
        for (let f = a; f < this.markers.length; f++)
          if (this.markers[f].compare(l)) {
            o = f, c = !0;
            break;
          }
      } else
        o = this.markers.length;
      for (; a < o; ) {
        let h = this.markers[a++];
        if (h.toDOM) {
          h.destroy(i);
          let f = i.nextSibling;
          i.remove(), i = f;
        }
      }
      if (!l)
        break;
      l.toDOM && (c ? i = i.nextSibling : this.dom.insertBefore(l.toDOM(e), i)), c && a++;
    }
    this.dom.className = r, this.markers = n;
  }
  destroy() {
    this.setMarkers(null, []);
  }
}
function U6(t, e) {
  if (t.length != e.length)
    return !1;
  for (let n = 0; n < t.length; n++)
    if (!t[n].compare(e[n]))
      return !1;
  return !0;
}
const G6 = /* @__PURE__ */ Ae.define(), z6 = /* @__PURE__ */ Ae.define(), Ys = /* @__PURE__ */ Ae.define({
  combine(t) {
    return os(t, { formatNumber: String, domEventHandlers: {} }, {
      domEventHandlers(e, n) {
        let r = Object.assign({}, e);
        for (let i in n) {
          let s = r[i], a = n[i];
          r[i] = s ? (o, l, c) => s(o, l, c) || a(o, l, c) : a;
        }
        return r;
      }
    });
  }
});
class Vh extends ns {
  constructor(e) {
    super(), this.number = e;
  }
  eq(e) {
    return this.number == e.number;
  }
  toDOM() {
    return document.createTextNode(this.number);
  }
}
function Xh(t, e) {
  return t.state.facet(Ys).formatNumber(e, t.state);
}
const H6 = /* @__PURE__ */ ou.compute([Ys], (t) => ({
  class: "cm-lineNumbers",
  renderEmptyElements: !1,
  markers(e) {
    return e.state.facet(G6);
  },
  lineMarker(e, n, r) {
    return r.some((i) => i.toDOM) ? null : new Vh(Xh(e, e.state.doc.lineAt(n.from).number));
  },
  widgetMarker: (e, n, r) => {
    for (let i of e.state.facet(z6)) {
      let s = i(e, n, r);
      if (s)
        return s;
    }
    return null;
  },
  lineMarkerChange: (e) => e.startState.facet(Ys) != e.state.facet(Ys),
  initialSpacer(e) {
    return new Vh(Xh(e, m0(e.state.doc.lines)));
  },
  updateSpacer(e, n) {
    let r = Xh(n.view, m0(n.view.state.doc.lines));
    return r == e.number ? e : new Vh(r);
  },
  domEventHandlers: t.facet(Ys).domEventHandlers
}));
function Y6(t = {}) {
  return [
    Ys.of(t),
    X6(),
    H6
  ];
}
function m0(t) {
  let e = 9;
  for (; e < t; )
    e = e * 10 + 9;
  return e;
}
const K6 = /* @__PURE__ */ new class extends ns {
  constructor() {
    super(...arguments), this.elementClass = "cm-activeLineGutter";
  }
}(), J6 = /* @__PURE__ */ au.compute(["selection"], (t) => {
  let e = [], n = -1;
  for (let r of t.selection.ranges) {
    let i = t.doc.lineAt(r.head).from;
    i > n && (n = i, e.push(K6.range(i)));
  }
  return mt.of(e);
});
function eM() {
  return J6;
}
const WC = 1024;
let tM = 0;
class Wh {
  constructor(e, n) {
    this.from = e, this.to = n;
  }
}
class nt {
  /**
  Create a new node prop type.
  */
  constructor(e = {}) {
    this.id = tM++, this.perNode = !!e.perNode, this.deserialize = e.deserialize || (() => {
      throw new Error("This node type doesn't define a deserialize function");
    });
  }
  /**
  This is meant to be used with
  [`NodeSet.extend`](#common.NodeSet.extend) or
  [`LRParser.configure`](#lr.ParserConfig.props) to compute
  prop values for each node type in the set. Takes a [match
  object](#common.NodeType^match) or function that returns undefined
  if the node type doesn't get this prop, and the prop's value if
  it does.
  */
  add(e) {
    if (this.perNode)
      throw new RangeError("Can't add per-node props to node types");
    return typeof e != "function" && (e = Hn.match(e)), (n) => {
      let r = e(n);
      return r === void 0 ? null : [this, r];
    };
  }
}
nt.closedBy = new nt({ deserialize: (t) => t.split(" ") });
nt.openedBy = new nt({ deserialize: (t) => t.split(" ") });
nt.group = new nt({ deserialize: (t) => t.split(" ") });
nt.isolate = new nt({ deserialize: (t) => {
  if (t && t != "rtl" && t != "ltr" && t != "auto")
    throw new RangeError("Invalid value for isolate: " + t);
  return t || "auto";
} });
nt.contextHash = new nt({ perNode: !0 });
nt.lookAhead = new nt({ perNode: !0 });
nt.mounted = new nt({ perNode: !0 });
class Eu {
  constructor(e, n, r) {
    this.tree = e, this.overlay = n, this.parser = r;
  }
  /**
  @internal
  */
  static get(e) {
    return e && e.props && e.props[nt.mounted.id];
  }
}
const nM = /* @__PURE__ */ Object.create(null);
class Hn {
  /**
  @internal
  */
  constructor(e, n, r, i = 0) {
    this.name = e, this.props = n, this.id = r, this.flags = i;
  }
  /**
  Define a node type.
  */
  static define(e) {
    let n = e.props && e.props.length ? /* @__PURE__ */ Object.create(null) : nM, r = (e.top ? 1 : 0) | (e.skipped ? 2 : 0) | (e.error ? 4 : 0) | (e.name == null ? 8 : 0), i = new Hn(e.name || "", n, e.id, r);
    if (e.props) {
      for (let s of e.props)
        if (Array.isArray(s) || (s = s(i)), s) {
          if (s[0].perNode)
            throw new RangeError("Can't store a per-node prop on a node type");
          n[s[0].id] = s[1];
        }
    }
    return i;
  }
  /**
  Retrieves a node prop for this type. Will return `undefined` if
  the prop isn't present on this node.
  */
  prop(e) {
    return this.props[e.id];
  }
  /**
  True when this is the top node of a grammar.
  */
  get isTop() {
    return (this.flags & 1) > 0;
  }
  /**
  True when this node is produced by a skip rule.
  */
  get isSkipped() {
    return (this.flags & 2) > 0;
  }
  /**
  Indicates whether this is an error node.
  */
  get isError() {
    return (this.flags & 4) > 0;
  }
  /**
  When true, this node type doesn't correspond to a user-declared
  named node, for example because it is used to cache repetition.
  */
  get isAnonymous() {
    return (this.flags & 8) > 0;
  }
  /**
  Returns true when this node's name or one of its
  [groups](#common.NodeProp^group) matches the given string.
  */
  is(e) {
    if (typeof e == "string") {
      if (this.name == e)
        return !0;
      let n = this.prop(nt.group);
      return n ? n.indexOf(e) > -1 : !1;
    }
    return this.id == e;
  }
  /**
  Create a function from node types to arbitrary values by
  specifying an object whose property names are node or
  [group](#common.NodeProp^group) names. Often useful with
  [`NodeProp.add`](#common.NodeProp.add). You can put multiple
  names, separated by spaces, in a single property name to map
  multiple node names to a single value.
  */
  static match(e) {
    let n = /* @__PURE__ */ Object.create(null);
    for (let r in e)
      for (let i of r.split(" "))
        n[i] = e[r];
    return (r) => {
      for (let i = r.prop(nt.group), s = -1; s < (i ? i.length : 0); s++) {
        let a = n[s < 0 ? r.name : i[s]];
        if (a)
          return a;
      }
    };
  }
}
Hn.none = new Hn(
  "",
  /* @__PURE__ */ Object.create(null),
  0,
  8
  /* NodeFlag.Anonymous */
);
class Ud {
  /**
  Create a set with the given types. The `id` property of each
  type should correspond to its position within the array.
  */
  constructor(e) {
    this.types = e;
    for (let n = 0; n < e.length; n++)
      if (e[n].id != n)
        throw new RangeError("Node type ids should correspond to array positions when creating a node set");
  }
  /**
  Create a copy of this set with some node properties added. The
  arguments to this method can be created with
  [`NodeProp.add`](#common.NodeProp.add).
  */
  extend(...e) {
    let n = [];
    for (let r of this.types) {
      let i = null;
      for (let s of e) {
        let a = s(r);
        a && (i || (i = Object.assign({}, r.props)), i[a[0].id] = a[1]);
      }
      n.push(i ? new Hn(r.name, i, r.id, r.flags) : r);
    }
    return new Ud(n);
  }
}
const Nl = /* @__PURE__ */ new WeakMap(), g0 = /* @__PURE__ */ new WeakMap();
var cn;
(function(t) {
  t[t.ExcludeBuffers = 1] = "ExcludeBuffers", t[t.IncludeAnonymous = 2] = "IncludeAnonymous", t[t.IgnoreMounts = 4] = "IgnoreMounts", t[t.IgnoreOverlays = 8] = "IgnoreOverlays";
})(cn || (cn = {}));
class on {
  /**
  Construct a new tree. See also [`Tree.build`](#common.Tree^build).
  */
  constructor(e, n, r, i, s) {
    if (this.type = e, this.children = n, this.positions = r, this.length = i, this.props = null, s && s.length) {
      this.props = /* @__PURE__ */ Object.create(null);
      for (let [a, o] of s)
        this.props[typeof a == "number" ? a : a.id] = o;
    }
  }
  /**
  @internal
  */
  toString() {
    let e = Eu.get(this);
    if (e && !e.overlay)
      return e.tree.toString();
    let n = "";
    for (let r of this.children) {
      let i = r.toString();
      i && (n && (n += ","), n += i);
    }
    return this.type.name ? (/\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) + (n.length ? "(" + n + ")" : "") : n;
  }
  /**
  Get a [tree cursor](#common.TreeCursor) positioned at the top of
  the tree. Mode can be used to [control](#common.IterMode) which
  nodes the cursor visits.
  */
  cursor(e = 0) {
    return new cf(this.topNode, e);
  }
  /**
  Get a [tree cursor](#common.TreeCursor) pointing into this tree
  at the given position and side (see
  [`moveTo`](#common.TreeCursor.moveTo).
  */
  cursorAt(e, n = 0, r = 0) {
    let i = Nl.get(this) || this.topNode, s = new cf(i);
    return s.moveTo(e, n), Nl.set(this, s._tree), s;
  }
  /**
  Get a [syntax node](#common.SyntaxNode) object for the top of the
  tree.
  */
  get topNode() {
    return new Un(this, 0, 0, null);
  }
  /**
  Get the [syntax node](#common.SyntaxNode) at the given position.
  If `side` is -1, this will move into nodes that end at the
  position. If 1, it'll move into nodes that start at the
  position. With 0, it'll only enter nodes that cover the position
  from both sides.
  
  Note that this will not enter
  [overlays](#common.MountedTree.overlay), and you often want
  [`resolveInner`](#common.Tree.resolveInner) instead.
  */
  resolve(e, n = 0) {
    let r = Fo(Nl.get(this) || this.topNode, e, n, !1);
    return Nl.set(this, r), r;
  }
  /**
  Like [`resolve`](#common.Tree.resolve), but will enter
  [overlaid](#common.MountedTree.overlay) nodes, producing a syntax node
  pointing into the innermost overlaid tree at the given position
  (with parent links going through all parent structure, including
  the host trees).
  */
  resolveInner(e, n = 0) {
    let r = Fo(g0.get(this) || this.topNode, e, n, !0);
    return g0.set(this, r), r;
  }
  /**
  In some situations, it can be useful to iterate through all
  nodes around a position, including those in overlays that don't
  directly cover the position. This method gives you an iterator
  that will produce all nodes, from small to big, around the given
  position.
  */
  resolveStack(e, n = 0) {
    return sM(this, e, n);
  }
  /**
  Iterate over the tree and its children, calling `enter` for any
  node that touches the `from`/`to` region (if given) before
  running over such a node's children, and `leave` (if given) when
  leaving the node. When `enter` returns `false`, that node will
  not have its children iterated over (or `leave` called).
  */
  iterate(e) {
    let { enter: n, leave: r, from: i = 0, to: s = this.length } = e, a = e.mode || 0, o = (a & cn.IncludeAnonymous) > 0;
    for (let l = this.cursor(a | cn.IncludeAnonymous); ; ) {
      let c = !1;
      if (l.from <= s && l.to >= i && (!o && l.type.isAnonymous || n(l) !== !1)) {
        if (l.firstChild())
          continue;
        c = !0;
      }
      for (; c && r && (o || !l.type.isAnonymous) && r(l), !l.nextSibling(); ) {
        if (!l.parent())
          return;
        c = !0;
      }
    }
  }
  /**
  Get the value of the given [node prop](#common.NodeProp) for this
  node. Works with both per-node and per-type props.
  */
  prop(e) {
    return e.perNode ? this.props ? this.props[e.id] : void 0 : this.type.prop(e);
  }
  /**
  Returns the node's [per-node props](#common.NodeProp.perNode) in a
  format that can be passed to the [`Tree`](#common.Tree)
  constructor.
  */
  get propValues() {
    let e = [];
    if (this.props)
      for (let n in this.props)
        e.push([+n, this.props[n]]);
    return e;
  }
  /**
  Balance the direct children of this tree, producing a copy of
  which may have children grouped into subtrees with type
  [`NodeType.none`](#common.NodeType^none).
  */
  balance(e = {}) {
    return this.children.length <= 8 ? this : Hd(Hn.none, this.children, this.positions, 0, this.children.length, 0, this.length, (n, r, i) => new on(this.type, n, r, i, this.propValues), e.makeTree || ((n, r, i) => new on(Hn.none, n, r, i)));
  }
  /**
  Build a tree from a postfix-ordered buffer of node information,
  or a cursor over such a buffer.
  */
  static build(e) {
    return aM(e);
  }
}
on.empty = new on(Hn.none, [], [], 0);
class Gd {
  constructor(e, n) {
    this.buffer = e, this.index = n;
  }
  get id() {
    return this.buffer[this.index - 4];
  }
  get start() {
    return this.buffer[this.index - 3];
  }
  get end() {
    return this.buffer[this.index - 2];
  }
  get size() {
    return this.buffer[this.index - 1];
  }
  get pos() {
    return this.index;
  }
  next() {
    this.index -= 4;
  }
  fork() {
    return new Gd(this.buffer, this.index);
  }
}
class rs {
  /**
  Create a tree buffer.
  */
  constructor(e, n, r) {
    this.buffer = e, this.length = n, this.set = r;
  }
  /**
  @internal
  */
  get type() {
    return Hn.none;
  }
  /**
  @internal
  */
  toString() {
    let e = [];
    for (let n = 0; n < this.buffer.length; )
      e.push(this.childString(n)), n = this.buffer[n + 3];
    return e.join(",");
  }
  /**
  @internal
  */
  childString(e) {
    let n = this.buffer[e], r = this.buffer[e + 3], i = this.set.types[n], s = i.name;
    if (/\W/.test(s) && !i.isError && (s = JSON.stringify(s)), e += 4, r == e)
      return s;
    let a = [];
    for (; e < r; )
      a.push(this.childString(e)), e = this.buffer[e + 3];
    return s + "(" + a.join(",") + ")";
  }
  /**
  @internal
  */
  findChild(e, n, r, i, s) {
    let { buffer: a } = this, o = -1;
    for (let l = e; l != n && !(qC(s, i, a[l + 1], a[l + 2]) && (o = l, r > 0)); l = a[l + 3])
      ;
    return o;
  }
  /**
  @internal
  */
  slice(e, n, r) {
    let i = this.buffer, s = new Uint16Array(n - e), a = 0;
    for (let o = e, l = 0; o < n; ) {
      s[l++] = i[o++], s[l++] = i[o++] - r;
      let c = s[l++] = i[o++] - r;
      s[l++] = i[o++] - e, a = Math.max(a, c);
    }
    return new rs(s, a, this.set);
  }
}
function qC(t, e, n, r) {
  switch (t) {
    case -2:
      return n < e;
    case -1:
      return r >= e && n < e;
    case 0:
      return n < e && r > e;
    case 1:
      return n <= e && r > e;
    case 2:
      return r > e;
    case 4:
      return !0;
  }
}
function Fo(t, e, n, r) {
  for (var i; t.from == t.to || (n < 1 ? t.from >= e : t.from > e) || (n > -1 ? t.to <= e : t.to < e); ) {
    let a = !r && t instanceof Un && t.index < 0 ? null : t.parent;
    if (!a)
      return t;
    t = a;
  }
  let s = r ? 0 : cn.IgnoreOverlays;
  if (r)
    for (let a = t, o = a.parent; o; a = o, o = a.parent)
      a instanceof Un && a.index < 0 && ((i = o.enter(e, n, s)) === null || i === void 0 ? void 0 : i.from) != a.from && (t = o);
  for (; ; ) {
    let a = t.enter(e, n, s);
    if (!a)
      return t;
    t = a;
  }
}
class UC {
  cursor(e = 0) {
    return new cf(this, e);
  }
  getChild(e, n = null, r = null) {
    let i = b0(this, e, n, r);
    return i.length ? i[0] : null;
  }
  getChildren(e, n = null, r = null) {
    return b0(this, e, n, r);
  }
  resolve(e, n = 0) {
    return Fo(this, e, n, !1);
  }
  resolveInner(e, n = 0) {
    return Fo(this, e, n, !0);
  }
  matchContext(e) {
    return uf(this.parent, e);
  }
  enterUnfinishedNodesBefore(e) {
    let n = this.childBefore(e), r = this;
    for (; n; ) {
      let i = n.lastChild;
      if (!i || i.to != n.to)
        break;
      i.type.isError && i.from == i.to ? (r = n, n = i.prevSibling) : n = i;
    }
    return r;
  }
  get node() {
    return this;
  }
  get next() {
    return this.parent;
  }
}
class Un extends UC {
  constructor(e, n, r, i) {
    super(), this._tree = e, this.from = n, this.index = r, this._parent = i;
  }
  get type() {
    return this._tree.type;
  }
  get name() {
    return this._tree.type.name;
  }
  get to() {
    return this.from + this._tree.length;
  }
  nextChild(e, n, r, i, s = 0) {
    for (let a = this; ; ) {
      for (let { children: o, positions: l } = a._tree, c = n > 0 ? o.length : -1; e != c; e += n) {
        let h = o[e], f = l[e] + a.from;
        if (qC(i, r, f, f + h.length)) {
          if (h instanceof rs) {
            if (s & cn.ExcludeBuffers)
              continue;
            let m = h.findChild(0, h.buffer.length, n, r - f, i);
            if (m > -1)
              return new li(new rM(a, h, e, f), null, m);
          } else if (s & cn.IncludeAnonymous || !h.type.isAnonymous || zd(h)) {
            let m;
            if (!(s & cn.IgnoreMounts) && (m = Eu.get(h)) && !m.overlay)
              return new Un(m.tree, f, e, a);
            let y = new Un(h, f, e, a);
            return s & cn.IncludeAnonymous || !y.type.isAnonymous ? y : y.nextChild(n < 0 ? h.children.length - 1 : 0, n, r, i);
          }
        }
      }
      if (s & cn.IncludeAnonymous || !a.type.isAnonymous || (a.index >= 0 ? e = a.index + n : e = n < 0 ? -1 : a._parent._tree.children.length, a = a._parent, !a))
        return null;
    }
  }
  get firstChild() {
    return this.nextChild(
      0,
      1,
      0,
      4
      /* Side.DontCare */
    );
  }
  get lastChild() {
    return this.nextChild(
      this._tree.children.length - 1,
      -1,
      0,
      4
      /* Side.DontCare */
    );
  }
  childAfter(e) {
    return this.nextChild(
      0,
      1,
      e,
      2
      /* Side.After */
    );
  }
  childBefore(e) {
    return this.nextChild(
      this._tree.children.length - 1,
      -1,
      e,
      -2
      /* Side.Before */
    );
  }
  enter(e, n, r = 0) {
    let i;
    if (!(r & cn.IgnoreOverlays) && (i = Eu.get(this._tree)) && i.overlay) {
      let s = e - this.from;
      for (let { from: a, to: o } of i.overlay)
        if ((n > 0 ? a <= s : a < s) && (n < 0 ? o >= s : o > s))
          return new Un(i.tree, i.overlay[0].from + this.from, -1, this);
    }
    return this.nextChild(0, 1, e, n, r);
  }
  nextSignificantParent() {
    let e = this;
    for (; e.type.isAnonymous && e._parent; )
      e = e._parent;
    return e;
  }
  get parent() {
    return this._parent ? this._parent.nextSignificantParent() : null;
  }
  get nextSibling() {
    return this._parent && this.index >= 0 ? this._parent.nextChild(
      this.index + 1,
      1,
      0,
      4
      /* Side.DontCare */
    ) : null;
  }
  get prevSibling() {
    return this._parent && this.index >= 0 ? this._parent.nextChild(
      this.index - 1,
      -1,
      0,
      4
      /* Side.DontCare */
    ) : null;
  }
  get tree() {
    return this._tree;
  }
  toTree() {
    return this._tree;
  }
  /**
  @internal
  */
  toString() {
    return this._tree.toString();
  }
}
function b0(t, e, n, r) {
  let i = t.cursor(), s = [];
  if (!i.firstChild())
    return s;
  if (n != null) {
    for (let a = !1; !a; )
      if (a = i.type.is(n), !i.nextSibling())
        return s;
  }
  for (; ; ) {
    if (r != null && i.type.is(r))
      return s;
    if (i.type.is(e) && s.push(i.node), !i.nextSibling())
      return r == null ? s : [];
  }
}
function uf(t, e, n = e.length - 1) {
  for (let r = t; n >= 0; r = r.parent) {
    if (!r)
      return !1;
    if (!r.type.isAnonymous) {
      if (e[n] && e[n] != r.name)
        return !1;
      n--;
    }
  }
  return !0;
}
class rM {
  constructor(e, n, r, i) {
    this.parent = e, this.buffer = n, this.index = r, this.start = i;
  }
}
class li extends UC {
  get name() {
    return this.type.name;
  }
  get from() {
    return this.context.start + this.context.buffer.buffer[this.index + 1];
  }
  get to() {
    return this.context.start + this.context.buffer.buffer[this.index + 2];
  }
  constructor(e, n, r) {
    super(), this.context = e, this._parent = n, this.index = r, this.type = e.buffer.set.types[e.buffer.buffer[r]];
  }
  child(e, n, r) {
    let { buffer: i } = this.context, s = i.findChild(this.index + 4, i.buffer[this.index + 3], e, n - this.context.start, r);
    return s < 0 ? null : new li(this.context, this, s);
  }
  get firstChild() {
    return this.child(
      1,
      0,
      4
      /* Side.DontCare */
    );
  }
  get lastChild() {
    return this.child(
      -1,
      0,
      4
      /* Side.DontCare */
    );
  }
  childAfter(e) {
    return this.child(
      1,
      e,
      2
      /* Side.After */
    );
  }
  childBefore(e) {
    return this.child(
      -1,
      e,
      -2
      /* Side.Before */
    );
  }
  enter(e, n, r = 0) {
    if (r & cn.ExcludeBuffers)
      return null;
    let { buffer: i } = this.context, s = i.findChild(this.index + 4, i.buffer[this.index + 3], n > 0 ? 1 : -1, e - this.context.start, n);
    return s < 0 ? null : new li(this.context, this, s);
  }
  get parent() {
    return this._parent || this.context.parent.nextSignificantParent();
  }
  externalSibling(e) {
    return this._parent ? null : this.context.parent.nextChild(
      this.context.index + e,
      e,
      0,
      4
      /* Side.DontCare */
    );
  }
  get nextSibling() {
    let { buffer: e } = this.context, n = e.buffer[this.index + 3];
    return n < (this._parent ? e.buffer[this._parent.index + 3] : e.buffer.length) ? new li(this.context, this._parent, n) : this.externalSibling(1);
  }
  get prevSibling() {
    let { buffer: e } = this.context, n = this._parent ? this._parent.index + 4 : 0;
    return this.index == n ? this.externalSibling(-1) : new li(this.context, this._parent, e.findChild(
      n,
      this.index,
      -1,
      0,
      4
      /* Side.DontCare */
    ));
  }
  get tree() {
    return null;
  }
  toTree() {
    let e = [], n = [], { buffer: r } = this.context, i = this.index + 4, s = r.buffer[this.index + 3];
    if (s > i) {
      let a = r.buffer[this.index + 1];
      e.push(r.slice(i, s, a)), n.push(0);
    }
    return new on(this.type, e, n, this.to - this.from);
  }
  /**
  @internal
  */
  toString() {
    return this.context.buffer.childString(this.index);
  }
}
function GC(t) {
  if (!t.length)
    return null;
  let e = 0, n = t[0];
  for (let s = 1; s < t.length; s++) {
    let a = t[s];
    (a.from > n.from || a.to < n.to) && (n = a, e = s);
  }
  let r = n instanceof Un && n.index < 0 ? null : n.parent, i = t.slice();
  return r ? i[e] = r : i.splice(e, 1), new iM(i, n);
}
class iM {
  constructor(e, n) {
    this.heads = e, this.node = n;
  }
  get next() {
    return GC(this.heads);
  }
}
function sM(t, e, n) {
  let r = t.resolveInner(e, n), i = null;
  for (let s = r instanceof Un ? r : r.context.parent; s; s = s.parent)
    if (s.index < 0) {
      let a = s.parent;
      (i || (i = [r])).push(a.resolve(e, n)), s = a;
    } else {
      let a = Eu.get(s.tree);
      if (a && a.overlay && a.overlay[0].from <= e && a.overlay[a.overlay.length - 1].to >= e) {
        let o = new Un(a.tree, a.overlay[0].from + s.from, -1, s);
        (i || (i = [r])).push(Fo(o, e, n, !1));
      }
    }
  return i ? GC(i) : r;
}
class cf {
  /**
  Shorthand for `.type.name`.
  */
  get name() {
    return this.type.name;
  }
  /**
  @internal
  */
  constructor(e, n = 0) {
    if (this.mode = n, this.buffer = null, this.stack = [], this.index = 0, this.bufferNode = null, e instanceof Un)
      this.yieldNode(e);
    else {
      this._tree = e.context.parent, this.buffer = e.context;
      for (let r = e._parent; r; r = r._parent)
        this.stack.unshift(r.index);
      this.bufferNode = e, this.yieldBuf(e.index);
    }
  }
  yieldNode(e) {
    return e ? (this._tree = e, this.type = e.type, this.from = e.from, this.to = e.to, !0) : !1;
  }
  yieldBuf(e, n) {
    this.index = e;
    let { start: r, buffer: i } = this.buffer;
    return this.type = n || i.set.types[i.buffer[e]], this.from = r + i.buffer[e + 1], this.to = r + i.buffer[e + 2], !0;
  }
  /**
  @internal
  */
  yield(e) {
    return e ? e instanceof Un ? (this.buffer = null, this.yieldNode(e)) : (this.buffer = e.context, this.yieldBuf(e.index, e.type)) : !1;
  }
  /**
  @internal
  */
  toString() {
    return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();
  }
  /**
  @internal
  */
  enterChild(e, n, r) {
    if (!this.buffer)
      return this.yield(this._tree.nextChild(e < 0 ? this._tree._tree.children.length - 1 : 0, e, n, r, this.mode));
    let { buffer: i } = this.buffer, s = i.findChild(this.index + 4, i.buffer[this.index + 3], e, n - this.buffer.start, r);
    return s < 0 ? !1 : (this.stack.push(this.index), this.yieldBuf(s));
  }
  /**
  Move the cursor to this node's first child. When this returns
  false, the node has no child, and the cursor has not been moved.
  */
  firstChild() {
    return this.enterChild(
      1,
      0,
      4
      /* Side.DontCare */
    );
  }
  /**
  Move the cursor to this node's last child.
  */
  lastChild() {
    return this.enterChild(
      -1,
      0,
      4
      /* Side.DontCare */
    );
  }
  /**
  Move the cursor to the first child that ends after `pos`.
  */
  childAfter(e) {
    return this.enterChild(
      1,
      e,
      2
      /* Side.After */
    );
  }
  /**
  Move to the last child that starts before `pos`.
  */
  childBefore(e) {
    return this.enterChild(
      -1,
      e,
      -2
      /* Side.Before */
    );
  }
  /**
  Move the cursor to the child around `pos`. If side is -1 the
  child may end at that position, when 1 it may start there. This
  will also enter [overlaid](#common.MountedTree.overlay)
  [mounted](#common.NodeProp^mounted) trees unless `overlays` is
  set to false.
  */
  enter(e, n, r = this.mode) {
    return this.buffer ? r & cn.ExcludeBuffers ? !1 : this.enterChild(1, e, n) : this.yield(this._tree.enter(e, n, r));
  }
  /**
  Move to the node's parent node, if this isn't the top node.
  */
  parent() {
    if (!this.buffer)
      return this.yieldNode(this.mode & cn.IncludeAnonymous ? this._tree._parent : this._tree.parent);
    if (this.stack.length)
      return this.yieldBuf(this.stack.pop());
    let e = this.mode & cn.IncludeAnonymous ? this.buffer.parent : this.buffer.parent.nextSignificantParent();
    return this.buffer = null, this.yieldNode(e);
  }
  /**
  @internal
  */
  sibling(e) {
    if (!this.buffer)
      return this._tree._parent ? this.yield(this._tree.index < 0 ? null : this._tree._parent.nextChild(this._tree.index + e, e, 0, 4, this.mode)) : !1;
    let { buffer: n } = this.buffer, r = this.stack.length - 1;
    if (e < 0) {
      let i = r < 0 ? 0 : this.stack[r] + 4;
      if (this.index != i)
        return this.yieldBuf(n.findChild(
          i,
          this.index,
          -1,
          0,
          4
          /* Side.DontCare */
        ));
    } else {
      let i = n.buffer[this.index + 3];
      if (i < (r < 0 ? n.buffer.length : n.buffer[this.stack[r] + 3]))
        return this.yieldBuf(i);
    }
    return r < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + e, e, 0, 4, this.mode)) : !1;
  }
  /**
  Move to this node's next sibling, if any.
  */
  nextSibling() {
    return this.sibling(1);
  }
  /**
  Move to this node's previous sibling, if any.
  */
  prevSibling() {
    return this.sibling(-1);
  }
  atLastNode(e) {
    let n, r, { buffer: i } = this;
    if (i) {
      if (e > 0) {
        if (this.index < i.buffer.buffer.length)
          return !1;
      } else
        for (let s = 0; s < this.index; s++)
          if (i.buffer.buffer[s + 3] < this.index)
            return !1;
      ({ index: n, parent: r } = i);
    } else
      ({ index: n, _parent: r } = this._tree);
    for (; r; { index: n, _parent: r } = r)
      if (n > -1)
        for (let s = n + e, a = e < 0 ? -1 : r._tree.children.length; s != a; s += e) {
          let o = r._tree.children[s];
          if (this.mode & cn.IncludeAnonymous || o instanceof rs || !o.type.isAnonymous || zd(o))
            return !1;
        }
    return !0;
  }
  move(e, n) {
    if (n && this.enterChild(
      e,
      0,
      4
      /* Side.DontCare */
    ))
      return !0;
    for (; ; ) {
      if (this.sibling(e))
        return !0;
      if (this.atLastNode(e) || !this.parent())
        return !1;
    }
  }
  /**
  Move to the next node in a
  [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order,_NLR)
  traversal, going from a node to its first child or, if the
  current node is empty or `enter` is false, its next sibling or
  the next sibling of the first parent node that has one.
  */
  next(e = !0) {
    return this.move(1, e);
  }
  /**
  Move to the next node in a last-to-first pre-order traversal. A
  node is followed by its last child or, if it has none, its
  previous sibling or the previous sibling of the first parent
  node that has one.
  */
  prev(e = !0) {
    return this.move(-1, e);
  }
  /**
  Move the cursor to the innermost node that covers `pos`. If
  `side` is -1, it will enter nodes that end at `pos`. If it is 1,
  it will enter nodes that start at `pos`.
  */
  moveTo(e, n = 0) {
    for (; (this.from == this.to || (n < 1 ? this.from >= e : this.from > e) || (n > -1 ? this.to <= e : this.to < e)) && this.parent(); )
      ;
    for (; this.enterChild(1, e, n); )
      ;
    return this;
  }
  /**
  Get a [syntax node](#common.SyntaxNode) at the cursor's current
  position.
  */
  get node() {
    if (!this.buffer)
      return this._tree;
    let e = this.bufferNode, n = null, r = 0;
    if (e && e.context == this.buffer)
      e: for (let i = this.index, s = this.stack.length; s >= 0; ) {
        for (let a = e; a; a = a._parent)
          if (a.index == i) {
            if (i == this.index)
              return a;
            n = a, r = s + 1;
            break e;
          }
        i = this.stack[--s];
      }
    for (let i = r; i < this.stack.length; i++)
      n = new li(this.buffer, n, this.stack[i]);
    return this.bufferNode = new li(this.buffer, n, this.index);
  }
  /**
  Get the [tree](#common.Tree) that represents the current node, if
  any. Will return null when the node is in a [tree
  buffer](#common.TreeBuffer).
  */
  get tree() {
    return this.buffer ? null : this._tree._tree;
  }
  /**
  Iterate over the current node and all its descendants, calling
  `enter` when entering a node and `leave`, if given, when leaving
  one. When `enter` returns `false`, any children of that node are
  skipped, and `leave` isn't called for it.
  */
  iterate(e, n) {
    for (let r = 0; ; ) {
      let i = !1;
      if (this.type.isAnonymous || e(this) !== !1) {
        if (this.firstChild()) {
          r++;
          continue;
        }
        this.type.isAnonymous || (i = !0);
      }
      for (; ; ) {
        if (i && n && n(this), i = this.type.isAnonymous, !r)
          return;
        if (this.nextSibling())
          break;
        this.parent(), r--, i = !0;
      }
    }
  }
  /**
  Test whether the current node matches a given context—a sequence
  of direct parent node names. Empty strings in the context array
  are treated as wildcards.
  */
  matchContext(e) {
    if (!this.buffer)
      return uf(this.node.parent, e);
    let { buffer: n } = this.buffer, { types: r } = n.set;
    for (let i = e.length - 1, s = this.stack.length - 1; i >= 0; s--) {
      if (s < 0)
        return uf(this._tree, e, i);
      let a = r[n.buffer[this.stack[s]]];
      if (!a.isAnonymous) {
        if (e[i] && e[i] != a.name)
          return !1;
        i--;
      }
    }
    return !0;
  }
}
function zd(t) {
  return t.children.some((e) => e instanceof rs || !e.type.isAnonymous || zd(e));
}
function aM(t) {
  var e;
  let { buffer: n, nodeSet: r, maxBufferLength: i = WC, reused: s = [], minRepeatType: a = r.types.length } = t, o = Array.isArray(n) ? new Gd(n, n.length) : n, l = r.types, c = 0, h = 0;
  function f(B, $, N, U, se, K) {
    let { id: ce, start: H, end: ie, size: fe } = o, De = h, Ee = c;
    for (; fe < 0; )
      if (o.next(), fe == -1) {
        let je = s[ce];
        N.push(je), U.push(H - B);
        return;
      } else if (fe == -3) {
        c = ce;
        return;
      } else if (fe == -4) {
        h = ce;
        return;
      } else
        throw new RangeError(`Unrecognized record size: ${fe}`);
    let re = l[ce], ke, Le, xe = H - B;
    if (ie - H <= i && (Le = S(o.pos - $, se))) {
      let je = new Uint16Array(Le.size - Le.skip), he = o.pos - Le.size, Pe = je.length;
      for (; o.pos > he; )
        Pe = M(Le.start, je, Pe);
      ke = new rs(je, ie - Le.start, r), xe = Le.start - B;
    } else {
      let je = o.pos - fe;
      o.next();
      let he = [], Pe = [], Pt = ce >= a ? ce : -1, lt = 0, We = ie;
      for (; o.pos > je; )
        Pt >= 0 && o.id == Pt && o.size >= 0 ? (o.end <= We - i && (x(he, Pe, H, lt, o.end, We, Pt, De, Ee), lt = he.length, We = o.end), o.next()) : K > 2500 ? m(H, je, he, Pe) : f(H, je, he, Pe, Pt, K + 1);
      if (Pt >= 0 && lt > 0 && lt < he.length && x(he, Pe, H, lt, H, We, Pt, De, Ee), he.reverse(), Pe.reverse(), Pt > -1 && lt > 0) {
        let Qt = y(re, Ee);
        ke = Hd(re, he, Pe, 0, he.length, 0, ie - H, Qt, Qt);
      } else
        ke = C(re, he, Pe, ie - H, De - ie, Ee);
    }
    N.push(ke), U.push(xe);
  }
  function m(B, $, N, U) {
    let se = [], K = 0, ce = -1;
    for (; o.pos > $; ) {
      let { id: H, start: ie, end: fe, size: De } = o;
      if (De > 4)
        o.next();
      else {
        if (ce > -1 && ie < ce)
          break;
        ce < 0 && (ce = fe - i), se.push(H, ie, fe), K++, o.next();
      }
    }
    if (K) {
      let H = new Uint16Array(K * 4), ie = se[se.length - 2];
      for (let fe = se.length - 3, De = 0; fe >= 0; fe -= 3)
        H[De++] = se[fe], H[De++] = se[fe + 1] - ie, H[De++] = se[fe + 2] - ie, H[De++] = De;
      N.push(new rs(H, se[2] - ie, r)), U.push(ie - B);
    }
  }
  function y(B, $) {
    return (N, U, se) => {
      let K = 0, ce = N.length - 1, H, ie;
      if (ce >= 0 && (H = N[ce]) instanceof on) {
        if (!ce && H.type == B && H.length == se)
          return H;
        (ie = H.prop(nt.lookAhead)) && (K = U[ce] + H.length + ie);
      }
      return C(B, N, U, se, K, $);
    };
  }
  function x(B, $, N, U, se, K, ce, H, ie) {
    let fe = [], De = [];
    for (; B.length > U; )
      fe.push(B.pop()), De.push($.pop() + N - se);
    B.push(C(r.types[ce], fe, De, K - se, H - K, ie)), $.push(se - N);
  }
  function C(B, $, N, U, se, K, ce) {
    if (K) {
      let H = [nt.contextHash, K];
      ce = ce ? [H].concat(ce) : [H];
    }
    if (se > 25) {
      let H = [nt.lookAhead, se];
      ce = ce ? [H].concat(ce) : [H];
    }
    return new on(B, $, N, U, ce);
  }
  function S(B, $) {
    let N = o.fork(), U = 0, se = 0, K = 0, ce = N.end - i, H = { size: 0, start: 0, skip: 0 };
    e: for (let ie = N.pos - B; N.pos > ie; ) {
      let fe = N.size;
      if (N.id == $ && fe >= 0) {
        H.size = U, H.start = se, H.skip = K, K += 4, U += 4, N.next();
        continue;
      }
      let De = N.pos - fe;
      if (fe < 0 || De < ie || N.start < ce)
        break;
      let Ee = N.id >= a ? 4 : 0, re = N.start;
      for (N.next(); N.pos > De; ) {
        if (N.size < 0)
          if (N.size == -3)
            Ee += 4;
          else
            break e;
        else N.id >= a && (Ee += 4);
        N.next();
      }
      se = re, U += fe, K += Ee;
    }
    return ($ < 0 || U == B) && (H.size = U, H.start = se, H.skip = K), H.size > 4 ? H : void 0;
  }
  function M(B, $, N) {
    let { id: U, start: se, end: K, size: ce } = o;
    if (o.next(), ce >= 0 && U < a) {
      let H = N;
      if (ce > 4) {
        let ie = o.pos - (ce - 4);
        for (; o.pos > ie; )
          N = M(B, $, N);
      }
      $[--N] = H, $[--N] = K - B, $[--N] = se - B, $[--N] = U;
    } else ce == -3 ? c = U : ce == -4 && (h = U);
    return N;
  }
  let Z = [], q = [];
  for (; o.pos > 0; )
    f(t.start || 0, t.bufferStart || 0, Z, q, -1, 0);
  let _ = (e = t.length) !== null && e !== void 0 ? e : Z.length ? q[0] + Z[0].length : 0;
  return new on(l[t.topID], Z.reverse(), q.reverse(), _);
}
const y0 = /* @__PURE__ */ new WeakMap();
function lu(t, e) {
  if (!t.isAnonymous || e instanceof rs || e.type != t)
    return 1;
  let n = y0.get(e);
  if (n == null) {
    n = 1;
    for (let r of e.children) {
      if (r.type != t || !(r instanceof on)) {
        n = 1;
        break;
      }
      n += lu(t, r);
    }
    y0.set(e, n);
  }
  return n;
}
function Hd(t, e, n, r, i, s, a, o, l) {
  let c = 0;
  for (let x = r; x < i; x++)
    c += lu(t, e[x]);
  let h = Math.ceil(
    c * 1.5 / 8
    /* Balance.BranchFactor */
  ), f = [], m = [];
  function y(x, C, S, M, Z) {
    for (let q = S; q < M; ) {
      let _ = q, B = C[q], $ = lu(t, x[q]);
      for (q++; q < M; q++) {
        let N = lu(t, x[q]);
        if ($ + N >= h)
          break;
        $ += N;
      }
      if (q == _ + 1) {
        if ($ > h) {
          let N = x[_];
          y(N.children, N.positions, 0, N.children.length, C[_] + Z);
          continue;
        }
        f.push(x[_]);
      } else {
        let N = C[q - 1] + x[q - 1].length - B;
        f.push(Hd(t, x, C, _, q, B, N, null, l));
      }
      m.push(B + Z - s);
    }
  }
  return y(e, n, r, i, 0), (o || l)(f, m, a);
}
class oM {
  constructor() {
    this.map = /* @__PURE__ */ new WeakMap();
  }
  setBuffer(e, n, r) {
    let i = this.map.get(e);
    i || this.map.set(e, i = /* @__PURE__ */ new Map()), i.set(n, r);
  }
  getBuffer(e, n) {
    let r = this.map.get(e);
    return r && r.get(n);
  }
  /**
  Set the value for this syntax node.
  */
  set(e, n) {
    e instanceof li ? this.setBuffer(e.context.buffer, e.index, n) : e instanceof Un && this.map.set(e.tree, n);
  }
  /**
  Retrieve value for this syntax node, if it exists in the map.
  */
  get(e) {
    return e instanceof li ? this.getBuffer(e.context.buffer, e.index) : e instanceof Un ? this.map.get(e.tree) : void 0;
  }
  /**
  Set the value for the node that a cursor currently points to.
  */
  cursorSet(e, n) {
    e.buffer ? this.setBuffer(e.buffer.buffer, e.index, n) : this.map.set(e.tree, n);
  }
  /**
  Retrieve the value for the node that a cursor currently points
  to.
  */
  cursorGet(e) {
    return e.buffer ? this.getBuffer(e.buffer.buffer, e.index) : this.map.get(e.tree);
  }
}
class As {
  /**
  Construct a tree fragment. You'll usually want to use
  [`addTree`](#common.TreeFragment^addTree) and
  [`applyChanges`](#common.TreeFragment^applyChanges) instead of
  calling this directly.
  */
  constructor(e, n, r, i, s = !1, a = !1) {
    this.from = e, this.to = n, this.tree = r, this.offset = i, this.open = (s ? 1 : 0) | (a ? 2 : 0);
  }
  /**
  Whether the start of the fragment represents the start of a
  parse, or the end of a change. (In the second case, it may not
  be safe to reuse some nodes at the start, depending on the
  parsing algorithm.)
  */
  get openStart() {
    return (this.open & 1) > 0;
  }
  /**
  Whether the end of the fragment represents the end of a
  full-document parse, or the start of a change.
  */
  get openEnd() {
    return (this.open & 2) > 0;
  }
  /**
  Create a set of fragments from a freshly parsed tree, or update
  an existing set of fragments by replacing the ones that overlap
  with a tree with content from the new tree. When `partial` is
  true, the parse is treated as incomplete, and the resulting
  fragment has [`openEnd`](#common.TreeFragment.openEnd) set to
  true.
  */
  static addTree(e, n = [], r = !1) {
    let i = [new As(0, e.length, e, 0, !1, r)];
    for (let s of n)
      s.to > e.length && i.push(s);
    return i;
  }
  /**
  Apply a set of edits to an array of fragments, removing or
  splitting fragments as necessary to remove edited ranges, and
  adjusting offsets for fragments that moved.
  */
  static applyChanges(e, n, r = 128) {
    if (!n.length)
      return e;
    let i = [], s = 1, a = e.length ? e[0] : null;
    for (let o = 0, l = 0, c = 0; ; o++) {
      let h = o < n.length ? n[o] : null, f = h ? h.fromA : 1e9;
      if (f - l >= r)
        for (; a && a.from < f; ) {
          let m = a;
          if (l >= m.from || f <= m.to || c) {
            let y = Math.max(m.from, l) - c, x = Math.min(m.to, f) - c;
            m = y >= x ? null : new As(y, x, m.tree, m.offset + c, o > 0, !!h);
          }
          if (m && i.push(m), a.to > f)
            break;
          a = s < e.length ? e[s++] : null;
        }
      if (!h)
        break;
      l = h.toA, c = h.toA - h.toB;
    }
    return i;
  }
}
class zC {
  /**
  Start a parse, returning a [partial parse](#common.PartialParse)
  object. [`fragments`](#common.TreeFragment) can be passed in to
  make the parse incremental.
  
  By default, the entire input is parsed. You can pass `ranges`,
  which should be a sorted array of non-empty, non-overlapping
  ranges, to parse only those ranges. The tree returned in that
  case will start at `ranges[0].from`.
  */
  startParse(e, n, r) {
    return typeof e == "string" && (e = new lM(e)), r = r ? r.length ? r.map((i) => new Wh(i.from, i.to)) : [new Wh(0, 0)] : [new Wh(0, e.length)], this.createParse(e, n || [], r);
  }
  /**
  Run a full parse, returning the resulting tree.
  */
  parse(e, n, r) {
    let i = this.startParse(e, n, r);
    for (; ; ) {
      let s = i.advance();
      if (s)
        return s;
    }
  }
}
class lM {
  constructor(e) {
    this.string = e;
  }
  get length() {
    return this.string.length;
  }
  chunk(e) {
    return this.string.slice(e);
  }
  get lineChunks() {
    return !1;
  }
  read(e, n) {
    return this.string.slice(e, n);
  }
}
new nt({ perNode: !0 });
let uM = 0;
class xr {
  /**
  @internal
  */
  constructor(e, n, r, i) {
    this.name = e, this.set = n, this.base = r, this.modified = i, this.id = uM++;
  }
  toString() {
    let { name: e } = this;
    for (let n of this.modified)
      n.name && (e = `${n.name}(${e})`);
    return e;
  }
  static define(e, n) {
    let r = typeof e == "string" ? e : "?";
    if (e instanceof xr && (n = e), n?.base)
      throw new Error("Can not derive from a modified tag");
    let i = new xr(r, [], null, []);
    if (i.set.push(i), n)
      for (let s of n.set)
        i.set.push(s);
    return i;
  }
  /**
  Define a tag _modifier_, which is a function that, given a tag,
  will return a tag that is a subtag of the original. Applying the
  same modifier to a twice tag will return the same value (`m1(t1)
  == m1(t1)`) and applying multiple modifiers will, regardless or
  order, produce the same tag (`m1(m2(t1)) == m2(m1(t1))`).
  
  When multiple modifiers are applied to a given base tag, each
  smaller set of modifiers is registered as a parent, so that for
  example `m1(m2(m3(t1)))` is a subtype of `m1(m2(t1))`,
  `m1(m3(t1)`, and so on.
  */
  static defineModifier(e) {
    let n = new Fu(e);
    return (r) => r.modified.indexOf(n) > -1 ? r : Fu.get(r.base || r, r.modified.concat(n).sort((i, s) => i.id - s.id));
  }
}
let cM = 0;
class Fu {
  constructor(e) {
    this.name = e, this.instances = [], this.id = cM++;
  }
  static get(e, n) {
    if (!n.length)
      return e;
    let r = n[0].instances.find((o) => o.base == e && hM(n, o.modified));
    if (r)
      return r;
    let i = [], s = new xr(e.name, i, e, n);
    for (let o of n)
      o.instances.push(s);
    let a = pM(n);
    for (let o of e.set)
      if (!o.modified.length)
        for (let l of a)
          i.push(Fu.get(o, l));
    return s;
  }
}
function hM(t, e) {
  return t.length == e.length && t.every((n, r) => n == e[r]);
}
function pM(t) {
  let e = [[]];
  for (let n = 0; n < t.length; n++)
    for (let r = 0, i = e.length; r < i; r++)
      e.push(e[r].concat(t[n]));
  return e.sort((n, r) => r.length - n.length);
}
function HC(t) {
  let e = /* @__PURE__ */ Object.create(null);
  for (let n in t) {
    let r = t[n];
    Array.isArray(r) || (r = [r]);
    for (let i of n.split(" "))
      if (i) {
        let s = [], a = 2, o = i;
        for (let f = 0; ; ) {
          if (o == "..." && f > 0 && f + 3 == i.length) {
            a = 1;
            break;
          }
          let m = /^"(?:[^"\\]|\\.)*?"|[^\/!]+/.exec(o);
          if (!m)
            throw new RangeError("Invalid path: " + i);
          if (s.push(m[0] == "*" ? "" : m[0][0] == '"' ? JSON.parse(m[0]) : m[0]), f += m[0].length, f == i.length)
            break;
          let y = i[f++];
          if (f == i.length && y == "!") {
            a = 0;
            break;
          }
          if (y != "/")
            throw new RangeError("Invalid path: " + i);
          o = i.slice(f);
        }
        let l = s.length - 1, c = s[l];
        if (!c)
          throw new RangeError("Invalid path: " + i);
        let h = new Bu(r, a, l > 0 ? s.slice(0, l) : null);
        e[c] = h.sort(e[c]);
      }
  }
  return YC.add(e);
}
const YC = new nt();
class Bu {
  constructor(e, n, r, i) {
    this.tags = e, this.mode = n, this.context = r, this.next = i;
  }
  get opaque() {
    return this.mode == 0;
  }
  get inherit() {
    return this.mode == 1;
  }
  sort(e) {
    return !e || e.depth < this.depth ? (this.next = e, this) : (e.next = this.sort(e.next), e);
  }
  get depth() {
    return this.context ? this.context.length : 0;
  }
}
Bu.empty = new Bu([], 2, null);
function KC(t, e) {
  let n = /* @__PURE__ */ Object.create(null);
  for (let s of t)
    if (!Array.isArray(s.tag))
      n[s.tag.id] = s.class;
    else
      for (let a of s.tag)
        n[a.id] = s.class;
  let { scope: r, all: i = null } = e || {};
  return {
    style: (s) => {
      let a = i;
      for (let o of s)
        for (let l of o.set) {
          let c = n[l.id];
          if (c) {
            a = a ? a + " " + c : c;
            break;
          }
        }
      return a;
    },
    scope: r
  };
}
function fM(t, e) {
  let n = null;
  for (let r of t) {
    let i = r.style(e);
    i && (n = n ? n + " " + i : i);
  }
  return n;
}
function dM(t, e, n, r = 0, i = t.length) {
  let s = new mM(r, Array.isArray(e) ? e : [e], n);
  s.highlightRange(t.cursor(), r, i, "", s.highlighters), s.flush(i);
}
class mM {
  constructor(e, n, r) {
    this.at = e, this.highlighters = n, this.span = r, this.class = "";
  }
  startSpan(e, n) {
    n != this.class && (this.flush(e), e > this.at && (this.at = e), this.class = n);
  }
  flush(e) {
    e > this.at && this.class && this.span(this.at, e, this.class);
  }
  highlightRange(e, n, r, i, s) {
    let { type: a, from: o, to: l } = e;
    if (o >= r || l <= n)
      return;
    a.isTop && (s = this.highlighters.filter((y) => !y.scope || y.scope(a)));
    let c = i, h = gM(e) || Bu.empty, f = fM(s, h.tags);
    if (f && (c && (c += " "), c += f, h.mode == 1 && (i += (i ? " " : "") + f)), this.startSpan(Math.max(n, o), c), h.opaque)
      return;
    let m = e.tree && e.tree.prop(nt.mounted);
    if (m && m.overlay) {
      let y = e.node.enter(m.overlay[0].from + o, 1), x = this.highlighters.filter((S) => !S.scope || S.scope(m.tree.type)), C = e.firstChild();
      for (let S = 0, M = o; ; S++) {
        let Z = S < m.overlay.length ? m.overlay[S] : null, q = Z ? Z.from + o : l, _ = Math.max(n, M), B = Math.min(r, q);
        if (_ < B && C)
          for (; e.from < B && (this.highlightRange(e, _, B, i, s), this.startSpan(Math.min(B, e.to), c), !(e.to >= q || !e.nextSibling())); )
            ;
        if (!Z || q > r)
          break;
        M = Z.to + o, M > n && (this.highlightRange(y.cursor(), Math.max(n, Z.from + o), Math.min(r, M), "", x), this.startSpan(Math.min(r, M), c));
      }
      C && e.parent();
    } else if (e.firstChild()) {
      m && (i = "");
      do
        if (!(e.to <= n)) {
          if (e.from >= r)
            break;
          this.highlightRange(e, n, r, i, s), this.startSpan(Math.min(r, e.to), c);
        }
      while (e.nextSibling());
      e.parent();
    }
  }
}
function gM(t) {
  let e = t.type.prop(YC);
  for (; e && e.context && !t.matchContext(e.context); )
    e = e.next;
  return e || null;
}
const ye = xr.define, Vl = ye(), Vi = ye(), O0 = ye(Vi), v0 = ye(Vi), Xi = ye(), Xl = ye(Xi), qh = ye(Xi), ni = ye(), ms = ye(ni), Jr = ye(), ei = ye(), hf = ye(), to = ye(hf), Wl = ye(), u = {
  /**
  A comment.
  */
  comment: Vl,
  /**
  A line [comment](#highlight.tags.comment).
  */
  lineComment: ye(Vl),
  /**
  A block [comment](#highlight.tags.comment).
  */
  blockComment: ye(Vl),
  /**
  A documentation [comment](#highlight.tags.comment).
  */
  docComment: ye(Vl),
  /**
  Any kind of identifier.
  */
  name: Vi,
  /**
  The [name](#highlight.tags.name) of a variable.
  */
  variableName: ye(Vi),
  /**
  A type [name](#highlight.tags.name).
  */
  typeName: O0,
  /**
  A tag name (subtag of [`typeName`](#highlight.tags.typeName)).
  */
  tagName: ye(O0),
  /**
  A property or field [name](#highlight.tags.name).
  */
  propertyName: v0,
  /**
  An attribute name (subtag of [`propertyName`](#highlight.tags.propertyName)).
  */
  attributeName: ye(v0),
  /**
  The [name](#highlight.tags.name) of a class.
  */
  className: ye(Vi),
  /**
  A label [name](#highlight.tags.name).
  */
  labelName: ye(Vi),
  /**
  A namespace [name](#highlight.tags.name).
  */
  namespace: ye(Vi),
  /**
  The [name](#highlight.tags.name) of a macro.
  */
  macroName: ye(Vi),
  /**
  A literal value.
  */
  literal: Xi,
  /**
  A string [literal](#highlight.tags.literal).
  */
  string: Xl,
  /**
  A documentation [string](#highlight.tags.string).
  */
  docString: ye(Xl),
  /**
  A character literal (subtag of [string](#highlight.tags.string)).
  */
  character: ye(Xl),
  /**
  An attribute value (subtag of [string](#highlight.tags.string)).
  */
  attributeValue: ye(Xl),
  /**
  A number [literal](#highlight.tags.literal).
  */
  number: qh,
  /**
  An integer [number](#highlight.tags.number) literal.
  */
  integer: ye(qh),
  /**
  A floating-point [number](#highlight.tags.number) literal.
  */
  float: ye(qh),
  /**
  A boolean [literal](#highlight.tags.literal).
  */
  bool: ye(Xi),
  /**
  Regular expression [literal](#highlight.tags.literal).
  */
  regexp: ye(Xi),
  /**
  An escape [literal](#highlight.tags.literal), for example a
  backslash escape in a string.
  */
  escape: ye(Xi),
  /**
  A color [literal](#highlight.tags.literal).
  */
  color: ye(Xi),
  /**
  A URL [literal](#highlight.tags.literal).
  */
  url: ye(Xi),
  /**
  A language keyword.
  */
  keyword: Jr,
  /**
  The [keyword](#highlight.tags.keyword) for the self or this
  object.
  */
  self: ye(Jr),
  /**
  The [keyword](#highlight.tags.keyword) for null.
  */
  null: ye(Jr),
  /**
  A [keyword](#highlight.tags.keyword) denoting some atomic value.
  */
  atom: ye(Jr),
  /**
  A [keyword](#highlight.tags.keyword) that represents a unit.
  */
  unit: ye(Jr),
  /**
  A modifier [keyword](#highlight.tags.keyword).
  */
  modifier: ye(Jr),
  /**
  A [keyword](#highlight.tags.keyword) that acts as an operator.
  */
  operatorKeyword: ye(Jr),
  /**
  A control-flow related [keyword](#highlight.tags.keyword).
  */
  controlKeyword: ye(Jr),
  /**
  A [keyword](#highlight.tags.keyword) that defines something.
  */
  definitionKeyword: ye(Jr),
  /**
  A [keyword](#highlight.tags.keyword) related to defining or
  interfacing with modules.
  */
  moduleKeyword: ye(Jr),
  /**
  An operator.
  */
  operator: ei,
  /**
  An [operator](#highlight.tags.operator) that dereferences something.
  */
  derefOperator: ye(ei),
  /**
  Arithmetic-related [operator](#highlight.tags.operator).
  */
  arithmeticOperator: ye(ei),
  /**
  Logical [operator](#highlight.tags.operator).
  */
  logicOperator: ye(ei),
  /**
  Bit [operator](#highlight.tags.operator).
  */
  bitwiseOperator: ye(ei),
  /**
  Comparison [operator](#highlight.tags.operator).
  */
  compareOperator: ye(ei),
  /**
  [Operator](#highlight.tags.operator) that updates its operand.
  */
  updateOperator: ye(ei),
  /**
  [Operator](#highlight.tags.operator) that defines something.
  */
  definitionOperator: ye(ei),
  /**
  Type-related [operator](#highlight.tags.operator).
  */
  typeOperator: ye(ei),
  /**
  Control-flow [operator](#highlight.tags.operator).
  */
  controlOperator: ye(ei),
  /**
  Program or markup punctuation.
  */
  punctuation: hf,
  /**
  [Punctuation](#highlight.tags.punctuation) that separates
  things.
  */
  separator: ye(hf),
  /**
  Bracket-style [punctuation](#highlight.tags.punctuation).
  */
  bracket: to,
  /**
  Angle [brackets](#highlight.tags.bracket) (usually `<` and `>`
  tokens).
  */
  angleBracket: ye(to),
  /**
  Square [brackets](#highlight.tags.bracket) (usually `[` and `]`
  tokens).
  */
  squareBracket: ye(to),
  /**
  Parentheses (usually `(` and `)` tokens). Subtag of
  [bracket](#highlight.tags.bracket).
  */
  paren: ye(to),
  /**
  Braces (usually `{` and `}` tokens). Subtag of
  [bracket](#highlight.tags.bracket).
  */
  brace: ye(to),
  /**
  Content, for example plain text in XML or markup documents.
  */
  content: ni,
  /**
  [Content](#highlight.tags.content) that represents a heading.
  */
  heading: ms,
  /**
  A level 1 [heading](#highlight.tags.heading).
  */
  heading1: ye(ms),
  /**
  A level 2 [heading](#highlight.tags.heading).
  */
  heading2: ye(ms),
  /**
  A level 3 [heading](#highlight.tags.heading).
  */
  heading3: ye(ms),
  /**
  A level 4 [heading](#highlight.tags.heading).
  */
  heading4: ye(ms),
  /**
  A level 5 [heading](#highlight.tags.heading).
  */
  heading5: ye(ms),
  /**
  A level 6 [heading](#highlight.tags.heading).
  */
  heading6: ye(ms),
  /**
  A prose [content](#highlight.tags.content) separator (such as a horizontal rule).
  */
  contentSeparator: ye(ni),
  /**
  [Content](#highlight.tags.content) that represents a list.
  */
  list: ye(ni),
  /**
  [Content](#highlight.tags.content) that represents a quote.
  */
  quote: ye(ni),
  /**
  [Content](#highlight.tags.content) that is emphasized.
  */
  emphasis: ye(ni),
  /**
  [Content](#highlight.tags.content) that is styled strong.
  */
  strong: ye(ni),
  /**
  [Content](#highlight.tags.content) that is part of a link.
  */
  link: ye(ni),
  /**
  [Content](#highlight.tags.content) that is styled as code or
  monospace.
  */
  monospace: ye(ni),
  /**
  [Content](#highlight.tags.content) that has a strike-through
  style.
  */
  strikethrough: ye(ni),
  /**
  Inserted text in a change-tracking format.
  */
  inserted: ye(),
  /**
  Deleted text.
  */
  deleted: ye(),
  /**
  Changed text.
  */
  changed: ye(),
  /**
  An invalid or unsyntactic element.
  */
  invalid: ye(),
  /**
  Metadata or meta-instruction.
  */
  meta: Wl,
  /**
  [Metadata](#highlight.tags.meta) that applies to the entire
  document.
  */
  documentMeta: ye(Wl),
  /**
  [Metadata](#highlight.tags.meta) that annotates or adds
  attributes to a given syntactic element.
  */
  annotation: ye(Wl),
  /**
  Processing instruction or preprocessor directive. Subtag of
  [meta](#highlight.tags.meta).
  */
  processingInstruction: ye(Wl),
  /**
  [Modifier](#highlight.Tag^defineModifier) that indicates that a
  given element is being defined. Expected to be used with the
  various [name](#highlight.tags.name) tags.
  */
  definition: xr.defineModifier("definition"),
  /**
  [Modifier](#highlight.Tag^defineModifier) that indicates that
  something is constant. Mostly expected to be used with
  [variable names](#highlight.tags.variableName).
  */
  constant: xr.defineModifier("constant"),
  /**
  [Modifier](#highlight.Tag^defineModifier) used to indicate that
  a [variable](#highlight.tags.variableName) or [property
  name](#highlight.tags.propertyName) is being called or defined
  as a function.
  */
  function: xr.defineModifier("function"),
  /**
  [Modifier](#highlight.Tag^defineModifier) that can be applied to
  [names](#highlight.tags.name) to indicate that they belong to
  the language's standard environment.
  */
  standard: xr.defineModifier("standard"),
  /**
  [Modifier](#highlight.Tag^defineModifier) that indicates a given
  [names](#highlight.tags.name) is local to some scope.
  */
  local: xr.defineModifier("local"),
  /**
  A generic variant [modifier](#highlight.Tag^defineModifier) that
  can be used to tag language-specific alternative variants of
  some common tag. It is recommended for themes to define special
  forms of at least the [string](#highlight.tags.string) and
  [variable name](#highlight.tags.variableName) tags, since those
  come up a lot.
  */
  special: xr.defineModifier("special")
};
for (let t in u) {
  let e = u[t];
  e instanceof xr && (e.name = t);
}
KC([
  { tag: u.link, class: "tok-link" },
  { tag: u.heading, class: "tok-heading" },
  { tag: u.emphasis, class: "tok-emphasis" },
  { tag: u.strong, class: "tok-strong" },
  { tag: u.keyword, class: "tok-keyword" },
  { tag: u.atom, class: "tok-atom" },
  { tag: u.bool, class: "tok-bool" },
  { tag: u.url, class: "tok-url" },
  { tag: u.labelName, class: "tok-labelName" },
  { tag: u.inserted, class: "tok-inserted" },
  { tag: u.deleted, class: "tok-deleted" },
  { tag: u.literal, class: "tok-literal" },
  { tag: u.string, class: "tok-string" },
  { tag: u.number, class: "tok-number" },
  { tag: [u.regexp, u.escape, u.special(u.string)], class: "tok-string2" },
  { tag: u.variableName, class: "tok-variableName" },
  { tag: u.local(u.variableName), class: "tok-variableName tok-local" },
  { tag: u.definition(u.variableName), class: "tok-variableName tok-definition" },
  { tag: u.special(u.variableName), class: "tok-variableName2" },
  { tag: u.definition(u.propertyName), class: "tok-propertyName tok-definition" },
  { tag: u.typeName, class: "tok-typeName" },
  { tag: u.namespace, class: "tok-namespace" },
  { tag: u.className, class: "tok-className" },
  { tag: u.macroName, class: "tok-macroName" },
  { tag: u.propertyName, class: "tok-propertyName" },
  { tag: u.operator, class: "tok-operator" },
  { tag: u.comment, class: "tok-comment" },
  { tag: u.meta, class: "tok-meta" },
  { tag: u.invalid, class: "tok-invalid" },
  { tag: u.punctuation, class: "tok-punctuation" }
]);
var Uh;
const Ks = /* @__PURE__ */ new nt();
function JC(t) {
  return Ae.define({
    combine: t ? (e) => e.concat(t) : void 0
  });
}
const Yd = /* @__PURE__ */ new nt();
class Cr {
  /**
  Construct a language object. If you need to invoke this
  directly, first define a data facet with
  [`defineLanguageFacet`](https://codemirror.net/6/docs/ref/#language.defineLanguageFacet), and then
  configure your parser to [attach](https://codemirror.net/6/docs/ref/#language.languageDataProp) it
  to the language's outer syntax node.
  */
  constructor(e, n, r = [], i = "") {
    this.data = e, this.name = i, dt.prototype.hasOwnProperty("tree") || Object.defineProperty(dt.prototype, "tree", { get() {
      return Sn(this);
    } }), this.parser = n, this.extension = [
      Ca.of(this),
      dt.languageData.of((s, a, o) => {
        let l = x0(s, a, o), c = l.type.prop(Ks);
        if (!c)
          return [];
        let h = s.facet(c), f = l.type.prop(Yd);
        if (f) {
          let m = l.resolve(a - l.from, o);
          for (let y of f)
            if (y.test(m, s)) {
              let x = s.facet(y.facet);
              return y.type == "replace" ? x : x.concat(h);
            }
        }
        return h;
      })
    ].concat(r);
  }
  /**
  Query whether this language is active at the given position.
  */
  isActiveAt(e, n, r = -1) {
    return x0(e, n, r).type.prop(Ks) == this.data;
  }
  /**
  Find the document regions that were parsed using this language.
  The returned regions will _include_ any nested languages rooted
  in this language, when those exist.
  */
  findRegions(e) {
    let n = e.facet(Ca);
    if (n?.data == this.data)
      return [{ from: 0, to: e.doc.length }];
    if (!n || !n.allowsNesting)
      return [];
    let r = [], i = (s, a) => {
      if (s.prop(Ks) == this.data) {
        r.push({ from: a, to: a + s.length });
        return;
      }
      let o = s.prop(nt.mounted);
      if (o) {
        if (o.tree.prop(Ks) == this.data) {
          if (o.overlay)
            for (let l of o.overlay)
              r.push({ from: l.from + a, to: l.to + a });
          else
            r.push({ from: a, to: a + s.length });
          return;
        } else if (o.overlay) {
          let l = r.length;
          if (i(o.tree, o.overlay[0].from + a), r.length > l)
            return;
        }
      }
      for (let l = 0; l < s.children.length; l++) {
        let c = s.children[l];
        c instanceof on && i(c, s.positions[l] + a);
      }
    };
    return i(Sn(e), 0), r;
  }
  /**
  Indicates whether this language allows nested languages. The
  default implementation returns true.
  */
  get allowsNesting() {
    return !0;
  }
}
Cr.setState = /* @__PURE__ */ Ie.define();
function x0(t, e, n) {
  let r = t.facet(Ca), i = Sn(t).topNode;
  if (!r || r.allowsNesting)
    for (let s = i; s; s = s.enter(e, n, cn.ExcludeBuffers))
      s.type.isTop && (i = s);
  return i;
}
class Mu extends Cr {
  constructor(e, n, r) {
    super(e, n, [], r), this.parser = n;
  }
  /**
  Define a language from a parser.
  */
  static define(e) {
    let n = JC(e.languageData);
    return new Mu(n, e.parser.configure({
      props: [Ks.add((r) => r.isTop ? n : void 0)]
    }), e.name);
  }
  /**
  Create a new instance of this language with a reconfigured
  version of its parser and optionally a new name.
  */
  configure(e, n) {
    return new Mu(this.data, this.parser.configure(e), n || this.name);
  }
  get allowsNesting() {
    return this.parser.hasWrappers();
  }
}
function Sn(t) {
  let e = t.field(Cr.state, !1);
  return e ? e.tree : on.empty;
}
function eS(t, e, n = 50) {
  var r;
  let i = (r = t.field(Cr.state, !1)) === null || r === void 0 ? void 0 : r.context;
  if (!i)
    return null;
  let s = i.viewport;
  i.updateViewport({ from: 0, to: e });
  let a = i.isDone(e) || i.work(n, e) ? i.tree : null;
  return i.updateViewport(s), a;
}
class bM {
  /**
  Create an input object for the given document.
  */
  constructor(e) {
    this.doc = e, this.cursorPos = 0, this.string = "", this.cursor = e.iter();
  }
  get length() {
    return this.doc.length;
  }
  syncTo(e) {
    return this.string = this.cursor.next(e - this.cursorPos).value, this.cursorPos = e + this.string.length, this.cursorPos - this.string.length;
  }
  chunk(e) {
    return this.syncTo(e), this.string;
  }
  get lineChunks() {
    return !0;
  }
  read(e, n) {
    let r = this.cursorPos - this.string.length;
    return e < r || n >= this.cursorPos ? this.doc.sliceString(e, n) : this.string.slice(e - r, n - r);
  }
}
let no = null;
class Qu {
  constructor(e, n, r = [], i, s, a, o, l) {
    this.parser = e, this.state = n, this.fragments = r, this.tree = i, this.treeLen = s, this.viewport = a, this.skipped = o, this.scheduleOn = l, this.parse = null, this.tempSkipped = [];
  }
  /**
  @internal
  */
  static create(e, n, r) {
    return new Qu(e, n, [], on.empty, 0, r, [], null);
  }
  startParse() {
    return this.parser.startParse(new bM(this.state.doc), this.fragments);
  }
  /**
  @internal
  */
  work(e, n) {
    return n != null && n >= this.state.doc.length && (n = void 0), this.tree != on.empty && this.isDone(n ?? this.state.doc.length) ? (this.takeTree(), !0) : this.withContext(() => {
      var r;
      if (typeof e == "number") {
        let i = Date.now() + e;
        e = () => Date.now() > i;
      }
      for (this.parse || (this.parse = this.startParse()), n != null && (this.parse.stoppedAt == null || this.parse.stoppedAt > n) && n < this.state.doc.length && this.parse.stopAt(n); ; ) {
        let i = this.parse.advance();
        if (i)
          if (this.fragments = this.withoutTempSkipped(As.addTree(i, this.fragments, this.parse.stoppedAt != null)), this.treeLen = (r = this.parse.stoppedAt) !== null && r !== void 0 ? r : this.state.doc.length, this.tree = i, this.parse = null, this.treeLen < (n ?? this.state.doc.length))
            this.parse = this.startParse();
          else
            return !0;
        if (e())
          return !1;
      }
    });
  }
  /**
  @internal
  */
  takeTree() {
    let e, n;
    this.parse && (e = this.parse.parsedPos) >= this.treeLen && ((this.parse.stoppedAt == null || this.parse.stoppedAt > e) && this.parse.stopAt(e), this.withContext(() => {
      for (; !(n = this.parse.advance()); )
        ;
    }), this.treeLen = e, this.tree = n, this.fragments = this.withoutTempSkipped(As.addTree(this.tree, this.fragments, !0)), this.parse = null);
  }
  withContext(e) {
    let n = no;
    no = this;
    try {
      return e();
    } finally {
      no = n;
    }
  }
  withoutTempSkipped(e) {
    for (let n; n = this.tempSkipped.pop(); )
      e = k0(e, n.from, n.to);
    return e;
  }
  /**
  @internal
  */
  changes(e, n) {
    let { fragments: r, tree: i, treeLen: s, viewport: a, skipped: o } = this;
    if (this.takeTree(), !e.empty) {
      let l = [];
      if (e.iterChangedRanges((c, h, f, m) => l.push({ fromA: c, toA: h, fromB: f, toB: m })), r = As.applyChanges(r, l), i = on.empty, s = 0, a = { from: e.mapPos(a.from, -1), to: e.mapPos(a.to, 1) }, this.skipped.length) {
        o = [];
        for (let c of this.skipped) {
          let h = e.mapPos(c.from, 1), f = e.mapPos(c.to, -1);
          h < f && o.push({ from: h, to: f });
        }
      }
    }
    return new Qu(this.parser, n, r, i, s, a, o, this.scheduleOn);
  }
  /**
  @internal
  */
  updateViewport(e) {
    if (this.viewport.from == e.from && this.viewport.to == e.to)
      return !1;
    this.viewport = e;
    let n = this.skipped.length;
    for (let r = 0; r < this.skipped.length; r++) {
      let { from: i, to: s } = this.skipped[r];
      i < e.to && s > e.from && (this.fragments = k0(this.fragments, i, s), this.skipped.splice(r--, 1));
    }
    return this.skipped.length >= n ? !1 : (this.reset(), !0);
  }
  /**
  @internal
  */
  reset() {
    this.parse && (this.takeTree(), this.parse = null);
  }
  /**
  Notify the parse scheduler that the given region was skipped
  because it wasn't in view, and the parse should be restarted
  when it comes into view.
  */
  skipUntilInView(e, n) {
    this.skipped.push({ from: e, to: n });
  }
  /**
  Returns a parser intended to be used as placeholder when
  asynchronously loading a nested parser. It'll skip its input and
  mark it as not-really-parsed, so that the next update will parse
  it again.
  
  When `until` is given, a reparse will be scheduled when that
  promise resolves.
  */
  static getSkippingParser(e) {
    return new class extends zC {
      createParse(n, r, i) {
        let s = i[0].from, a = i[i.length - 1].to;
        return {
          parsedPos: s,
          advance() {
            let l = no;
            if (l) {
              for (let c of i)
                l.tempSkipped.push(c);
              e && (l.scheduleOn = l.scheduleOn ? Promise.all([l.scheduleOn, e]) : e);
            }
            return this.parsedPos = a, new on(Hn.none, [], [], a - s);
          },
          stoppedAt: null,
          stopAt() {
          }
        };
      }
    }();
  }
  /**
  @internal
  */
  isDone(e) {
    e = Math.min(e, this.state.doc.length);
    let n = this.fragments;
    return this.treeLen >= e && n.length && n[0].from == 0 && n[0].to >= e;
  }
  /**
  Get the context for the current parse, or `null` if no editor
  parse is in progress.
  */
  static get() {
    return no;
  }
}
function k0(t, e, n) {
  return As.applyChanges(t, [{ fromA: e, toA: n, fromB: e, toB: n }]);
}
class wa {
  constructor(e) {
    this.context = e, this.tree = e.tree;
  }
  apply(e) {
    if (!e.docChanged && this.tree == this.context.tree)
      return this;
    let n = this.context.changes(e.changes, e.state), r = this.context.treeLen == e.startState.doc.length ? void 0 : Math.max(e.changes.mapPos(this.context.treeLen), n.viewport.to);
    return n.work(20, r) || n.takeTree(), new wa(n);
  }
  static init(e) {
    let n = Math.min(3e3, e.doc.length), r = Qu.create(e.facet(Ca).parser, e, { from: 0, to: n });
    return r.work(20, n) || r.takeTree(), new wa(r);
  }
}
Cr.state = /* @__PURE__ */ Vt.define({
  create: wa.init,
  update(t, e) {
    for (let n of e.effects)
      if (n.is(Cr.setState))
        return n.value;
    return e.startState.facet(Ca) != e.state.facet(Ca) ? wa.init(e.state) : t.apply(e);
  }
});
let tS = (t) => {
  let e = setTimeout(
    () => t(),
    500
    /* Work.MaxPause */
  );
  return () => clearTimeout(e);
};
typeof requestIdleCallback < "u" && (tS = (t) => {
  let e = -1, n = setTimeout(
    () => {
      e = requestIdleCallback(t, {
        timeout: 400
        /* Work.MinPause */
      });
    },
    100
    /* Work.MinPause */
  );
  return () => e < 0 ? clearTimeout(n) : cancelIdleCallback(e);
});
const Gh = typeof navigator < "u" && (!((Uh = navigator.scheduling) === null || Uh === void 0) && Uh.isInputPending) ? () => navigator.scheduling.isInputPending() : null, yM = /* @__PURE__ */ fn.fromClass(class {
  constructor(e) {
    this.view = e, this.working = null, this.workScheduled = 0, this.chunkEnd = -1, this.chunkBudget = -1, this.work = this.work.bind(this), this.scheduleWork();
  }
  update(e) {
    let n = this.view.state.field(Cr.state).context;
    (n.updateViewport(e.view.viewport) || this.view.viewport.to > n.treeLen) && this.scheduleWork(), (e.docChanged || e.selectionSet) && (this.view.hasFocus && (this.chunkBudget += 50), this.scheduleWork()), this.checkAsyncSchedule(n);
  }
  scheduleWork() {
    if (this.working)
      return;
    let { state: e } = this.view, n = e.field(Cr.state);
    (n.tree != n.context.tree || !n.context.isDone(e.doc.length)) && (this.working = tS(this.work));
  }
  work(e) {
    this.working = null;
    let n = Date.now();
    if (this.chunkEnd < n && (this.chunkEnd < 0 || this.view.hasFocus) && (this.chunkEnd = n + 3e4, this.chunkBudget = 3e3), this.chunkBudget <= 0)
      return;
    let { state: r, viewport: { to: i } } = this.view, s = r.field(Cr.state);
    if (s.tree == s.context.tree && s.context.isDone(
      i + 1e5
      /* Work.MaxParseAhead */
    ))
      return;
    let a = Date.now() + Math.min(this.chunkBudget, 100, e && !Gh ? Math.max(25, e.timeRemaining() - 5) : 1e9), o = s.context.treeLen < i && r.doc.length > i + 1e3, l = s.context.work(() => Gh && Gh() || Date.now() > a, i + (o ? 0 : 1e5));
    this.chunkBudget -= Date.now() - n, (l || this.chunkBudget <= 0) && (s.context.takeTree(), this.view.dispatch({ effects: Cr.setState.of(new wa(s.context)) })), this.chunkBudget > 0 && !(l && !o) && this.scheduleWork(), this.checkAsyncSchedule(s.context);
  }
  checkAsyncSchedule(e) {
    e.scheduleOn && (this.workScheduled++, e.scheduleOn.then(() => this.scheduleWork()).catch((n) => Wn(this.view.state, n)).then(() => this.workScheduled--), e.scheduleOn = null);
  }
  destroy() {
    this.working && this.working();
  }
  isWorking() {
    return !!(this.working || this.workScheduled > 0);
  }
}, {
  eventHandlers: { focus() {
    this.scheduleWork();
  } }
}), Ca = /* @__PURE__ */ Ae.define({
  combine(t) {
    return t.length ? t[0] : null;
  },
  enables: (t) => [
    Cr.state,
    yM,
    be.contentAttributes.compute([t], (e) => {
      let n = e.facet(t);
      return n && n.name ? { "data-language": n.name } : {};
    })
  ]
});
class OM {
  /**
  Create a language support object.
  */
  constructor(e, n = []) {
    this.language = e, this.support = n, this.extension = [e, n];
  }
}
const vM = /* @__PURE__ */ Ae.define(), Sa = /* @__PURE__ */ Ae.define({
  combine: (t) => {
    if (!t.length)
      return "  ";
    let e = t[0];
    if (!e || /\S/.test(e) || Array.from(e).some((n) => n != e[0]))
      throw new Error("Invalid indent unit: " + JSON.stringify(t[0]));
    return e;
  }
});
function Tu(t) {
  let e = t.facet(Sa);
  return e.charCodeAt(0) == 9 ? t.tabSize * e.length : e.length;
}
function ju(t, e) {
  let n = "", r = t.tabSize, i = t.facet(Sa)[0];
  if (i == "	") {
    for (; e >= r; )
      n += "	", e -= r;
    i = " ";
  }
  for (let s = 0; s < e; s++)
    n += i;
  return n;
}
function nS(t, e) {
  t instanceof dt && (t = new Qc(t));
  for (let r of t.state.facet(vM)) {
    let i = r(t, e);
    if (i !== void 0)
      return i;
  }
  let n = Sn(t.state);
  return n.length >= e ? xM(t, n, e) : null;
}
class Qc {
  /**
  Create an indent context.
  */
  constructor(e, n = {}) {
    this.state = e, this.options = n, this.unit = Tu(e);
  }
  /**
  Get a description of the line at the given position, taking
  [simulated line
  breaks](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)
  into account. If there is such a break at `pos`, the `bias`
  argument determines whether the part of the line line before or
  after the break is used.
  */
  lineAt(e, n = 1) {
    let r = this.state.doc.lineAt(e), { simulateBreak: i, simulateDoubleBreak: s } = this.options;
    return i != null && i >= r.from && i <= r.to ? s && i == e ? { text: "", from: e } : (n < 0 ? i < e : i <= e) ? { text: r.text.slice(i - r.from), from: i } : { text: r.text.slice(0, i - r.from), from: r.from } : r;
  }
  /**
  Get the text directly after `pos`, either the entire line
  or the next 100 characters, whichever is shorter.
  */
  textAfterPos(e, n = 1) {
    if (this.options.simulateDoubleBreak && e == this.options.simulateBreak)
      return "";
    let { text: r, from: i } = this.lineAt(e, n);
    return r.slice(e - i, Math.min(r.length, e + 100 - i));
  }
  /**
  Find the column for the given position.
  */
  column(e, n = 1) {
    let { text: r, from: i } = this.lineAt(e, n), s = this.countColumn(r, e - i), a = this.options.overrideIndentation ? this.options.overrideIndentation(i) : -1;
    return a > -1 && (s += a - this.countColumn(r, r.search(/\S|$/))), s;
  }
  /**
  Find the column position (taking tabs into account) of the given
  position in the given string.
  */
  countColumn(e, n = e.length) {
    return Pc(e, this.state.tabSize, n);
  }
  /**
  Find the indentation column of the line at the given point.
  */
  lineIndent(e, n = 1) {
    let { text: r, from: i } = this.lineAt(e, n), s = this.options.overrideIndentation;
    if (s) {
      let a = s(i);
      if (a > -1)
        return a;
    }
    return this.countColumn(r, r.search(/\S|$/));
  }
  /**
  Returns the [simulated line
  break](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)
  for this context, if any.
  */
  get simulatedBreak() {
    return this.options.simulateBreak || null;
  }
}
const rS = /* @__PURE__ */ new nt();
function xM(t, e, n) {
  let r = e.resolveStack(n), i = e.resolveInner(n, -1).resolve(n, 0).enterUnfinishedNodesBefore(n);
  if (i != r.node) {
    let s = [];
    for (let a = i; a && !(a.from == r.node.from && a.type == r.node.type); a = a.parent)
      s.push(a);
    for (let a = s.length - 1; a >= 0; a--)
      r = { node: s[a], next: r };
  }
  return iS(r, t, n);
}
function iS(t, e, n) {
  for (let r = t; r; r = r.next) {
    let i = wM(r.node);
    if (i)
      return i(Kd.create(e, n, r));
  }
  return 0;
}
function kM(t) {
  return t.pos == t.options.simulateBreak && t.options.simulateDoubleBreak;
}
function wM(t) {
  let e = t.type.prop(rS);
  if (e)
    return e;
  let n = t.firstChild, r;
  if (n && (r = n.type.prop(nt.closedBy))) {
    let i = t.lastChild, s = i && r.indexOf(i.name) > -1;
    return (a) => sS(a, !0, 1, void 0, s && !kM(a) ? i.from : void 0);
  }
  return t.parent == null ? CM : null;
}
function CM() {
  return 0;
}
class Kd extends Qc {
  constructor(e, n, r) {
    super(e.state, e.options), this.base = e, this.pos = n, this.context = r;
  }
  /**
  The syntax tree node to which the indentation strategy
  applies.
  */
  get node() {
    return this.context.node;
  }
  /**
  @internal
  */
  static create(e, n, r) {
    return new Kd(e, n, r);
  }
  /**
  Get the text directly after `this.pos`, either the entire line
  or the next 100 characters, whichever is shorter.
  */
  get textAfter() {
    return this.textAfterPos(this.pos);
  }
  /**
  Get the indentation at the reference line for `this.node`, which
  is the line on which it starts, unless there is a node that is
  _not_ a parent of this node covering the start of that line. If
  so, the line at the start of that node is tried, again skipping
  on if it is covered by another such node.
  */
  get baseIndent() {
    return this.baseIndentFor(this.node);
  }
  /**
  Get the indentation for the reference line of the given node
  (see [`baseIndent`](https://codemirror.net/6/docs/ref/#language.TreeIndentContext.baseIndent)).
  */
  baseIndentFor(e) {
    let n = this.state.doc.lineAt(e.from);
    for (; ; ) {
      let r = e.resolve(n.from);
      for (; r.parent && r.parent.from == r.from; )
        r = r.parent;
      if (SM(r, e))
        break;
      n = this.state.doc.lineAt(r.from);
    }
    return this.lineIndent(n.from);
  }
  /**
  Continue looking for indentations in the node's parent nodes,
  and return the result of that.
  */
  continue() {
    return iS(this.context.next, this.base, this.pos);
  }
}
function SM(t, e) {
  for (let n = e; n; n = n.parent)
    if (t == n)
      return !0;
  return !1;
}
function AM(t) {
  let e = t.node, n = e.childAfter(e.from), r = e.lastChild;
  if (!n)
    return null;
  let i = t.options.simulateBreak, s = t.state.doc.lineAt(n.from), a = i == null || i <= s.from ? s.to : Math.min(s.to, i);
  for (let o = n.to; ; ) {
    let l = e.childAfter(o);
    if (!l || l == r)
      return null;
    if (!l.type.isSkipped) {
      if (l.from >= a)
        return null;
      let c = /^ */.exec(s.text.slice(n.to - s.from))[0].length;
      return { from: n.from, to: n.to + c };
    }
    o = l.to;
  }
}
function DM({ closing: t, align: e = !0, units: n = 1 }) {
  return (r) => sS(r, e, n, t);
}
function sS(t, e, n, r, i) {
  let s = t.textAfter, a = s.match(/^\s*/)[0].length, o = r && s.slice(a, a + r.length) == r || i == t.pos + a, l = e ? AM(t) : null;
  return l ? o ? t.column(l.from) : t.column(l.to) : t.baseIndent + (o ? 0 : t.unit * n);
}
const PM = (t) => t.baseIndent;
function zh({ except: t, units: e = 1 } = {}) {
  return (n) => {
    let r = t && t.test(n.textAfter);
    return n.baseIndent + (r ? 0 : e * n.unit);
  };
}
const EM = /* @__PURE__ */ Ae.define(), aS = /* @__PURE__ */ new nt();
function FM(t) {
  let e = t.firstChild, n = t.lastChild;
  return e && e.to < n.from ? { from: e.to, to: n.type.isError ? t.to : n.from } : null;
}
function BM(t, e, n) {
  let r = Sn(t);
  if (r.length < n)
    return null;
  let i = r.resolveStack(n, 1), s = null;
  for (let a = i; a; a = a.next) {
    let o = a.node;
    if (o.to <= n || o.from > n)
      continue;
    if (s && o.from < e)
      break;
    let l = o.type.prop(aS);
    if (l && (o.to < r.length - 50 || r.length == t.doc.length || !MM(o))) {
      let c = l(o, t);
      c && c.from <= n && c.from >= e && c.to > n && (s = c);
    }
  }
  return s;
}
function MM(t) {
  let e = t.lastChild;
  return e && e.to == t.to && e.type.isError;
}
function oS(t, e, n) {
  for (let r of t.facet(EM)) {
    let i = r(t, e, n);
    if (i)
      return i;
  }
  return BM(t, e, n);
}
function lS(t, e) {
  let n = e.mapPos(t.from, 1), r = e.mapPos(t.to, -1);
  return n >= r ? void 0 : { from: n, to: r };
}
const Jd = /* @__PURE__ */ Ie.define({ map: lS }), Tc = /* @__PURE__ */ Ie.define({ map: lS });
function uS(t) {
  let e = [];
  for (let { head: n } of t.state.selection.ranges)
    e.some((r) => r.from <= n && r.to >= n) || e.push(t.lineBlockAt(n));
  return e;
}
const Ho = /* @__PURE__ */ Vt.define({
  create() {
    return Te.none;
  },
  update(t, e) {
    t = t.map(e.changes);
    for (let n of e.effects)
      if (n.is(Jd) && !QM(t, n.value.from, n.value.to)) {
        let { preparePlaceholder: r } = e.state.facet(dS), i = r ? Te.replace({ widget: new ZM(r(e.state, n.value)) }) : w0;
        t = t.update({ add: [i.range(n.value.from, n.value.to)] });
      } else n.is(Tc) && (t = t.update({
        filter: (r, i) => n.value.from != r || n.value.to != i,
        filterFrom: n.value.from,
        filterTo: n.value.to
      }));
    if (e.selection) {
      let n = !1, { head: r } = e.selection.main;
      t.between(r, r, (i, s) => {
        i < r && s > r && (n = !0);
      }), n && (t = t.update({
        filterFrom: r,
        filterTo: r,
        filter: (i, s) => s <= r || i >= r
      }));
    }
    return t;
  },
  provide: (t) => be.decorations.from(t),
  toJSON(t, e) {
    let n = [];
    return t.between(0, e.doc.length, (r, i) => {
      n.push(r, i);
    }), n;
  },
  fromJSON(t) {
    if (!Array.isArray(t) || t.length % 2)
      throw new RangeError("Invalid JSON for fold state");
    let e = [];
    for (let n = 0; n < t.length; ) {
      let r = t[n++], i = t[n++];
      if (typeof r != "number" || typeof i != "number")
        throw new RangeError("Invalid JSON for fold state");
      e.push(w0.range(r, i));
    }
    return Te.set(e, !0);
  }
});
function cS(t, e, n) {
  var r;
  let i = null;
  return (r = t.field(Ho, !1)) === null || r === void 0 || r.between(e, n, (s, a) => {
    (!i || i.from > s) && (i = { from: s, to: a });
  }), i;
}
function QM(t, e, n) {
  let r = !1;
  return t.between(e, e, (i, s) => {
    i == e && s == n && (r = !0);
  }), r;
}
function hS(t, e) {
  return t.field(Ho, !1) ? e : e.concat(Ie.appendConfig.of($M()));
}
const pS = (t) => {
  for (let e of uS(t)) {
    let n = oS(t.state, e.from, e.to);
    if (n)
      return t.dispatch({ effects: hS(t.state, [Jd.of(n), fS(t, n)]) }), !0;
  }
  return !1;
}, TM = (t) => {
  if (!t.state.field(Ho, !1))
    return !1;
  let e = [];
  for (let n of uS(t)) {
    let r = cS(t.state, n.from, n.to);
    r && e.push(Tc.of(r), fS(t, r, !1));
  }
  return e.length && t.dispatch({ effects: e }), e.length > 0;
};
function fS(t, e, n = !0) {
  let r = t.state.doc.lineAt(e.from).number, i = t.state.doc.lineAt(e.to).number;
  return be.announce.of(`${t.state.phrase(n ? "Folded lines" : "Unfolded lines")} ${r} ${t.state.phrase("to")} ${i}.`);
}
const jM = (t) => {
  let { state: e } = t, n = [];
  for (let r = 0; r < e.doc.length; ) {
    let i = t.lineBlockAt(r), s = oS(e, i.from, i.to);
    s && n.push(Jd.of(s)), r = (s ? t.lineBlockAt(s.to) : i).to + 1;
  }
  return n.length && t.dispatch({ effects: hS(t.state, n) }), !!n.length;
}, _M = (t) => {
  let e = t.state.field(Ho, !1);
  if (!e || !e.size)
    return !1;
  let n = [];
  return e.between(0, t.state.doc.length, (r, i) => {
    n.push(Tc.of({ from: r, to: i }));
  }), t.dispatch({ effects: n }), !0;
}, RM = {
  placeholderDOM: null,
  preparePlaceholder: null,
  placeholderText: "…"
}, dS = /* @__PURE__ */ Ae.define({
  combine(t) {
    return os(t, RM);
  }
});
function $M(t) {
  return [Ho, LM];
}
function mS(t, e) {
  let { state: n } = t, r = n.facet(dS), i = (a) => {
    let o = t.lineBlockAt(t.posAtDOM(a.target)), l = cS(t.state, o.from, o.to);
    l && t.dispatch({ effects: Tc.of(l) }), a.preventDefault();
  };
  if (r.placeholderDOM)
    return r.placeholderDOM(t, i, e);
  let s = document.createElement("span");
  return s.textContent = r.placeholderText, s.setAttribute("aria-label", n.phrase("folded code")), s.title = n.phrase("unfold"), s.className = "cm-foldPlaceholder", s.onclick = i, s;
}
const w0 = /* @__PURE__ */ Te.replace({ widget: /* @__PURE__ */ new class extends Ri {
  toDOM(t) {
    return mS(t, null);
  }
}() });
class ZM extends Ri {
  constructor(e) {
    super(), this.value = e;
  }
  eq(e) {
    return this.value == e.value;
  }
  toDOM(e) {
    return mS(e, this.value);
  }
}
const LM = /* @__PURE__ */ be.baseTheme({
  ".cm-foldPlaceholder": {
    backgroundColor: "#eee",
    border: "1px solid #ddd",
    color: "#888",
    borderRadius: ".2em",
    margin: "0 1px",
    padding: "0 1px",
    cursor: "pointer"
  },
  ".cm-foldGutter span": {
    padding: "0 1px",
    cursor: "pointer"
  }
});
class Yo {
  constructor(e, n) {
    this.specs = e;
    let r;
    function i(o) {
      let l = Ki.newName();
      return (r || (r = /* @__PURE__ */ Object.create(null)))["." + l] = o, l;
    }
    const s = typeof n.all == "string" ? n.all : n.all ? i(n.all) : void 0, a = n.scope;
    this.scope = a instanceof Cr ? (o) => o.prop(Ks) == a.data : a ? (o) => o == a : void 0, this.style = KC(e.map((o) => ({
      tag: o.tag,
      class: o.class || i(Object.assign({}, o, { tag: null }))
    })), {
      all: s
    }).style, this.module = r ? new Ki(r) : null, this.themeType = n.themeType;
  }
  /**
  Create a highlighter style that associates the given styles to
  the given tags. The specs must be objects that hold a style tag
  or array of tags in their `tag` property, and either a single
  `class` property providing a static CSS class (for highlighter
  that rely on external styling), or a
  [`style-mod`](https://github.com/marijnh/style-mod#documentation)-style
  set of CSS properties (which define the styling for those tags).
  
  The CSS rules created for a highlighter will be emitted in the
  order of the spec's properties. That means that for elements that
  have multiple tags associated with them, styles defined further
  down in the list will have a higher CSS precedence than styles
  defined earlier.
  */
  static define(e, n) {
    return new Yo(e, n || {});
  }
}
const pf = /* @__PURE__ */ Ae.define(), IM = /* @__PURE__ */ Ae.define({
  combine(t) {
    return t.length ? [t[0]] : null;
  }
});
function Hh(t) {
  let e = t.facet(pf);
  return e.length ? e : t.facet(IM);
}
function gS(t, e) {
  let n = [VM], r;
  return t instanceof Yo && (t.module && n.push(be.styleModule.of(t.module)), r = t.themeType), r ? n.push(pf.computeN([be.darkTheme], (i) => i.facet(be.darkTheme) == (r == "dark") ? [t] : [])) : n.push(pf.of(t)), n;
}
class NM {
  constructor(e) {
    this.markCache = /* @__PURE__ */ Object.create(null), this.tree = Sn(e.state), this.decorations = this.buildDeco(e, Hh(e.state)), this.decoratedTo = e.viewport.to;
  }
  update(e) {
    let n = Sn(e.state), r = Hh(e.state), i = r != Hh(e.startState), { viewport: s } = e.view, a = e.changes.mapPos(this.decoratedTo, 1);
    n.length < s.to && !i && n.type == this.tree.type && a >= s.to ? (this.decorations = this.decorations.map(e.changes), this.decoratedTo = a) : (n != this.tree || e.viewportChanged || i) && (this.tree = n, this.decorations = this.buildDeco(e.view, r), this.decoratedTo = s.to);
  }
  buildDeco(e, n) {
    if (!n || !this.tree.length)
      return Te.none;
    let r = new Mi();
    for (let { from: i, to: s } of e.visibleRanges)
      dM(this.tree, n, (a, o, l) => {
        r.add(a, o, this.markCache[l] || (this.markCache[l] = Te.mark({ class: l })));
      }, i, s);
    return r.finish();
  }
}
const VM = /* @__PURE__ */ Tr.high(/* @__PURE__ */ fn.fromClass(NM, {
  decorations: (t) => t.decorations
})), XM = /* @__PURE__ */ Yo.define([
  {
    tag: u.meta,
    color: "#404740"
  },
  {
    tag: u.link,
    textDecoration: "underline"
  },
  {
    tag: u.heading,
    textDecoration: "underline",
    fontWeight: "bold"
  },
  {
    tag: u.emphasis,
    fontStyle: "italic"
  },
  {
    tag: u.strong,
    fontWeight: "bold"
  },
  {
    tag: u.strikethrough,
    textDecoration: "line-through"
  },
  {
    tag: u.keyword,
    color: "#708"
  },
  {
    tag: [u.atom, u.bool, u.url, u.contentSeparator, u.labelName],
    color: "#219"
  },
  {
    tag: [u.literal, u.inserted],
    color: "#164"
  },
  {
    tag: [u.string, u.deleted],
    color: "#a11"
  },
  {
    tag: [u.regexp, u.escape, /* @__PURE__ */ u.special(u.string)],
    color: "#e40"
  },
  {
    tag: /* @__PURE__ */ u.definition(u.variableName),
    color: "#00f"
  },
  {
    tag: /* @__PURE__ */ u.local(u.variableName),
    color: "#30a"
  },
  {
    tag: [u.typeName, u.namespace],
    color: "#085"
  },
  {
    tag: u.className,
    color: "#167"
  },
  {
    tag: [/* @__PURE__ */ u.special(u.variableName), u.macroName],
    color: "#256"
  },
  {
    tag: /* @__PURE__ */ u.definition(u.propertyName),
    color: "#00c"
  },
  {
    tag: u.comment,
    color: "#940"
  },
  {
    tag: u.invalid,
    color: "#f00"
  }
]), WM = /* @__PURE__ */ be.baseTheme({
  "&.cm-focused .cm-matchingBracket": { backgroundColor: "#328c8252" },
  "&.cm-focused .cm-nonmatchingBracket": { backgroundColor: "#bb555544" }
}), bS = 1e4, yS = "()[]{}", OS = /* @__PURE__ */ Ae.define({
  combine(t) {
    return os(t, {
      afterCursor: !0,
      brackets: yS,
      maxScanDistance: bS,
      renderMatch: GM
    });
  }
}), qM = /* @__PURE__ */ Te.mark({ class: "cm-matchingBracket" }), UM = /* @__PURE__ */ Te.mark({ class: "cm-nonmatchingBracket" });
function GM(t) {
  let e = [], n = t.matched ? qM : UM;
  return e.push(n.range(t.start.from, t.start.to)), t.end && e.push(n.range(t.end.from, t.end.to)), e;
}
const zM = /* @__PURE__ */ Vt.define({
  create() {
    return Te.none;
  },
  update(t, e) {
    if (!e.docChanged && !e.selection)
      return t;
    let n = [], r = e.state.facet(OS);
    for (let i of e.state.selection.ranges) {
      if (!i.empty)
        continue;
      let s = Sr(e.state, i.head, -1, r) || i.head > 0 && Sr(e.state, i.head - 1, 1, r) || r.afterCursor && (Sr(e.state, i.head, 1, r) || i.head < e.state.doc.length && Sr(e.state, i.head + 1, -1, r));
      s && (n = n.concat(r.renderMatch(s, e.state)));
    }
    return Te.set(n, !0);
  },
  provide: (t) => be.decorations.from(t)
}), HM = [
  zM,
  WM
];
function YM(t = {}) {
  return [OS.of(t), HM];
}
const KM = /* @__PURE__ */ new nt();
function ff(t, e, n) {
  let r = t.prop(e < 0 ? nt.openedBy : nt.closedBy);
  if (r)
    return r;
  if (t.name.length == 1) {
    let i = n.indexOf(t.name);
    if (i > -1 && i % 2 == (e < 0 ? 1 : 0))
      return [n[i + e]];
  }
  return null;
}
function df(t) {
  let e = t.type.prop(KM);
  return e ? e(t.node) : t;
}
function Sr(t, e, n, r = {}) {
  let i = r.maxScanDistance || bS, s = r.brackets || yS, a = Sn(t), o = a.resolveInner(e, n);
  for (let l = o; l; l = l.parent) {
    let c = ff(l.type, n, s);
    if (c && l.from < l.to) {
      let h = df(l);
      if (h && (n > 0 ? e >= h.from && e < h.to : e > h.from && e <= h.to))
        return JM(t, e, n, l, h, c, s);
    }
  }
  return e7(t, e, n, a, o.type, i, s);
}
function JM(t, e, n, r, i, s, a) {
  let o = r.parent, l = { from: i.from, to: i.to }, c = 0, h = o?.cursor();
  if (h && (n < 0 ? h.childBefore(r.from) : h.childAfter(r.to)))
    do
      if (n < 0 ? h.to <= r.from : h.from >= r.to) {
        if (c == 0 && s.indexOf(h.type.name) > -1 && h.from < h.to) {
          let f = df(h);
          return { start: l, end: f ? { from: f.from, to: f.to } : void 0, matched: !0 };
        } else if (ff(h.type, n, a))
          c++;
        else if (ff(h.type, -n, a)) {
          if (c == 0) {
            let f = df(h);
            return {
              start: l,
              end: f && f.from < f.to ? { from: f.from, to: f.to } : void 0,
              matched: !1
            };
          }
          c--;
        }
      }
    while (n < 0 ? h.prevSibling() : h.nextSibling());
  return { start: l, matched: !1 };
}
function e7(t, e, n, r, i, s, a) {
  let o = n < 0 ? t.sliceDoc(e - 1, e) : t.sliceDoc(e, e + 1), l = a.indexOf(o);
  if (l < 0 || l % 2 == 0 != n > 0)
    return null;
  let c = { from: n < 0 ? e - 1 : e, to: n > 0 ? e + 1 : e }, h = t.doc.iterRange(e, n > 0 ? t.doc.length : 0), f = 0;
  for (let m = 0; !h.next().done && m <= s; ) {
    let y = h.value;
    n < 0 && (m += y.length);
    let x = e + m * n;
    for (let C = n > 0 ? 0 : y.length - 1, S = n > 0 ? y.length : -1; C != S; C += n) {
      let M = a.indexOf(y[C]);
      if (!(M < 0 || r.resolveInner(x + C, 1).type != i))
        if (M % 2 == 0 == n > 0)
          f++;
        else {
          if (f == 1)
            return { start: c, end: { from: x + C, to: x + C + 1 }, matched: M >> 1 == l >> 1 };
          f--;
        }
    }
    n > 0 && (m += y.length);
  }
  return h.done ? { start: c, matched: !1 } : null;
}
function C0(t, e, n, r = 0, i = 0) {
  e == null && (e = t.search(/[^\s\u00a0]/), e == -1 && (e = t.length));
  let s = i;
  for (let a = r; a < e; a++)
    t.charCodeAt(a) == 9 ? s += n - s % n : s++;
  return s;
}
class t7 {
  /**
  Create a stream.
  */
  constructor(e, n, r, i) {
    this.string = e, this.tabSize = n, this.indentUnit = r, this.overrideIndent = i, this.pos = 0, this.start = 0, this.lastColumnPos = 0, this.lastColumnValue = 0;
  }
  /**
  True if we are at the end of the line.
  */
  eol() {
    return this.pos >= this.string.length;
  }
  /**
  True if we are at the start of the line.
  */
  sol() {
    return this.pos == 0;
  }
  /**
  Get the next code unit after the current position, or undefined
  if we're at the end of the line.
  */
  peek() {
    return this.string.charAt(this.pos) || void 0;
  }
  /**
  Read the next code unit and advance `this.pos`.
  */
  next() {
    if (this.pos < this.string.length)
      return this.string.charAt(this.pos++);
  }
  /**
  Match the next character against the given string, regular
  expression, or predicate. Consume and return it if it matches.
  */
  eat(e) {
    let n = this.string.charAt(this.pos), r;
    if (typeof e == "string" ? r = n == e : r = n && (e instanceof RegExp ? e.test(n) : e(n)), r)
      return ++this.pos, n;
  }
  /**
  Continue matching characters that match the given string,
  regular expression, or predicate function. Return true if any
  characters were consumed.
  */
  eatWhile(e) {
    let n = this.pos;
    for (; this.eat(e); )
      ;
    return this.pos > n;
  }
  /**
  Consume whitespace ahead of `this.pos`. Return true if any was
  found.
  */
  eatSpace() {
    let e = this.pos;
    for (; /[\s\u00a0]/.test(this.string.charAt(this.pos)); )
      ++this.pos;
    return this.pos > e;
  }
  /**
  Move to the end of the line.
  */
  skipToEnd() {
    this.pos = this.string.length;
  }
  /**
  Move to directly before the given character, if found on the
  current line.
  */
  skipTo(e) {
    let n = this.string.indexOf(e, this.pos);
    if (n > -1)
      return this.pos = n, !0;
  }
  /**
  Move back `n` characters.
  */
  backUp(e) {
    this.pos -= e;
  }
  /**
  Get the column position at `this.pos`.
  */
  column() {
    return this.lastColumnPos < this.start && (this.lastColumnValue = C0(this.string, this.start, this.tabSize, this.lastColumnPos, this.lastColumnValue), this.lastColumnPos = this.start), this.lastColumnValue;
  }
  /**
  Get the indentation column of the current line.
  */
  indentation() {
    var e;
    return (e = this.overrideIndent) !== null && e !== void 0 ? e : C0(this.string, null, this.tabSize);
  }
  /**
  Match the input against the given string or regular expression
  (which should start with a `^`). Return true or the regexp match
  if it matches.
  
  Unless `consume` is set to `false`, this will move `this.pos`
  past the matched text.
  
  When matching a string `caseInsensitive` can be set to true to
  make the match case-insensitive.
  */
  match(e, n, r) {
    if (typeof e == "string") {
      let i = (a) => r ? a.toLowerCase() : a, s = this.string.substr(this.pos, e.length);
      return i(s) == i(e) ? (n !== !1 && (this.pos += e.length), !0) : null;
    } else {
      let i = this.string.slice(this.pos).match(e);
      return i && i.index > 0 ? null : (i && n !== !1 && (this.pos += i[0].length), i);
    }
  }
  /**
  Get the current token.
  */
  current() {
    return this.string.slice(this.start, this.pos);
  }
}
const n7 = /* @__PURE__ */ Object.create(null), S0 = [Hn.none], A0 = [], D0 = /* @__PURE__ */ Object.create(null), r7 = /* @__PURE__ */ Object.create(null);
for (let [t, e] of [
  ["variable", "variableName"],
  ["variable-2", "variableName.special"],
  ["string-2", "string.special"],
  ["def", "variableName.definition"],
  ["tag", "tagName"],
  ["attribute", "attributeName"],
  ["type", "typeName"],
  ["builtin", "variableName.standard"],
  ["qualifier", "modifier"],
  ["error", "invalid"],
  ["header", "heading"],
  ["property", "propertyName"]
])
  r7[t] = /* @__PURE__ */ i7(n7, e);
function Yh(t, e) {
  A0.indexOf(t) > -1 || (A0.push(t), console.warn(e));
}
function i7(t, e) {
  let n = [];
  for (let o of e.split(" ")) {
    let l = [];
    for (let c of o.split(".")) {
      let h = t[c] || u[c];
      h ? typeof h == "function" ? l.length ? l = l.map(h) : Yh(c, `Modifier ${c} used at start of tag`) : l.length ? Yh(c, `Tag ${c} used as modifier`) : l = Array.isArray(h) ? h : [h] : Yh(c, `Unknown highlighting tag ${c}`);
    }
    for (let c of l)
      n.push(c);
  }
  if (!n.length)
    return 0;
  let r = e.replace(/ /g, "_"), i = r + " " + n.map((o) => o.id), s = D0[i];
  if (s)
    return s.id;
  let a = D0[i] = Hn.define({
    id: S0.length,
    name: r,
    props: [HC({ [r]: n })]
  });
  return S0.push(a), a.id;
}
Dt.RTL, Dt.LTR;
class vS {
  /**
  Create a new completion context. (Mostly useful for testing
  completion sources—in the editor, the extension will create
  these for you.)
  */
  constructor(e, n, r, i) {
    this.state = e, this.pos = n, this.explicit = r, this.view = i, this.abortListeners = [], this.abortOnDocChange = !1;
  }
  /**
  Get the extent, content, and (if there is a token) type of the
  token before `this.pos`.
  */
  tokenBefore(e) {
    let n = Sn(this.state).resolveInner(this.pos, -1);
    for (; n && e.indexOf(n.name) < 0; )
      n = n.parent;
    return n ? {
      from: n.from,
      to: this.pos,
      text: this.state.sliceDoc(n.from, this.pos),
      type: n.type
    } : null;
  }
  /**
  Get the match of the given expression directly before the
  cursor.
  */
  matchBefore(e) {
    let n = this.state.doc.lineAt(this.pos), r = Math.max(n.from, this.pos - 250), i = n.text.slice(r - n.from, this.pos - n.from), s = i.search(kS(e, !1));
    return s < 0 ? null : { from: r + s, to: this.pos, text: i.slice(s) };
  }
  /**
  Yields true when the query has been aborted. Can be useful in
  asynchronous queries to avoid doing work that will be ignored.
  */
  get aborted() {
    return this.abortListeners == null;
  }
  /**
  Allows you to register abort handlers, which will be called when
  the query is
  [aborted](https://codemirror.net/6/docs/ref/#autocomplete.CompletionContext.aborted).
  
  By default, running queries will not be aborted for regular
  typing or backspacing, on the assumption that they are likely to
  return a result with a
  [`validFor`](https://codemirror.net/6/docs/ref/#autocomplete.CompletionResult.validFor) field that
  allows the result to be used after all. Passing `onDocChange:
  true` will cause this query to be aborted for any document
  change.
  */
  addEventListener(e, n, r) {
    e == "abort" && this.abortListeners && (this.abortListeners.push(n), r && r.onDocChange && (this.abortOnDocChange = !0));
  }
}
function P0(t) {
  let e = Object.keys(t).join(""), n = /\w/.test(e);
  return n && (e = e.replace(/\w/g, "")), `[${n ? "\\w" : ""}${e.replace(/[^\w\s]/g, "\\$&")}]`;
}
function s7(t) {
  let e = /* @__PURE__ */ Object.create(null), n = /* @__PURE__ */ Object.create(null);
  for (let { label: i } of t) {
    e[i[0]] = !0;
    for (let s = 1; s < i.length; s++)
      n[i[s]] = !0;
  }
  let r = P0(e) + P0(n) + "*$";
  return [new RegExp("^" + r), new RegExp(r)];
}
function xS(t) {
  let e = t.map((i) => typeof i == "string" ? { label: i } : i), [n, r] = e.every((i) => /^\w+$/.test(i.label)) ? [/\w*$/, /\w+$/] : s7(e);
  return (i) => {
    let s = i.matchBefore(r);
    return s || i.explicit ? { from: s ? s.from : i.pos, options: e, validFor: n } : null;
  };
}
function a7(t, e) {
  return (n) => {
    for (let r = Sn(n.state).resolveInner(n.pos, -1); r; r = r.parent) {
      if (t.indexOf(r.name) > -1)
        return null;
      if (r.type.isTop)
        break;
    }
    return e(n);
  };
}
class E0 {
  constructor(e, n, r, i) {
    this.completion = e, this.source = n, this.match = r, this.score = i;
  }
}
function Ds(t) {
  return t.selection.main.from;
}
function kS(t, e) {
  var n;
  let { source: r } = t, i = e && r[0] != "^", s = r[r.length - 1] != "$";
  return !i && !s ? t : new RegExp(`${i ? "^" : ""}(?:${r})${s ? "$" : ""}`, (n = t.flags) !== null && n !== void 0 ? n : t.ignoreCase ? "i" : "");
}
const em = /* @__PURE__ */ _i.define();
function o7(t, e, n, r) {
  let { main: i } = t.selection, s = n - i.from, a = r - i.from;
  return Object.assign(Object.assign({}, t.changeByRange((o) => {
    if (o != i && n != r && t.sliceDoc(o.from + s, o.from + a) != t.sliceDoc(n, r))
      return { range: o };
    let l = t.toText(e);
    return {
      changes: { from: o.from + s, to: r == i.from ? o.to : o.from + a, insert: l },
      range: ne.cursor(o.from + s + l.length)
    };
  })), { scrollIntoView: !0, userEvent: "input.complete" });
}
const F0 = /* @__PURE__ */ new WeakMap();
function l7(t) {
  if (!Array.isArray(t))
    return t;
  let e = F0.get(t);
  return e || F0.set(t, e = xS(t)), e;
}
const _u = /* @__PURE__ */ Ie.define(), Bo = /* @__PURE__ */ Ie.define();
class u7 {
  constructor(e) {
    this.pattern = e, this.chars = [], this.folded = [], this.any = [], this.precise = [], this.byWord = [], this.score = 0, this.matched = [];
    for (let n = 0; n < e.length; ) {
      let r = ur(e, n), i = ai(r);
      this.chars.push(r);
      let s = e.slice(n, n + i), a = s.toUpperCase();
      this.folded.push(ur(a == s ? s.toLowerCase() : a, 0)), n += i;
    }
    this.astral = e.length != this.chars.length;
  }
  ret(e, n) {
    return this.score = e, this.matched = n, this;
  }
  // Matches a given word (completion) against the pattern (input).
  // Will return a boolean indicating whether there was a match and,
  // on success, set `this.score` to the score, `this.matched` to an
  // array of `from, to` pairs indicating the matched parts of `word`.
  //
  // The score is a number that is more negative the worse the match
  // is. See `Penalty` above.
  match(e) {
    if (this.pattern.length == 0)
      return this.ret(-100, []);
    if (e.length < this.pattern.length)
      return null;
    let { chars: n, folded: r, any: i, precise: s, byWord: a } = this;
    if (n.length == 1) {
      let Z = ur(e, 0), q = ai(Z), _ = q == e.length ? 0 : -100;
      if (Z != n[0]) if (Z == r[0])
        _ += -200;
      else
        return null;
      return this.ret(_, [0, q]);
    }
    let o = e.indexOf(this.pattern);
    if (o == 0)
      return this.ret(e.length == this.pattern.length ? 0 : -100, [0, this.pattern.length]);
    let l = n.length, c = 0;
    if (o < 0) {
      for (let Z = 0, q = Math.min(e.length, 200); Z < q && c < l; ) {
        let _ = ur(e, Z);
        (_ == n[c] || _ == r[c]) && (i[c++] = Z), Z += ai(_);
      }
      if (c < l)
        return null;
    }
    let h = 0, f = 0, m = !1, y = 0, x = -1, C = -1, S = /[a-z]/.test(e), M = !0;
    for (let Z = 0, q = Math.min(e.length, 200), _ = 0; Z < q && f < l; ) {
      let B = ur(e, Z);
      o < 0 && (h < l && B == n[h] && (s[h++] = Z), y < l && (B == n[y] || B == r[y] ? (y == 0 && (x = Z), C = Z + 1, y++) : y = 0));
      let $, N = B < 255 ? B >= 48 && B <= 57 || B >= 97 && B <= 122 ? 2 : B >= 65 && B <= 90 ? 1 : 0 : ($ = Bd(B)) != $.toLowerCase() ? 1 : $ != $.toUpperCase() ? 2 : 0;
      (!Z || N == 1 && S || _ == 0 && N != 0) && (n[f] == B || r[f] == B && (m = !0) ? a[f++] = Z : a.length && (M = !1)), _ = N, Z += ai(B);
    }
    return f == l && a[0] == 0 && M ? this.result(-100 + (m ? -200 : 0), a, e) : y == l && x == 0 ? this.ret(-200 - e.length + (C == e.length ? 0 : -100), [0, C]) : o > -1 ? this.ret(-700 - e.length, [o, o + this.pattern.length]) : y == l ? this.ret(-900 - e.length, [x, C]) : f == l ? this.result(-100 + (m ? -200 : 0) + -700 + (M ? 0 : -1100), a, e) : n.length == 2 ? null : this.result((i[0] ? -700 : 0) + -200 + -1100, i, e);
  }
  result(e, n, r) {
    let i = [], s = 0;
    for (let a of n) {
      let o = a + (this.astral ? ai(ur(r, a)) : 1);
      s && i[s - 1] == a ? i[s - 1] = o : (i[s++] = a, i[s++] = o);
    }
    return this.ret(e - r.length, i);
  }
}
class c7 {
  constructor(e) {
    this.pattern = e, this.matched = [], this.score = 0, this.folded = e.toLowerCase();
  }
  match(e) {
    if (e.length < this.pattern.length)
      return null;
    let n = e.slice(0, this.pattern.length), r = n == this.pattern ? 0 : n.toLowerCase() == this.folded ? -200 : null;
    return r == null ? null : (this.matched = [0, n.length], this.score = r + (e.length == this.pattern.length ? 0 : -100), this);
  }
}
const yn = /* @__PURE__ */ Ae.define({
  combine(t) {
    return os(t, {
      activateOnTyping: !0,
      activateOnCompletion: () => !1,
      activateOnTypingDelay: 100,
      selectOnOpen: !0,
      override: null,
      closeOnBlur: !0,
      maxRenderedOptions: 100,
      defaultKeymap: !0,
      tooltipClass: () => "",
      optionClass: () => "",
      aboveCursor: !1,
      icons: !0,
      addToOptions: [],
      positionInfo: h7,
      filterStrict: !1,
      compareCompletions: (e, n) => e.label.localeCompare(n.label),
      interactionDelay: 75,
      updateSyncTime: 100
    }, {
      defaultKeymap: (e, n) => e && n,
      closeOnBlur: (e, n) => e && n,
      icons: (e, n) => e && n,
      tooltipClass: (e, n) => (r) => B0(e(r), n(r)),
      optionClass: (e, n) => (r) => B0(e(r), n(r)),
      addToOptions: (e, n) => e.concat(n),
      filterStrict: (e, n) => e || n
    });
  }
});
function B0(t, e) {
  return t ? e ? t + " " + e : t : e;
}
function h7(t, e, n, r, i, s) {
  let a = t.textDirection == Dt.RTL, o = a, l = !1, c = "top", h, f, m = e.left - i.left, y = i.right - e.right, x = r.right - r.left, C = r.bottom - r.top;
  if (o && m < Math.min(x, y) ? o = !1 : !o && y < Math.min(x, m) && (o = !0), x <= (o ? m : y))
    h = Math.max(i.top, Math.min(n.top, i.bottom - C)) - e.top, f = Math.min(400, o ? m : y);
  else {
    l = !0, f = Math.min(
      400,
      (a ? e.right : i.right - e.left) - 30
      /* Info.Margin */
    );
    let Z = i.bottom - e.bottom;
    Z >= C || Z > e.top ? h = n.bottom - e.top : (c = "bottom", h = e.bottom - n.top);
  }
  let S = (e.bottom - e.top) / s.offsetHeight, M = (e.right - e.left) / s.offsetWidth;
  return {
    style: `${c}: ${h / S}px; max-width: ${f / M}px`,
    class: "cm-completionInfo-" + (l ? a ? "left-narrow" : "right-narrow" : o ? "left" : "right")
  };
}
function p7(t) {
  let e = t.addToOptions.slice();
  return t.icons && e.push({
    render(n) {
      let r = document.createElement("div");
      return r.classList.add("cm-completionIcon"), n.type && r.classList.add(...n.type.split(/\s+/g).map((i) => "cm-completionIcon-" + i)), r.setAttribute("aria-hidden", "true"), r;
    },
    position: 20
  }), e.push({
    render(n, r, i, s) {
      let a = document.createElement("span");
      a.className = "cm-completionLabel";
      let o = n.displayLabel || n.label, l = 0;
      for (let c = 0; c < s.length; ) {
        let h = s[c++], f = s[c++];
        h > l && a.appendChild(document.createTextNode(o.slice(l, h)));
        let m = a.appendChild(document.createElement("span"));
        m.appendChild(document.createTextNode(o.slice(h, f))), m.className = "cm-completionMatchedText", l = f;
      }
      return l < o.length && a.appendChild(document.createTextNode(o.slice(l))), a;
    },
    position: 50
  }, {
    render(n) {
      if (!n.detail)
        return null;
      let r = document.createElement("span");
      return r.className = "cm-completionDetail", r.textContent = n.detail, r;
    },
    position: 80
  }), e.sort((n, r) => n.position - r.position).map((n) => n.render);
}
function Kh(t, e, n) {
  if (t <= n)
    return { from: 0, to: t };
  if (e < 0 && (e = 0), e <= t >> 1) {
    let i = Math.floor(e / n);
    return { from: i * n, to: (i + 1) * n };
  }
  let r = Math.floor((t - e) / n);
  return { from: t - (r + 1) * n, to: t - r * n };
}
class f7 {
  constructor(e, n, r) {
    this.view = e, this.stateField = n, this.applyCompletion = r, this.info = null, this.infoDestroy = null, this.placeInfoReq = {
      read: () => this.measureInfo(),
      write: (l) => this.placeInfo(l),
      key: this
    }, this.space = null, this.currentClass = "";
    let i = e.state.field(n), { options: s, selected: a } = i.open, o = e.state.facet(yn);
    this.optionContent = p7(o), this.optionClass = o.optionClass, this.tooltipClass = o.tooltipClass, this.range = Kh(s.length, a, o.maxRenderedOptions), this.dom = document.createElement("div"), this.dom.className = "cm-tooltip-autocomplete", this.updateTooltipClass(e.state), this.dom.addEventListener("mousedown", (l) => {
      let { options: c } = e.state.field(n).open;
      for (let h = l.target, f; h && h != this.dom; h = h.parentNode)
        if (h.nodeName == "LI" && (f = /-(\d+)$/.exec(h.id)) && +f[1] < c.length) {
          this.applyCompletion(e, c[+f[1]]), l.preventDefault();
          return;
        }
    }), this.dom.addEventListener("focusout", (l) => {
      let c = e.state.field(this.stateField, !1);
      c && c.tooltip && e.state.facet(yn).closeOnBlur && l.relatedTarget != e.contentDOM && e.dispatch({ effects: Bo.of(null) });
    }), this.showOptions(s, i.id);
  }
  mount() {
    this.updateSel();
  }
  showOptions(e, n) {
    this.list && this.list.remove(), this.list = this.dom.appendChild(this.createListBox(e, n, this.range)), this.list.addEventListener("scroll", () => {
      this.info && this.view.requestMeasure(this.placeInfoReq);
    });
  }
  update(e) {
    var n;
    let r = e.state.field(this.stateField), i = e.startState.field(this.stateField);
    if (this.updateTooltipClass(e.state), r != i) {
      let { options: s, selected: a, disabled: o } = r.open;
      (!i.open || i.open.options != s) && (this.range = Kh(s.length, a, e.state.facet(yn).maxRenderedOptions), this.showOptions(s, r.id)), this.updateSel(), o != ((n = i.open) === null || n === void 0 ? void 0 : n.disabled) && this.dom.classList.toggle("cm-tooltip-autocomplete-disabled", !!o);
    }
  }
  updateTooltipClass(e) {
    let n = this.tooltipClass(e);
    if (n != this.currentClass) {
      for (let r of this.currentClass.split(" "))
        r && this.dom.classList.remove(r);
      for (let r of n.split(" "))
        r && this.dom.classList.add(r);
      this.currentClass = n;
    }
  }
  positioned(e) {
    this.space = e, this.info && this.view.requestMeasure(this.placeInfoReq);
  }
  updateSel() {
    let e = this.view.state.field(this.stateField), n = e.open;
    if ((n.selected > -1 && n.selected < this.range.from || n.selected >= this.range.to) && (this.range = Kh(n.options.length, n.selected, this.view.state.facet(yn).maxRenderedOptions), this.showOptions(n.options, e.id)), this.updateSelectedOption(n.selected)) {
      this.destroyInfo();
      let { completion: r } = n.options[n.selected], { info: i } = r;
      if (!i)
        return;
      let s = typeof i == "string" ? document.createTextNode(i) : i(r);
      if (!s)
        return;
      "then" in s ? s.then((a) => {
        a && this.view.state.field(this.stateField, !1) == e && this.addInfoPane(a, r);
      }).catch((a) => Wn(this.view.state, a, "completion info")) : this.addInfoPane(s, r);
    }
  }
  addInfoPane(e, n) {
    this.destroyInfo();
    let r = this.info = document.createElement("div");
    if (r.className = "cm-tooltip cm-completionInfo", e.nodeType != null)
      r.appendChild(e), this.infoDestroy = null;
    else {
      let { dom: i, destroy: s } = e;
      r.appendChild(i), this.infoDestroy = s || null;
    }
    this.dom.appendChild(r), this.view.requestMeasure(this.placeInfoReq);
  }
  updateSelectedOption(e) {
    let n = null;
    for (let r = this.list.firstChild, i = this.range.from; r; r = r.nextSibling, i++)
      r.nodeName != "LI" || !r.id ? i-- : i == e ? r.hasAttribute("aria-selected") || (r.setAttribute("aria-selected", "true"), n = r) : r.hasAttribute("aria-selected") && r.removeAttribute("aria-selected");
    return n && m7(this.list, n), n;
  }
  measureInfo() {
    let e = this.dom.querySelector("[aria-selected]");
    if (!e || !this.info)
      return null;
    let n = this.dom.getBoundingClientRect(), r = this.info.getBoundingClientRect(), i = e.getBoundingClientRect(), s = this.space;
    if (!s) {
      let a = this.dom.ownerDocument.defaultView || window;
      s = { left: 0, top: 0, right: a.innerWidth, bottom: a.innerHeight };
    }
    return i.top > Math.min(s.bottom, n.bottom) - 10 || i.bottom < Math.max(s.top, n.top) + 10 ? null : this.view.state.facet(yn).positionInfo(this.view, n, i, r, s, this.dom);
  }
  placeInfo(e) {
    this.info && (e ? (e.style && (this.info.style.cssText = e.style), this.info.className = "cm-tooltip cm-completionInfo " + (e.class || "")) : this.info.style.cssText = "top: -1e6px");
  }
  createListBox(e, n, r) {
    const i = document.createElement("ul");
    i.id = n, i.setAttribute("role", "listbox"), i.setAttribute("aria-expanded", "true"), i.setAttribute("aria-label", this.view.state.phrase("Completions"));
    let s = null;
    for (let a = r.from; a < r.to; a++) {
      let { completion: o, match: l } = e[a], { section: c } = o;
      if (c) {
        let m = typeof c == "string" ? c : c.name;
        if (m != s && (a > r.from || r.from == 0))
          if (s = m, typeof c != "string" && c.header)
            i.appendChild(c.header(c));
          else {
            let y = i.appendChild(document.createElement("completion-section"));
            y.textContent = m;
          }
      }
      const h = i.appendChild(document.createElement("li"));
      h.id = n + "-" + a, h.setAttribute("role", "option");
      let f = this.optionClass(o);
      f && (h.className = f);
      for (let m of this.optionContent) {
        let y = m(o, this.view.state, this.view, l);
        y && h.appendChild(y);
      }
    }
    return r.from && i.classList.add("cm-completionListIncompleteTop"), r.to < e.length && i.classList.add("cm-completionListIncompleteBottom"), i;
  }
  destroyInfo() {
    this.info && (this.infoDestroy && this.infoDestroy(), this.info.remove(), this.info = null);
  }
  destroy() {
    this.destroyInfo();
  }
}
function d7(t, e) {
  return (n) => new f7(n, t, e);
}
function m7(t, e) {
  let n = t.getBoundingClientRect(), r = e.getBoundingClientRect(), i = n.height / t.offsetHeight;
  r.top < n.top ? t.scrollTop -= (n.top - r.top) / i : r.bottom > n.bottom && (t.scrollTop += (r.bottom - n.bottom) / i);
}
function M0(t) {
  return (t.boost || 0) * 100 + (t.apply ? 10 : 0) + (t.info ? 5 : 0) + (t.type ? 1 : 0);
}
function g7(t, e) {
  let n = [], r = null, i = (c) => {
    n.push(c);
    let { section: h } = c.completion;
    if (h) {
      r || (r = []);
      let f = typeof h == "string" ? h : h.name;
      r.some((m) => m.name == f) || r.push(typeof h == "string" ? { name: f } : h);
    }
  }, s = e.facet(yn);
  for (let c of t)
    if (c.hasResult()) {
      let h = c.result.getMatch;
      if (c.result.filter === !1)
        for (let f of c.result.options)
          i(new E0(f, c.source, h ? h(f) : [], 1e9 - n.length));
      else {
        let f = e.sliceDoc(c.from, c.to), m, y = s.filterStrict ? new c7(f) : new u7(f);
        for (let x of c.result.options)
          if (m = y.match(x.label)) {
            let C = x.displayLabel ? h ? h(x, m.matched) : [] : m.matched;
            i(new E0(x, c.source, C, m.score + (x.boost || 0)));
          }
      }
    }
  if (r) {
    let c = /* @__PURE__ */ Object.create(null), h = 0, f = (m, y) => {
      var x, C;
      return ((x = m.rank) !== null && x !== void 0 ? x : 1e9) - ((C = y.rank) !== null && C !== void 0 ? C : 1e9) || (m.name < y.name ? -1 : 1);
    };
    for (let m of r.sort(f))
      h -= 1e5, c[m.name] = h;
    for (let m of n) {
      let { section: y } = m.completion;
      y && (m.score += c[typeof y == "string" ? y : y.name]);
    }
  }
  let a = [], o = null, l = s.compareCompletions;
  for (let c of n.sort((h, f) => f.score - h.score || l(h.completion, f.completion))) {
    let h = c.completion;
    !o || o.label != h.label || o.detail != h.detail || o.type != null && h.type != null && o.type != h.type || o.apply != h.apply || o.boost != h.boost ? a.push(c) : M0(c.completion) > M0(o) && (a[a.length - 1] = c), o = c.completion;
  }
  return a;
}
class Js {
  constructor(e, n, r, i, s, a) {
    this.options = e, this.attrs = n, this.tooltip = r, this.timestamp = i, this.selected = s, this.disabled = a;
  }
  setSelected(e, n) {
    return e == this.selected || e >= this.options.length ? this : new Js(this.options, Q0(n, e), this.tooltip, this.timestamp, e, this.disabled);
  }
  static build(e, n, r, i, s, a) {
    if (i && !a && e.some((c) => c.isPending))
      return i.setDisabled();
    let o = g7(e, n);
    if (!o.length)
      return i && e.some((c) => c.isPending) ? i.setDisabled() : null;
    let l = n.facet(yn).selectOnOpen ? 0 : -1;
    if (i && i.selected != l && i.selected != -1) {
      let c = i.options[i.selected].completion;
      for (let h = 0; h < o.length; h++)
        if (o[h].completion == c) {
          l = h;
          break;
        }
    }
    return new Js(o, Q0(r, l), {
      pos: e.reduce((c, h) => h.hasResult() ? Math.min(c, h.from) : c, 1e8),
      create: k7,
      above: s.aboveCursor
    }, i ? i.timestamp : Date.now(), l, !1);
  }
  map(e) {
    return new Js(this.options, this.attrs, Object.assign(Object.assign({}, this.tooltip), { pos: e.mapPos(this.tooltip.pos) }), this.timestamp, this.selected, this.disabled);
  }
  setDisabled() {
    return new Js(this.options, this.attrs, this.tooltip, this.timestamp, this.selected, !0);
  }
}
class Ru {
  constructor(e, n, r) {
    this.active = e, this.id = n, this.open = r;
  }
  static start() {
    return new Ru(v7, "cm-ac-" + Math.floor(Math.random() * 2e6).toString(36), null);
  }
  update(e) {
    let { state: n } = e, r = n.facet(yn), s = (r.override || n.languageDataAt("autocomplete", Ds(n)).map(l7)).map((l) => (this.active.find((h) => h.source == l) || new Ar(
      l,
      this.active.some(
        (h) => h.state != 0
        /* State.Inactive */
      ) ? 1 : 0
      /* State.Inactive */
    )).update(e, r));
    s.length == this.active.length && s.every((l, c) => l == this.active[c]) && (s = this.active);
    let a = this.open, o = e.effects.some((l) => l.is(tm));
    a && e.docChanged && (a = a.map(e.changes)), e.selection || s.some((l) => l.hasResult() && e.changes.touchesRange(l.from, l.to)) || !b7(s, this.active) || o ? a = Js.build(s, n, this.id, a, r, o) : a && a.disabled && !s.some((l) => l.isPending) && (a = null), !a && s.every((l) => !l.isPending) && s.some((l) => l.hasResult()) && (s = s.map((l) => l.hasResult() ? new Ar(
      l.source,
      0
      /* State.Inactive */
    ) : l));
    for (let l of e.effects)
      l.is(CS) && (a = a && a.setSelected(l.value, this.id));
    return s == this.active && a == this.open ? this : new Ru(s, this.id, a);
  }
  get tooltip() {
    return this.open ? this.open.tooltip : null;
  }
  get attrs() {
    return this.open ? this.open.attrs : this.active.length ? y7 : O7;
  }
}
function b7(t, e) {
  if (t == e)
    return !0;
  for (let n = 0, r = 0; ; ) {
    for (; n < t.length && !t[n].hasResult(); )
      n++;
    for (; r < e.length && !e[r].hasResult(); )
      r++;
    let i = n == t.length, s = r == e.length;
    if (i || s)
      return i == s;
    if (t[n++].result != e[r++].result)
      return !1;
  }
}
const y7 = {
  "aria-autocomplete": "list"
}, O7 = {};
function Q0(t, e) {
  let n = {
    "aria-autocomplete": "list",
    "aria-haspopup": "listbox",
    "aria-controls": t
  };
  return e > -1 && (n["aria-activedescendant"] = t + "-" + e), n;
}
const v7 = [];
function wS(t, e) {
  if (t.isUserEvent("input.complete")) {
    let r = t.annotation(em);
    if (r && e.activateOnCompletion(r))
      return 12;
  }
  let n = t.isUserEvent("input.type");
  return n && e.activateOnTyping ? 5 : n ? 1 : t.isUserEvent("delete.backward") ? 2 : t.selection ? 8 : t.docChanged ? 16 : 0;
}
class Ar {
  constructor(e, n, r = !1) {
    this.source = e, this.state = n, this.explicit = r;
  }
  hasResult() {
    return !1;
  }
  get isPending() {
    return this.state == 1;
  }
  update(e, n) {
    let r = wS(e, n), i = this;
    (r & 8 || r & 16 && this.touches(e)) && (i = new Ar(
      i.source,
      0
      /* State.Inactive */
    )), r & 4 && i.state == 0 && (i = new Ar(
      this.source,
      1
      /* State.Pending */
    )), i = i.updateFor(e, r);
    for (let s of e.effects)
      if (s.is(_u))
        i = new Ar(i.source, 1, s.value);
      else if (s.is(Bo))
        i = new Ar(
          i.source,
          0
          /* State.Inactive */
        );
      else if (s.is(tm))
        for (let a of s.value)
          a.source == i.source && (i = a);
    return i;
  }
  updateFor(e, n) {
    return this.map(e.changes);
  }
  map(e) {
    return this;
  }
  touches(e) {
    return e.changes.touchesRange(Ds(e.state));
  }
}
class oa extends Ar {
  constructor(e, n, r, i, s, a) {
    super(e, 3, n), this.limit = r, this.result = i, this.from = s, this.to = a;
  }
  hasResult() {
    return !0;
  }
  updateFor(e, n) {
    var r;
    if (!(n & 3))
      return this.map(e.changes);
    let i = this.result;
    i.map && !e.changes.empty && (i = i.map(i, e.changes));
    let s = e.changes.mapPos(this.from), a = e.changes.mapPos(this.to, 1), o = Ds(e.state);
    if (o > a || !i || n & 2 && (Ds(e.startState) == this.from || o < this.limit))
      return new Ar(
        this.source,
        n & 4 ? 1 : 0
        /* State.Inactive */
      );
    let l = e.changes.mapPos(this.limit);
    return x7(i.validFor, e.state, s, a) ? new oa(this.source, this.explicit, l, i, s, a) : i.update && (i = i.update(i, s, a, new vS(e.state, o, !1))) ? new oa(this.source, this.explicit, l, i, i.from, (r = i.to) !== null && r !== void 0 ? r : Ds(e.state)) : new Ar(this.source, 1, this.explicit);
  }
  map(e) {
    return e.empty ? this : (this.result.map ? this.result.map(this.result, e) : this.result) ? new oa(this.source, this.explicit, e.mapPos(this.limit), this.result, e.mapPos(this.from), e.mapPos(this.to, 1)) : new Ar(
      this.source,
      0
      /* State.Inactive */
    );
  }
  touches(e) {
    return e.changes.touchesRange(this.from, this.to);
  }
}
function x7(t, e, n, r) {
  if (!t)
    return !1;
  let i = e.sliceDoc(n, r);
  return typeof t == "function" ? t(i, n, r, e) : kS(t, !0).test(i);
}
const tm = /* @__PURE__ */ Ie.define({
  map(t, e) {
    return t.map((n) => n.map(e));
  }
}), CS = /* @__PURE__ */ Ie.define(), jn = /* @__PURE__ */ Vt.define({
  create() {
    return Ru.start();
  },
  update(t, e) {
    return t.update(e);
  },
  provide: (t) => [
    qd.from(t, (e) => e.tooltip),
    be.contentAttributes.from(t, (e) => e.attrs)
  ]
});
function nm(t, e) {
  const n = e.completion.apply || e.completion.label;
  let r = t.state.field(jn).active.find((i) => i.source == e.source);
  return r instanceof oa ? (typeof n == "string" ? t.dispatch(Object.assign(Object.assign({}, o7(t.state, n, r.from, r.to)), { annotations: em.of(e.completion) })) : n(t, e.completion, r.from, r.to), !0) : !1;
}
const k7 = /* @__PURE__ */ d7(jn, nm);
function Hi(t, e = "option") {
  return (n) => {
    let r = n.state.field(jn, !1);
    if (!r || !r.open || r.open.disabled || Date.now() - r.open.timestamp < n.state.facet(yn).interactionDelay)
      return !1;
    let i = 1, s;
    e == "page" && (s = NC(n, r.open.tooltip)) && (i = Math.max(2, Math.floor(s.dom.offsetHeight / s.dom.querySelector("li").offsetHeight) - 1));
    let { length: a } = r.open.options, o = r.open.selected > -1 ? r.open.selected + i * (t ? 1 : -1) : t ? 0 : a - 1;
    return o < 0 ? o = e == "page" ? 0 : a - 1 : o >= a && (o = e == "page" ? a - 1 : 0), n.dispatch({ effects: CS.of(o) }), !0;
  };
}
const mf = (t) => {
  let e = t.state.field(jn, !1);
  return t.state.readOnly || !e || !e.open || e.open.selected < 0 || e.open.disabled || Date.now() - e.open.timestamp < t.state.facet(yn).interactionDelay ? !1 : nm(t, e.open.options[e.open.selected]);
}, gf = (t) => t.state.field(jn, !1) ? (t.dispatch({ effects: _u.of(!0) }), !0) : !1, SS = (t) => {
  let e = t.state.field(jn, !1);
  return !e || !e.active.some(
    (n) => n.state != 0
    /* State.Inactive */
  ) ? !1 : (t.dispatch({ effects: Bo.of(null) }), !0);
};
class w7 {
  constructor(e, n) {
    this.active = e, this.context = n, this.time = Date.now(), this.updates = [], this.done = void 0;
  }
}
const C7 = 50, S7 = 1e3, A7 = /* @__PURE__ */ fn.fromClass(class {
  constructor(t) {
    this.view = t, this.debounceUpdate = -1, this.running = [], this.debounceAccept = -1, this.pendingStart = !1, this.composing = 0;
    for (let e of t.state.field(jn).active)
      e.isPending && this.startQuery(e);
  }
  update(t) {
    let e = t.state.field(jn), n = t.state.facet(yn);
    if (!t.selectionSet && !t.docChanged && t.startState.field(jn) == e)
      return;
    let r = t.transactions.some((s) => {
      let a = wS(s, n);
      return a & 8 || (s.selection || s.docChanged) && !(a & 3);
    });
    for (let s = 0; s < this.running.length; s++) {
      let a = this.running[s];
      if (r || a.context.abortOnDocChange && t.docChanged || a.updates.length + t.transactions.length > C7 && Date.now() - a.time > S7) {
        for (let o of a.context.abortListeners)
          try {
            o();
          } catch (l) {
            Wn(this.view.state, l);
          }
        a.context.abortListeners = null, this.running.splice(s--, 1);
      } else
        a.updates.push(...t.transactions);
    }
    this.debounceUpdate > -1 && clearTimeout(this.debounceUpdate), t.transactions.some((s) => s.effects.some((a) => a.is(_u))) && (this.pendingStart = !0);
    let i = this.pendingStart ? 50 : n.activateOnTypingDelay;
    if (this.debounceUpdate = e.active.some((s) => s.isPending && !this.running.some((a) => a.active.source == s.source)) ? setTimeout(() => this.startUpdate(), i) : -1, this.composing != 0)
      for (let s of t.transactions)
        s.isUserEvent("input.type") ? this.composing = 2 : this.composing == 2 && s.selection && (this.composing = 3);
  }
  startUpdate() {
    this.debounceUpdate = -1, this.pendingStart = !1;
    let { state: t } = this.view, e = t.field(jn);
    for (let n of e.active)
      n.isPending && !this.running.some((r) => r.active.source == n.source) && this.startQuery(n);
    this.running.length && e.open && e.open.disabled && (this.debounceAccept = setTimeout(() => this.accept(), this.view.state.facet(yn).updateSyncTime));
  }
  startQuery(t) {
    let { state: e } = this.view, n = Ds(e), r = new vS(e, n, t.explicit, this.view), i = new w7(t, r);
    this.running.push(i), Promise.resolve(t.source(r)).then((s) => {
      i.context.aborted || (i.done = s || null, this.scheduleAccept());
    }, (s) => {
      this.view.dispatch({ effects: Bo.of(null) }), Wn(this.view.state, s);
    });
  }
  scheduleAccept() {
    this.running.every((t) => t.done !== void 0) ? this.accept() : this.debounceAccept < 0 && (this.debounceAccept = setTimeout(() => this.accept(), this.view.state.facet(yn).updateSyncTime));
  }
  // For each finished query in this.running, try to create a result
  // or, if appropriate, restart the query.
  accept() {
    var t;
    this.debounceAccept > -1 && clearTimeout(this.debounceAccept), this.debounceAccept = -1;
    let e = [], n = this.view.state.facet(yn), r = this.view.state.field(jn);
    for (let i = 0; i < this.running.length; i++) {
      let s = this.running[i];
      if (s.done === void 0)
        continue;
      if (this.running.splice(i--, 1), s.done) {
        let o = Ds(s.updates.length ? s.updates[0].startState : this.view.state), l = Math.min(o, s.done.from + (s.active.explicit ? 0 : 1)), c = new oa(s.active.source, s.active.explicit, l, s.done, s.done.from, (t = s.done.to) !== null && t !== void 0 ? t : o);
        for (let h of s.updates)
          c = c.update(h, n);
        if (c.hasResult()) {
          e.push(c);
          continue;
        }
      }
      let a = r.active.find((o) => o.source == s.active.source);
      if (a && a.isPending)
        if (s.done == null) {
          let o = new Ar(
            s.active.source,
            0
            /* State.Inactive */
          );
          for (let l of s.updates)
            o = o.update(l, n);
          o.isPending || e.push(o);
        } else
          this.startQuery(a);
    }
    (e.length || r.open && r.open.disabled) && this.view.dispatch({ effects: tm.of(e) });
  }
}, {
  eventHandlers: {
    blur(t) {
      let e = this.view.state.field(jn, !1);
      if (e && e.tooltip && this.view.state.facet(yn).closeOnBlur) {
        let n = e.open && NC(this.view, e.open.tooltip);
        (!n || !n.dom.contains(t.relatedTarget)) && setTimeout(() => this.view.dispatch({ effects: Bo.of(null) }), 10);
      }
    },
    compositionstart() {
      this.composing = 1;
    },
    compositionend() {
      this.composing == 3 && setTimeout(() => this.view.dispatch({ effects: _u.of(!1) }), 20), this.composing = 0;
    }
  }
}), D7 = typeof navigator == "object" && /* @__PURE__ */ /Win/.test(navigator.platform), P7 = /* @__PURE__ */ Tr.highest(/* @__PURE__ */ be.domEventHandlers({
  keydown(t, e) {
    let n = e.state.field(jn, !1);
    if (!n || !n.open || n.open.disabled || n.open.selected < 0 || t.key.length > 1 || t.ctrlKey && !(D7 && t.altKey) || t.metaKey)
      return !1;
    let r = n.open.options[n.open.selected], i = n.active.find((a) => a.source == r.source), s = r.completion.commitCharacters || i.result.commitCharacters;
    return s && s.indexOf(t.key) > -1 && nm(e, r), !1;
  }
})), AS = /* @__PURE__ */ be.baseTheme({
  ".cm-tooltip.cm-tooltip-autocomplete": {
    "& > ul": {
      fontFamily: "monospace",
      whiteSpace: "nowrap",
      overflow: "hidden auto",
      maxWidth_fallback: "700px",
      maxWidth: "min(700px, 95vw)",
      minWidth: "250px",
      maxHeight: "10em",
      height: "100%",
      listStyle: "none",
      margin: 0,
      padding: 0,
      "& > li, & > completion-section": {
        padding: "1px 3px",
        lineHeight: 1.2
      },
      "& > li": {
        overflowX: "hidden",
        textOverflow: "ellipsis",
        cursor: "pointer"
      },
      "& > completion-section": {
        display: "list-item",
        borderBottom: "1px solid silver",
        paddingLeft: "0.5em",
        opacity: 0.7
      }
    }
  },
  "&light .cm-tooltip-autocomplete ul li[aria-selected]": {
    background: "#17c",
    color: "white"
  },
  "&light .cm-tooltip-autocomplete-disabled ul li[aria-selected]": {
    background: "#777"
  },
  "&dark .cm-tooltip-autocomplete ul li[aria-selected]": {
    background: "#347",
    color: "white"
  },
  "&dark .cm-tooltip-autocomplete-disabled ul li[aria-selected]": {
    background: "#444"
  },
  ".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after": {
    content: '"···"',
    opacity: 0.5,
    display: "block",
    textAlign: "center"
  },
  ".cm-tooltip.cm-completionInfo": {
    position: "absolute",
    padding: "3px 9px",
    width: "max-content",
    maxWidth: "400px",
    boxSizing: "border-box",
    whiteSpace: "pre-line"
  },
  ".cm-completionInfo.cm-completionInfo-left": { right: "100%" },
  ".cm-completionInfo.cm-completionInfo-right": { left: "100%" },
  ".cm-completionInfo.cm-completionInfo-left-narrow": { right: "30px" },
  ".cm-completionInfo.cm-completionInfo-right-narrow": { left: "30px" },
  "&light .cm-snippetField": { backgroundColor: "#00000022" },
  "&dark .cm-snippetField": { backgroundColor: "#ffffff22" },
  ".cm-snippetFieldPosition": {
    verticalAlign: "text-top",
    width: 0,
    height: "1.15em",
    display: "inline-block",
    margin: "0 -0.7px -.7em",
    borderLeft: "1.4px dotted #888"
  },
  ".cm-completionMatchedText": {
    textDecoration: "underline"
  },
  ".cm-completionDetail": {
    marginLeft: "0.5em",
    fontStyle: "italic"
  },
  ".cm-completionIcon": {
    fontSize: "90%",
    width: ".8em",
    display: "inline-block",
    textAlign: "center",
    paddingRight: ".6em",
    opacity: "0.6",
    boxSizing: "content-box"
  },
  ".cm-completionIcon-function, .cm-completionIcon-method": {
    "&:after": { content: "'ƒ'" }
  },
  ".cm-completionIcon-class": {
    "&:after": { content: "'○'" }
  },
  ".cm-completionIcon-interface": {
    "&:after": { content: "'◌'" }
  },
  ".cm-completionIcon-variable": {
    "&:after": { content: "'𝑥'" }
  },
  ".cm-completionIcon-constant": {
    "&:after": { content: "'𝐶'" }
  },
  ".cm-completionIcon-type": {
    "&:after": { content: "'𝑡'" }
  },
  ".cm-completionIcon-enum": {
    "&:after": { content: "'∪'" }
  },
  ".cm-completionIcon-property": {
    "&:after": { content: "'□'" }
  },
  ".cm-completionIcon-keyword": {
    "&:after": { content: "'🔑︎'" }
    // Disable emoji rendering
  },
  ".cm-completionIcon-namespace": {
    "&:after": { content: "'▢'" }
  },
  ".cm-completionIcon-text": {
    "&:after": { content: "'abc'", fontSize: "50%", verticalAlign: "middle" }
  }
});
class E7 {
  constructor(e, n, r, i) {
    this.field = e, this.line = n, this.from = r, this.to = i;
  }
}
class rm {
  constructor(e, n, r) {
    this.field = e, this.from = n, this.to = r;
  }
  map(e) {
    let n = e.mapPos(this.from, -1, rn.TrackDel), r = e.mapPos(this.to, 1, rn.TrackDel);
    return n == null || r == null ? null : new rm(this.field, n, r);
  }
}
class im {
  constructor(e, n) {
    this.lines = e, this.fieldPositions = n;
  }
  instantiate(e, n) {
    let r = [], i = [n], s = e.doc.lineAt(n), a = /^\s*/.exec(s.text)[0];
    for (let l of this.lines) {
      if (r.length) {
        let c = a, h = /^\t*/.exec(l)[0].length;
        for (let f = 0; f < h; f++)
          c += e.facet(Sa);
        i.push(n + c.length - h), l = c + l.slice(h);
      }
      r.push(l), n += l.length + 1;
    }
    let o = this.fieldPositions.map((l) => new rm(l.field, i[l.line] + l.from, i[l.line] + l.to));
    return { text: r, ranges: o };
  }
  static parse(e) {
    let n = [], r = [], i = [], s;
    for (let a of e.split(/\r\n?|\n/)) {
      for (; s = /[#$]\{(?:(\d+)(?::([^}]*))?|((?:\\[{}]|[^}])*))\}/.exec(a); ) {
        let o = s[1] ? +s[1] : null, l = s[2] || s[3] || "", c = -1, h = l.replace(/\\[{}]/g, (f) => f[1]);
        for (let f = 0; f < n.length; f++)
          (o != null ? n[f].seq == o : h && n[f].name == h) && (c = f);
        if (c < 0) {
          let f = 0;
          for (; f < n.length && (o == null || n[f].seq != null && n[f].seq < o); )
            f++;
          n.splice(f, 0, { seq: o, name: h }), c = f;
          for (let m of i)
            m.field >= c && m.field++;
        }
        i.push(new E7(c, r.length, s.index, s.index + h.length)), a = a.slice(0, s.index) + l + a.slice(s.index + s[0].length);
      }
      a = a.replace(/\\([{}])/g, (o, l, c) => {
        for (let h of i)
          h.line == r.length && h.from > c && (h.from--, h.to--);
        return l;
      }), r.push(a);
    }
    return new im(r, i);
  }
}
let F7 = /* @__PURE__ */ Te.widget({ widget: /* @__PURE__ */ new class extends Ri {
  toDOM() {
    let t = document.createElement("span");
    return t.className = "cm-snippetFieldPosition", t;
  }
  ignoreEvent() {
    return !1;
  }
}() }), B7 = /* @__PURE__ */ Te.mark({ class: "cm-snippetField" });
class ja {
  constructor(e, n) {
    this.ranges = e, this.active = n, this.deco = Te.set(e.map((r) => (r.from == r.to ? F7 : B7).range(r.from, r.to)));
  }
  map(e) {
    let n = [];
    for (let r of this.ranges) {
      let i = r.map(e);
      if (!i)
        return null;
      n.push(i);
    }
    return new ja(n, this.active);
  }
  selectionInsideField(e) {
    return e.ranges.every((n) => this.ranges.some((r) => r.field == this.active && r.from <= n.from && r.to >= n.to));
  }
}
const Ko = /* @__PURE__ */ Ie.define({
  map(t, e) {
    return t && t.map(e);
  }
}), M7 = /* @__PURE__ */ Ie.define(), Mo = /* @__PURE__ */ Vt.define({
  create() {
    return null;
  },
  update(t, e) {
    for (let n of e.effects) {
      if (n.is(Ko))
        return n.value;
      if (n.is(M7) && t)
        return new ja(t.ranges, n.value);
    }
    return t && e.docChanged && (t = t.map(e.changes)), t && e.selection && !t.selectionInsideField(e.selection) && (t = null), t;
  },
  provide: (t) => be.decorations.from(t, (e) => e ? e.deco : Te.none)
});
function sm(t, e) {
  return ne.create(t.filter((n) => n.field == e).map((n) => ne.range(n.from, n.to)));
}
function Q7(t) {
  let e = im.parse(t);
  return (n, r, i, s) => {
    let { text: a, ranges: o } = e.instantiate(n.state, i), { main: l } = n.state.selection, c = {
      changes: { from: i, to: s == l.from ? l.to : s, insert: ct.of(a) },
      scrollIntoView: !0,
      annotations: r ? [em.of(r), sn.userEvent.of("input.complete")] : void 0
    };
    if (o.length && (c.selection = sm(o, 0)), o.some((h) => h.field > 0)) {
      let h = new ja(o, 0), f = c.effects = [Ko.of(h)];
      n.state.field(Mo, !1) === void 0 && f.push(Ie.appendConfig.of([Mo, $7, Z7, AS]));
    }
    n.dispatch(n.state.update(c));
  };
}
function DS(t) {
  return ({ state: e, dispatch: n }) => {
    let r = e.field(Mo, !1);
    if (!r || t < 0 && r.active == 0)
      return !1;
    let i = r.active + t, s = t > 0 && !r.ranges.some((a) => a.field == i + t);
    return n(e.update({
      selection: sm(r.ranges, i),
      effects: Ko.of(s ? null : new ja(r.ranges, i)),
      scrollIntoView: !0
    })), !0;
  };
}
const T7 = ({ state: t, dispatch: e }) => t.field(Mo, !1) ? (e(t.update({ effects: Ko.of(null) })), !0) : !1, j7 = /* @__PURE__ */ DS(1), _7 = /* @__PURE__ */ DS(-1), R7 = [
  { key: "Tab", run: j7, shift: _7 },
  { key: "Escape", run: T7 }
], T0 = /* @__PURE__ */ Ae.define({
  combine(t) {
    return t.length ? t[0] : R7;
  }
}), $7 = /* @__PURE__ */ Tr.highest(/* @__PURE__ */ js.compute([T0], (t) => t.facet(T0)));
function Ln(t, e) {
  return Object.assign(Object.assign({}, e), { apply: Q7(t) });
}
const Z7 = /* @__PURE__ */ be.domEventHandlers({
  mousedown(t, e) {
    let n = e.state.field(Mo, !1), r;
    if (!n || (r = e.posAtCoords({ x: t.clientX, y: t.clientY })) == null)
      return !1;
    let i = n.ranges.find((s) => s.from <= r && s.to >= r);
    return !i || i.field == n.active ? !1 : (e.dispatch({
      selection: sm(n.ranges, i.field),
      effects: Ko.of(n.ranges.some((s) => s.field > i.field) ? new ja(n.ranges, i.field) : null),
      scrollIntoView: !0
    }), !0);
  }
}), Qo = {
  brackets: ["(", "[", "{", "'", '"'],
  before: ")]}:;>",
  stringPrefixes: []
}, ws = /* @__PURE__ */ Ie.define({
  map(t, e) {
    let n = e.mapPos(t, -1, rn.TrackAfter);
    return n ?? void 0;
  }
}), am = /* @__PURE__ */ new class extends Bs {
}();
am.startSide = 1;
am.endSide = -1;
const PS = /* @__PURE__ */ Vt.define({
  create() {
    return mt.empty;
  },
  update(t, e) {
    if (t = t.map(e.changes), e.selection) {
      let n = e.state.doc.lineAt(e.selection.main.head);
      t = t.update({ filter: (r) => r >= n.from && r <= n.to });
    }
    for (let n of e.effects)
      n.is(ws) && (t = t.update({ add: [am.range(n.value, n.value + 1)] }));
    return t;
  }
});
function L7() {
  return [N7, PS];
}
const Jh = "()[]{}<>";
function ES(t) {
  for (let e = 0; e < Jh.length; e += 2)
    if (Jh.charCodeAt(e) == t)
      return Jh.charAt(e + 1);
  return Bd(t < 128 ? t : t + 1);
}
function FS(t, e) {
  return t.languageDataAt("closeBrackets", e)[0] || Qo;
}
const I7 = typeof navigator == "object" && /* @__PURE__ */ /Android\b/.test(navigator.userAgent), N7 = /* @__PURE__ */ be.inputHandler.of((t, e, n, r) => {
  if ((I7 ? t.composing : t.compositionStarted) || t.state.readOnly)
    return !1;
  let i = t.state.selection.main;
  if (r.length > 2 || r.length == 2 && ai(ur(r, 0)) == 1 || e != i.from || n != i.to)
    return !1;
  let s = X7(t.state, r);
  return s ? (t.dispatch(s), !0) : !1;
}), V7 = ({ state: t, dispatch: e }) => {
  if (t.readOnly)
    return !1;
  let r = FS(t, t.selection.main.head).brackets || Qo.brackets, i = null, s = t.changeByRange((a) => {
    if (a.empty) {
      let o = W7(t.doc, a.head);
      for (let l of r)
        if (l == o && jc(t.doc, a.head) == ES(ur(l, 0)))
          return {
            changes: { from: a.head - l.length, to: a.head + l.length },
            range: ne.cursor(a.head - l.length)
          };
    }
    return { range: i = a };
  });
  return i || e(t.update(s, { scrollIntoView: !0, userEvent: "delete.backward" })), !i;
};
function X7(t, e) {
  let n = FS(t, t.selection.main.head), r = n.brackets || Qo.brackets;
  for (let i of r) {
    let s = ES(ur(i, 0));
    if (e == i)
      return s == i ? G7(t, i, r.indexOf(i + i + i) > -1, n) : q7(t, i, s, n.before || Qo.before);
    if (e == s && BS(t, t.selection.main.from))
      return U7(t, i, s);
  }
  return null;
}
function BS(t, e) {
  let n = !1;
  return t.field(PS).between(0, t.doc.length, (r) => {
    r == e && (n = !0);
  }), n;
}
function jc(t, e) {
  let n = t.sliceString(e, e + 2);
  return n.slice(0, ai(ur(n, 0)));
}
function W7(t, e) {
  let n = t.sliceString(e - 2, e);
  return ai(ur(n, 0)) == n.length ? n : n.slice(1);
}
function q7(t, e, n, r) {
  let i = null, s = t.changeByRange((a) => {
    if (!a.empty)
      return {
        changes: [{ insert: e, from: a.from }, { insert: n, from: a.to }],
        effects: ws.of(a.to + e.length),
        range: ne.range(a.anchor + e.length, a.head + e.length)
      };
    let o = jc(t.doc, a.head);
    return !o || /\s/.test(o) || r.indexOf(o) > -1 ? {
      changes: { insert: e + n, from: a.head },
      effects: ws.of(a.head + e.length),
      range: ne.cursor(a.head + e.length)
    } : { range: i = a };
  });
  return i ? null : t.update(s, {
    scrollIntoView: !0,
    userEvent: "input.type"
  });
}
function U7(t, e, n) {
  let r = null, i = t.changeByRange((s) => s.empty && jc(t.doc, s.head) == n ? {
    changes: { from: s.head, to: s.head + n.length, insert: n },
    range: ne.cursor(s.head + n.length)
  } : r = { range: s });
  return r ? null : t.update(i, {
    scrollIntoView: !0,
    userEvent: "input.type"
  });
}
function G7(t, e, n, r) {
  let i = r.stringPrefixes || Qo.stringPrefixes, s = null, a = t.changeByRange((o) => {
    if (!o.empty)
      return {
        changes: [{ insert: e, from: o.from }, { insert: e, from: o.to }],
        effects: ws.of(o.to + e.length),
        range: ne.range(o.anchor + e.length, o.head + e.length)
      };
    let l = o.head, c = jc(t.doc, l), h;
    if (c == e) {
      if (j0(t, l))
        return {
          changes: { insert: e + e, from: l },
          effects: ws.of(l + e.length),
          range: ne.cursor(l + e.length)
        };
      if (BS(t, l)) {
        let m = n && t.sliceDoc(l, l + e.length * 3) == e + e + e ? e + e + e : e;
        return {
          changes: { from: l, to: l + m.length, insert: m },
          range: ne.cursor(l + m.length)
        };
      }
    } else {
      if (n && t.sliceDoc(l - 2 * e.length, l) == e + e && (h = _0(t, l - 2 * e.length, i)) > -1 && j0(t, h))
        return {
          changes: { insert: e + e + e + e, from: l },
          effects: ws.of(l + e.length),
          range: ne.cursor(l + e.length)
        };
      if (t.charCategorizer(l)(c) != an.Word && _0(t, l, i) > -1 && !z7(t, l, e, i))
        return {
          changes: { insert: e + e, from: l },
          effects: ws.of(l + e.length),
          range: ne.cursor(l + e.length)
        };
    }
    return { range: s = o };
  });
  return s ? null : t.update(a, {
    scrollIntoView: !0,
    userEvent: "input.type"
  });
}
function j0(t, e) {
  let n = Sn(t).resolveInner(e + 1);
  return n.parent && n.from == e;
}
function z7(t, e, n, r) {
  let i = Sn(t).resolveInner(e, -1), s = r.reduce((a, o) => Math.max(a, o.length), 0);
  for (let a = 0; a < 5; a++) {
    let o = t.sliceDoc(i.from, Math.min(i.to, i.from + n.length + s)), l = o.indexOf(n);
    if (!l || l > -1 && r.indexOf(o.slice(0, l)) > -1) {
      let h = i.firstChild;
      for (; h && h.from == i.from && h.to - h.from > n.length + l; ) {
        if (t.sliceDoc(h.to - n.length, h.to) == n)
          return !1;
        h = h.firstChild;
      }
      return !0;
    }
    let c = i.to == e && i.parent;
    if (!c)
      break;
    i = c;
  }
  return !1;
}
function _0(t, e, n) {
  let r = t.charCategorizer(e);
  if (r(t.sliceDoc(e - 1, e)) != an.Word)
    return e;
  for (let i of n) {
    let s = e - i.length;
    if (t.sliceDoc(s, e) == i && r(t.sliceDoc(s - 1, s)) != an.Word)
      return s;
  }
  return -1;
}
function H7(t = {}) {
  return [
    P7,
    jn,
    yn.of(t),
    A7,
    K7,
    AS
  ];
}
const Y7 = [
  { key: "Ctrl-Space", run: gf },
  { mac: "Alt-`", run: gf },
  { key: "Escape", run: SS },
  { key: "ArrowDown", run: /* @__PURE__ */ Hi(!0) },
  { key: "ArrowUp", run: /* @__PURE__ */ Hi(!1) },
  { key: "PageDown", run: /* @__PURE__ */ Hi(!0, "page") },
  { key: "PageUp", run: /* @__PURE__ */ Hi(!1, "page") },
  { key: "Enter", run: mf }
], K7 = /* @__PURE__ */ Tr.highest(/* @__PURE__ */ js.computeN([yn], (t) => t.facet(yn).defaultKeymap ? [Y7] : []));
function J7(t) {
  let e = t.field(jn, !1);
  return e && e.active.some((n) => n.isPending) ? "pending" : e && e.active.some(
    (n) => n.state != 0
    /* State.Inactive */
  ) ? "active" : null;
}
const _c = (t) => {
  let { state: e } = t, n = e.doc.lineAt(e.selection.main.from), r = lm(t.state, n.from);
  return r.line ? MS(t) : r.block ? QS(t) : !1;
};
function Jo(t, e) {
  return ({ state: n, dispatch: r }) => {
    if (n.readOnly)
      return !1;
    let i = t(e, n);
    return i ? (r(n.update(i)), !0) : !1;
  };
}
const MS = /* @__PURE__ */ Jo(
  um,
  0
  /* CommentOption.Toggle */
), eQ = /* @__PURE__ */ Jo(
  um,
  1
  /* CommentOption.Comment */
), tQ = /* @__PURE__ */ Jo(
  um,
  2
  /* CommentOption.Uncomment */
), om = /* @__PURE__ */ Jo(
  TS,
  0
  /* CommentOption.Toggle */
), QS = /* @__PURE__ */ Jo(
  (t, e) => TS(t, e, rQ(e)),
  0
  /* CommentOption.Toggle */
);
function lm(t, e) {
  let n = t.languageDataAt("commentTokens", e);
  return n.length ? n[0] : {};
}
const ro = 50;
function nQ(t, { open: e, close: n }, r, i) {
  let s = t.sliceDoc(r - ro, r), a = t.sliceDoc(i, i + ro), o = /\s*$/.exec(s)[0].length, l = /^\s*/.exec(a)[0].length, c = s.length - o;
  if (s.slice(c - e.length, c) == e && a.slice(l, l + n.length) == n)
    return {
      open: { pos: r - o, margin: o && 1 },
      close: { pos: i + l, margin: l && 1 }
    };
  let h, f;
  i - r <= 2 * ro ? h = f = t.sliceDoc(r, i) : (h = t.sliceDoc(r, r + ro), f = t.sliceDoc(i - ro, i));
  let m = /^\s*/.exec(h)[0].length, y = /\s*$/.exec(f)[0].length, x = f.length - y - n.length;
  return h.slice(m, m + e.length) == e && f.slice(x, x + n.length) == n ? {
    open: {
      pos: r + m + e.length,
      margin: /\s/.test(h.charAt(m + e.length)) ? 1 : 0
    },
    close: {
      pos: i - y - n.length,
      margin: /\s/.test(f.charAt(x - 1)) ? 1 : 0
    }
  } : null;
}
function rQ(t) {
  let e = [];
  for (let n of t.selection.ranges) {
    let r = t.doc.lineAt(n.from), i = n.to <= r.to ? r : t.doc.lineAt(n.to);
    i.from > r.from && i.from == n.to && (i = n.to == r.to + 1 ? r : t.doc.lineAt(n.to - 1));
    let s = e.length - 1;
    s >= 0 && e[s].to > r.from ? e[s].to = i.to : e.push({ from: r.from + /^\s*/.exec(r.text)[0].length, to: i.to });
  }
  return e;
}
function TS(t, e, n = e.selection.ranges) {
  let r = n.map((s) => lm(e, s.from).block);
  if (!r.every((s) => s))
    return null;
  let i = n.map((s, a) => nQ(e, r[a], s.from, s.to));
  if (t != 2 && !i.every((s) => s))
    return { changes: e.changes(n.map((s, a) => i[a] ? [] : [{ from: s.from, insert: r[a].open + " " }, { from: s.to, insert: " " + r[a].close }])) };
  if (t != 1 && i.some((s) => s)) {
    let s = [];
    for (let a = 0, o; a < i.length; a++)
      if (o = i[a]) {
        let l = r[a], { open: c, close: h } = o;
        s.push({ from: c.pos - l.open.length, to: c.pos + c.margin }, { from: h.pos - h.margin, to: h.pos + l.close.length });
      }
    return { changes: s };
  }
  return null;
}
function um(t, e, n = e.selection.ranges) {
  let r = [], i = -1;
  for (let { from: s, to: a } of n) {
    let o = r.length, l = 1e9, c = lm(e, s).line;
    if (c) {
      for (let h = s; h <= a; ) {
        let f = e.doc.lineAt(h);
        if (f.from > i && (s == a || a > f.from)) {
          i = f.from;
          let m = /^\s*/.exec(f.text)[0].length, y = m == f.length, x = f.text.slice(m, m + c.length) == c ? m : -1;
          m < f.text.length && m < l && (l = m), r.push({ line: f, comment: x, token: c, indent: m, empty: y, single: !1 });
        }
        h = f.to + 1;
      }
      if (l < 1e9)
        for (let h = o; h < r.length; h++)
          r[h].indent < r[h].line.text.length && (r[h].indent = l);
      r.length == o + 1 && (r[o].single = !0);
    }
  }
  if (t != 2 && r.some((s) => s.comment < 0 && (!s.empty || s.single))) {
    let s = [];
    for (let { line: o, token: l, indent: c, empty: h, single: f } of r)
      (f || !h) && s.push({ from: o.from + c, insert: l + " " });
    let a = e.changes(s);
    return { changes: a, selection: e.selection.map(a, 1) };
  } else if (t != 1 && r.some((s) => s.comment >= 0)) {
    let s = [];
    for (let { line: a, comment: o, token: l } of r)
      if (o >= 0) {
        let c = a.from + o, h = c + l.length;
        a.text[h - a.from] == " " && h++, s.push({ from: c, to: h });
      }
    return { changes: s };
  }
  return null;
}
const bf = /* @__PURE__ */ _i.define(), iQ = /* @__PURE__ */ _i.define(), sQ = /* @__PURE__ */ Ae.define(), jS = /* @__PURE__ */ Ae.define({
  combine(t) {
    return os(t, {
      minDepth: 100,
      newGroupDelay: 500,
      joinToEvent: (e, n) => n
    }, {
      minDepth: Math.max,
      newGroupDelay: Math.min,
      joinToEvent: (e, n) => (r, i) => e(r, i) || n(r, i)
    });
  }
}), _S = /* @__PURE__ */ Vt.define({
  create() {
    return ui.empty;
  },
  update(t, e) {
    let n = e.state.facet(jS), r = e.annotation(bf);
    if (r) {
      let l = qn.fromTransaction(e, r.selection), c = r.side, h = c == 0 ? t.undone : t.done;
      return l ? h = $u(h, h.length, n.minDepth, l) : h = ZS(h, e.startState.selection), new ui(c == 0 ? r.rest : h, c == 0 ? h : r.rest);
    }
    let i = e.annotation(iQ);
    if ((i == "full" || i == "before") && (t = t.isolate()), e.annotation(sn.addToHistory) === !1)
      return e.changes.empty ? t : t.addMapping(e.changes.desc);
    let s = qn.fromTransaction(e), a = e.annotation(sn.time), o = e.annotation(sn.userEvent);
    return s ? t = t.addChanges(s, a, o, n, e) : e.selection && (t = t.addSelection(e.startState.selection, a, o, n.newGroupDelay)), (i == "full" || i == "after") && (t = t.isolate()), t;
  },
  toJSON(t) {
    return { done: t.done.map((e) => e.toJSON()), undone: t.undone.map((e) => e.toJSON()) };
  },
  fromJSON(t) {
    return new ui(t.done.map(qn.fromJSON), t.undone.map(qn.fromJSON));
  }
});
function aQ(t = {}) {
  return [
    _S,
    jS.of(t),
    be.domEventHandlers({
      beforeinput(e, n) {
        let r = e.inputType == "historyUndo" ? $c : e.inputType == "historyRedo" ? Aa : null;
        return r ? (e.preventDefault(), r(n)) : !1;
      }
    })
  ];
}
function Rc(t, e) {
  return function({ state: n, dispatch: r }) {
    if (!e && n.readOnly)
      return !1;
    let i = n.field(_S, !1);
    if (!i)
      return !1;
    let s = i.pop(t, n, e);
    return s ? (r(s), !0) : !1;
  };
}
const $c = /* @__PURE__ */ Rc(0, !1), Aa = /* @__PURE__ */ Rc(1, !1), RS = /* @__PURE__ */ Rc(0, !0), oQ = /* @__PURE__ */ Rc(1, !0);
class qn {
  constructor(e, n, r, i, s) {
    this.changes = e, this.effects = n, this.mapped = r, this.startSelection = i, this.selectionsAfter = s;
  }
  setSelAfter(e) {
    return new qn(this.changes, this.effects, this.mapped, this.startSelection, e);
  }
  toJSON() {
    var e, n, r;
    return {
      changes: (e = this.changes) === null || e === void 0 ? void 0 : e.toJSON(),
      mapped: (n = this.mapped) === null || n === void 0 ? void 0 : n.toJSON(),
      startSelection: (r = this.startSelection) === null || r === void 0 ? void 0 : r.toJSON(),
      selectionsAfter: this.selectionsAfter.map((i) => i.toJSON())
    };
  }
  static fromJSON(e) {
    return new qn(e.changes && un.fromJSON(e.changes), [], e.mapped && ci.fromJSON(e.mapped), e.startSelection && ne.fromJSON(e.startSelection), e.selectionsAfter.map(ne.fromJSON));
  }
  // This does not check `addToHistory` and such, it assumes the
  // transaction needs to be converted to an item. Returns null when
  // there are no changes or effects in the transaction.
  static fromTransaction(e, n) {
    let r = Dr;
    for (let i of e.startState.facet(sQ)) {
      let s = i(e);
      s.length && (r = r.concat(s));
    }
    return !r.length && e.changes.empty ? null : new qn(e.changes.invert(e.startState.doc), r, void 0, n || e.startState.selection, Dr);
  }
  static selection(e) {
    return new qn(void 0, Dr, void 0, void 0, e);
  }
}
function $u(t, e, n, r) {
  let i = e + 1 > n + 20 ? e - n - 1 : 0, s = t.slice(i, e);
  return s.push(r), s;
}
function lQ(t, e) {
  let n = [], r = !1;
  return t.iterChangedRanges((i, s) => n.push(i, s)), e.iterChangedRanges((i, s, a, o) => {
    for (let l = 0; l < n.length; ) {
      let c = n[l++], h = n[l++];
      o >= c && a <= h && (r = !0);
    }
  }), r;
}
function uQ(t, e) {
  return t.ranges.length == e.ranges.length && t.ranges.filter((n, r) => n.empty != e.ranges[r].empty).length === 0;
}
function $S(t, e) {
  return t.length ? e.length ? t.concat(e) : t : e;
}
const Dr = [], cQ = 200;
function ZS(t, e) {
  if (t.length) {
    let n = t[t.length - 1], r = n.selectionsAfter.slice(Math.max(0, n.selectionsAfter.length - cQ));
    return r.length && r[r.length - 1].eq(e) ? t : (r.push(e), $u(t, t.length - 1, 1e9, n.setSelAfter(r)));
  } else
    return [qn.selection([e])];
}
function hQ(t) {
  let e = t[t.length - 1], n = t.slice();
  return n[t.length - 1] = e.setSelAfter(e.selectionsAfter.slice(0, e.selectionsAfter.length - 1)), n;
}
function ep(t, e) {
  if (!t.length)
    return t;
  let n = t.length, r = Dr;
  for (; n; ) {
    let i = pQ(t[n - 1], e, r);
    if (i.changes && !i.changes.empty || i.effects.length) {
      let s = t.slice(0, n);
      return s[n - 1] = i, s;
    } else
      e = i.mapped, n--, r = i.selectionsAfter;
  }
  return r.length ? [qn.selection(r)] : Dr;
}
function pQ(t, e, n) {
  let r = $S(t.selectionsAfter.length ? t.selectionsAfter.map((o) => o.map(e)) : Dr, n);
  if (!t.changes)
    return qn.selection(r);
  let i = t.changes.map(e), s = e.mapDesc(t.changes, !0), a = t.mapped ? t.mapped.composeDesc(s) : s;
  return new qn(i, Ie.mapEffects(t.effects, e), a, t.startSelection.map(s), r);
}
const fQ = /^(input\.type|delete)($|\.)/;
class ui {
  constructor(e, n, r = 0, i = void 0) {
    this.done = e, this.undone = n, this.prevTime = r, this.prevUserEvent = i;
  }
  isolate() {
    return this.prevTime ? new ui(this.done, this.undone) : this;
  }
  addChanges(e, n, r, i, s) {
    let a = this.done, o = a[a.length - 1];
    return o && o.changes && !o.changes.empty && e.changes && (!r || fQ.test(r)) && (!o.selectionsAfter.length && n - this.prevTime < i.newGroupDelay && i.joinToEvent(s, lQ(o.changes, e.changes)) || // For compose (but not compose.start) events, always join with previous event
    r == "input.type.compose") ? a = $u(a, a.length - 1, i.minDepth, new qn(e.changes.compose(o.changes), $S(Ie.mapEffects(e.effects, o.changes), o.effects), o.mapped, o.startSelection, Dr)) : a = $u(a, a.length, i.minDepth, e), new ui(a, Dr, n, r);
  }
  addSelection(e, n, r, i) {
    let s = this.done.length ? this.done[this.done.length - 1].selectionsAfter : Dr;
    return s.length > 0 && n - this.prevTime < i && r == this.prevUserEvent && r && /^select($|\.)/.test(r) && uQ(s[s.length - 1], e) ? this : new ui(ZS(this.done, e), this.undone, n, r);
  }
  addMapping(e) {
    return new ui(ep(this.done, e), ep(this.undone, e), this.prevTime, this.prevUserEvent);
  }
  pop(e, n, r) {
    let i = e == 0 ? this.done : this.undone;
    if (i.length == 0)
      return null;
    let s = i[i.length - 1], a = s.selectionsAfter[0] || n.selection;
    if (r && s.selectionsAfter.length)
      return n.update({
        selection: s.selectionsAfter[s.selectionsAfter.length - 1],
        annotations: bf.of({ side: e, rest: hQ(i), selection: a }),
        userEvent: e == 0 ? "select.undo" : "select.redo",
        scrollIntoView: !0
      });
    if (s.changes) {
      let o = i.length == 1 ? Dr : i.slice(0, i.length - 1);
      return s.mapped && (o = ep(o, s.mapped)), n.update({
        changes: s.changes,
        selection: s.startSelection,
        effects: s.effects,
        annotations: bf.of({ side: e, rest: o, selection: a }),
        filter: !1,
        userEvent: e == 0 ? "undo" : "redo",
        scrollIntoView: !0
      });
    } else
      return null;
  }
}
ui.empty = /* @__PURE__ */ new ui(Dr, Dr);
const dQ = [
  { key: "Mod-z", run: $c, preventDefault: !0 },
  { key: "Mod-y", mac: "Mod-Shift-z", run: Aa, preventDefault: !0 },
  { linux: "Ctrl-Shift-z", run: Aa, preventDefault: !0 },
  { key: "Mod-u", run: RS, preventDefault: !0 },
  { key: "Alt-u", mac: "Mod-Shift-u", run: oQ, preventDefault: !0 }
];
function _a(t, e) {
  return ne.create(t.ranges.map(e), t.mainIndex);
}
function mi(t, e) {
  return t.update({ selection: e, scrollIntoView: !0, userEvent: "select" });
}
function Gr({ state: t, dispatch: e }, n) {
  let r = _a(t.selection, n);
  return r.eq(t.selection, !0) ? !1 : (e(mi(t, r)), !0);
}
function Zc(t, e) {
  return ne.cursor(e ? t.to : t.from);
}
function cm(t, e) {
  return Gr(t, (n) => n.empty ? t.moveByChar(n, e) : Zc(n, e));
}
function Fn(t) {
  return t.textDirectionAt(t.state.selection.main.head) == Dt.LTR;
}
const To = (t) => cm(t, !Fn(t)), Zu = (t) => cm(t, Fn(t)), mQ = (t) => cm(t, !1);
function LS(t, e) {
  return Gr(t, (n) => n.empty ? t.moveByGroup(n, e) : Zc(n, e));
}
const IS = (t) => LS(t, !Fn(t)), NS = (t) => LS(t, Fn(t));
function gQ(t, e, n) {
  if (e.type.prop(n))
    return !0;
  let r = e.to - e.from;
  return r && (r > 2 || /[^\s,.;:]/.test(t.sliceDoc(e.from, e.to))) || e.firstChild;
}
function Lc(t, e, n) {
  let r = Sn(t).resolveInner(e.head), i = n ? nt.closedBy : nt.openedBy;
  for (let l = e.head; ; ) {
    let c = n ? r.childAfter(l) : r.childBefore(l);
    if (!c)
      break;
    gQ(t, c, i) ? r = c : l = n ? c.to : c.from;
  }
  let s = r.type.prop(i), a, o;
  return s && (a = n ? Sr(t, r.from, 1) : Sr(t, r.to, -1)) && a.matched ? o = n ? a.end.to : a.end.from : o = n ? r.to : r.from, ne.cursor(o, n ? -1 : 1);
}
const bQ = (t) => Gr(t, (e) => Lc(t.state, e, !Fn(t))), yQ = (t) => Gr(t, (e) => Lc(t.state, e, Fn(t)));
function VS(t, e) {
  return Gr(t, (n) => {
    if (!n.empty)
      return Zc(n, e);
    let r = t.moveVertically(n, e);
    return r.head != n.head ? r : t.moveToLineBoundary(n, e);
  });
}
const Lu = (t) => VS(t, !1), Iu = (t) => VS(t, !0);
function XS(t) {
  let e = t.scrollDOM.clientHeight < t.scrollDOM.scrollHeight - 2, n = 0, r = 0, i;
  if (e) {
    for (let s of t.state.facet(be.scrollMargins)) {
      let a = s(t);
      a?.top && (n = Math.max(a?.top, n)), a?.bottom && (r = Math.max(a?.bottom, r));
    }
    i = t.scrollDOM.clientHeight - n - r;
  } else
    i = (t.dom.ownerDocument.defaultView || window).innerHeight;
  return {
    marginTop: n,
    marginBottom: r,
    selfScroll: e,
    height: Math.max(t.defaultLineHeight, i - 5)
  };
}
function WS(t, e) {
  let n = XS(t), { state: r } = t, i = _a(r.selection, (a) => a.empty ? t.moveVertically(a, e, n.height) : Zc(a, e));
  if (i.eq(r.selection))
    return !1;
  let s;
  if (n.selfScroll) {
    let a = t.coordsAtPos(r.selection.main.head), o = t.scrollDOM.getBoundingClientRect(), l = o.top + n.marginTop, c = o.bottom - n.marginBottom;
    a && a.top > l && a.bottom < c && (s = be.scrollIntoView(i.main.head, { y: "start", yMargin: a.top - l }));
  }
  return t.dispatch(mi(r, i), { effects: s }), !0;
}
const bo = (t) => WS(t, !1), la = (t) => WS(t, !0);
function ls(t, e, n) {
  let r = t.lineBlockAt(e.head), i = t.moveToLineBoundary(e, n);
  if (i.head == e.head && i.head != (n ? r.to : r.from) && (i = t.moveToLineBoundary(e, n, !1)), !n && i.head == r.from && r.length) {
    let s = /^\s*/.exec(t.state.sliceDoc(r.from, Math.min(r.from + 100, r.to)))[0].length;
    s && e.head != r.from + s && (i = ne.cursor(r.from + s));
  }
  return i;
}
const Nu = (t) => Gr(t, (e) => ls(t, e, !0)), Vu = (t) => Gr(t, (e) => ls(t, e, !1)), OQ = (t) => Gr(t, (e) => ls(t, e, !Fn(t))), vQ = (t) => Gr(t, (e) => ls(t, e, Fn(t))), qS = (t) => Gr(t, (e) => ne.cursor(t.lineBlockAt(e.head).from, 1)), US = (t) => Gr(t, (e) => ne.cursor(t.lineBlockAt(e.head).to, -1));
function xQ(t, e, n) {
  let r = !1, i = _a(t.selection, (s) => {
    let a = Sr(t, s.head, -1) || Sr(t, s.head, 1) || s.head > 0 && Sr(t, s.head - 1, 1) || s.head < t.doc.length && Sr(t, s.head + 1, -1);
    if (!a || !a.end)
      return s;
    r = !0;
    let o = a.start.from == s.head ? a.end.to : a.end.from;
    return ne.cursor(o);
  });
  return r ? (e(mi(t, i)), !0) : !1;
}
const GS = ({ state: t, dispatch: e }) => xQ(t, e);
function jr(t, e) {
  let n = _a(t.state.selection, (r) => {
    let i = e(r);
    return ne.range(r.anchor, i.head, i.goalColumn, i.bidiLevel || void 0);
  });
  return n.eq(t.state.selection) ? !1 : (t.dispatch(mi(t.state, n)), !0);
}
function zS(t, e) {
  return jr(t, (n) => t.moveByChar(n, e));
}
const Xu = (t) => zS(t, !Fn(t)), Wu = (t) => zS(t, Fn(t));
function HS(t, e) {
  return jr(t, (n) => t.moveByGroup(n, e));
}
const YS = (t) => HS(t, !Fn(t)), KS = (t) => HS(t, Fn(t)), kQ = (t) => jr(t, (e) => Lc(t.state, e, !Fn(t))), wQ = (t) => jr(t, (e) => Lc(t.state, e, Fn(t)));
function JS(t, e) {
  return jr(t, (n) => t.moveVertically(n, e));
}
const qu = (t) => JS(t, !1), Uu = (t) => JS(t, !0);
function eA(t, e) {
  return jr(t, (n) => t.moveVertically(n, e, XS(t).height));
}
const Gu = (t) => eA(t, !1), zu = (t) => eA(t, !0), yf = (t) => jr(t, (e) => ls(t, e, !0)), Of = (t) => jr(t, (e) => ls(t, e, !1)), CQ = (t) => jr(t, (e) => ls(t, e, !Fn(t))), SQ = (t) => jr(t, (e) => ls(t, e, Fn(t))), tA = (t) => jr(t, (e) => ne.cursor(t.lineBlockAt(e.head).from)), nA = (t) => jr(t, (e) => ne.cursor(t.lineBlockAt(e.head).to)), Hu = ({ state: t, dispatch: e }) => (e(mi(t, { anchor: 0 })), !0), Yu = ({ state: t, dispatch: e }) => (e(mi(t, { anchor: t.doc.length })), !0), Ku = ({ state: t, dispatch: e }) => (e(mi(t, { anchor: t.selection.main.anchor, head: 0 })), !0), Ju = ({ state: t, dispatch: e }) => (e(mi(t, { anchor: t.selection.main.anchor, head: t.doc.length })), !0), rA = ({ state: t, dispatch: e }) => (e(t.update({ selection: { anchor: 0, head: t.doc.length }, userEvent: "select" })), !0), iA = ({ state: t, dispatch: e }) => {
  let n = Ic(t).map(({ from: r, to: i }) => ne.range(r, Math.min(i + 1, t.doc.length)));
  return e(t.update({ selection: ne.create(n), userEvent: "select" })), !0;
}, AQ = ({ state: t, dispatch: e }) => {
  let n = _a(t.selection, (r) => {
    let i = Sn(t), s = i.resolveStack(r.from, 1);
    if (r.empty) {
      let a = i.resolveStack(r.from, -1);
      a.node.from >= s.node.from && a.node.to <= s.node.to && (s = a);
    }
    for (let a = s; a; a = a.next) {
      let { node: o } = a;
      if ((o.from < r.from && o.to >= r.to || o.to > r.to && o.from <= r.from) && a.next)
        return ne.range(o.to, o.from);
    }
    return r;
  });
  return n.eq(t.selection) ? !1 : (e(mi(t, n)), !0);
}, DQ = ({ state: t, dispatch: e }) => {
  let n = t.selection, r = null;
  return n.ranges.length > 1 ? r = ne.create([n.main]) : n.main.empty || (r = ne.create([ne.cursor(n.main.head)])), r ? (e(mi(t, r)), !0) : !1;
};
function Ra(t, e) {
  if (t.state.readOnly)
    return !1;
  let n = "delete.selection", { state: r } = t, i = r.changeByRange((s) => {
    let { from: a, to: o } = s;
    if (a == o) {
      let l = e(s);
      l < a ? (n = "delete.backward", l = ql(t, l, !1)) : l > a && (n = "delete.forward", l = ql(t, l, !0)), a = Math.min(a, l), o = Math.max(o, l);
    } else
      a = ql(t, a, !1), o = ql(t, o, !0);
    return a == o ? { range: s } : { changes: { from: a, to: o }, range: ne.cursor(a, a < s.head ? -1 : 1) };
  });
  return i.changes.empty ? !1 : (t.dispatch(r.update(i, {
    scrollIntoView: !0,
    userEvent: n,
    effects: n == "delete.selection" ? be.announce.of(r.phrase("Selection deleted")) : void 0
  })), !0);
}
function ql(t, e, n) {
  if (t instanceof be)
    for (let r of t.state.facet(be.atomicRanges).map((i) => i(t)))
      r.between(e, e, (i, s) => {
        i < e && s > e && (e = n ? s : i);
      });
  return e;
}
const sA = (t, e, n) => Ra(t, (r) => {
  let i = r.from, { state: s } = t, a = s.doc.lineAt(i), o, l;
  if (n && !e && i > a.from && i < a.from + 200 && !/[^ \t]/.test(o = a.text.slice(0, i - a.from))) {
    if (o[o.length - 1] == "	")
      return i - 1;
    let c = Pc(o, s.tabSize), h = c % Tu(s) || Tu(s);
    for (let f = 0; f < h && o[o.length - 1 - f] == " "; f++)
      i--;
    l = i;
  } else
    l = Cn(a.text, i - a.from, e, e) + a.from, l == i && a.number != (e ? s.doc.lines : 1) ? l += e ? 1 : -1 : !e && /[\ufe00-\ufe0f]/.test(a.text.slice(l - a.from, i - a.from)) && (l = Cn(a.text, l - a.from, !1, !1) + a.from);
  return l;
}), ua = (t) => sA(t, !1, !0), ec = (t) => sA(t, !0, !1), aA = (t, e) => Ra(t, (n) => {
  let r = n.head, { state: i } = t, s = i.doc.lineAt(r), a = i.charCategorizer(r);
  for (let o = null; ; ) {
    if (r == (e ? s.to : s.from)) {
      r == n.head && s.number != (e ? i.doc.lines : 1) && (r += e ? 1 : -1);
      break;
    }
    let l = Cn(s.text, r - s.from, e) + s.from, c = s.text.slice(Math.min(r, l) - s.from, Math.max(r, l) - s.from), h = a(c);
    if (o != null && h != o)
      break;
    (c != " " || r != n.head) && (o = h), r = l;
  }
  return r;
}), tc = (t) => aA(t, !1), oA = (t) => aA(t, !0), vf = (t) => Ra(t, (e) => {
  let n = t.lineBlockAt(e.head).to;
  return e.head < n ? n : Math.min(t.state.doc.length, e.head + 1);
}), PQ = (t) => Ra(t, (e) => {
  let n = t.lineBlockAt(e.head).from;
  return e.head > n ? n : Math.max(0, e.head - 1);
}), EQ = (t) => Ra(t, (e) => {
  let n = t.moveToLineBoundary(e, !1).head;
  return e.head > n ? n : Math.max(0, e.head - 1);
}), FQ = (t) => Ra(t, (e) => {
  let n = t.moveToLineBoundary(e, !0).head;
  return e.head < n ? n : Math.min(t.state.doc.length, e.head + 1);
}), hm = ({ state: t, dispatch: e }) => {
  if (t.readOnly)
    return !1;
  let n = t.changeByRange((r) => ({
    changes: { from: r.from, to: r.to, insert: ct.of(["", ""]) },
    range: ne.cursor(r.from)
  }));
  return e(t.update(n, { scrollIntoView: !0, userEvent: "input" })), !0;
}, lA = ({ state: t, dispatch: e }) => {
  if (t.readOnly)
    return !1;
  let n = t.changeByRange((r) => {
    if (!r.empty || r.from == 0 || r.from == t.doc.length)
      return { range: r };
    let i = r.from, s = t.doc.lineAt(i), a = i == s.from ? i - 1 : Cn(s.text, i - s.from, !1) + s.from, o = i == s.to ? i + 1 : Cn(s.text, i - s.from, !0) + s.from;
    return {
      changes: { from: a, to: o, insert: t.doc.slice(i, o).append(t.doc.slice(a, i)) },
      range: ne.cursor(o)
    };
  });
  return n.changes.empty ? !1 : (e(t.update(n, { scrollIntoView: !0, userEvent: "move.character" })), !0);
};
function Ic(t) {
  let e = [], n = -1;
  for (let r of t.selection.ranges) {
    let i = t.doc.lineAt(r.from), s = t.doc.lineAt(r.to);
    if (!r.empty && r.to == s.from && (s = t.doc.lineAt(r.to - 1)), n >= i.number) {
      let a = e[e.length - 1];
      a.to = s.to, a.ranges.push(r);
    } else
      e.push({ from: i.from, to: s.to, ranges: [r] });
    n = s.number + 1;
  }
  return e;
}
function uA(t, e, n) {
  if (t.readOnly)
    return !1;
  let r = [], i = [];
  for (let s of Ic(t)) {
    if (n ? s.to == t.doc.length : s.from == 0)
      continue;
    let a = t.doc.lineAt(n ? s.to + 1 : s.from - 1), o = a.length + 1;
    if (n) {
      r.push({ from: s.to, to: a.to }, { from: s.from, insert: a.text + t.lineBreak });
      for (let l of s.ranges)
        i.push(ne.range(Math.min(t.doc.length, l.anchor + o), Math.min(t.doc.length, l.head + o)));
    } else {
      r.push({ from: a.from, to: s.from }, { from: s.to, insert: t.lineBreak + a.text });
      for (let l of s.ranges)
        i.push(ne.range(l.anchor - o, l.head - o));
    }
  }
  return r.length ? (e(t.update({
    changes: r,
    scrollIntoView: !0,
    selection: ne.create(i, t.selection.mainIndex),
    userEvent: "move.line"
  })), !0) : !1;
}
const cA = ({ state: t, dispatch: e }) => uA(t, e, !1), hA = ({ state: t, dispatch: e }) => uA(t, e, !0);
function pA(t, e, n) {
  if (t.readOnly)
    return !1;
  let r = [];
  for (let i of Ic(t))
    n ? r.push({ from: i.from, insert: t.doc.slice(i.from, i.to) + t.lineBreak }) : r.push({ from: i.to, insert: t.lineBreak + t.doc.slice(i.from, i.to) });
  return e(t.update({ changes: r, scrollIntoView: !0, userEvent: "input.copyline" })), !0;
}
const fA = ({ state: t, dispatch: e }) => pA(t, e, !1), dA = ({ state: t, dispatch: e }) => pA(t, e, !0), mA = (t) => {
  if (t.state.readOnly)
    return !1;
  let { state: e } = t, n = e.changes(Ic(e).map(({ from: i, to: s }) => (i > 0 ? i-- : s < e.doc.length && s++, { from: i, to: s }))), r = _a(e.selection, (i) => {
    let s;
    if (t.lineWrapping) {
      let a = t.lineBlockAt(i.head), o = t.coordsAtPos(i.head, i.assoc || 1);
      o && (s = a.bottom + t.documentTop - o.bottom + t.defaultLineHeight / 2);
    }
    return t.moveVertically(i, !0, s);
  }).map(n);
  return t.dispatch({ changes: n, selection: r, scrollIntoView: !0, userEvent: "delete.line" }), !0;
};
function BQ(t, e) {
  if (/\(\)|\[\]|\{\}/.test(t.sliceDoc(e - 1, e + 1)))
    return { from: e, to: e };
  let n = Sn(t).resolveInner(e), r = n.childBefore(e), i = n.childAfter(e), s;
  return r && i && r.to <= e && i.from >= e && (s = r.type.prop(nt.closedBy)) && s.indexOf(i.name) > -1 && t.doc.lineAt(r.to).from == t.doc.lineAt(i.from).from && !/\S/.test(t.sliceDoc(r.to, i.from)) ? { from: r.to, to: i.from } : null;
}
const jo = /* @__PURE__ */ gA(!1), MQ = /* @__PURE__ */ gA(!0);
function gA(t) {
  return ({ state: e, dispatch: n }) => {
    if (e.readOnly)
      return !1;
    let r = e.changeByRange((i) => {
      let { from: s, to: a } = i, o = e.doc.lineAt(s), l = !t && s == a && BQ(e, s);
      t && (s = a = (a <= o.to ? o : e.doc.lineAt(a)).to);
      let c = new Qc(e, { simulateBreak: s, simulateDoubleBreak: !!l }), h = nS(c, s);
      for (h == null && (h = Pc(/^\s*/.exec(e.doc.lineAt(s).text)[0], e.tabSize)); a < o.to && /\s/.test(o.text[a - o.from]); )
        a++;
      l ? { from: s, to: a } = l : s > o.from && s < o.from + 100 && !/\S/.test(o.text.slice(0, s)) && (s = o.from);
      let f = ["", ju(e, h)];
      return l && f.push(ju(e, c.lineIndent(o.from, -1))), {
        changes: { from: s, to: a, insert: ct.of(f) },
        range: ne.cursor(s + 1 + f[1].length)
      };
    });
    return n(e.update(r, { scrollIntoView: !0, userEvent: "input" })), !0;
  };
}
function pm(t, e) {
  let n = -1;
  return t.changeByRange((r) => {
    let i = [];
    for (let a = r.from; a <= r.to; ) {
      let o = t.doc.lineAt(a);
      o.number > n && (r.empty || r.to > o.from) && (e(o, i, r), n = o.number), a = o.to + 1;
    }
    let s = t.changes(i);
    return {
      changes: i,
      range: ne.range(s.mapPos(r.anchor, 1), s.mapPos(r.head, 1))
    };
  });
}
const bA = ({ state: t, dispatch: e }) => {
  if (t.readOnly)
    return !1;
  let n = /* @__PURE__ */ Object.create(null), r = new Qc(t, { overrideIndentation: (s) => {
    let a = n[s];
    return a ?? -1;
  } }), i = pm(t, (s, a, o) => {
    let l = nS(r, s.from);
    if (l == null)
      return;
    /\S/.test(s.text) || (l = 0);
    let c = /^\s*/.exec(s.text)[0], h = ju(t, l);
    (c != h || o.from < s.from + c.length) && (n[s.from] = l, a.push({ from: s.from, to: s.from + c.length, insert: h }));
  });
  return i.changes.empty || e(t.update(i, { userEvent: "indent" })), !0;
}, nc = ({ state: t, dispatch: e }) => t.readOnly ? !1 : (e(t.update(pm(t, (n, r) => {
  r.push({ from: n.from, insert: t.facet(Sa) });
}), { userEvent: "input.indent" })), !0), rc = ({ state: t, dispatch: e }) => t.readOnly ? !1 : (e(t.update(pm(t, (n, r) => {
  let i = /^\s*/.exec(n.text)[0];
  if (!i)
    return;
  let s = Pc(i, t.tabSize), a = 0, o = ju(t, Math.max(0, s - Tu(t)));
  for (; a < i.length && a < o.length && i.charCodeAt(a) == o.charCodeAt(a); )
    a++;
  r.push({ from: n.from + a, to: n.from + i.length, insert: o.slice(a) });
}), { userEvent: "delete.dedent" })), !0), QQ = (t) => (t.setTabFocusMode(), !0), TQ = [
  { key: "Ctrl-b", run: To, shift: Xu, preventDefault: !0 },
  { key: "Ctrl-f", run: Zu, shift: Wu },
  { key: "Ctrl-p", run: Lu, shift: qu },
  { key: "Ctrl-n", run: Iu, shift: Uu },
  { key: "Ctrl-a", run: qS, shift: tA },
  { key: "Ctrl-e", run: US, shift: nA },
  { key: "Ctrl-d", run: ec },
  { key: "Ctrl-h", run: ua },
  { key: "Ctrl-k", run: vf },
  { key: "Ctrl-Alt-h", run: tc },
  { key: "Ctrl-o", run: hm },
  { key: "Ctrl-t", run: lA },
  { key: "Ctrl-v", run: la }
], jQ = /* @__PURE__ */ [
  { key: "ArrowLeft", run: To, shift: Xu, preventDefault: !0 },
  { key: "Mod-ArrowLeft", mac: "Alt-ArrowLeft", run: IS, shift: YS, preventDefault: !0 },
  { mac: "Cmd-ArrowLeft", run: OQ, shift: CQ, preventDefault: !0 },
  { key: "ArrowRight", run: Zu, shift: Wu, preventDefault: !0 },
  { key: "Mod-ArrowRight", mac: "Alt-ArrowRight", run: NS, shift: KS, preventDefault: !0 },
  { mac: "Cmd-ArrowRight", run: vQ, shift: SQ, preventDefault: !0 },
  { key: "ArrowUp", run: Lu, shift: qu, preventDefault: !0 },
  { mac: "Cmd-ArrowUp", run: Hu, shift: Ku },
  { mac: "Ctrl-ArrowUp", run: bo, shift: Gu },
  { key: "ArrowDown", run: Iu, shift: Uu, preventDefault: !0 },
  { mac: "Cmd-ArrowDown", run: Yu, shift: Ju },
  { mac: "Ctrl-ArrowDown", run: la, shift: zu },
  { key: "PageUp", run: bo, shift: Gu },
  { key: "PageDown", run: la, shift: zu },
  { key: "Home", run: Vu, shift: Of, preventDefault: !0 },
  { key: "Mod-Home", run: Hu, shift: Ku },
  { key: "End", run: Nu, shift: yf, preventDefault: !0 },
  { key: "Mod-End", run: Yu, shift: Ju },
  { key: "Enter", run: jo, shift: jo },
  { key: "Mod-a", run: rA },
  { key: "Backspace", run: ua, shift: ua },
  { key: "Delete", run: ec },
  { key: "Mod-Backspace", mac: "Alt-Backspace", run: tc },
  { key: "Mod-Delete", mac: "Alt-Delete", run: oA },
  { mac: "Mod-Backspace", run: EQ },
  { mac: "Mod-Delete", run: FQ }
].concat(/* @__PURE__ */ TQ.map((t) => ({ mac: t.key, run: t.run, shift: t.shift }))), _Q = /* @__PURE__ */ [
  { key: "Alt-ArrowLeft", mac: "Ctrl-ArrowLeft", run: bQ, shift: kQ },
  { key: "Alt-ArrowRight", mac: "Ctrl-ArrowRight", run: yQ, shift: wQ },
  { key: "Alt-ArrowUp", run: cA },
  { key: "Shift-Alt-ArrowUp", run: fA },
  { key: "Alt-ArrowDown", run: hA },
  { key: "Shift-Alt-ArrowDown", run: dA },
  { key: "Escape", run: DQ },
  { key: "Mod-Enter", run: MQ },
  { key: "Alt-l", mac: "Ctrl-l", run: iA },
  { key: "Mod-i", run: AQ, preventDefault: !0 },
  { key: "Mod-[", run: rc },
  { key: "Mod-]", run: nc },
  { key: "Mod-Alt-\\", run: bA },
  { key: "Shift-Mod-k", run: mA },
  { key: "Shift-Mod-\\", run: GS },
  { key: "Mod-/", run: _c },
  { key: "Alt-A", run: om },
  { key: "Ctrl-m", mac: "Shift-Alt-m", run: QQ }
].concat(jQ);
class ic {
  /**
  @internal
  */
  constructor(e, n, r, i, s, a, o, l, c, h = 0, f) {
    this.p = e, this.stack = n, this.state = r, this.reducePos = i, this.pos = s, this.score = a, this.buffer = o, this.bufferBase = l, this.curContext = c, this.lookAhead = h, this.parent = f;
  }
  /**
  @internal
  */
  toString() {
    return `[${this.stack.filter((e, n) => n % 3 == 0).concat(this.state)}]@${this.pos}${this.score ? "!" + this.score : ""}`;
  }
  // Start an empty stack
  /**
  @internal
  */
  static start(e, n, r = 0) {
    let i = e.parser.context;
    return new ic(e, [], n, r, r, 0, [], 0, i ? new R0(i, i.start) : null, 0, null);
  }
  /**
  The stack's current [context](#lr.ContextTracker) value, if
  any. Its type will depend on the context tracker's type
  parameter, or it will be `null` if there is no context
  tracker.
  */
  get context() {
    return this.curContext ? this.curContext.context : null;
  }
  // Push a state onto the stack, tracking its start position as well
  // as the buffer base at that point.
  /**
  @internal
  */
  pushState(e, n) {
    this.stack.push(this.state, n, this.bufferBase + this.buffer.length), this.state = e;
  }
  // Apply a reduce action
  /**
  @internal
  */
  reduce(e) {
    var n;
    let r = e >> 19, i = e & 65535, { parser: s } = this.p, a = this.reducePos < this.pos - 25;
    a && this.setLookAhead(this.pos);
    let o = s.dynamicPrecedence(i);
    if (o && (this.score += o), r == 0) {
      this.pushState(s.getGoto(this.state, i, !0), this.reducePos), i < s.minRepeatTerm && this.storeNode(i, this.reducePos, this.reducePos, a ? 8 : 4, !0), this.reduceContext(i, this.reducePos);
      return;
    }
    let l = this.stack.length - (r - 1) * 3 - (e & 262144 ? 6 : 0), c = l ? this.stack[l - 2] : this.p.ranges[0].from, h = this.reducePos - c;
    h >= 2e3 && !(!((n = this.p.parser.nodeSet.types[i]) === null || n === void 0) && n.isAnonymous) && (c == this.p.lastBigReductionStart ? (this.p.bigReductionCount++, this.p.lastBigReductionSize = h) : this.p.lastBigReductionSize < h && (this.p.bigReductionCount = 1, this.p.lastBigReductionStart = c, this.p.lastBigReductionSize = h));
    let f = l ? this.stack[l - 1] : 0, m = this.bufferBase + this.buffer.length - f;
    if (i < s.minRepeatTerm || e & 131072) {
      let y = s.stateFlag(
        this.state,
        1
        /* StateFlag.Skipped */
      ) ? this.pos : this.reducePos;
      this.storeNode(i, c, y, m + 4, !0);
    }
    if (e & 262144)
      this.state = this.stack[l];
    else {
      let y = this.stack[l - 3];
      this.state = s.getGoto(y, i, !0);
    }
    for (; this.stack.length > l; )
      this.stack.pop();
    this.reduceContext(i, c);
  }
  // Shift a value into the buffer
  /**
  @internal
  */
  storeNode(e, n, r, i = 4, s = !1) {
    if (e == 0 && (!this.stack.length || this.stack[this.stack.length - 1] < this.buffer.length + this.bufferBase)) {
      let a = this, o = this.buffer.length;
      if (o == 0 && a.parent && (o = a.bufferBase - a.parent.bufferBase, a = a.parent), o > 0 && a.buffer[o - 4] == 0 && a.buffer[o - 1] > -1) {
        if (n == r)
          return;
        if (a.buffer[o - 2] >= n) {
          a.buffer[o - 2] = r;
          return;
        }
      }
    }
    if (!s || this.pos == r)
      this.buffer.push(e, n, r, i);
    else {
      let a = this.buffer.length;
      if (a > 0 && this.buffer[a - 4] != 0) {
        let o = !1;
        for (let l = a; l > 0 && this.buffer[l - 2] > r; l -= 4)
          if (this.buffer[l - 1] >= 0) {
            o = !0;
            break;
          }
        if (o)
          for (; a > 0 && this.buffer[a - 2] > r; )
            this.buffer[a] = this.buffer[a - 4], this.buffer[a + 1] = this.buffer[a - 3], this.buffer[a + 2] = this.buffer[a - 2], this.buffer[a + 3] = this.buffer[a - 1], a -= 4, i > 4 && (i -= 4);
      }
      this.buffer[a] = e, this.buffer[a + 1] = n, this.buffer[a + 2] = r, this.buffer[a + 3] = i;
    }
  }
  // Apply a shift action
  /**
  @internal
  */
  shift(e, n, r, i) {
    if (e & 131072)
      this.pushState(e & 65535, this.pos);
    else if (e & 262144)
      this.pos = i, this.shiftContext(n, r), n <= this.p.parser.maxNode && this.buffer.push(n, r, i, 4);
    else {
      let s = e, { parser: a } = this.p;
      (i > this.pos || n <= a.maxNode) && (this.pos = i, a.stateFlag(
        s,
        1
        /* StateFlag.Skipped */
      ) || (this.reducePos = i)), this.pushState(s, r), this.shiftContext(n, r), n <= a.maxNode && this.buffer.push(n, r, i, 4);
    }
  }
  // Apply an action
  /**
  @internal
  */
  apply(e, n, r, i) {
    e & 65536 ? this.reduce(e) : this.shift(e, n, r, i);
  }
  // Add a prebuilt (reused) node into the buffer.
  /**
  @internal
  */
  useNode(e, n) {
    let r = this.p.reused.length - 1;
    (r < 0 || this.p.reused[r] != e) && (this.p.reused.push(e), r++);
    let i = this.pos;
    this.reducePos = this.pos = i + e.length, this.pushState(n, i), this.buffer.push(
      r,
      i,
      this.reducePos,
      -1
      /* size == -1 means this is a reused value */
    ), this.curContext && this.updateContext(this.curContext.tracker.reuse(this.curContext.context, e, this, this.p.stream.reset(this.pos - e.length)));
  }
  // Split the stack. Due to the buffer sharing and the fact
  // that `this.stack` tends to stay quite shallow, this isn't very
  // expensive.
  /**
  @internal
  */
  split() {
    let e = this, n = e.buffer.length;
    for (; n > 0 && e.buffer[n - 2] > e.reducePos; )
      n -= 4;
    let r = e.buffer.slice(n), i = e.bufferBase + n;
    for (; e && i == e.bufferBase; )
      e = e.parent;
    return new ic(this.p, this.stack.slice(), this.state, this.reducePos, this.pos, this.score, r, i, this.curContext, this.lookAhead, e);
  }
  // Try to recover from an error by 'deleting' (ignoring) one token.
  /**
  @internal
  */
  recoverByDelete(e, n) {
    let r = e <= this.p.parser.maxNode;
    r && this.storeNode(e, this.pos, n, 4), this.storeNode(0, this.pos, n, r ? 8 : 4), this.pos = this.reducePos = n, this.score -= 190;
  }
  /**
  Check if the given term would be able to be shifted (optionally
  after some reductions) on this stack. This can be useful for
  external tokenizers that want to make sure they only provide a
  given token when it applies.
  */
  canShift(e) {
    for (let n = new RQ(this); ; ) {
      let r = this.p.parser.stateSlot(
        n.state,
        4
        /* ParseState.DefaultReduce */
      ) || this.p.parser.hasAction(n.state, e);
      if (r == 0)
        return !1;
      if (!(r & 65536))
        return !0;
      n.reduce(r);
    }
  }
  // Apply up to Recover.MaxNext recovery actions that conceptually
  // inserts some missing token or rule.
  /**
  @internal
  */
  recoverByInsert(e) {
    if (this.stack.length >= 300)
      return [];
    let n = this.p.parser.nextStates(this.state);
    if (n.length > 8 || this.stack.length >= 120) {
      let i = [];
      for (let s = 0, a; s < n.length; s += 2)
        (a = n[s + 1]) != this.state && this.p.parser.hasAction(a, e) && i.push(n[s], a);
      if (this.stack.length < 120)
        for (let s = 0; i.length < 8 && s < n.length; s += 2) {
          let a = n[s + 1];
          i.some((o, l) => l & 1 && o == a) || i.push(n[s], a);
        }
      n = i;
    }
    let r = [];
    for (let i = 0; i < n.length && r.length < 4; i += 2) {
      let s = n[i + 1];
      if (s == this.state)
        continue;
      let a = this.split();
      a.pushState(s, this.pos), a.storeNode(0, a.pos, a.pos, 4, !0), a.shiftContext(n[i], this.pos), a.reducePos = this.pos, a.score -= 200, r.push(a);
    }
    return r;
  }
  // Force a reduce, if possible. Return false if that can't
  // be done.
  /**
  @internal
  */
  forceReduce() {
    let { parser: e } = this.p, n = e.stateSlot(
      this.state,
      5
      /* ParseState.ForcedReduce */
    );
    if (!(n & 65536))
      return !1;
    if (!e.validAction(this.state, n)) {
      let r = n >> 19, i = n & 65535, s = this.stack.length - r * 3;
      if (s < 0 || e.getGoto(this.stack[s], i, !1) < 0) {
        let a = this.findForcedReduction();
        if (a == null)
          return !1;
        n = a;
      }
      this.storeNode(0, this.pos, this.pos, 4, !0), this.score -= 100;
    }
    return this.reducePos = this.pos, this.reduce(n), !0;
  }
  /**
  Try to scan through the automaton to find some kind of reduction
  that can be applied. Used when the regular ForcedReduce field
  isn't a valid action. @internal
  */
  findForcedReduction() {
    let { parser: e } = this.p, n = [], r = (i, s) => {
      if (!n.includes(i))
        return n.push(i), e.allActions(i, (a) => {
          if (!(a & 393216)) if (a & 65536) {
            let o = (a >> 19) - s;
            if (o > 1) {
              let l = a & 65535, c = this.stack.length - o * 3;
              if (c >= 0 && e.getGoto(this.stack[c], l, !1) >= 0)
                return o << 19 | 65536 | l;
            }
          } else {
            let o = r(a, s + 1);
            if (o != null)
              return o;
          }
        });
    };
    return r(this.state, 0);
  }
  /**
  @internal
  */
  forceAll() {
    for (; !this.p.parser.stateFlag(
      this.state,
      2
      /* StateFlag.Accepting */
    ); )
      if (!this.forceReduce()) {
        this.storeNode(0, this.pos, this.pos, 4, !0);
        break;
      }
    return this;
  }
  /**
  Check whether this state has no further actions (assumed to be a direct descendant of the
  top state, since any other states must be able to continue
  somehow). @internal
  */
  get deadEnd() {
    if (this.stack.length != 3)
      return !1;
    let { parser: e } = this.p;
    return e.data[e.stateSlot(
      this.state,
      1
      /* ParseState.Actions */
    )] == 65535 && !e.stateSlot(
      this.state,
      4
      /* ParseState.DefaultReduce */
    );
  }
  /**
  Restart the stack (put it back in its start state). Only safe
  when this.stack.length == 3 (state is directly below the top
  state). @internal
  */
  restart() {
    this.storeNode(0, this.pos, this.pos, 4, !0), this.state = this.stack[0], this.stack.length = 0;
  }
  /**
  @internal
  */
  sameState(e) {
    if (this.state != e.state || this.stack.length != e.stack.length)
      return !1;
    for (let n = 0; n < this.stack.length; n += 3)
      if (this.stack[n] != e.stack[n])
        return !1;
    return !0;
  }
  /**
  Get the parser used by this stack.
  */
  get parser() {
    return this.p.parser;
  }
  /**
  Test whether a given dialect (by numeric ID, as exported from
  the terms file) is enabled.
  */
  dialectEnabled(e) {
    return this.p.parser.dialect.flags[e];
  }
  shiftContext(e, n) {
    this.curContext && this.updateContext(this.curContext.tracker.shift(this.curContext.context, e, this, this.p.stream.reset(n)));
  }
  reduceContext(e, n) {
    this.curContext && this.updateContext(this.curContext.tracker.reduce(this.curContext.context, e, this, this.p.stream.reset(n)));
  }
  /**
  @internal
  */
  emitContext() {
    let e = this.buffer.length - 1;
    (e < 0 || this.buffer[e] != -3) && this.buffer.push(this.curContext.hash, this.pos, this.pos, -3);
  }
  /**
  @internal
  */
  emitLookAhead() {
    let e = this.buffer.length - 1;
    (e < 0 || this.buffer[e] != -4) && this.buffer.push(this.lookAhead, this.pos, this.pos, -4);
  }
  updateContext(e) {
    if (e != this.curContext.context) {
      let n = new R0(this.curContext.tracker, e);
      n.hash != this.curContext.hash && this.emitContext(), this.curContext = n;
    }
  }
  /**
  @internal
  */
  setLookAhead(e) {
    e > this.lookAhead && (this.emitLookAhead(), this.lookAhead = e);
  }
  /**
  @internal
  */
  close() {
    this.curContext && this.curContext.tracker.strict && this.emitContext(), this.lookAhead > 0 && this.emitLookAhead();
  }
}
class R0 {
  constructor(e, n) {
    this.tracker = e, this.context = n, this.hash = e.strict ? e.hash(n) : 0;
  }
}
class RQ {
  constructor(e) {
    this.start = e, this.state = e.state, this.stack = e.stack, this.base = this.stack.length;
  }
  reduce(e) {
    let n = e & 65535, r = e >> 19;
    r == 0 ? (this.stack == this.start.stack && (this.stack = this.stack.slice()), this.stack.push(this.state, 0, 0), this.base += 3) : this.base -= (r - 1) * 3;
    let i = this.start.p.parser.getGoto(this.stack[this.base - 3], n, !0);
    this.state = i;
  }
}
class sc {
  constructor(e, n, r) {
    this.stack = e, this.pos = n, this.index = r, this.buffer = e.buffer, this.index == 0 && this.maybeNext();
  }
  static create(e, n = e.bufferBase + e.buffer.length) {
    return new sc(e, n, n - e.bufferBase);
  }
  maybeNext() {
    let e = this.stack.parent;
    e != null && (this.index = this.stack.bufferBase - e.bufferBase, this.stack = e, this.buffer = e.buffer);
  }
  get id() {
    return this.buffer[this.index - 4];
  }
  get start() {
    return this.buffer[this.index - 3];
  }
  get end() {
    return this.buffer[this.index - 2];
  }
  get size() {
    return this.buffer[this.index - 1];
  }
  next() {
    this.index -= 4, this.pos -= 4, this.index == 0 && this.maybeNext();
  }
  fork() {
    return new sc(this.stack, this.pos, this.index);
  }
}
function uo(t, e = Uint16Array) {
  if (typeof t != "string")
    return t;
  let n = null;
  for (let r = 0, i = 0; r < t.length; ) {
    let s = 0;
    for (; ; ) {
      let a = t.charCodeAt(r++), o = !1;
      if (a == 126) {
        s = 65535;
        break;
      }
      a >= 92 && a--, a >= 34 && a--;
      let l = a - 32;
      if (l >= 46 && (l -= 46, o = !0), s += l, o)
        break;
      s *= 46;
    }
    n ? n[i++] = s : n = new e(s);
  }
  return n;
}
class uu {
  constructor() {
    this.start = -1, this.value = -1, this.end = -1, this.extended = -1, this.lookAhead = 0, this.mask = 0, this.context = 0;
  }
}
const $0 = new uu();
class $Q {
  /**
  @internal
  */
  constructor(e, n) {
    this.input = e, this.ranges = n, this.chunk = "", this.chunkOff = 0, this.chunk2 = "", this.chunk2Pos = 0, this.next = -1, this.token = $0, this.rangeIndex = 0, this.pos = this.chunkPos = n[0].from, this.range = n[0], this.end = n[n.length - 1].to, this.readNext();
  }
  /**
  @internal
  */
  resolveOffset(e, n) {
    let r = this.range, i = this.rangeIndex, s = this.pos + e;
    for (; s < r.from; ) {
      if (!i)
        return null;
      let a = this.ranges[--i];
      s -= r.from - a.to, r = a;
    }
    for (; n < 0 ? s > r.to : s >= r.to; ) {
      if (i == this.ranges.length - 1)
        return null;
      let a = this.ranges[++i];
      s += a.from - r.to, r = a;
    }
    return s;
  }
  /**
  @internal
  */
  clipPos(e) {
    if (e >= this.range.from && e < this.range.to)
      return e;
    for (let n of this.ranges)
      if (n.to > e)
        return Math.max(e, n.from);
    return this.end;
  }
  /**
  Look at a code unit near the stream position. `.peek(0)` equals
  `.next`, `.peek(-1)` gives you the previous character, and so
  on.
  
  Note that looking around during tokenizing creates dependencies
  on potentially far-away content, which may reduce the
  effectiveness incremental parsing—when looking forward—or even
  cause invalid reparses when looking backward more than 25 code
  units, since the library does not track lookbehind.
  */
  peek(e) {
    let n = this.chunkOff + e, r, i;
    if (n >= 0 && n < this.chunk.length)
      r = this.pos + e, i = this.chunk.charCodeAt(n);
    else {
      let s = this.resolveOffset(e, 1);
      if (s == null)
        return -1;
      if (r = s, r >= this.chunk2Pos && r < this.chunk2Pos + this.chunk2.length)
        i = this.chunk2.charCodeAt(r - this.chunk2Pos);
      else {
        let a = this.rangeIndex, o = this.range;
        for (; o.to <= r; )
          o = this.ranges[++a];
        this.chunk2 = this.input.chunk(this.chunk2Pos = r), r + this.chunk2.length > o.to && (this.chunk2 = this.chunk2.slice(0, o.to - r)), i = this.chunk2.charCodeAt(0);
      }
    }
    return r >= this.token.lookAhead && (this.token.lookAhead = r + 1), i;
  }
  /**
  Accept a token. By default, the end of the token is set to the
  current stream position, but you can pass an offset (relative to
  the stream position) to change that.
  */
  acceptToken(e, n = 0) {
    let r = n ? this.resolveOffset(n, -1) : this.pos;
    if (r == null || r < this.token.start)
      throw new RangeError("Token end out of bounds");
    this.token.value = e, this.token.end = r;
  }
  /**
  Accept a token ending at a specific given position.
  */
  acceptTokenTo(e, n) {
    this.token.value = e, this.token.end = n;
  }
  getChunk() {
    if (this.pos >= this.chunk2Pos && this.pos < this.chunk2Pos + this.chunk2.length) {
      let { chunk: e, chunkPos: n } = this;
      this.chunk = this.chunk2, this.chunkPos = this.chunk2Pos, this.chunk2 = e, this.chunk2Pos = n, this.chunkOff = this.pos - this.chunkPos;
    } else {
      this.chunk2 = this.chunk, this.chunk2Pos = this.chunkPos;
      let e = this.input.chunk(this.pos), n = this.pos + e.length;
      this.chunk = n > this.range.to ? e.slice(0, this.range.to - this.pos) : e, this.chunkPos = this.pos, this.chunkOff = 0;
    }
  }
  readNext() {
    return this.chunkOff >= this.chunk.length && (this.getChunk(), this.chunkOff == this.chunk.length) ? this.next = -1 : this.next = this.chunk.charCodeAt(this.chunkOff);
  }
  /**
  Move the stream forward N (defaults to 1) code units. Returns
  the new value of [`next`](#lr.InputStream.next).
  */
  advance(e = 1) {
    for (this.chunkOff += e; this.pos + e >= this.range.to; ) {
      if (this.rangeIndex == this.ranges.length - 1)
        return this.setDone();
      e -= this.range.to - this.pos, this.range = this.ranges[++this.rangeIndex], this.pos = this.range.from;
    }
    return this.pos += e, this.pos >= this.token.lookAhead && (this.token.lookAhead = this.pos + 1), this.readNext();
  }
  setDone() {
    return this.pos = this.chunkPos = this.end, this.range = this.ranges[this.rangeIndex = this.ranges.length - 1], this.chunk = "", this.next = -1;
  }
  /**
  @internal
  */
  reset(e, n) {
    if (n ? (this.token = n, n.start = e, n.lookAhead = e + 1, n.value = n.extended = -1) : this.token = $0, this.pos != e) {
      if (this.pos = e, e == this.end)
        return this.setDone(), this;
      for (; e < this.range.from; )
        this.range = this.ranges[--this.rangeIndex];
      for (; e >= this.range.to; )
        this.range = this.ranges[++this.rangeIndex];
      e >= this.chunkPos && e < this.chunkPos + this.chunk.length ? this.chunkOff = e - this.chunkPos : (this.chunk = "", this.chunkOff = 0), this.readNext();
    }
    return this;
  }
  /**
  @internal
  */
  read(e, n) {
    if (e >= this.chunkPos && n <= this.chunkPos + this.chunk.length)
      return this.chunk.slice(e - this.chunkPos, n - this.chunkPos);
    if (e >= this.chunk2Pos && n <= this.chunk2Pos + this.chunk2.length)
      return this.chunk2.slice(e - this.chunk2Pos, n - this.chunk2Pos);
    if (e >= this.range.from && n <= this.range.to)
      return this.input.read(e, n);
    let r = "";
    for (let i of this.ranges) {
      if (i.from >= n)
        break;
      i.to > e && (r += this.input.read(Math.max(i.from, e), Math.min(i.to, n)));
    }
    return r;
  }
}
class ca {
  constructor(e, n) {
    this.data = e, this.id = n;
  }
  token(e, n) {
    let { parser: r } = n.p;
    yA(this.data, e, n, this.id, r.data, r.tokenPrecTable);
  }
}
ca.prototype.contextual = ca.prototype.fallback = ca.prototype.extend = !1;
class xf {
  constructor(e, n, r) {
    this.precTable = n, this.elseToken = r, this.data = typeof e == "string" ? uo(e) : e;
  }
  token(e, n) {
    let r = e.pos, i = 0;
    for (; ; ) {
      let s = e.next < 0, a = e.resolveOffset(1, 1);
      if (yA(this.data, e, n, 0, this.data, this.precTable), e.token.value > -1)
        break;
      if (this.elseToken == null)
        return;
      if (s || i++, a == null)
        break;
      e.reset(a, e.token);
    }
    i && (e.reset(r, e.token), e.acceptToken(this.elseToken, i));
  }
}
xf.prototype.contextual = ca.prototype.fallback = ca.prototype.extend = !1;
class el {
  /**
  Create a tokenizer. The first argument is the function that,
  given an input stream, scans for the types of tokens it
  recognizes at the stream's position, and calls
  [`acceptToken`](#lr.InputStream.acceptToken) when it finds
  one.
  */
  constructor(e, n = {}) {
    this.token = e, this.contextual = !!n.contextual, this.fallback = !!n.fallback, this.extend = !!n.extend;
  }
}
function yA(t, e, n, r, i, s) {
  let a = 0, o = 1 << r, { dialect: l } = n.p.parser;
  e: for (; o & t[a]; ) {
    let c = t[a + 1];
    for (let y = a + 3; y < c; y += 2)
      if ((t[y + 1] & o) > 0) {
        let x = t[y];
        if (l.allows(x) && (e.token.value == -1 || e.token.value == x || ZQ(x, e.token.value, i, s))) {
          e.acceptToken(x);
          break;
        }
      }
    let h = e.next, f = 0, m = t[a + 2];
    if (e.next < 0 && m > f && t[c + m * 3 - 3] == 65535) {
      a = t[c + m * 3 - 1];
      continue e;
    }
    for (; f < m; ) {
      let y = f + m >> 1, x = c + y + (y << 1), C = t[x], S = t[x + 1] || 65536;
      if (h < C)
        m = y;
      else if (h >= S)
        f = y + 1;
      else {
        a = t[x + 2], e.advance();
        continue e;
      }
    }
    break;
  }
}
function Z0(t, e, n) {
  for (let r = e, i; (i = t[r]) != 65535; r++)
    if (i == n)
      return r - e;
  return -1;
}
function ZQ(t, e, n, r) {
  let i = Z0(n, r, e);
  return i < 0 || Z0(n, r, t) < i;
}
const rr = typeof process < "u" && process.env && /\bparse\b/.test(process.env.LOG);
let tp = null;
function L0(t, e, n) {
  let r = t.cursor(cn.IncludeAnonymous);
  for (r.moveTo(e); ; )
    if (!(n < 0 ? r.childBefore(e) : r.childAfter(e)))
      for (; ; ) {
        if ((n < 0 ? r.to < e : r.from > e) && !r.type.isError)
          return n < 0 ? Math.max(0, Math.min(
            r.to - 1,
            e - 25
            /* Lookahead.Margin */
          )) : Math.min(t.length, Math.max(
            r.from + 1,
            e + 25
            /* Lookahead.Margin */
          ));
        if (n < 0 ? r.prevSibling() : r.nextSibling())
          break;
        if (!r.parent())
          return n < 0 ? 0 : t.length;
      }
}
class LQ {
  constructor(e, n) {
    this.fragments = e, this.nodeSet = n, this.i = 0, this.fragment = null, this.safeFrom = -1, this.safeTo = -1, this.trees = [], this.start = [], this.index = [], this.nextFragment();
  }
  nextFragment() {
    let e = this.fragment = this.i == this.fragments.length ? null : this.fragments[this.i++];
    if (e) {
      for (this.safeFrom = e.openStart ? L0(e.tree, e.from + e.offset, 1) - e.offset : e.from, this.safeTo = e.openEnd ? L0(e.tree, e.to + e.offset, -1) - e.offset : e.to; this.trees.length; )
        this.trees.pop(), this.start.pop(), this.index.pop();
      this.trees.push(e.tree), this.start.push(-e.offset), this.index.push(0), this.nextStart = this.safeFrom;
    } else
      this.nextStart = 1e9;
  }
  // `pos` must be >= any previously given `pos` for this cursor
  nodeAt(e) {
    if (e < this.nextStart)
      return null;
    for (; this.fragment && this.safeTo <= e; )
      this.nextFragment();
    if (!this.fragment)
      return null;
    for (; ; ) {
      let n = this.trees.length - 1;
      if (n < 0)
        return this.nextFragment(), null;
      let r = this.trees[n], i = this.index[n];
      if (i == r.children.length) {
        this.trees.pop(), this.start.pop(), this.index.pop();
        continue;
      }
      let s = r.children[i], a = this.start[n] + r.positions[i];
      if (a > e)
        return this.nextStart = a, null;
      if (s instanceof on) {
        if (a == e) {
          if (a < this.safeFrom)
            return null;
          let o = a + s.length;
          if (o <= this.safeTo) {
            let l = s.prop(nt.lookAhead);
            if (!l || o + l < this.fragment.to)
              return s;
          }
        }
        this.index[n]++, a + s.length >= Math.max(this.safeFrom, e) && (this.trees.push(s), this.start.push(a), this.index.push(0));
      } else
        this.index[n]++, this.nextStart = a + s.length;
    }
  }
}
class IQ {
  constructor(e, n) {
    this.stream = n, this.tokens = [], this.mainToken = null, this.actions = [], this.tokens = e.tokenizers.map((r) => new uu());
  }
  getActions(e) {
    let n = 0, r = null, { parser: i } = e.p, { tokenizers: s } = i, a = i.stateSlot(
      e.state,
      3
      /* ParseState.TokenizerMask */
    ), o = e.curContext ? e.curContext.hash : 0, l = 0;
    for (let c = 0; c < s.length; c++) {
      if (!(1 << c & a))
        continue;
      let h = s[c], f = this.tokens[c];
      if (!(r && !h.fallback) && ((h.contextual || f.start != e.pos || f.mask != a || f.context != o) && (this.updateCachedToken(f, h, e), f.mask = a, f.context = o), f.lookAhead > f.end + 25 && (l = Math.max(f.lookAhead, l)), f.value != 0)) {
        let m = n;
        if (f.extended > -1 && (n = this.addActions(e, f.extended, f.end, n)), n = this.addActions(e, f.value, f.end, n), !h.extend && (r = f, n > m))
          break;
      }
    }
    for (; this.actions.length > n; )
      this.actions.pop();
    return l && e.setLookAhead(l), !r && e.pos == this.stream.end && (r = new uu(), r.value = e.p.parser.eofTerm, r.start = r.end = e.pos, n = this.addActions(e, r.value, r.end, n)), this.mainToken = r, this.actions;
  }
  getMainToken(e) {
    if (this.mainToken)
      return this.mainToken;
    let n = new uu(), { pos: r, p: i } = e;
    return n.start = r, n.end = Math.min(r + 1, i.stream.end), n.value = r == i.stream.end ? i.parser.eofTerm : 0, n;
  }
  updateCachedToken(e, n, r) {
    let i = this.stream.clipPos(r.pos);
    if (n.token(this.stream.reset(i, e), r), e.value > -1) {
      let { parser: s } = r.p;
      for (let a = 0; a < s.specialized.length; a++)
        if (s.specialized[a] == e.value) {
          let o = s.specializers[a](this.stream.read(e.start, e.end), r);
          if (o >= 0 && r.p.parser.dialect.allows(o >> 1)) {
            o & 1 ? e.extended = o >> 1 : e.value = o >> 1;
            break;
          }
        }
    } else
      e.value = 0, e.end = this.stream.clipPos(i + 1);
  }
  putAction(e, n, r, i) {
    for (let s = 0; s < i; s += 3)
      if (this.actions[s] == e)
        return i;
    return this.actions[i++] = e, this.actions[i++] = n, this.actions[i++] = r, i;
  }
  addActions(e, n, r, i) {
    let { state: s } = e, { parser: a } = e.p, { data: o } = a;
    for (let l = 0; l < 2; l++)
      for (let c = a.stateSlot(
        s,
        l ? 2 : 1
        /* ParseState.Actions */
      ); ; c += 3) {
        if (o[c] == 65535)
          if (o[c + 1] == 1)
            c = xi(o, c + 2);
          else {
            i == 0 && o[c + 1] == 2 && (i = this.putAction(xi(o, c + 2), n, r, i));
            break;
          }
        o[c] == n && (i = this.putAction(xi(o, c + 1), n, r, i));
      }
    return i;
  }
}
class NQ {
  constructor(e, n, r, i) {
    this.parser = e, this.input = n, this.ranges = i, this.recovering = 0, this.nextStackID = 9812, this.minStackPos = 0, this.reused = [], this.stoppedAt = null, this.lastBigReductionStart = -1, this.lastBigReductionSize = 0, this.bigReductionCount = 0, this.stream = new $Q(n, i), this.tokens = new IQ(e, this.stream), this.topTerm = e.top[1];
    let { from: s } = i[0];
    this.stacks = [ic.start(this, e.top[0], s)], this.fragments = r.length && this.stream.end - s > e.bufferLength * 4 ? new LQ(r, e.nodeSet) : null;
  }
  get parsedPos() {
    return this.minStackPos;
  }
  // Move the parser forward. This will process all parse stacks at
  // `this.pos` and try to advance them to a further position. If no
  // stack for such a position is found, it'll start error-recovery.
  //
  // When the parse is finished, this will return a syntax tree. When
  // not, it returns `null`.
  advance() {
    let e = this.stacks, n = this.minStackPos, r = this.stacks = [], i, s;
    if (this.bigReductionCount > 300 && e.length == 1) {
      let [a] = e;
      for (; a.forceReduce() && a.stack.length && a.stack[a.stack.length - 2] >= this.lastBigReductionStart; )
        ;
      this.bigReductionCount = this.lastBigReductionSize = 0;
    }
    for (let a = 0; a < e.length; a++) {
      let o = e[a];
      for (; ; ) {
        if (this.tokens.mainToken = null, o.pos > n)
          r.push(o);
        else {
          if (this.advanceStack(o, r, e))
            continue;
          {
            i || (i = [], s = []), i.push(o);
            let l = this.tokens.getMainToken(o);
            s.push(l.value, l.end);
          }
        }
        break;
      }
    }
    if (!r.length) {
      let a = i && WQ(i);
      if (a)
        return rr && console.log("Finish with " + this.stackID(a)), this.stackToTree(a);
      if (this.parser.strict)
        throw rr && i && console.log("Stuck with token " + (this.tokens.mainToken ? this.parser.getName(this.tokens.mainToken.value) : "none")), new SyntaxError("No parse at " + n);
      this.recovering || (this.recovering = 5);
    }
    if (this.recovering && i) {
      let a = this.stoppedAt != null && i[0].pos > this.stoppedAt ? i[0] : this.runRecovery(i, s, r);
      if (a)
        return rr && console.log("Force-finish " + this.stackID(a)), this.stackToTree(a.forceAll());
    }
    if (this.recovering) {
      let a = this.recovering == 1 ? 1 : this.recovering * 3;
      if (r.length > a)
        for (r.sort((o, l) => l.score - o.score); r.length > a; )
          r.pop();
      r.some((o) => o.reducePos > n) && this.recovering--;
    } else if (r.length > 1) {
      e: for (let a = 0; a < r.length - 1; a++) {
        let o = r[a];
        for (let l = a + 1; l < r.length; l++) {
          let c = r[l];
          if (o.sameState(c) || o.buffer.length > 500 && c.buffer.length > 500)
            if ((o.score - c.score || o.buffer.length - c.buffer.length) > 0)
              r.splice(l--, 1);
            else {
              r.splice(a--, 1);
              continue e;
            }
        }
      }
      r.length > 12 && r.splice(
        12,
        r.length - 12
        /* Rec.MaxStackCount */
      );
    }
    this.minStackPos = r[0].pos;
    for (let a = 1; a < r.length; a++)
      r[a].pos < this.minStackPos && (this.minStackPos = r[a].pos);
    return null;
  }
  stopAt(e) {
    if (this.stoppedAt != null && this.stoppedAt < e)
      throw new RangeError("Can't move stoppedAt forward");
    this.stoppedAt = e;
  }
  // Returns an updated version of the given stack, or null if the
  // stack can't advance normally. When `split` and `stacks` are
  // given, stacks split off by ambiguous operations will be pushed to
  // `split`, or added to `stacks` if they move `pos` forward.
  advanceStack(e, n, r) {
    let i = e.pos, { parser: s } = this, a = rr ? this.stackID(e) + " -> " : "";
    if (this.stoppedAt != null && i > this.stoppedAt)
      return e.forceReduce() ? e : null;
    if (this.fragments) {
      let c = e.curContext && e.curContext.tracker.strict, h = c ? e.curContext.hash : 0;
      for (let f = this.fragments.nodeAt(i); f; ) {
        let m = this.parser.nodeSet.types[f.type.id] == f.type ? s.getGoto(e.state, f.type.id) : -1;
        if (m > -1 && f.length && (!c || (f.prop(nt.contextHash) || 0) == h))
          return e.useNode(f, m), rr && console.log(a + this.stackID(e) + ` (via reuse of ${s.getName(f.type.id)})`), !0;
        if (!(f instanceof on) || f.children.length == 0 || f.positions[0] > 0)
          break;
        let y = f.children[0];
        if (y instanceof on && f.positions[0] == 0)
          f = y;
        else
          break;
      }
    }
    let o = s.stateSlot(
      e.state,
      4
      /* ParseState.DefaultReduce */
    );
    if (o > 0)
      return e.reduce(o), rr && console.log(a + this.stackID(e) + ` (via always-reduce ${s.getName(
        o & 65535
        /* Action.ValueMask */
      )})`), !0;
    if (e.stack.length >= 8400)
      for (; e.stack.length > 6e3 && e.forceReduce(); )
        ;
    let l = this.tokens.getActions(e);
    for (let c = 0; c < l.length; ) {
      let h = l[c++], f = l[c++], m = l[c++], y = c == l.length || !r, x = y ? e : e.split(), C = this.tokens.mainToken;
      if (x.apply(h, f, C ? C.start : x.pos, m), rr && console.log(a + this.stackID(x) + ` (via ${h & 65536 ? `reduce of ${s.getName(
        h & 65535
        /* Action.ValueMask */
      )}` : "shift"} for ${s.getName(f)} @ ${i}${x == e ? "" : ", split"})`), y)
        return !0;
      x.pos > i ? n.push(x) : r.push(x);
    }
    return !1;
  }
  // Advance a given stack forward as far as it will go. Returns the
  // (possibly updated) stack if it got stuck, or null if it moved
  // forward and was given to `pushStackDedup`.
  advanceFully(e, n) {
    let r = e.pos;
    for (; ; ) {
      if (!this.advanceStack(e, null, null))
        return !1;
      if (e.pos > r)
        return I0(e, n), !0;
    }
  }
  runRecovery(e, n, r) {
    let i = null, s = !1;
    for (let a = 0; a < e.length; a++) {
      let o = e[a], l = n[a << 1], c = n[(a << 1) + 1], h = rr ? this.stackID(o) + " -> " : "";
      if (o.deadEnd && (s || (s = !0, o.restart(), rr && console.log(h + this.stackID(o) + " (restarted)"), this.advanceFully(o, r))))
        continue;
      let f = o.split(), m = h;
      for (let y = 0; f.forceReduce() && y < 10 && (rr && console.log(m + this.stackID(f) + " (via force-reduce)"), !this.advanceFully(f, r)); y++)
        rr && (m = this.stackID(f) + " -> ");
      for (let y of o.recoverByInsert(l))
        rr && console.log(h + this.stackID(y) + " (via recover-insert)"), this.advanceFully(y, r);
      this.stream.end > o.pos ? (c == o.pos && (c++, l = 0), o.recoverByDelete(l, c), rr && console.log(h + this.stackID(o) + ` (via recover-delete ${this.parser.getName(l)})`), I0(o, r)) : (!i || i.score < o.score) && (i = o);
    }
    return i;
  }
  // Convert the stack's buffer to a syntax tree.
  stackToTree(e) {
    return e.close(), on.build({
      buffer: sc.create(e),
      nodeSet: this.parser.nodeSet,
      topID: this.topTerm,
      maxBufferLength: this.parser.bufferLength,
      reused: this.reused,
      start: this.ranges[0].from,
      length: e.pos - this.ranges[0].from,
      minRepeatType: this.parser.minRepeatTerm
    });
  }
  stackID(e) {
    let n = (tp || (tp = /* @__PURE__ */ new WeakMap())).get(e);
    return n || tp.set(e, n = String.fromCodePoint(this.nextStackID++)), n + e;
  }
}
function I0(t, e) {
  for (let n = 0; n < e.length; n++) {
    let r = e[n];
    if (r.pos == t.pos && r.sameState(t)) {
      e[n].score < t.score && (e[n] = t);
      return;
    }
  }
  e.push(t);
}
class VQ {
  constructor(e, n, r) {
    this.source = e, this.flags = n, this.disabled = r;
  }
  allows(e) {
    return !this.disabled || this.disabled[e] == 0;
  }
}
const np = (t) => t;
class XQ {
  /**
  Define a context tracker.
  */
  constructor(e) {
    this.start = e.start, this.shift = e.shift || np, this.reduce = e.reduce || np, this.reuse = e.reuse || np, this.hash = e.hash || (() => 0), this.strict = e.strict !== !1;
  }
}
class ac extends zC {
  /**
  @internal
  */
  constructor(e) {
    if (super(), this.wrappers = [], e.version != 14)
      throw new RangeError(`Parser version (${e.version}) doesn't match runtime version (14)`);
    let n = e.nodeNames.split(" ");
    this.minRepeatTerm = n.length;
    for (let o = 0; o < e.repeatNodeCount; o++)
      n.push("");
    let r = Object.keys(e.topRules).map((o) => e.topRules[o][1]), i = [];
    for (let o = 0; o < n.length; o++)
      i.push([]);
    function s(o, l, c) {
      i[o].push([l, l.deserialize(String(c))]);
    }
    if (e.nodeProps)
      for (let o of e.nodeProps) {
        let l = o[0];
        typeof l == "string" && (l = nt[l]);
        for (let c = 1; c < o.length; ) {
          let h = o[c++];
          if (h >= 0)
            s(h, l, o[c++]);
          else {
            let f = o[c + -h];
            for (let m = -h; m > 0; m--)
              s(o[c++], l, f);
            c++;
          }
        }
      }
    this.nodeSet = new Ud(n.map((o, l) => Hn.define({
      name: l >= this.minRepeatTerm ? void 0 : o,
      id: l,
      props: i[l],
      top: r.indexOf(l) > -1,
      error: l == 0,
      skipped: e.skippedNodes && e.skippedNodes.indexOf(l) > -1
    }))), e.propSources && (this.nodeSet = this.nodeSet.extend(...e.propSources)), this.strict = !1, this.bufferLength = WC;
    let a = uo(e.tokenData);
    this.context = e.context, this.specializerSpecs = e.specialized || [], this.specialized = new Uint16Array(this.specializerSpecs.length);
    for (let o = 0; o < this.specializerSpecs.length; o++)
      this.specialized[o] = this.specializerSpecs[o].term;
    this.specializers = this.specializerSpecs.map(N0), this.states = uo(e.states, Uint32Array), this.data = uo(e.stateData), this.goto = uo(e.goto), this.maxTerm = e.maxTerm, this.tokenizers = e.tokenizers.map((o) => typeof o == "number" ? new ca(a, o) : o), this.topRules = e.topRules, this.dialects = e.dialects || {}, this.dynamicPrecedences = e.dynamicPrecedences || null, this.tokenPrecTable = e.tokenPrec, this.termNames = e.termNames || null, this.maxNode = this.nodeSet.types.length - 1, this.dialect = this.parseDialect(), this.top = this.topRules[Object.keys(this.topRules)[0]];
  }
  createParse(e, n, r) {
    let i = new NQ(this, e, n, r);
    for (let s of this.wrappers)
      i = s(i, e, n, r);
    return i;
  }
  /**
  Get a goto table entry @internal
  */
  getGoto(e, n, r = !1) {
    let i = this.goto;
    if (n >= i[0])
      return -1;
    for (let s = i[n + 1]; ; ) {
      let a = i[s++], o = a & 1, l = i[s++];
      if (o && r)
        return l;
      for (let c = s + (a >> 1); s < c; s++)
        if (i[s] == e)
          return l;
      if (o)
        return -1;
    }
  }
  /**
  Check if this state has an action for a given terminal @internal
  */
  hasAction(e, n) {
    let r = this.data;
    for (let i = 0; i < 2; i++)
      for (let s = this.stateSlot(
        e,
        i ? 2 : 1
        /* ParseState.Actions */
      ), a; ; s += 3) {
        if ((a = r[s]) == 65535)
          if (r[s + 1] == 1)
            a = r[s = xi(r, s + 2)];
          else {
            if (r[s + 1] == 2)
              return xi(r, s + 2);
            break;
          }
        if (a == n || a == 0)
          return xi(r, s + 1);
      }
    return 0;
  }
  /**
  @internal
  */
  stateSlot(e, n) {
    return this.states[e * 6 + n];
  }
  /**
  @internal
  */
  stateFlag(e, n) {
    return (this.stateSlot(
      e,
      0
      /* ParseState.Flags */
    ) & n) > 0;
  }
  /**
  @internal
  */
  validAction(e, n) {
    return !!this.allActions(e, (r) => r == n ? !0 : null);
  }
  /**
  @internal
  */
  allActions(e, n) {
    let r = this.stateSlot(
      e,
      4
      /* ParseState.DefaultReduce */
    ), i = r ? n(r) : void 0;
    for (let s = this.stateSlot(
      e,
      1
      /* ParseState.Actions */
    ); i == null; s += 3) {
      if (this.data[s] == 65535)
        if (this.data[s + 1] == 1)
          s = xi(this.data, s + 2);
        else
          break;
      i = n(xi(this.data, s + 1));
    }
    return i;
  }
  /**
  Get the states that can follow this one through shift actions or
  goto jumps. @internal
  */
  nextStates(e) {
    let n = [];
    for (let r = this.stateSlot(
      e,
      1
      /* ParseState.Actions */
    ); ; r += 3) {
      if (this.data[r] == 65535)
        if (this.data[r + 1] == 1)
          r = xi(this.data, r + 2);
        else
          break;
      if (!(this.data[r + 2] & 1)) {
        let i = this.data[r + 1];
        n.some((s, a) => a & 1 && s == i) || n.push(this.data[r], i);
      }
    }
    return n;
  }
  /**
  Configure the parser. Returns a new parser instance that has the
  given settings modified. Settings not provided in `config` are
  kept from the original parser.
  */
  configure(e) {
    let n = Object.assign(Object.create(ac.prototype), this);
    if (e.props && (n.nodeSet = this.nodeSet.extend(...e.props)), e.top) {
      let r = this.topRules[e.top];
      if (!r)
        throw new RangeError(`Invalid top rule name ${e.top}`);
      n.top = r;
    }
    return e.tokenizers && (n.tokenizers = this.tokenizers.map((r) => {
      let i = e.tokenizers.find((s) => s.from == r);
      return i ? i.to : r;
    })), e.specializers && (n.specializers = this.specializers.slice(), n.specializerSpecs = this.specializerSpecs.map((r, i) => {
      let s = e.specializers.find((o) => o.from == r.external);
      if (!s)
        return r;
      let a = Object.assign(Object.assign({}, r), { external: s.to });
      return n.specializers[i] = N0(a), a;
    })), e.contextTracker && (n.context = e.contextTracker), e.dialect && (n.dialect = this.parseDialect(e.dialect)), e.strict != null && (n.strict = e.strict), e.wrap && (n.wrappers = n.wrappers.concat(e.wrap)), e.bufferLength != null && (n.bufferLength = e.bufferLength), n;
  }
  /**
  Tells you whether any [parse wrappers](#lr.ParserConfig.wrap)
  are registered for this parser.
  */
  hasWrappers() {
    return this.wrappers.length > 0;
  }
  /**
  Returns the name associated with a given term. This will only
  work for all terms when the parser was generated with the
  `--names` option. By default, only the names of tagged terms are
  stored.
  */
  getName(e) {
    return this.termNames ? this.termNames[e] : String(e <= this.maxNode && this.nodeSet.types[e].name || e);
  }
  /**
  The eof term id is always allocated directly after the node
  types. @internal
  */
  get eofTerm() {
    return this.maxNode + 1;
  }
  /**
  The type of top node produced by the parser.
  */
  get topNode() {
    return this.nodeSet.types[this.top[1]];
  }
  /**
  @internal
  */
  dynamicPrecedence(e) {
    let n = this.dynamicPrecedences;
    return n == null ? 0 : n[e] || 0;
  }
  /**
  @internal
  */
  parseDialect(e) {
    let n = Object.keys(this.dialects), r = n.map(() => !1);
    if (e)
      for (let s of e.split(" ")) {
        let a = n.indexOf(s);
        a >= 0 && (r[a] = !0);
      }
    let i = null;
    for (let s = 0; s < n.length; s++)
      if (!r[s])
        for (let a = this.dialects[n[s]], o; (o = this.data[a++]) != 65535; )
          (i || (i = new Uint8Array(this.maxTerm + 1)))[o] = 1;
    return new VQ(e, r, i);
  }
  /**
  Used by the output of the parser generator. Not available to
  user code. @hide
  */
  static deserialize(e) {
    return new ac(e);
  }
}
function xi(t, e) {
  return t[e] | t[e + 1] << 16;
}
function WQ(t) {
  let e = null;
  for (let n of t) {
    let r = n.p.stoppedAt;
    (n.pos == n.p.stream.end || r != null && n.pos > r) && n.p.parser.stateFlag(
      n.state,
      2
      /* StateFlag.Accepting */
    ) && (!e || e.score < n.score) && (e = n);
  }
  return e;
}
function N0(t) {
  if (t.external) {
    let e = t.extend ? 1 : 0;
    return (n, r) => t.external(n, r) << 1 | e;
  }
  return t.get;
}
const qQ = 314, UQ = 315, V0 = 1, GQ = 2, zQ = 3, HQ = 4, YQ = 316, KQ = 318, JQ = 319, eT = 5, tT = 6, nT = 0, kf = [
  9,
  10,
  11,
  12,
  13,
  32,
  133,
  160,
  5760,
  8192,
  8193,
  8194,
  8195,
  8196,
  8197,
  8198,
  8199,
  8200,
  8201,
  8202,
  8232,
  8233,
  8239,
  8287,
  12288
], OA = 125, rT = 59, wf = 47, iT = 42, sT = 43, aT = 45, oT = 60, lT = 44, uT = 63, cT = 46, hT = 91, pT = new XQ({
  start: !1,
  shift(t, e) {
    return e == eT || e == tT || e == KQ ? t : e == JQ;
  },
  strict: !1
}), fT = new el((t, e) => {
  let { next: n } = t;
  (n == OA || n == -1 || e.context) && t.acceptToken(YQ);
}, { contextual: !0, fallback: !0 }), dT = new el((t, e) => {
  let { next: n } = t, r;
  kf.indexOf(n) > -1 || n == wf && ((r = t.peek(1)) == wf || r == iT) || n != OA && n != rT && n != -1 && !e.context && t.acceptToken(qQ);
}, { contextual: !0 }), mT = new el((t, e) => {
  t.next == hT && !e.context && t.acceptToken(UQ);
}, { contextual: !0 }), gT = new el((t, e) => {
  let { next: n } = t;
  if (n == sT || n == aT) {
    if (t.advance(), n == t.next) {
      t.advance();
      let r = !e.context && e.canShift(V0);
      t.acceptToken(r ? V0 : GQ);
    }
  } else n == uT && t.peek(1) == cT && (t.advance(), t.advance(), (t.next < 48 || t.next > 57) && t.acceptToken(zQ));
}, { contextual: !0 });
function rp(t, e) {
  return t >= 65 && t <= 90 || t >= 97 && t <= 122 || t == 95 || t >= 192 || !e && t >= 48 && t <= 57;
}
const bT = new el((t, e) => {
  if (t.next != oT || !e.dialectEnabled(nT) || (t.advance(), t.next == wf)) return;
  let n = 0;
  for (; kf.indexOf(t.next) > -1; )
    t.advance(), n++;
  if (rp(t.next, !0)) {
    for (t.advance(), n++; rp(t.next, !1); )
      t.advance(), n++;
    for (; kf.indexOf(t.next) > -1; )
      t.advance(), n++;
    if (t.next == lT) return;
    for (let r = 0; ; r++) {
      if (r == 7) {
        if (!rp(t.next, !0)) return;
        break;
      }
      if (t.next != "extends".charCodeAt(r)) break;
      t.advance(), n++;
    }
  }
  t.acceptToken(HQ, -n);
}), yT = HC({
  "get set async static": u.modifier,
  "for while do if else switch try catch finally return throw break continue default case": u.controlKeyword,
  "in of await yield void typeof delete instanceof": u.operatorKeyword,
  "let var const using function class extends": u.definitionKeyword,
  "import export from": u.moduleKeyword,
  "with debugger as new": u.keyword,
  TemplateString: u.special(u.string),
  super: u.atom,
  BooleanLiteral: u.bool,
  this: u.self,
  null: u.null,
  Star: u.modifier,
  VariableName: u.variableName,
  "CallExpression/VariableName TaggedTemplateExpression/VariableName": u.function(u.variableName),
  VariableDefinition: u.definition(u.variableName),
  Label: u.labelName,
  PropertyName: u.propertyName,
  PrivatePropertyName: u.special(u.propertyName),
  "CallExpression/MemberExpression/PropertyName": u.function(u.propertyName),
  "FunctionDeclaration/VariableDefinition": u.function(u.definition(u.variableName)),
  "ClassDeclaration/VariableDefinition": u.definition(u.className),
  "NewExpression/VariableName": u.className,
  PropertyDefinition: u.definition(u.propertyName),
  PrivatePropertyDefinition: u.definition(u.special(u.propertyName)),
  UpdateOp: u.updateOperator,
  "LineComment Hashbang": u.lineComment,
  BlockComment: u.blockComment,
  Number: u.number,
  String: u.string,
  Escape: u.escape,
  ArithOp: u.arithmeticOperator,
  LogicOp: u.logicOperator,
  BitOp: u.bitwiseOperator,
  CompareOp: u.compareOperator,
  RegExp: u.regexp,
  Equals: u.definitionOperator,
  Arrow: u.function(u.punctuation),
  ": Spread": u.punctuation,
  "( )": u.paren,
  "[ ]": u.squareBracket,
  "{ }": u.brace,
  "InterpolationStart InterpolationEnd": u.special(u.brace),
  ".": u.derefOperator,
  ", ;": u.separator,
  "@": u.meta,
  TypeName: u.typeName,
  TypeDefinition: u.definition(u.typeName),
  "type enum interface implements namespace module declare": u.definitionKeyword,
  "abstract global Privacy readonly override": u.modifier,
  "is keyof unique infer asserts": u.operatorKeyword,
  JSXAttributeValue: u.attributeValue,
  JSXText: u.content,
  "JSXStartTag JSXStartCloseTag JSXSelfCloseEndTag JSXEndTag": u.angleBracket,
  "JSXIdentifier JSXNameSpacedName": u.tagName,
  "JSXAttribute/JSXIdentifier JSXAttribute/JSXNameSpacedName": u.attributeName,
  "JSXBuiltin/JSXIdentifier": u.standard(u.tagName)
}), OT = { __proto__: null, export: 20, as: 25, from: 33, default: 36, async: 41, function: 42, const: 52, extends: 56, this: 60, true: 68, false: 68, null: 80, void: 84, typeof: 88, super: 104, new: 138, delete: 150, yield: 159, await: 163, class: 168, public: 231, private: 231, protected: 231, readonly: 233, instanceof: 252, satisfies: 255, in: 256, import: 290, keyof: 347, unique: 351, infer: 357, asserts: 393, is: 395, abstract: 415, implements: 417, type: 419, let: 422, var: 424, using: 427, interface: 433, enum: 437, namespace: 443, module: 445, declare: 449, global: 453, for: 472, of: 481, while: 484, with: 488, do: 492, if: 496, else: 498, switch: 502, case: 508, try: 514, catch: 518, finally: 522, return: 526, throw: 530, break: 534, continue: 538, debugger: 542 }, vT = { __proto__: null, async: 125, get: 127, set: 129, declare: 191, public: 193, private: 193, protected: 193, static: 195, abstract: 197, override: 199, readonly: 205, accessor: 207, new: 399 }, xT = { __proto__: null, "<": 189 }, kT = ac.deserialize({
  version: 14,
  states: "$EOQ%TQlOOO%[QlOOO'_QpOOP(lO`OOO*zQ!0MxO'#CiO+RO#tO'#CjO+aO&jO'#CjO+oO#@ItO'#D_O.QQlO'#DeO.bQlO'#DpO%[QlO'#DxO0fQlO'#EQOOQ!0Lf'#EY'#EYO1PQ`O'#EVOOQO'#En'#EnOOQO'#Ij'#IjO1XQ`O'#GrO1dQ`O'#EmO1iQ`O'#EmO3hQ!0MxO'#JpO6[Q!0MxO'#JqO6uQ`O'#F[O6zQ,UO'#FsOOQ!0Lf'#Fe'#FeO7VO7dO'#FeO7eQMhO'#F{O9UQ`O'#FzOOQ!0Lf'#Jq'#JqOOQ!0Lb'#Jp'#JpO9ZQ`O'#GvOOQ['#K]'#K]O9fQ`O'#IWO9kQ!0LrO'#IXOOQ['#J^'#J^OOQ['#I]'#I]Q`QlOOQ`QlOOO9sQ!L^O'#DtO9zQlO'#D|O:RQlO'#EOO9aQ`O'#GrO:YQMhO'#CoO:hQ`O'#ElO:sQ`O'#EwO:xQMhO'#FdO;gQ`O'#GrOOQO'#K^'#K^O;lQ`O'#K^O;zQ`O'#GzO;zQ`O'#G{O;zQ`O'#G}O9aQ`O'#HQO<qQ`O'#HTO>YQ`O'#CeO>jQ`O'#HaO>rQ`O'#HgO>rQ`O'#HiO`QlO'#HkO>rQ`O'#HmO>rQ`O'#HpO>wQ`O'#HvO>|Q!0LsO'#H|O%[QlO'#IOO?XQ!0LsO'#IQO?dQ!0LsO'#ISO9kQ!0LrO'#IUO?oQ!0MxO'#CiO@qQpO'#DjQOQ`OOO%[QlO'#EOOAXQ`O'#ERO:YQMhO'#ElOAdQ`O'#ElOAoQ!bO'#FdOOQ['#Cg'#CgOOQ!0Lb'#Do'#DoOOQ!0Lb'#Jt'#JtO%[QlO'#JtOOQO'#Jw'#JwOOQO'#If'#IfOBoQpO'#EeOOQ!0Lb'#Ed'#EdOOQ!0Lb'#J{'#J{OCkQ!0MSO'#EeOCuQpO'#EUOOQO'#Jv'#JvODZQpO'#JwOEhQpO'#EUOCuQpO'#EePEuO&2DjO'#CbPOOO)CD{)CD{OOOO'#I^'#I^OFQO#tO,59UOOQ!0Lh,59U,59UOOOO'#I_'#I_OF`O&jO,59UOFnQ!L^O'#DaOOOO'#Ia'#IaOFuO#@ItO,59yOOQ!0Lf,59y,59yOGTQlO'#IbOGhQ`O'#JrOIgQ!fO'#JrO+}QlO'#JrOInQ`O,5:POJUQ`O'#EnOJcQ`O'#KROJnQ`O'#KQOJnQ`O'#KQOJvQ`O,5;[OJ{Q`O'#KPOOQ!0Ln,5:[,5:[OKSQlO,5:[OMQQ!0MxO,5:dOMqQ`O,5:lON[Q!0LrO'#KOONcQ`O'#J}O9ZQ`O'#J}ONwQ`O'#J}O! PQ`O,5;ZO! UQ`O'#J}O!#ZQ!fO'#JqOOQ!0Lh'#Ci'#CiO%[QlO'#EQO!#yQ!fO,5:qOOQS'#Jx'#JxOOQO-E<h-E<hO9aQ`O,5=^O!$aQ`O,5=^O!$fQlO,5;XO!&iQMhO'#EiO!(SQ`O,5;XO!(XQlO'#DwO!(cQpO,5;bO!(kQpO,5;bO%[QlO,5;bOOQ['#FS'#FSOOQ['#FU'#FUO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cOOQ['#FY'#FYO!(yQlO,5;sOOQ!0Lf,5;x,5;xOOQ!0Lf,5;y,5;yOOQ!0Lf,5;{,5;{O%[QlO'#InO!*|Q!0LrO,5<hO%[QlO,5;cO!&iQMhO,5;cO!+kQMhO,5;cO!-]QMhO'#E[O%[QlO,5;vOOQ!0Lf,5;z,5;zO!-dQ,UO'#FiO!.aQ,UO'#KVO!-{Q,UO'#KVO!.hQ,UO'#KVOOQO'#KV'#KVO!.|Q,UO,5<ROOOW,5<_,5<_O!/_QlO'#FuOOOW'#Im'#ImO7VO7dO,5<PO!/fQ,UO'#FwOOQ!0Lf,5<P,5<PO!0VQ$IUO'#CwOOQ!0Lh'#C{'#C{O!0jO#@ItO'#DPO!1WQMjO,5<dO!1_Q`O,5<gO!2zQ(CWO'#GWO!3XQ`O'#GXO!3^Q`O'#GXO!4|Q(CWO'#G]O!6RQpO'#GaOOQO'#Gm'#GmO!+rQMhO'#GlOOQO'#Go'#GoO!+rQMhO'#GnO!6tQ$IUO'#JjOOQ!0Lh'#Jj'#JjO!7OQ`O'#JiO!7^Q`O'#JhO!7fQ`O'#CuOOQ!0Lh'#Cy'#CyO!7qQ`O'#C{OOQ!0Lh'#DT'#DTOOQ!0Lh'#DV'#DVO1SQ`O'#DXO!+rQMhO'#GOO!+rQMhO'#GQO!7vQ`O'#GSO!7{Q`O'#GTO!3^Q`O'#GZO!+rQMhO'#G`O;zQ`O'#JiO!8QQ`O'#EoO!8oQ`O,5<fOOQ!0Lb'#Cr'#CrO!8wQ`O'#EpO!9qQpO'#EqOOQ!0Lb'#KP'#KPO!9xQ!0LrO'#K_O9kQ!0LrO,5=bO`QlO,5>rOOQ['#Jf'#JfOOQ[,5>s,5>sOOQ[-E<Z-E<ZO!;wQ!0MxO,5:`O!9lQpO,5:^O!>bQ!0MxO,5:hO%[QlO,5:hO!@xQ!0MxO,5:jOOQO,5@x,5@xO!AiQMhO,5=^O!AwQ!0LrO'#JgO9UQ`O'#JgO!BYQ!0LrO,59ZO!BeQpO,59ZO!BmQMhO,59ZO:YQMhO,59ZO!BxQ`O,5;XO!CQQ`O'#H`O!CfQ`O'#KbO%[QlO,5;|O!9lQpO,5<OO!CnQ`O,5=yO!CsQ`O,5=yO!CxQ`O,5=yO9kQ!0LrO,5=yO;zQ`O,5=iOOQO'#Cw'#CwO!DWQpO,5=fO!D`QMhO,5=gO!DkQ`O,5=iO!DpQ!bO,5=lO!DxQ`O'#K^O>wQ`O'#HVO9aQ`O'#HXO!D}Q`O'#HXO:YQMhO'#HZO!ESQ`O'#HZOOQ[,5=o,5=oO!EXQ`O'#H[O!EjQ`O'#CoO!EoQ`O,59PO!EyQ`O,59PO!HOQlO,59POOQ[,59P,59PO!H`Q!0LrO,59PO%[QlO,59PO!JkQlO'#HcOOQ['#Hd'#HdOOQ['#He'#HeO`QlO,5={O!KRQ`O,5={O`QlO,5>RO`QlO,5>TO!KWQ`O,5>VO`QlO,5>XO!K]Q`O,5>[O!KbQlO,5>bOOQ[,5>h,5>hO%[QlO,5>hO9kQ!0LrO,5>jOOQ[,5>l,5>lO# lQ`O,5>lOOQ[,5>n,5>nO# lQ`O,5>nOOQ[,5>p,5>pO#!YQpO'#D]O%[QlO'#JtO#!{QpO'#JtO##VQpO'#DkO##hQpO'#DkO#%yQlO'#DkO#&QQ`O'#JsO#&YQ`O,5:UO#&_Q`O'#ErO#&mQ`O'#KSO#&uQ`O,5;]O#&zQpO'#DkO#'XQpO'#ETOOQ!0Lf,5:m,5:mO%[QlO,5:mO#'`Q`O,5:mO>wQ`O,5;WO!BeQpO,5;WO!BmQMhO,5;WO:YQMhO,5;WO#'hQ`O,5@`O#'mQ07dO,5:qOOQO-E<d-E<dO#(sQ!0MSO,5;POCuQpO,5:pO#(}QpO,5:pOCuQpO,5;PO!BYQ!0LrO,5:pOOQ!0Lb'#Eh'#EhOOQO,5;P,5;PO%[QlO,5;PO#)[Q!0LrO,5;PO#)gQ!0LrO,5;PO!BeQpO,5:pOOQO,5;V,5;VO#)uQ!0LrO,5;PPOOO'#I['#I[P#*ZO&2DjO,58|POOO,58|,58|OOOO-E<[-E<[OOQ!0Lh1G.p1G.pOOOO-E<]-E<]OOOO,59{,59{O#*fQ!bO,59{OOOO-E<_-E<_OOQ!0Lf1G/e1G/eO#*kQ!fO,5>|O+}QlO,5>|OOQO,5?S,5?SO#*uQlO'#IbOOQO-E<`-E<`O#+SQ`O,5@^O#+[Q!fO,5@^O#+cQ`O,5@lOOQ!0Lf1G/k1G/kO%[QlO,5@mO#+kQ`O'#IhOOQO-E<f-E<fO#+cQ`O,5@lOOQ!0Lb1G0v1G0vOOQ!0Ln1G/v1G/vOOQ!0Ln1G0W1G0WO%[QlO,5@jO#,PQ!0LrO,5@jO#,bQ!0LrO,5@jO#,iQ`O,5@iO9ZQ`O,5@iO#,qQ`O,5@iO#-PQ`O'#IkO#,iQ`O,5@iOOQ!0Lb1G0u1G0uO!(cQpO,5:sO!(nQpO,5:sOOQS,5:u,5:uO#-qQdO,5:uO#-yQMhO1G2xO9aQ`O1G2xOOQ!0Lf1G0s1G0sO#.XQ!0MxO1G0sO#/^Q!0MvO,5;TOOQ!0Lh'#GV'#GVO#/zQ!0MzO'#JjO!$fQlO1G0sO#2VQ!fO'#JuO%[QlO'#JuO#2aQ`O,5:cOOQ!0Lh'#D]'#D]OOQ!0Lf1G0|1G0|O%[QlO1G0|OOQ!0Lf1G1e1G1eO#2fQ`O1G0|O#4zQ!0MxO1G0}O#5RQ!0MxO1G0}O#7iQ!0MxO1G0}O#7pQ!0MxO1G0}O#:WQ!0MxO1G0}O#<nQ!0MxO1G0}O#<uQ!0MxO1G0}O#<|Q!0MxO1G0}O#?dQ!0MxO1G0}O#?kQ!0MxO1G0}O#AxQ?MtO'#CiO#CsQ?MtO1G1_O#CzQ?MtO'#JqO#D_Q!0MxO,5?YOOQ!0Lb-E<l-E<lO#FlQ!0MxO1G0}O#GiQ!0MzO1G0}OOQ!0Lf1G0}1G0}O#HlQMjO'#JzO#HvQ`O,5:vO#H{Q!0MxO1G1bO#IoQ,UO,5<VO#IwQ,UO,5<WO#JPQ,UO'#FnO#JhQ`O'#FmOOQO'#KW'#KWOOQO'#Il'#IlO#JmQ,UO1G1mOOQ!0Lf1G1m1G1mOOOW1G1x1G1xO#KOQ?MtO'#JpO#KYQ`O,5<aO!(yQlO,5<aOOOW-E<k-E<kOOQ!0Lf1G1k1G1kO#K_QpO'#KVOOQ!0Lf,5<c,5<cO#KgQpO,5<cO#KlQMhO'#DROOOO'#I`'#I`O#KsO#@ItO,59kOOQ!0Lh,59k,59kO%[QlO1G2OO!7{Q`O'#IpO#LOQ`O,5<yOOQ!0Lh,5<v,5<vO!+rQMhO'#IsO#LlQMjO,5=WO!+rQMhO'#IuO#M_QMjO,5=YO!&iQMhO,5=[OOQO1G2R1G2RO#MiQ!dO'#CrO#M|Q(CWO'#EpO$ RQpO'#GaO$ iQ!dO,5<rO$ pQ`O'#KYO9ZQ`O'#KYO$!OQ`O,5<tO!+rQMhO,5<sO$!TQ`O'#GYO$!fQ`O,5<sO$!kQ!dO'#GVO$!xQ!dO'#KZO$#SQ`O'#KZO!&iQMhO'#KZO$#XQ`O,5<wO$#^QlO'#JtO$#hQpO'#GbO##hQpO'#GbO$#yQ`O'#GfO!3^Q`O'#GjO$$OQ!0LrO'#IrO$$ZQpO,5<{OOQ!0Lp,5<{,5<{O$$bQpO'#GbO$$oQpO'#GcO$%QQpO'#GcO$%VQMjO,5=WO$%gQMjO,5=YOOQ!0Lh,5=],5=]O!+rQMhO,5@TO!+rQMhO,5@TO$%wQ`O'#IwO$&VQ`O,5@SO$&_Q`O,59aOOQ!0Lh,59g,59gO$'UQ$IYO,59sOOQ!0Lh'#Jn'#JnO$'wQMjO,5<jO$(jQMjO,5<lO@iQ`O,5<nOOQ!0Lh,5<o,5<oO$(tQ`O,5<uO$(yQMjO,5<zO$)ZQ`O,5@TO$)iQ`O'#J}O!$fQlO1G2QO$)nQ`O1G2QO9ZQ`O'#KQO9ZQ`O'#ErO%[QlO'#ErO9ZQ`O'#IyO$)sQ!0LrO,5@yOOQ[1G2|1G2|OOQ[1G4^1G4^OOQ!0Lf1G/z1G/zOOQ!0Lf1G/x1G/xO$+uQ!0MxO1G0SOOQ[1G2x1G2xO!&iQMhO1G2xO%[QlO1G2xO#-|Q`O1G2xO$-yQMhO'#EiOOQ!0Lb,5@R,5@RO$.WQ!0LrO,5@ROOQ[1G.u1G.uO!BYQ!0LrO1G.uO!BeQpO1G.uO!BmQMhO1G.uO$.iQ`O1G0sO$.nQ`O'#CiO$.yQ`O'#KcO$/RQ`O,5=zO$/WQ`O'#KcO$/]Q`O'#KcO$/kQ`O'#JPO$/yQ`O,5@|O$0RQ!fO1G1hOOQ!0Lf1G1j1G1jO9aQ`O1G3eO@iQ`O1G3eO$0YQ`O1G3eO$0_Q`O1G3eOOQ[1G3e1G3eO!DkQ`O1G3TO!&iQMhO1G3QO$0dQ`O1G3QOOQ[1G3R1G3RO!&iQMhO1G3RO$0iQ`O1G3RO$0qQpO'#HPOOQ[1G3T1G3TO!5|QpO'#I{O!DpQ!bO1G3WOOQ[1G3W1G3WOOQ[,5=q,5=qO$0yQMhO,5=sO9aQ`O,5=sO$#yQ`O,5=uO9UQ`O,5=uO!BeQpO,5=uO!BmQMhO,5=uO:YQMhO,5=uO$1XQ`O'#KaO$1dQ`O,5=vOOQ[1G.k1G.kO$1iQ!0LrO1G.kO@iQ`O1G.kO$1tQ`O1G.kO9kQ!0LrO1G.kO$3|Q!fO,5AOO$4ZQ`O,5AOO9ZQ`O,5AOO$4fQlO,5=}O$4mQ`O,5=}OOQ[1G3g1G3gO`QlO1G3gOOQ[1G3m1G3mOOQ[1G3o1G3oO>rQ`O1G3qO$4rQlO1G3sO$8vQlO'#HrOOQ[1G3v1G3vO$9TQ`O'#HxO>wQ`O'#HzOOQ[1G3|1G3|O$9]QlO1G3|O9kQ!0LrO1G4SOOQ[1G4U1G4UOOQ!0Lb'#G^'#G^O9kQ!0LrO1G4WO9kQ!0LrO1G4YO$=dQ`O,5@`O!(yQlO,5;^O9ZQ`O,5;^O>wQ`O,5:VO!(yQlO,5:VO!BeQpO,5:VO$=iQ?MtO,5:VOOQO,5;^,5;^O$=sQpO'#IcO$>ZQ`O,5@_OOQ!0Lf1G/p1G/pO$>cQpO'#IiO$>mQ`O,5@nOOQ!0Lb1G0w1G0wO##hQpO,5:VOOQO'#Ie'#IeO$>uQpO,5:oOOQ!0Ln,5:o,5:oO#'cQ`O1G0XOOQ!0Lf1G0X1G0XO%[QlO1G0XOOQ!0Lf1G0r1G0rO>wQ`O1G0rO!BeQpO1G0rO!BmQMhO1G0rOOQ!0Lb1G5z1G5zO!BYQ!0LrO1G0[OOQO1G0k1G0kO%[QlO1G0kO$>|Q!0LrO1G0kO$?XQ!0LrO1G0kO!BeQpO1G0[OCuQpO1G0[O$?gQ!0LrO1G0kOOQO1G0[1G0[O$?{Q!0MxO1G0kPOOO-E<Y-E<YPOOO1G.h1G.hOOOO1G/g1G/gO$@VQ!bO,5<hO$@_Q!fO1G4hOOQO1G4n1G4nO%[QlO,5>|O$@iQ`O1G5xO$@qQ`O1G6WO$@yQ!fO1G6XO9ZQ`O,5?SO$ATQ!0MxO1G6UO%[QlO1G6UO$AeQ!0LrO1G6UO$AvQ`O1G6TO$AvQ`O1G6TO9ZQ`O1G6TO$BOQ`O,5?VO9ZQ`O,5?VOOQO,5?V,5?VO$BdQ`O,5?VO$)iQ`O,5?VOOQO-E<i-E<iOOQS1G0_1G0_OOQS1G0a1G0aO#-tQ`O1G0aOOQ[7+(d7+(dO!&iQMhO7+(dO%[QlO7+(dO$BrQ`O7+(dO$B}QMhO7+(dO$C]Q!0MzO,5=WO$EhQ!0MzO,5=YO$GsQ!0MzO,5=WO$JUQ!0MzO,5=YO$LgQ!0MzO,59sO$NlQ!0MzO,5<jO%!wQ!0MzO,5<lO%%SQ!0MzO,5<zOOQ!0Lf7+&_7+&_O%'eQ!0MxO7+&_O%(XQlO'#IdO%(fQ`O,5@aO%(nQ!fO,5@aOOQ!0Lf1G/}1G/}O%(xQ`O7+&hOOQ!0Lf7+&h7+&hO%(}Q?MtO,5:dO%[QlO7+&yO%)XQ?MtO,5:`O%)fQ?MtO,5:hO%)pQ?MtO,5:jO%)zQMhO'#IgO%*UQ`O,5@fOOQ!0Lh1G0b1G0bOOQO1G1q1G1qOOQO1G1r1G1rO%*^Q!jO,5<YO!(yQlO,5<XOOQO-E<j-E<jOOQ!0Lf7+'X7+'XOOOW7+'d7+'dOOOW1G1{1G1{O%*iQ`O1G1{OOQ!0Lf1G1}1G1}OOOO,59m,59mO%*nQ!dO,59mOOOO-E<^-E<^OOQ!0Lh1G/V1G/VO%*uQ!0MxO7+'jOOQ!0Lh,5?[,5?[O%+iQMhO1G2eP%+pQ`O'#IpPOQ!0Lh-E<n-E<nO%,^QMjO,5?_OOQ!0Lh-E<q-E<qO%-PQMjO,5?aOOQ!0Lh-E<s-E<sO%-ZQ!dO1G2vO%-bQ!dO'#CrO%-xQMhO'#KQO$#^QlO'#JtOOQ!0Lh1G2^1G2^O%.PQ`O'#IoO%.eQ`O,5@tO%.eQ`O,5@tO%.mQ`O,5@tO%.xQ`O,5@tOOQO1G2`1G2`O%/WQMjO1G2_O!+rQMhO1G2_O%/hQ(CWO'#IqO%/uQ`O,5@uO!&iQMhO,5@uO%/}Q!dO,5@uOOQ!0Lh1G2c1G2cO%2_Q!fO'#CiO%2iQ`O,5=OOOQ!0Lb,5<|,5<|O%2qQpO,5<|OOQ!0Lb,5<},5<}OCfQ`O,5<|O%2|QpO,5<|OOQ!0Lb,5=Q,5=QO$)iQ`O,5=UOOQO,5?^,5?^OOQO-E<p-E<pOOQ!0Lp1G2g1G2gO##hQpO,5<|O$#^QlO,5=OO%3[Q`O,5<}O%3gQpO,5<}O!+rQMhO'#IsO%4aQMjO1G2rO!+rQMhO'#IuO%5SQMjO1G2tO%5^QMjO1G5oO%5hQMjO1G5oOOQO,5?c,5?cOOQO-E<u-E<uOOQO1G.{1G.{O!9lQpO,59uO%[QlO,59uOOQ!0Lh,5<i,5<iO%5uQ`O1G2YO!+rQMhO1G2aO!+rQMhO1G5oO!+rQMhO1G5oO%5zQ!0MxO7+'lOOQ!0Lf7+'l7+'lO!$fQlO7+'lO%6nQ`O,5;^OOQ!0Lb,5?e,5?eOOQ!0Lb-E<w-E<wO%6sQ!dO'#K[O#'cQ`O7+(dO4UQ!fO7+(dO$BuQ`O7+(dO%6}Q!0MvO'#CiO%7nQ!0LrO,5=RO%8PQ!0MvO,5=RO%8dQ`O,5=ROOQ!0Lb1G5m1G5mOOQ[7+$a7+$aO!BYQ!0LrO7+$aO!BeQpO7+$aO!$fQlO7+&_O%8lQ`O'#JOO%9TQ`O,5@}OOQO1G3f1G3fO9aQ`O,5@}O%9TQ`O,5@}O%9]Q`O,5@}OOQO,5?k,5?kOOQO-E<}-E<}OOQ!0Lf7+'S7+'SO%9bQ`O7+)PO9kQ!0LrO7+)PO9aQ`O7+)PO@iQ`O7+)POOQ[7+(o7+(oO%9gQ!0MvO7+(lO!&iQMhO7+(lO!DfQ`O7+(mOOQ[7+(m7+(mO!&iQMhO7+(mO%9qQ`O'#K`O%9|Q`O,5=kOOQO,5?g,5?gOOQO-E<y-E<yOOQ[7+(r7+(rO%;`QpO'#HYOOQ[1G3_1G3_O!&iQMhO1G3_O%[QlO1G3_O%;gQ`O1G3_O%;rQMhO1G3_O9kQ!0LrO1G3aO$#yQ`O1G3aO9UQ`O1G3aO!BeQpO1G3aO!BmQMhO1G3aO%<QQ`O'#I}O%<fQ`O,5@{O%<nQpO,5@{OOQ!0Lb1G3b1G3bOOQ[7+$V7+$VO@iQ`O7+$VO9kQ!0LrO7+$VO%<yQ`O7+$VO%[QlO1G6jO%[QlO1G6kO%=OQ!0LrO1G6jO%=YQlO1G3iO%=aQ`O1G3iO%=fQlO1G3iOOQ[7+)R7+)RO9kQ!0LrO7+)]O`QlO7+)_OOQ['#Kf'#KfOOQ['#JQ'#JQO%=mQlO,5>^OOQ[,5>^,5>^O%[QlO'#HsO%=zQ`O'#HuOOQ[,5>d,5>dO9ZQ`O,5>dOOQ[,5>f,5>fOOQ[7+)h7+)hOOQ[7+)n7+)nOOQ[7+)r7+)rOOQ[7+)t7+)tO%>PQpO1G5zO%>kQ?MtO1G0xO%>uQ`O1G0xOOQO1G/q1G/qO%?QQ?MtO1G/qO>wQ`O1G/qO!(yQlO'#DkOOQO,5>},5>}OOQO-E<a-E<aOOQO,5?T,5?TOOQO-E<g-E<gO!BeQpO1G/qOOQO-E<c-E<cOOQ!0Ln1G0Z1G0ZOOQ!0Lf7+%s7+%sO#'cQ`O7+%sOOQ!0Lf7+&^7+&^O>wQ`O7+&^O!BeQpO7+&^OOQO7+%v7+%vO$?{Q!0MxO7+&VOOQO7+&V7+&VO%[QlO7+&VO%?[Q!0LrO7+&VO!BYQ!0LrO7+%vO!BeQpO7+%vO%?gQ!0LrO7+&VO%?uQ!0MxO7++pO%[QlO7++pO%@VQ`O7++oO%@VQ`O7++oOOQO1G4q1G4qO9ZQ`O1G4qO%@_Q`O1G4qOOQS7+%{7+%{O#'cQ`O<<LOO4UQ!fO<<LOO%@mQ`O<<LOOOQ[<<LO<<LOO!&iQMhO<<LOO%[QlO<<LOO%@uQ`O<<LOO%AQQ!0MzO,5?_O%C]Q!0MzO,5?aO%EhQ!0MzO1G2_O%GyQ!0MzO1G2rO%JUQ!0MzO1G2tO%LaQ!fO,5?OO%[QlO,5?OOOQO-E<b-E<bO%LkQ`O1G5{OOQ!0Lf<<JS<<JSO%LsQ?MtO1G0sO%NzQ?MtO1G0}O& RQ?MtO1G0}O&#SQ?MtO1G0}O&#ZQ?MtO1G0}O&%[Q?MtO1G0}O&']Q?MtO1G0}O&'dQ?MtO1G0}O&'kQ?MtO1G0}O&)lQ?MtO1G0}O&)sQ?MtO1G0}O&)zQ!0MxO<<JeO&+rQ?MtO1G0}O&,oQ?MvO1G0}O&-rQ?MvO'#JjO&/xQ?MtO1G1bO&0VQ?MtO1G0SO&0aQMjO,5?ROOQO-E<e-E<eO!(yQlO'#FpOOQO'#KX'#KXOOQO1G1t1G1tO&0kQ`O1G1sO&0pQ?MtO,5?YOOOW7+'g7+'gOOOO1G/X1G/XO&0zQ!dO1G4vOOQ!0Lh7+(P7+(PP!&iQMhO,5?[O!+rQMhO7+(bO&1RQ`O,5?ZO9ZQ`O,5?ZOOQO-E<m-E<mO&1aQ`O1G6`O&1aQ`O1G6`O&1iQ`O1G6`O&1tQMjO7+'yO&2UQ!dO,5?]O&2`Q`O,5?]O!&iQMhO,5?]OOQO-E<o-E<oO&2eQ!dO1G6aO&2oQ`O1G6aO&2wQ`O1G2jO!&iQMhO1G2jOOQ!0Lb1G2h1G2hOOQ!0Lb1G2i1G2iO%2qQpO1G2hO!BeQpO1G2hOCfQ`O1G2hOOQ!0Lb1G2p1G2pO&2|QpO1G2hO&3[Q`O1G2jO$)iQ`O1G2iOCfQ`O1G2iO$#^QlO1G2jO&3dQ`O1G2iO&4WQMjO,5?_OOQ!0Lh-E<r-E<rO&4yQMjO,5?aOOQ!0Lh-E<t-E<tO!+rQMhO7++ZOOQ!0Lh1G/a1G/aO&5TQ`O1G/aOOQ!0Lh7+'t7+'tO&5YQMjO7+'{O&5jQMjO7++ZO&5tQMjO7++ZO&6RQ!0MxO<<KWOOQ!0Lf<<KW<<KWO&6uQ`O1G0xO!&iQMhO'#IxO&6zQ`O,5@vO&8|Q!fO<<LOO!&iQMhO1G2mO&9TQ!0LrO1G2mOOQ[<<G{<<G{O!BYQ!0LrO<<G{O&9fQ!0MxO<<IyOOQ!0Lf<<Iy<<IyOOQO,5?j,5?jO&:YQ`O,5?jO&:_Q`O,5?jOOQO-E<|-E<|O&:mQ`O1G6iO&:mQ`O1G6iO9aQ`O1G6iO@iQ`O<<LkOOQ[<<Lk<<LkO&:uQ`O<<LkO9kQ!0LrO<<LkOOQ[<<LW<<LWO%9gQ!0MvO<<LWOOQ[<<LX<<LXO!DfQ`O<<LXO&:zQpO'#IzO&;VQ`O,5@zO!(yQlO,5@zOOQ[1G3V1G3VOOQO'#I|'#I|O9kQ!0LrO'#I|O&;_QpO,5=tOOQ[,5=t,5=tO&;fQpO'#EeO&;mQpO'#GdO&;rQ`O7+(yO&;wQ`O7+(yOOQ[7+(y7+(yO!&iQMhO7+(yO%[QlO7+(yO&<PQ`O7+(yOOQ[7+({7+({O9kQ!0LrO7+({O$#yQ`O7+({O9UQ`O7+({O!BeQpO7+({O&<[Q`O,5?iOOQO-E<{-E<{OOQO'#H]'#H]O&<gQ`O1G6gO9kQ!0LrO<<GqOOQ[<<Gq<<GqO@iQ`O<<GqO&<oQ`O7+,UO&<tQ`O7+,VO%[QlO7+,UO%[QlO7+,VOOQ[7+)T7+)TO&<yQ`O7+)TO&=OQlO7+)TO&=VQ`O7+)TOOQ[<<Lw<<LwOOQ[<<Ly<<LyOOQ[-E=O-E=OOOQ[1G3x1G3xO&=[Q`O,5>_OOQ[,5>a,5>aO&=aQ`O1G4OO9ZQ`O7+&dO!(yQlO7+&dOOQO7+%]7+%]O&=fQ?MtO1G6XO>wQ`O7+%]OOQ!0Lf<<I_<<I_OOQ!0Lf<<Ix<<IxO>wQ`O<<IxOOQO<<Iq<<IqO$?{Q!0MxO<<IqO%[QlO<<IqOOQO<<Ib<<IbO!BYQ!0LrO<<IbO&=pQ!0LrO<<IqO&={Q!0MxO<= [O&>]Q`O<= ZOOQO7+*]7+*]O9ZQ`O7+*]OOQ[ANAjANAjO&>eQ!fOANAjO!&iQMhOANAjO#'cQ`OANAjO4UQ!fOANAjO&>lQ`OANAjO%[QlOANAjO&>tQ!0MzO7+'yO&AVQ!0MzO,5?_O&CbQ!0MzO,5?aO&EmQ!0MzO7+'{O&HOQ!fO1G4jO&HYQ?MtO7+&_O&J^Q?MvO,5=WO&LeQ?MvO,5=YO&LuQ?MvO,5=WO&MVQ?MvO,5=YO&MgQ?MvO,59sO' mQ?MvO,5<jO'#pQ?MvO,5<lO'&UQ?MvO,5<zO''zQ?MtO7+'jO'(XQ?MtO7+'lO'(fQ`O,5<[OOQO7+'_7+'_OOQ!0Lh7+*b7+*bO'(kQMjO<<K|OOQO1G4u1G4uO'(rQ`O1G4uO'(}Q`O1G4uO')]Q`O7++zO')]Q`O7++zO!&iQMhO1G4wO')eQ!dO1G4wO')oQ`O7++{O')wQ`O7+(UO'*SQ!dO7+(UOOQ!0Lb7+(S7+(SOOQ!0Lb7+(T7+(TO!BeQpO7+(SOCfQ`O7+(SO'*^Q`O7+(UO!&iQMhO7+(UO$)iQ`O7+(TO'*cQ`O7+(UOCfQ`O7+(TO'*kQMjO<<NuOOQ!0Lh7+${7+${O!+rQMhO<<NuO'*uQ!dO,5?dOOQO-E<v-E<vO'+PQ!0MvO7+(XO!&iQMhO7+(XOOQ[AN=gAN=gO9aQ`O1G5UOOQO1G5U1G5UO'+aQ`O1G5UO'+fQ`O7+,TO'+fQ`O7+,TO9kQ!0LrOANBVO@iQ`OANBVOOQ[ANBVANBVOOQ[ANArANArOOQ[ANAsANAsO'+nQ`O,5?fOOQO-E<x-E<xO'+yQ?MtO1G6fOOQO,5?h,5?hOOQO-E<z-E<zOOQ[1G3`1G3`O',TQ`O,5=OOOQ[<<Le<<LeO!&iQMhO<<LeO&;rQ`O<<LeO',YQ`O<<LeO%[QlO<<LeOOQ[<<Lg<<LgO9kQ!0LrO<<LgO$#yQ`O<<LgO9UQ`O<<LgO',bQpO1G5TO',mQ`O7+,ROOQ[AN=]AN=]O9kQ!0LrOAN=]OOQ[<= p<= pOOQ[<= q<= qO',uQ`O<= pO',zQ`O<= qOOQ[<<Lo<<LoO'-PQ`O<<LoO'-UQlO<<LoOOQ[1G3y1G3yO>wQ`O7+)jO'-]Q`O<<JOO'-hQ?MtO<<JOOOQO<<Hw<<HwOOQ!0LfAN?dAN?dOOQOAN?]AN?]O$?{Q!0MxOAN?]OOQOAN>|AN>|O%[QlOAN?]OOQO<<Mw<<MwOOQ[G27UG27UO!&iQMhOG27UO#'cQ`OG27UO'-rQ!fOG27UO4UQ!fOG27UO'-yQ`OG27UO'.RQ?MtO<<JeO'.`Q?MvO1G2_O'0UQ?MvO,5?_O'2XQ?MvO,5?aO'4[Q?MvO1G2rO'6_Q?MvO1G2tO'8bQ?MtO<<KWO'8oQ?MtO<<IyOOQO1G1v1G1vO!+rQMhOANAhOOQO7+*a7+*aO'8|Q`O7+*aO'9XQ`O<= fO'9aQ!dO7+*cOOQ!0Lb<<Kp<<KpO$)iQ`O<<KpOCfQ`O<<KpO'9kQ`O<<KpO!&iQMhO<<KpOOQ!0Lb<<Kn<<KnO!BeQpO<<KnO'9vQ!dO<<KpOOQ!0Lb<<Ko<<KoO':QQ`O<<KpO!&iQMhO<<KpO$)iQ`O<<KoO':VQMjOANDaO':aQ!0MvO<<KsOOQO7+*p7+*pO9aQ`O7+*pO':qQ`O<= oOOQ[G27qG27qO9kQ!0LrOG27qO!(yQlO1G5QO':yQ`O7+,QO';RQ`O1G2jO&;rQ`OANBPOOQ[ANBPANBPO!&iQMhOANBPO';WQ`OANBPOOQ[ANBRANBRO9kQ!0LrOANBRO$#yQ`OANBROOQO'#H^'#H^OOQO7+*o7+*oOOQ[G22wG22wOOQ[ANE[ANE[OOQ[ANE]ANE]OOQ[ANBZANBZO';`Q`OANBZOOQ[<<MU<<MUO!(yQlOAN?jOOQOG24wG24wO$?{Q!0MxOG24wO#'cQ`OLD,pOOQ[LD,pLD,pO!&iQMhOLD,pO';eQ!fOLD,pO';lQ?MvO7+'yO'=bQ?MvO,5?_O'?eQ?MvO,5?aO'AhQ?MvO7+'{O'C^QMjOG27SOOQO<<M{<<M{OOQ!0LbANA[ANA[O$)iQ`OANA[OCfQ`OANA[O'CnQ!dOANA[OOQ!0LbANAYANAYO'CuQ`OANA[O!&iQMhOANA[O'DQQ!dOANA[OOQ!0LbANAZANAZOOQO<<N[<<N[OOQ[LD-]LD-]O'D[Q?MtO7+*lOOQO'#Ge'#GeOOQ[G27kG27kO&;rQ`OG27kO!&iQMhOG27kOOQ[G27mG27mO9kQ!0LrOG27mOOQ[G27uG27uO'DfQ?MtOG25UOOQOLD*cLD*cOOQ[!$(![!$(![O#'cQ`O!$(![O!&iQMhO!$(![O'DpQ!0MzOG27SOOQ!0LbG26vG26vO$)iQ`OG26vO'GRQ`OG26vOCfQ`OG26vO'G^Q!dOG26vO!&iQMhOG26vOOQ[LD-VLD-VO&;rQ`OLD-VOOQ[LD-XLD-XOOQ[!)9Ev!)9EvO#'cQ`O!)9EvOOQ!0LbLD,bLD,bO$)iQ`OLD,bOCfQ`OLD,bO'GeQ`OLD,bO'GpQ!dOLD,bOOQ[!$(!q!$(!qOOQ[!.K;b!.K;bO'GwQ?MvOG27SOOQ!0Lb!$( |!$( |O$)iQ`O!$( |OCfQ`O!$( |O'ImQ`O!$( |OOQ!0Lb!)9Eh!)9EhO$)iQ`O!)9EhOCfQ`O!)9EhOOQ!0Lb!.K;S!.K;SO$)iQ`O!.K;SOOQ!0Lb!4/0n!4/0nO!(yQlO'#DxO1PQ`O'#EVO'IxQ!fO'#JpO'JPQ!L^O'#DtO'JWQlO'#D|O'J_Q!fO'#CiO'LuQ!fO'#CiO!(yQlO'#EOO'MVQlO,5;XO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO'#InO( YQ`O,5<hO!(yQlO,5;cO( bQMhO,5;cO(!{QMhO,5;cO!(yQlO,5;vO!&iQMhO'#GlO( bQMhO'#GlO!&iQMhO'#GnO( bQMhO'#GnO1SQ`O'#DXO1SQ`O'#DXO!&iQMhO'#GOO( bQMhO'#GOO!&iQMhO'#GQO( bQMhO'#GQO!&iQMhO'#G`O( bQMhO'#G`O!(yQlO,5:hO(#SQpO'#D]O(#^QpO'#JtO!(yQlO,5@mO'MVQlO1G0sO(#hQ?MtO'#CiO!(yQlO1G2OO!&iQMhO'#IsO( bQMhO'#IsO!&iQMhO'#IuO( bQMhO'#IuO(#rQ!dO'#CrO!&iQMhO,5<sO( bQMhO,5<sO'MVQlO1G2QO!(yQlO7+&yO!&iQMhO1G2_O( bQMhO1G2_O!&iQMhO'#IsO( bQMhO'#IsO!&iQMhO'#IuO( bQMhO'#IuO!&iQMhO1G2aO( bQMhO1G2aO'MVQlO7+'lO'MVQlO7+&_O!&iQMhOANAhO( bQMhOANAhO($VQ`O'#EmO($[Q`O'#EmO($dQ`O'#F[O($iQ`O'#EwO($nQ`O'#KRO($yQ`O'#KPO(%UQ`O,5;XO(%ZQMjO,5<dO(%bQ`O'#GXO(%gQ`O'#GXO(%lQ`O,5<fO(%tQ`O,5;XO(%|Q?MtO1G1_O(&TQ`O,5<sO(&YQ`O,5<sO(&_Q`O,5<uO(&dQ`O,5<uO(&iQ`O1G2QO(&nQ`O1G0sO(&sQMjO<<K|O(&zQMjO<<K|O7eQMhO'#F{O9UQ`O'#FzOAdQ`O'#ElO!(yQlO,5;sO!3^Q`O'#GXO!3^Q`O'#GXO!3^Q`O'#GZO!3^Q`O'#GZO!+rQMhO7+(bO!+rQMhO7+(bO%-ZQ!dO1G2vO%-ZQ!dO1G2vO!&iQMhO,5=[O!&iQMhO,5=[",
  stateData: "((P~O'zOS'{OSTOS'|RQ~OPYOQYOSfOY!VOaqOdzOeyOj!POnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]XO!guO!jZO!mYO!nYO!oYO!qvO!swO!vxO!z]O$V|O$miO%g}O%i!QO%k!OO%l!OO%m!OO%p!RO%r!SO%u!TO%v!TO%x!UO&U!WO&[!XO&^!YO&`!ZO&b![O&e!]O&k!^O&q!_O&s!`O&u!aO&w!bO&y!cO(RSO(TTO(WUO(_VO(m[O~OWtO~P`OPYOQYOSfOd!jOe!iOnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]!eO!guO!jZO!mYO!nYO!oYO!qvO!s!gO!v!hO$V!kO$miO(R!dO(TTO(WUO(_VO(m[O~Oa!wOq!nO!Q!oO!`!yO!a!vO!b!vO!z;wO#R!pO#S!pO#T!xO#U!pO#V!pO#Y!zO#Z!zO(S!lO(TTO(WUO(c!mO(m!sO~O'|!{O~OP]XR]X[]Xa]Xp]X!O]X!Q]X!Z]X!j]X!n]X#P]X#Q]X#^]X#ifX#l]X#m]X#n]X#o]X#p]X#q]X#r]X#s]X#t]X#u]X#w]X#y]X#z]X$P]X'x]X(_]X(p]X(w]X(x]X~O!e%QX~P(qO_!}O(T#PO(U!}O(V#PO~O_#QO(V#PO(W#PO(X#QO~Ov#SO!S#TO(`#TO(a#VO~OPYOQYOSfOd!jOe!iOnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]!eO!guO!jZO!mYO!nYO!oYO!qvO!s!gO!v!hO$V!kO$miO(R;{O(TTO(WUO(_VO(m[O~O!Y#ZO!Z#WO!W(fP!W(tP~P+}O![#cO~P`OPYOQYOSfOd!jOe!iOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]!eO!guO!jZO!mYO!nYO!oYO!qvO!s!gO!v!hO$V!kO$miO(TTO(WUO(_VO(m[O~On#mO!Y#iO!z]O#g#lO#h#iO(R;|O!i(qP~P.iO!j#oO(R#nO~O!v#sO!z]O%g#tO~O#i#uO~O!e#vO#i#uO~OP$[OR#zO[$cOp$aO!O#yO!Q#{O!Z$_O!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO#u$SO#w$UO#y$WO#z$XO(_VO(p$YO(w#|O(x#}O~Oa(dX'x(dX'u(dX!i(dX!W(dX!](dX%h(dX!e(dX~P1qO#Q$dO#^$eO$P$eOP(eXR(eX[(eXp(eX!O(eX!Q(eX!Z(eX!j(eX!n(eX#P(eX#l(eX#m(eX#n(eX#o(eX#p(eX#q(eX#r(eX#s(eX#t(eX#u(eX#w(eX#y(eX#z(eX(_(eX(p(eX(w(eX(x(eX!](eX%h(eX~Oa(eX'x(eX'u(eX!W(eX!i(eXt(eX!e(eX~P4UO#^$eO~O$[$hO$^$gO$e$mO~OSfO!]$nO$h$oO$j$qO~Oh%VOj%cOn%WOp%XOq$tOr$tOx%YOz%ZO|%[O!Q${O!]$|O!g%aO!j$xO#h%bO$V%_O$s%]O$u%^O$x%`O(R$sO(TTO(WUO(_$uO(w$}O(x%POg([P~O!j%dO~O!Q%gO!]%hO(R%fO~O!e%lO~Oa%mO'x%mO~O!O%qO~P%[O(S!lO~P%[O%m%uO~P%[Oh%VO!j%dO(R%fO(S!lO~Oe%|O!j%dO(R%fO~O#t$RO~O!O&RO!]&OO!j&QO%i&UO(R%fO(S!lO(TTO(WUO`)UP~O!v#sO~O%r&WO!Q)QX!])QX(R)QX~O(R&XO~Oj!PO!s&^O%i!QO%k!OO%l!OO%m!OO%p!RO%r!SO%u!TO%v!TO~Od&cOe&bO!v&`O%g&aO%z&_O~P<POd&fOeyOj!PO!]&eO!s&^O!vxO!z]O%g}O%k!OO%l!OO%m!OO%p!RO%r!SO%u!TO%v!TO%x!UO~Ob&iO#^&lO%i&gO(S!lO~P=UO!j&mO!s&qO~O!j#oO~O!]XO~Oa%mO'v&yO'x%mO~Oa%mO'v&|O'x%mO~Oa%mO'v'OO'x%mO~O'u]X!W]Xt]X!i]X&Y]X!]]X%h]X!e]X~P(qO!`']O!a'UO!b'UO(S!lO(TTO(WUO~Oq'SO!Q'RO!Y'VO(c'QO![(gP![(vP~P@]Ol'`O!]'^O(R%fO~Oe'eO!j%dO(R%fO~O!O&RO!j&QO~Oq!nO!Q!oO!z;wO#R!pO#S!pO#U!pO#V!pO(S!lO(TTO(WUO(c!mO(m!sO~O!`'kO!a'jO!b'jO#T!pO#Y'lO#Z'lO~PAwOa%mOh%VO!e#vO!j%dO'x%mO(p'nO~O!n'rO#^'pO~PCVOq!nO!Q!oO(TTO(WUO(c!mO(m!sO~O!]XOq(kX!Q(kX!`(kX!a(kX!b(kX!z(kX#R(kX#S(kX#T(kX#U(kX#V(kX#Y(kX#Z(kX(S(kX(T(kX(W(kX(c(kX(m(kX~O!a'jO!b'jO(S!lO~PCuO'}'vO(O'vO(P'xO~O_!}O(T'zO(U!}O(V'zO~O_#QO(V'zO(W'zO(X#QO~Ot'|O~P%[Ov#SO!S#TO(`#TO(a(PO~O!Y(RO!W'UX!W'[X!Z'UX!Z'[X~P+}O!Z(TO!W(fX~OP$[OR#zO[$cOp$aO!O#yO!Q#{O!Z(TO!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO#u$SO#w$UO#y$WO#z$XO(_VO(p$YO(w#|O(x#}O~O!W(fX~PGpO!W(YO~O!W(sX!Z(sX!e(sX!i(sX(p(sX~O#^(sX#i#bX![(sX~PIsO#^(ZO!W(uX!Z(uX~O!Z([O!W(tX~O!W(_O~O#^$eO~PIsO![(`O~P`OR#zO!O#yO!Q#{O!j#xO(_VOP!la[!lap!la!Z!la!n!la#P!la#l!la#m!la#n!la#o!la#p!la#q!la#r!la#s!la#t!la#u!la#w!la#y!la#z!la(p!la(w!la(x!la~Oa!la'x!la'u!la!W!la!i!lat!la!]!la%h!la!e!la~PKZO!i(aO~O!e#vO#^(bO(p'nO!Z(rXa(rX'x(rX~O!i(rX~PMvO!Q%gO!]%hO!z]O#g(gO#h(fO(R%fO~O!Z(hO!i(qX~O!i(jO~O!Q%gO!]%hO#h(fO(R%fO~OP(eXR(eX[(eXp(eX!O(eX!Q(eX!Z(eX!j(eX!n(eX#P(eX#l(eX#m(eX#n(eX#o(eX#p(eX#q(eX#r(eX#s(eX#t(eX#u(eX#w(eX#y(eX#z(eX(_(eX(p(eX(w(eX(x(eX~O!e#vO!i(eX~P! dOR(lO!O(kO!j#xO#Q$dO!z!ya!Q!ya~O!v!ya%g!ya!]!ya#g!ya#h!ya(R!ya~P!#eO!v(pO~OPYOQYOSfOd!jOe!iOnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]XO!guO!jZO!mYO!nYO!oYO!qvO!s!gO!v!hO$V!kO$miO(R!dO(TTO(WUO(_VO(m[O~Oh%VOn%WOp%XOq$tOr$tOx%YOz%ZO|<eO!Q${O!]$|O!g=vO!j$xO#h<kO$V%_O$s<gO$u<iO$x%`O(R(tO(TTO(WUO(_$uO(w$}O(x%PO~O#i(vO~O!Y(xO!i(iP~P%[O(c(zO(m[O~O!Q(|O!j#xO(c(zO(m[O~OP;vOQ;vOSfOd=rOe!iOnkOp;vOqkOrkOxkOz;vO|;vO!QWO!UkO!VkO!]!eO!g;yO!jZO!m;vO!n;vO!o;vO!q;zO!s;}O!v!hO$V!kO$m=pO(R)ZO(TTO(WUO(_VO(m[O~O!Z$_Oa$pa'x$pa'u$pa!i$pa!W$pa!]$pa%h$pa!e$pa~Oj)bO~P!&iOh%VOn%WOp%XOq$tOr$tOx%YOz%ZO|%[O!Q${O!]$|O!g%aO!j$xO#h%bO$V%_O$s%]O$u%^O$x%`O(R(tO(TTO(WUO(_$uO(w$}O(x%PO~Og(nP~P!+rO!O)gO!e)fO!]$]X$Y$]X$[$]X$^$]X$e$]X~O!e)fO!](yX$Y(yX$[(yX$^(yX$e(yX~O!O)gO~P!-{O!O)gO!](yX$Y(yX$[(yX$^(yX$e(yX~O!])iO$Y)mO$[)hO$^)hO$e)nO~O!Y)qO~P!(yO$[$hO$^$gO$e)uO~Ol$yX!O$yX#Q$yX'w$yX(w$yX(x$yX~OgkXg$yXlkX!ZkX#^kX~P!/qOv)wO(`)xO(a)zO~Ol*TO!O)|O'w)}O(w$}O(x%PO~Og){O~P!0uOg*UO~Oh%VOn%WOp%XOq$tOr$tOx%YOz%ZO|<eO!Q*WO!]*XO!g=vO!j$xO#h<kO$V%_O$s<gO$u<iO$x%`O(TTO(WUO(_$uO(w$}O(x%PO~O!Y*[O(R*VO!i(|P~P!1dO#i*^O~O!j*_O~Oh%VOn%WOp%XOq$tOr$tOx%YOz%ZO|<eO!Q${O!]$|O!g=vO!j$xO#h<kO$V%_O$s<gO$u<iO$x%`O(R*aO(TTO(WUO(_$uO(w$}O(x%PO~O!Y*dO!W(}P~P!3cOp*pOq!nO!Q*fO!`*nO!a*hO!b*hO!j*_O#Y*oO%_*jO(S!lO(TTO(WUO(c!mO~O![*mO~P!5WO#Q$dOl(^X!O(^X'w(^X(w(^X(x(^X!Z(^X#^(^X~Og(^X#}(^X~P!6YOl*uO#^*tOg(]X!Z(]X~O!Z*vOg([X~Oj%cO(R&XOg([P~Oq*yO~O!j+OO~O(R(tO~On+TO!Q%gO!Y#iO!]%hO!z]O#g#lO#h#iO(R%fO!i(qP~O!e#vO#i+UO~O!Q%gO!Y+WO!Z([O!]%hO(R%fO!W(tP~Oq'YO!Q+YO!Y+XO(TTO(WUO(c(zO~O![(vP~P!9]O!Z+ZOa)RX'x)RX~OP$[OR#zO[$cOp$aO!O#yO!Q#{O!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO#u$SO#w$UO#y$WO#z$XO(_VO(p$YO(w#|O(x#}O~Oa!ha!Z!ha'x!ha'u!ha!W!ha!i!hat!ha!]!ha%h!ha!e!ha~P!:TOR#zO!O#yO!Q#{O!j#xO(_VOP!pa[!pap!pa!Z!pa!n!pa#P!pa#l!pa#m!pa#n!pa#o!pa#p!pa#q!pa#r!pa#s!pa#t!pa#u!pa#w!pa#y!pa#z!pa(p!pa(w!pa(x!pa~Oa!pa'x!pa'u!pa!W!pa!i!pat!pa!]!pa%h!pa!e!pa~P!<kOR#zO!O#yO!Q#{O!j#xO(_VOP!ra[!rap!ra!Z!ra!n!ra#P!ra#l!ra#m!ra#n!ra#o!ra#p!ra#q!ra#r!ra#s!ra#t!ra#u!ra#w!ra#y!ra#z!ra(p!ra(w!ra(x!ra~Oa!ra'x!ra'u!ra!W!ra!i!rat!ra!]!ra%h!ra!e!ra~P!?ROh%VOl+dO!]'^O%h+cO~O!e+fOa(ZX!](ZX'x(ZX!Z(ZX~Oa%mO!]XO'x%mO~Oh%VO!j%dO~Oh%VO!j%dO(R%fO~O!e#vO#i(vO~Ob+qO%i+rO(R+nO(TTO(WUO![)VP~O!Z+sO`)UX~O[+wO~O`+xO~O!]&OO(R%fO(S!lO`)UP~Oh%VO#^+}O~Oh%VOl,QO!]$|O~O!],SO~O!O,UO!]XO~O%m%uO~O!v,ZO~Oe,`O~Ob,aO(R#nO(TTO(WUO![)TP~Oe%|O~O%i!QO(R&XO~P=UO[,fO`,eO~OPYOQYOSfOdzOeyOnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!guO!jZO!mYO!nYO!oYO!qvO!vxO!z]O$miO%g}O(TTO(WUO(_VO(m[O~O!]!eO!s!gO$V!kO(R!dO~P!FRO`,eOa%mO'x%mO~OPYOQYOSfOd!jOe!iOnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]!eO!guO!jZO!mYO!nYO!oYO!qvO!v!hO$V!kO$miO(R!dO(TTO(WUO(_VO(m[O~Oa,kOj!OO!swO%k!OO%l!OO%m!OO~P!HkO!j&mO~O&[,qO~O!],sO~O&m,uO&o,vOP&jaQ&jaS&jaY&jaa&jad&jae&jaj&jan&jap&jaq&jar&jax&jaz&ja|&ja!Q&ja!U&ja!V&ja!]&ja!g&ja!j&ja!m&ja!n&ja!o&ja!q&ja!s&ja!v&ja!z&ja$V&ja$m&ja%g&ja%i&ja%k&ja%l&ja%m&ja%p&ja%r&ja%u&ja%v&ja%x&ja&U&ja&[&ja&^&ja&`&ja&b&ja&e&ja&k&ja&q&ja&s&ja&u&ja&w&ja&y&ja'u&ja(R&ja(T&ja(W&ja(_&ja(m&ja![&ja&c&jab&ja&h&ja~O(R,{O~Oh!cX!Z!PX![!PX!e!PX!e!cX!j!cX#^!PX~O!Z!cX![!cX~P# qO!e-QO#^-POh(hX!Z#fX![#fX!e(hX!j(hX~O!Z(hX![(hX~P#!dOh%VO!e-SO!j%dO!Z!_X![!_X~Oq!nO!Q!oO(TTO(WUO(c!mO~OP;vOQ;vOSfOd=rOe!iOnkOp;vOqkOrkOxkOz;vO|;vO!QWO!UkO!VkO!]!eO!g;yO!jZO!m;vO!n;vO!o;vO!q;zO!s;}O!v!hO$V!kO$m=pO(TTO(WUO(_VO(m[O~O(R<rO~P##yO!Z-WO![(gX~O![-YO~O!e-QO#^-PO!Z#fX![#fX~O!Z-ZO![(vX~O![-]O~O!a-^O!b-^O(S!lO~P##hO![-aO~P'_Ol-dO!]'^O~O!W-iO~Oq!ya!`!ya!a!ya!b!ya#R!ya#S!ya#T!ya#U!ya#V!ya#Y!ya#Z!ya(S!ya(T!ya(W!ya(c!ya(m!ya~P!#eO!n-nO#^-lO~PCVO!a-pO!b-pO(S!lO~PCuOa%mO#^-lO'x%mO~Oa%mO!e#vO#^-lO'x%mO~Oa%mO!e#vO!n-nO#^-lO'x%mO(p'nO~O'}'vO(O'vO(P-uO~Ot-vO~O!W'Ua!Z'Ua~P!:TO!Y-zO!W'UX!Z'UX~P%[O!Z(TO!W(fa~O!W(fa~PGpO!Z([O!W(ta~O!Q%gO!Y.OO!]%hO(R%fO!W'[X!Z'[X~O#^.QO!Z(ra!i(raa(ra'x(ra~O!e#vO~P#,PO!Z(hO!i(qa~O!Q%gO!]%hO#h.UO(R%fO~On.ZO!Q%gO!Y.WO!]%hO!z]O#g.YO#h.WO(R%fO!Z'_X!i'_X~OR._O!j#xO~Oh%VOl.bO!]'^O%h.aO~Oa#ai!Z#ai'x#ai'u#ai!W#ai!i#ait#ai!]#ai%h#ai!e#ai~P!:TOl=|O!O)|O'w)}O(w$}O(x%PO~O#i#]aa#]a#^#]a'x#]a!Z#]a!i#]a!]#]a!W#]a~P#.{O#i(^XP(^XR(^X[(^Xa(^Xp(^X!Q(^X!j(^X!n(^X#P(^X#l(^X#m(^X#n(^X#o(^X#p(^X#q(^X#r(^X#s(^X#t(^X#u(^X#w(^X#y(^X#z(^X'x(^X(_(^X(p(^X!i(^X!W(^X'u(^Xt(^X!](^X%h(^X!e(^X~P!6YO!Z.oO!i(iX~P!:TO!i.rO~O!W.tO~OP$[OR#zO!O#yO!Q#{O!j#xO!n$[O(_VO[#kia#kip#ki!Z#ki#P#ki#m#ki#n#ki#o#ki#p#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki'x#ki(p#ki(w#ki(x#ki'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~O#l#ki~P#2kO#l$OO~P#2kOP$[OR#zOp$aO!O#yO!Q#{O!j#xO!n$[O#l$OO#m$PO#n$PO#o$PO(_VO[#kia#ki!Z#ki#P#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki'x#ki(p#ki(w#ki(x#ki'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~O#p#ki~P#5YO#p$QO~P#5YOP$[OR#zO[$cOp$aO!O#yO!Q#{O!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO(_VOa#ki!Z#ki#w#ki#y#ki#z#ki'x#ki(p#ki(w#ki(x#ki'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~O#u#ki~P#7wOP$[OR#zO[$cOp$aO!O#yO!Q#{O!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO#u$SO(_VO(x#}Oa#ki!Z#ki#y#ki#z#ki'x#ki(p#ki(w#ki'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~O#w$UO~P#:_O#w#ki~P#:_O#u$SO~P#7wOP$[OR#zO[$cOp$aO!O#yO!Q#{O!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO#u$SO#w$UO(_VO(w#|O(x#}Oa#ki!Z#ki#z#ki'x#ki(p#ki'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~O#y#ki~P#=TO#y$WO~P#=TOP]XR]X[]Xp]X!O]X!Q]X!j]X!n]X#P]X#Q]X#^]X#ifX#l]X#m]X#n]X#o]X#p]X#q]X#r]X#s]X#t]X#u]X#w]X#y]X#z]X$P]X(_]X(p]X(w]X(x]X!Z]X![]X~O#}]X~P#?rOP$[OR#zO[<_Op<]O!O#yO!Q#{O!j#xO!n$[O#P<SO#l<PO#m<QO#n<QO#o<QO#p<RO#q<SO#r<SO#s<^O#t<SO#u<TO#w<VO#y<XO#z<YO(_VO(p$YO(w#|O(x#}O~O#}.vO~P#BPO#Q$dO#^<`O$P<`O#}(eX![(eX~P! dOa'ba!Z'ba'x'ba'u'ba!i'ba!W'bat'ba!]'ba%h'ba!e'ba~P!:TO[#kia#kip#ki!Z#ki#P#ki#p#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki'x#ki(p#ki'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~OP$[OR#zO!O#yO!Q#{O!j#xO!n$[O#l$OO#m$PO#n$PO#o$PO(_VO(w#ki(x#ki~P#EROl=|O!O)|O'w)}O(w$}O(x%POP#kiR#ki!Q#ki!j#ki!n#ki#l#ki#m#ki#n#ki#o#ki(_#ki~P#ERO!Z.zOg(nX~P!0uOg.|O~Oa$Oi!Z$Oi'x$Oi'u$Oi!W$Oi!i$Oit$Oi!]$Oi%h$Oi!e$Oi~P!:TO$[.}O$^.}O~O$[/OO$^/OO~O!e)fO#^/PO!]$bX$Y$bX$[$bX$^$bX$e$bX~O!Y/QO~O!])iO$Y/SO$[)hO$^)hO$e/TO~O!Z<ZO![(dX~P#BPO![/UO~O!e)fO$e(yX~O$e/WO~Ot/XO~P!&iOv)wO(`)xO(a/[O~O!Q/_O~O(w$}Ol%`a!O%`a'w%`a(x%`a!Z%`a#^%`a~Og%`a#}%`a~P#LTO(x%POl%ba!O%ba'w%ba(w%ba!Z%ba#^%ba~Og%ba#}%ba~P#LvO!ZfX!efX!ifX!i$yX(pfX~P!/qO!Y/hO!Z([O(R/gO!W(tP!W(}P~P!1dOp*pO!`*nO!a*hO!b*hO!j*_O#Y*oO%_*jO(S!lO(TTO(WUO~Oq<oO!Q/iO!Y+XO![*mO(c<nO![(vP~P#NaO!i/jO~P#.{O!Z/kO!e#vO(p'nO!i(|X~O!i/pO~O!Q%gO!Y*[O!]%hO(R%fO!i(|P~O#i/rO~O!W$yX!Z$yX!e%QX~P!/qO!Z/sO!W(}X~P#.{O!e/uO~O!W/wO~OnkO(R/xO~P.iOh%VOp/}O!e#vO!j%dO(p'nO~O!e+fO~Oa%mO!Z0RO'x%mO~O![0TO~P!5WO!a0UO!b0UO(S!lO~P##hOq!nO!Q0VO(TTO(WUO(c!mO~O#Y0XO~Og%`a!Z%`a#^%`a#}%`a~P!0uOg%ba!Z%ba#^%ba#}%ba~P!0uOj%cO(R&XOg'kX!Z'kX~O!Z*vOg([a~Og0bO~OR0cO!O0cO!Q0dO#Q$dOl{a'w{a(w{a(x{a!Z{a#^{a~Og{a#}{a~P$&dO!O)|O'w)}Ol$ra(w$ra(x$ra!Z$ra#^$ra~Og$ra#}$ra~P$'`O!O)|O'w)}Ol$ta(w$ta(x$ta!Z$ta#^$ta~Og$ta#}$ta~P$(RO#i0gO~Og%Sa!Z%Sa#^%Sa#}%Sa~P!0uOl0iO#^0hOg(]a!Z(]a~O!e#vO~O#i0lO~O!Z+ZOa)Ra'x)Ra~OR#zO!O#yO!Q#{O!j#xO(_VOP!pi[!pip!pi!Z!pi!n!pi#P!pi#l!pi#m!pi#n!pi#o!pi#p!pi#q!pi#r!pi#s!pi#t!pi#u!pi#w!pi#y!pi#z!pi(p!pi(w!pi(x!pi~Oa!pi'x!pi'u!pi!W!pi!i!pit!pi!]!pi%h!pi!e!pi~P$*OOh%VOp%XOq$tOr$tOx%YOz%ZO|<eO!Q${O!]$|O!g=vO!j$xO#h<kO$V%_O$s<gO$u<iO$x%`O(TTO(WUO(_$uO(w$}O(x%PO~On0vO%[0wO(R0tO~P$,fO!e+fOa(Za!](Za'x(Za!Z(Za~O#i0|O~O[]X!ZfX![fX~O!Z0}O![)VX~O![1PO~O[1QO~Ob1SO(R+nO(TTO(WUO~O!]&OO(R%fO`'sX!Z'sX~O!Z+sO`)Ua~O!i1VO~P!:TO[1YO~O`1ZO~O#^1^O~Ol1aO!]$|O~O(c(zO![)SP~Oh%VOl1jO!]1gO%h1iO~O[1tO!Z1rO![)TX~O![1uO~O`1wOa%mO'x%mO~O(R#nO(TTO(WUO~O#Q$dO#^$eO$P$eOP(eXR(eX[(eXp(eX!O(eX!Q(eX!Z(eX!j(eX!n(eX#P(eX#l(eX#m(eX#n(eX#o(eX#p(eX#q(eX#r(eX#s(eX#u(eX#w(eX#y(eX#z(eX(_(eX(p(eX(w(eX(x(eX~O#t1zO&Y1{Oa(eX~P$2PO#^$eO#t1zO&Y1{O~Oa1}O~P%[Oa2PO~O&c2SOP&aiQ&aiS&aiY&aia&aid&aie&aij&ain&aip&aiq&air&aix&aiz&ai|&ai!Q&ai!U&ai!V&ai!]&ai!g&ai!j&ai!m&ai!n&ai!o&ai!q&ai!s&ai!v&ai!z&ai$V&ai$m&ai%g&ai%i&ai%k&ai%l&ai%m&ai%p&ai%r&ai%u&ai%v&ai%x&ai&U&ai&[&ai&^&ai&`&ai&b&ai&e&ai&k&ai&q&ai&s&ai&u&ai&w&ai&y&ai'u&ai(R&ai(T&ai(W&ai(_&ai(m&ai![&aib&ai&h&ai~Ob2YO![2WO&h2XO~P`O!]XO!j2[O~O&o,vOP&jiQ&jiS&jiY&jia&jid&jie&jij&jin&jip&jiq&jir&jix&jiz&ji|&ji!Q&ji!U&ji!V&ji!]&ji!g&ji!j&ji!m&ji!n&ji!o&ji!q&ji!s&ji!v&ji!z&ji$V&ji$m&ji%g&ji%i&ji%k&ji%l&ji%m&ji%p&ji%r&ji%u&ji%v&ji%x&ji&U&ji&[&ji&^&ji&`&ji&b&ji&e&ji&k&ji&q&ji&s&ji&u&ji&w&ji&y&ji'u&ji(R&ji(T&ji(W&ji(_&ji(m&ji![&ji&c&jib&ji&h&ji~O!W2bO~O!Z!_a![!_a~P#BPOq!nO!Q!oO!Y2hO(c!mO!Z'VX!['VX~P@]O!Z-WO![(ga~O!Z']X![']X~P!9]O!Z-ZO![(va~O![2oO~P'_Oa%mO#^2xO'x%mO~Oa%mO!e#vO#^2xO'x%mO~Oa%mO!e#vO!n2|O#^2xO'x%mO(p'nO~Oa%mO'x%mO~P!:TO!Z$_Ot$pa~O!W'Ui!Z'Ui~P!:TO!Z(TO!W(fi~O!Z([O!W(ti~O!W(ui!Z(ui~P!:TO!Z(ri!i(ria(ri'x(ri~P!:TO#^3OO!Z(ri!i(ria(ri'x(ri~O!Z(hO!i(qi~O!Q%gO!]%hO!z]O#g3TO#h3SO(R%fO~O!Q%gO!]%hO#h3SO(R%fO~Ol3[O!]'^O%h3ZO~Oh%VOl3[O!]'^O%h3ZO~O#i%`aP%`aR%`a[%`aa%`ap%`a!Q%`a!j%`a!n%`a#P%`a#l%`a#m%`a#n%`a#o%`a#p%`a#q%`a#r%`a#s%`a#t%`a#u%`a#w%`a#y%`a#z%`a'x%`a(_%`a(p%`a!i%`a!W%`a'u%`at%`a!]%`a%h%`a!e%`a~P#LTO#i%baP%baR%ba[%baa%bap%ba!Q%ba!j%ba!n%ba#P%ba#l%ba#m%ba#n%ba#o%ba#p%ba#q%ba#r%ba#s%ba#t%ba#u%ba#w%ba#y%ba#z%ba'x%ba(_%ba(p%ba!i%ba!W%ba'u%bat%ba!]%ba%h%ba!e%ba~P#LvO#i%`aP%`aR%`a[%`aa%`ap%`a!Q%`a!Z%`a!j%`a!n%`a#P%`a#l%`a#m%`a#n%`a#o%`a#p%`a#q%`a#r%`a#s%`a#t%`a#u%`a#w%`a#y%`a#z%`a'x%`a(_%`a(p%`a!i%`a!W%`a'u%`a#^%`at%`a!]%`a%h%`a!e%`a~P#.{O#i%baP%baR%ba[%baa%bap%ba!Q%ba!Z%ba!j%ba!n%ba#P%ba#l%ba#m%ba#n%ba#o%ba#p%ba#q%ba#r%ba#s%ba#t%ba#u%ba#w%ba#y%ba#z%ba'x%ba(_%ba(p%ba!i%ba!W%ba'u%ba#^%bat%ba!]%ba%h%ba!e%ba~P#.{O#i{aP{a[{aa{ap{a!j{a!n{a#P{a#l{a#m{a#n{a#o{a#p{a#q{a#r{a#s{a#t{a#u{a#w{a#y{a#z{a'x{a(_{a(p{a!i{a!W{a'u{at{a!]{a%h{a!e{a~P$&dO#i$raP$raR$ra[$raa$rap$ra!Q$ra!j$ra!n$ra#P$ra#l$ra#m$ra#n$ra#o$ra#p$ra#q$ra#r$ra#s$ra#t$ra#u$ra#w$ra#y$ra#z$ra'x$ra(_$ra(p$ra!i$ra!W$ra'u$rat$ra!]$ra%h$ra!e$ra~P$'`O#i$taP$taR$ta[$taa$tap$ta!Q$ta!j$ta!n$ta#P$ta#l$ta#m$ta#n$ta#o$ta#p$ta#q$ta#r$ta#s$ta#t$ta#u$ta#w$ta#y$ta#z$ta'x$ta(_$ta(p$ta!i$ta!W$ta'u$tat$ta!]$ta%h$ta!e$ta~P$(RO#i%SaP%SaR%Sa[%Saa%Sap%Sa!Q%Sa!Z%Sa!j%Sa!n%Sa#P%Sa#l%Sa#m%Sa#n%Sa#o%Sa#p%Sa#q%Sa#r%Sa#s%Sa#t%Sa#u%Sa#w%Sa#y%Sa#z%Sa'x%Sa(_%Sa(p%Sa!i%Sa!W%Sa'u%Sa#^%Sat%Sa!]%Sa%h%Sa!e%Sa~P#.{Oa#aq!Z#aq'x#aq'u#aq!W#aq!i#aqt#aq!]#aq%h#aq!e#aq~P!:TO!Y3dO!Z'WX!i'WX~P%[O!Z.oO!i(ia~O!Z.oO!i(ia~P!:TO!W3gO~O#}!la![!la~PKZO#}!ha!Z!ha![!ha~P#BPO#}!pa![!pa~P!<kO#}!ra![!ra~P!?ROg'ZX!Z'ZX~P!+rO!Z.zOg(na~OSfO!]3{O$c3|O~O![4QO~Ot4RO~P#.{Oa$lq!Z$lq'x$lq'u$lq!W$lq!i$lqt$lq!]$lq%h$lq!e$lq~P!:TO!W4TO~P!&iO!Q4UO~O!O)|O'w)}O(x%POl'ga(w'ga!Z'ga#^'ga~Og'ga#}'ga~P%+uO!O)|O'w)}Ol'ia(w'ia(x'ia!Z'ia#^'ia~Og'ia#}'ia~P%,hO(p$YO~P#.{O!WfX!W$yX!ZfX!Z$yX!e%QX#^fX~P!/qO(R<xO~P!1dO!Q%gO!Y4XO!]%hO(R%fO!Z'cX!i'cX~O!Z/kO!i(|a~O!Z/kO!e#vO!i(|a~O!Z/kO!e#vO(p'nO!i(|a~Og${i!Z${i#^${i#}${i~P!0uO!Y4aO!W'eX!Z'eX~P!3cO!Z/sO!W(}a~O!Z/sO!W(}a~P#.{OP]XR]X[]Xp]X!O]X!Q]X!W]X!Z]X!j]X!n]X#P]X#Q]X#^]X#ifX#l]X#m]X#n]X#o]X#p]X#q]X#r]X#s]X#t]X#u]X#w]X#y]X#z]X$P]X(_]X(p]X(w]X(x]X~O!e%XX#t%XX~P%0XO!e#vO#t4fO~Oh%VO!e#vO!j%dO~Oh%VOp4kO!j%dO(p'nO~Op4pO!e#vO(p'nO~Oq!nO!Q4qO(TTO(WUO(c!mO~O(w$}Ol%`i!O%`i'w%`i(x%`i!Z%`i#^%`i~Og%`i#}%`i~P%3xO(x%POl%bi!O%bi'w%bi(w%bi!Z%bi#^%bi~Og%bi#}%bi~P%4kOg(]i!Z(]i~P!0uO#^4wOg(]i!Z(]i~P!0uO!i4zO~Oa$nq!Z$nq'x$nq'u$nq!W$nq!i$nqt$nq!]$nq%h$nq!e$nq~P!:TO!W5QO~O!Z5RO!])OX~P#.{Oa]Xa$yX!]]X!]$yX%]]X'x]X'x$yX!Z]X!Z$yX~P!/qO%]5UOa%Za!]%Za'x%Za!Z%Za~OlmX!OmX'wmX(wmX(xmX~P%7nOn5VO(R#nO~Ob5]O%i5^O(R+nO(TTO(WUO!Z'rX!['rX~O!Z0}O![)Va~O[5bO~O`5cO~Oa%mO'x%mO~P#.{O!Z5kO#^5mO![)SX~O![5nO~Op5tOq!nO!Q*fO!`!yO!a!vO!b!vO!z;wO#R!pO#S!pO#T!pO#U!pO#V!pO#Y5sO#Z!zO(S!lO(TTO(WUO(c!mO(m!sO~O![5rO~P%:ROl5yO!]1gO%h5xO~Oh%VOl5yO!]1gO%h5xO~Ob6QO(R#nO(TTO(WUO!Z'qX!['qX~O!Z1rO![)Ta~O(TTO(WUO(c6SO~O`6WO~O#t6ZO&Y6[O~PMvO!i6]O~P%[Oa6_O~Oa6_O~P%[Ob2YO![6dO&h2XO~P`O!e6fO~O!e6hOh(hi!Z(hi![(hi!e(hi!j(hip(hi(p(hi~O!Z#fi![#fi~P#BPO#^6iO!Z#fi![#fi~O!Z!_i![!_i~P#BPOa%mO#^6rO'x%mO~Oa%mO!e#vO#^6rO'x%mO~O!Z(rq!i(rqa(rq'x(rq~P!:TO!Z(hO!i(qq~O!Q%gO!]%hO#h6yO(R%fO~O!]'^O%h6|O~Ol7QO!]'^O%h6|O~O#i'gaP'gaR'ga['gaa'gap'ga!Q'ga!j'ga!n'ga#P'ga#l'ga#m'ga#n'ga#o'ga#p'ga#q'ga#r'ga#s'ga#t'ga#u'ga#w'ga#y'ga#z'ga'x'ga(_'ga(p'ga!i'ga!W'ga'u'gat'ga!]'ga%h'ga!e'ga~P%+uO#i'iaP'iaR'ia['iaa'iap'ia!Q'ia!j'ia!n'ia#P'ia#l'ia#m'ia#n'ia#o'ia#p'ia#q'ia#r'ia#s'ia#t'ia#u'ia#w'ia#y'ia#z'ia'x'ia(_'ia(p'ia!i'ia!W'ia'u'iat'ia!]'ia%h'ia!e'ia~P%,hO#i${iP${iR${i[${ia${ip${i!Q${i!Z${i!j${i!n${i#P${i#l${i#m${i#n${i#o${i#p${i#q${i#r${i#s${i#t${i#u${i#w${i#y${i#z${i'x${i(_${i(p${i!i${i!W${i'u${i#^${it${i!]${i%h${i!e${i~P#.{O#i%`iP%`iR%`i[%`ia%`ip%`i!Q%`i!j%`i!n%`i#P%`i#l%`i#m%`i#n%`i#o%`i#p%`i#q%`i#r%`i#s%`i#t%`i#u%`i#w%`i#y%`i#z%`i'x%`i(_%`i(p%`i!i%`i!W%`i'u%`it%`i!]%`i%h%`i!e%`i~P%3xO#i%biP%biR%bi[%bia%bip%bi!Q%bi!j%bi!n%bi#P%bi#l%bi#m%bi#n%bi#o%bi#p%bi#q%bi#r%bi#s%bi#t%bi#u%bi#w%bi#y%bi#z%bi'x%bi(_%bi(p%bi!i%bi!W%bi'u%bit%bi!]%bi%h%bi!e%bi~P%4kO!Z'Wa!i'Wa~P!:TO!Z.oO!i(ii~O#}#ai!Z#ai![#ai~P#BPOP$[OR#zO!O#yO!Q#{O!j#xO!n$[O(_VO[#kip#ki#P#ki#m#ki#n#ki#o#ki#p#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki#}#ki(p#ki(w#ki(x#ki!Z#ki![#ki~O#l#ki~P%MQO#l<PO~P%MQOP$[OR#zOp<]O!O#yO!Q#{O!j#xO!n$[O#l<PO#m<QO#n<QO#o<QO(_VO[#ki#P#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki#}#ki(p#ki(w#ki(x#ki!Z#ki![#ki~O#p#ki~P& YO#p<RO~P& YOP$[OR#zO[<_Op<]O!O#yO!Q#{O!j#xO!n$[O#P<SO#l<PO#m<QO#n<QO#o<QO#p<RO#q<SO#r<SO#s<^O#t<SO(_VO#w#ki#y#ki#z#ki#}#ki(p#ki(w#ki(x#ki!Z#ki![#ki~O#u#ki~P&#bOP$[OR#zO[<_Op<]O!O#yO!Q#{O!j#xO!n$[O#P<SO#l<PO#m<QO#n<QO#o<QO#p<RO#q<SO#r<SO#s<^O#t<SO#u<TO(_VO(x#}O#y#ki#z#ki#}#ki(p#ki(w#ki!Z#ki![#ki~O#w<VO~P&%cO#w#ki~P&%cO#u<TO~P&#bOP$[OR#zO[<_Op<]O!O#yO!Q#{O!j#xO!n$[O#P<SO#l<PO#m<QO#n<QO#o<QO#p<RO#q<SO#r<SO#s<^O#t<SO#u<TO#w<VO(_VO(w#|O(x#}O#z#ki#}#ki(p#ki!Z#ki![#ki~O#y#ki~P&'rO#y<XO~P&'rOa#{y!Z#{y'x#{y'u#{y!W#{y!i#{yt#{y!]#{y%h#{y!e#{y~P!:TO[#kip#ki#P#ki#p#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki#}#ki(p#ki!Z#ki![#ki~OP$[OR#zO!O#yO!Q#{O!j#xO!n$[O#l<PO#m<QO#n<QO#o<QO(_VO(w#ki(x#ki~P&*nOl=}O!O)|O'w)}O(w$}O(x%POP#kiR#ki!Q#ki!j#ki!n#ki#l#ki#m#ki#n#ki#o#ki(_#ki~P&*nO#Q$dOP(^XR(^X[(^Xl(^Xp(^X!O(^X!Q(^X!j(^X!n(^X#P(^X#l(^X#m(^X#n(^X#o(^X#p(^X#q(^X#r(^X#s(^X#t(^X#u(^X#w(^X#y(^X#z(^X#}(^X'w(^X(_(^X(p(^X(w(^X(x(^X!Z(^X![(^X~O#}$Oi!Z$Oi![$Oi~P#BPO#}!pi![!pi~P$*OOg'Za!Z'Za~P!0uO![7dO~O!Z'ba!['ba~P#BPO!W7eO~P#.{O!e#vO(p'nO!Z'ca!i'ca~O!Z/kO!i(|i~O!Z/kO!e#vO!i(|i~Og${q!Z${q#^${q#}${q~P!0uO!W'ea!Z'ea~P#.{O!e7lO~O!Z/sO!W(}i~P#.{O!Z/sO!W(}i~O!W7oO~Oh%VOp7tO!j%dO(p'nO~O!e#vO#t7vO~Op7yO!e#vO(p'nO~O!O)|O'w)}O(x%POl'ha(w'ha!Z'ha#^'ha~Og'ha#}'ha~P&3oO!O)|O'w)}Ol'ja(w'ja(x'ja!Z'ja#^'ja~Og'ja#}'ja~P&4bO!W7{O~Og$}q!Z$}q#^$}q#}$}q~P!0uOg(]q!Z(]q~P!0uO#^7|Og(]q!Z(]q~P!0uOa$ny!Z$ny'x$ny'u$ny!W$ny!i$nyt$ny!]$ny%h$ny!e$ny~P!:TO!e6hO~O!Z5RO!])Oa~O!]'^OP$SaR$Sa[$Sap$Sa!O$Sa!Q$Sa!Z$Sa!j$Sa!n$Sa#P$Sa#l$Sa#m$Sa#n$Sa#o$Sa#p$Sa#q$Sa#r$Sa#s$Sa#t$Sa#u$Sa#w$Sa#y$Sa#z$Sa(_$Sa(p$Sa(w$Sa(x$Sa~O%h6|O~P&7SO%]8QOa%Zi!]%Zi'x%Zi!Z%Zi~Oa#ay!Z#ay'x#ay'u#ay!W#ay!i#ayt#ay!]#ay%h#ay!e#ay~P!:TO[8SO~Ob8UO(R+nO(TTO(WUO~O!Z0}O![)Vi~O`8YO~O(c(zO!Z'nX!['nX~O!Z5kO![)Sa~O![8cO~P%:RO(m!sO~P$$oO#Y8dO~O!]1gO~O!]1gO%h8fO~Ol8iO!]1gO%h8fO~O[8nO!Z'qa!['qa~O!Z1rO![)Ti~O!i8rO~O!i8sO~O!i8vO~O!i8vO~P%[Oa8xO~O!e8yO~O!i8zO~O!Z(ui![(ui~P#BPOa%mO#^9SO'x%mO~O!Z(ry!i(rya(ry'x(ry~P!:TO!Z(hO!i(qy~O%h9VO~P&7SO!]'^O%h9VO~O#i${qP${qR${q[${qa${qp${q!Q${q!Z${q!j${q!n${q#P${q#l${q#m${q#n${q#o${q#p${q#q${q#r${q#s${q#t${q#u${q#w${q#y${q#z${q'x${q(_${q(p${q!i${q!W${q'u${q#^${qt${q!]${q%h${q!e${q~P#.{O#i'haP'haR'ha['haa'hap'ha!Q'ha!j'ha!n'ha#P'ha#l'ha#m'ha#n'ha#o'ha#p'ha#q'ha#r'ha#s'ha#t'ha#u'ha#w'ha#y'ha#z'ha'x'ha(_'ha(p'ha!i'ha!W'ha'u'hat'ha!]'ha%h'ha!e'ha~P&3oO#i'jaP'jaR'ja['jaa'jap'ja!Q'ja!j'ja!n'ja#P'ja#l'ja#m'ja#n'ja#o'ja#p'ja#q'ja#r'ja#s'ja#t'ja#u'ja#w'ja#y'ja#z'ja'x'ja(_'ja(p'ja!i'ja!W'ja'u'jat'ja!]'ja%h'ja!e'ja~P&4bO#i$}qP$}qR$}q[$}qa$}qp$}q!Q$}q!Z$}q!j$}q!n$}q#P$}q#l$}q#m$}q#n$}q#o$}q#p$}q#q$}q#r$}q#s$}q#t$}q#u$}q#w$}q#y$}q#z$}q'x$}q(_$}q(p$}q!i$}q!W$}q'u$}q#^$}qt$}q!]$}q%h$}q!e$}q~P#.{O!Z'Wi!i'Wi~P!:TO#}#aq!Z#aq![#aq~P#BPO(w$}OP%`aR%`a[%`ap%`a!Q%`a!j%`a!n%`a#P%`a#l%`a#m%`a#n%`a#o%`a#p%`a#q%`a#r%`a#s%`a#t%`a#u%`a#w%`a#y%`a#z%`a#}%`a(_%`a(p%`a!Z%`a![%`a~Ol%`a!O%`a'w%`a(x%`a~P&HgO(x%POP%baR%ba[%bap%ba!Q%ba!j%ba!n%ba#P%ba#l%ba#m%ba#n%ba#o%ba#p%ba#q%ba#r%ba#s%ba#t%ba#u%ba#w%ba#y%ba#z%ba#}%ba(_%ba(p%ba!Z%ba![%ba~Ol%ba!O%ba'w%ba(w%ba~P&JnOl=}O!O)|O'w)}O(x%PO~P&HgOl=}O!O)|O'w)}O(w$}O~P&JnOR0cO!O0cO!Q0dO#Q$dOP{a[{al{ap{a!j{a!n{a#P{a#l{a#m{a#n{a#o{a#p{a#q{a#r{a#s{a#t{a#u{a#w{a#y{a#z{a#}{a'w{a(_{a(p{a(w{a(x{a!Z{a![{a~O!O)|O'w)}OP$raR$ra[$ral$rap$ra!Q$ra!j$ra!n$ra#P$ra#l$ra#m$ra#n$ra#o$ra#p$ra#q$ra#r$ra#s$ra#t$ra#u$ra#w$ra#y$ra#z$ra#}$ra(_$ra(p$ra(w$ra(x$ra!Z$ra![$ra~O!O)|O'w)}OP$taR$ta[$tal$tap$ta!Q$ta!j$ta!n$ta#P$ta#l$ta#m$ta#n$ta#o$ta#p$ta#q$ta#r$ta#s$ta#t$ta#u$ta#w$ta#y$ta#z$ta#}$ta(_$ta(p$ta(w$ta(x$ta!Z$ta![$ta~Ol=}O!O)|O'w)}O(w$}O(x%PO~OP%SaR%Sa[%Sap%Sa!Q%Sa!j%Sa!n%Sa#P%Sa#l%Sa#m%Sa#n%Sa#o%Sa#p%Sa#q%Sa#r%Sa#s%Sa#t%Sa#u%Sa#w%Sa#y%Sa#z%Sa#}%Sa(_%Sa(p%Sa!Z%Sa![%Sa~P'%sO#}$lq!Z$lq![$lq~P#BPO#}$nq!Z$nq![$nq~P#BPO![9dO~O#}9eO~P!0uO!e#vO!Z'ci!i'ci~O!e#vO(p'nO!Z'ci!i'ci~O!Z/kO!i(|q~O!W'ei!Z'ei~P#.{O!Z/sO!W(}q~Op9lO!e#vO(p'nO~O[9nO!W9mO~P#.{O!W9mO~O!e#vO#t9tO~Og(]y!Z(]y~P!0uO!Z'la!]'la~P#.{Oa%Zq!]%Zq'x%Zq!Z%Zq~P#.{O[9yO~O!Z0}O![)Vq~O#^9}O!Z'na!['na~O!Z5kO![)Si~P#BPO!Q:PO~O!]1gO%h:SO~O(TTO(WUO(c:XO~O!Z1rO![)Tq~O!i:[O~O!i:]O~O!i:^O~O!i:^O~P%[O#^:aO!Z#fy![#fy~O!Z#fy![#fy~P#BPO%h:fO~P&7SO!]'^O%h:fO~O#}#{y!Z#{y![#{y~P#BPOP${iR${i[${ip${i!Q${i!j${i!n${i#P${i#l${i#m${i#n${i#o${i#p${i#q${i#r${i#s${i#t${i#u${i#w${i#y${i#z${i#}${i(_${i(p${i!Z${i![${i~P'%sO!O)|O'w)}O(x%POP'gaR'ga['gal'gap'ga!Q'ga!j'ga!n'ga#P'ga#l'ga#m'ga#n'ga#o'ga#p'ga#q'ga#r'ga#s'ga#t'ga#u'ga#w'ga#y'ga#z'ga#}'ga(_'ga(p'ga(w'ga!Z'ga!['ga~O!O)|O'w)}OP'iaR'ia['ial'iap'ia!Q'ia!j'ia!n'ia#P'ia#l'ia#m'ia#n'ia#o'ia#p'ia#q'ia#r'ia#s'ia#t'ia#u'ia#w'ia#y'ia#z'ia#}'ia(_'ia(p'ia(w'ia(x'ia!Z'ia!['ia~O(w$}OP%`iR%`i[%`il%`ip%`i!O%`i!Q%`i!j%`i!n%`i#P%`i#l%`i#m%`i#n%`i#o%`i#p%`i#q%`i#r%`i#s%`i#t%`i#u%`i#w%`i#y%`i#z%`i#}%`i'w%`i(_%`i(p%`i(x%`i!Z%`i![%`i~O(x%POP%biR%bi[%bil%bip%bi!O%bi!Q%bi!j%bi!n%bi#P%bi#l%bi#m%bi#n%bi#o%bi#p%bi#q%bi#r%bi#s%bi#t%bi#u%bi#w%bi#y%bi#z%bi#}%bi'w%bi(_%bi(p%bi(w%bi!Z%bi![%bi~O#}$ny!Z$ny![$ny~P#BPO#}#ay!Z#ay![#ay~P#BPO!e#vO!Z'cq!i'cq~O!Z/kO!i(|y~O!W'eq!Z'eq~P#.{Op:pO!e#vO(p'nO~O[:tO!W:sO~P#.{O!W:sO~Og(]!R!Z(]!R~P!0uOa%Zy!]%Zy'x%Zy!Z%Zy~P#.{O!Z0}O![)Vy~O!Z5kO![)Sq~O(R:zO~O!]1gO%h:}O~O!i;QO~O%h;VO~P&7SOP${qR${q[${qp${q!Q${q!j${q!n${q#P${q#l${q#m${q#n${q#o${q#p${q#q${q#r${q#s${q#t${q#u${q#w${q#y${q#z${q#}${q(_${q(p${q!Z${q![${q~P'%sO!O)|O'w)}O(x%POP'haR'ha['hal'hap'ha!Q'ha!j'ha!n'ha#P'ha#l'ha#m'ha#n'ha#o'ha#p'ha#q'ha#r'ha#s'ha#t'ha#u'ha#w'ha#y'ha#z'ha#}'ha(_'ha(p'ha(w'ha!Z'ha!['ha~O!O)|O'w)}OP'jaR'ja['jal'jap'ja!Q'ja!j'ja!n'ja#P'ja#l'ja#m'ja#n'ja#o'ja#p'ja#q'ja#r'ja#s'ja#t'ja#u'ja#w'ja#y'ja#z'ja#}'ja(_'ja(p'ja(w'ja(x'ja!Z'ja!['ja~OP$}qR$}q[$}qp$}q!Q$}q!j$}q!n$}q#P$}q#l$}q#m$}q#n$}q#o$}q#p$}q#q$}q#r$}q#s$}q#t$}q#u$}q#w$}q#y$}q#z$}q#}$}q(_$}q(p$}q!Z$}q![$}q~P'%sOg%d!Z!Z%d!Z#^%d!Z#}%d!Z~P!0uO!W;ZO~P#.{Op;[O!e#vO(p'nO~O[;^O!W;ZO~P#.{O!Z'nq!['nq~P#BPO!Z#f!Z![#f!Z~P#BPO#i%d!ZP%d!ZR%d!Z[%d!Za%d!Zp%d!Z!Q%d!Z!Z%d!Z!j%d!Z!n%d!Z#P%d!Z#l%d!Z#m%d!Z#n%d!Z#o%d!Z#p%d!Z#q%d!Z#r%d!Z#s%d!Z#t%d!Z#u%d!Z#w%d!Z#y%d!Z#z%d!Z'x%d!Z(_%d!Z(p%d!Z!i%d!Z!W%d!Z'u%d!Z#^%d!Zt%d!Z!]%d!Z%h%d!Z!e%d!Z~P#.{Op;fO!e#vO(p'nO~O!W;gO~P#.{Op;nO!e#vO(p'nO~O!W;oO~P#.{OP%d!ZR%d!Z[%d!Zp%d!Z!Q%d!Z!j%d!Z!n%d!Z#P%d!Z#l%d!Z#m%d!Z#n%d!Z#o%d!Z#p%d!Z#q%d!Z#r%d!Z#s%d!Z#t%d!Z#u%d!Z#w%d!Z#y%d!Z#z%d!Z#}%d!Z(_%d!Z(p%d!Z!Z%d!Z![%d!Z~P'%sOp;rO!e#vO(p'nO~Ot(dX~P1qO!O%qO~P!(yO(S!lO~P!(yO!WfX!ZfX#^fX~P%0XOP]XR]X[]Xp]X!O]X!Q]X!Z]X!ZfX!j]X!n]X#P]X#Q]X#^]X#^fX#ifX#l]X#m]X#n]X#o]X#p]X#q]X#r]X#s]X#t]X#u]X#w]X#y]X#z]X$P]X(_]X(p]X(w]X(x]X~O!efX!i]X!ifX(pfX~P'JlOP;vOQ;vOSfOd=rOe!iOnkOp;vOqkOrkOxkOz;vO|;vO!QWO!UkO!VkO!]XO!g;yO!jZO!m;vO!n;vO!o;vO!q;zO!s;}O!v!hO$V!kO$m=pO(R)ZO(TTO(WUO(_VO(m[O~O!Z<ZO![$pa~Oh%VOn%WOp%XOq$tOr$tOx%YOz%ZO|<fO!Q${O!]$|O!g=wO!j$xO#h<lO$V%_O$s<hO$u<jO$x%`O(R(tO(TTO(WUO(_$uO(w$}O(x%PO~Oj)bO~P( bOp!cX(p!cX~P# qOp(hX(p(hX~P#!dO![]X![fX~P'JlO!WfX!W$yX!ZfX!Z$yX#^fX~P!/qO#i<OO~O!e#vO#i<OO~O#^<`O~O#t<SO~O#^<pO!Z(uX![(uX~O#^<`O!Z(sX![(sX~O#i<qO~Og<sO~P!0uO#i<yO~O#i<zO~O!e#vO#i<{O~O!e#vO#i<qO~O#}<|O~P#BPO#i<}O~O#i=OO~O#i=TO~O#i=UO~O#i=VO~O#i=WO~O#}=XO~P!0uO#}=YO~P!0uO#Q#R#S#U#V#Y#g#h#s$m$s$u$x%[%]%g%h%i%p%r%u%v%x%z~'|T#m!V'z(S#nq#l#op!O'{$['{(R$^(c~",
  goto: "$8f)ZPPPPPP)[PP)_P)pP+Q/VPPPP6aPP6wPP<oP@cP@yP@yPPP@yPCRP@yP@yP@yPCVPC[PCyPHsPPPHwPPPPHwKzPPPLQLrPHwPHwPP! QHwPPPHwPHwP!#XHwP!&o!'t!'}P!(q!(u!(q!,SPPPPPPP!,s!'tPP!-T!.uP!2RHwHw!2W!5d!:Q!:Q!>PPPP!>XHwPPPPPPPPPP!AhP!BuPPHw!DWPHwPHwHwHwHwHwPHw!EjP!HtP!KzP!LO!LY!L^!L^P!HqP!Lb!LbP# hP# lHwPHw# r#$wCV@yP@yP@y@yP#&U@y@y#(h@y#+`@y#-l@y@y#.[#0p#0p#0u#1O#0p#1ZPP#0pP@y#1s@y#5r@y@y6aPPP#9wPPP#:b#:bP#:bP#:x#:bPP#;OP#:uP#:u#;c#:u#;}#<T#<W)_#<Z)_P#<b#<b#<bP)_P)_P)_P)_PP)_P#<h#<kP#<k)_P#<oP#<rP)_P)_P)_P)_P)_P)_)_PP#<x#=O#=Z#=a#=g#=m#=s#>R#>X#>c#>i#>s#>y#?Z#?a#@R#@e#@k#@q#AP#Af#CZ#Ci#Cp#E[#Ej#G[#Gj#Gp#Gv#G|#HW#H^#Hd#Hn#IQ#IWPPPPPPPPPPP#I^PPPPPPP#JR#MY#Nr#Ny$ RPPP$&mP$&v$)o$0Y$0]$0`$1_$1b$1i$1qP$1w$1zP$2h$2l$3d$4r$4w$5_PP$5d$5j$5n$5q$5u$5y$6u$7^$7u$7y$7|$8P$8V$8Y$8^$8bR!|RoqOXst!Z#d%l&p&r&s&u,n,s2S2VY!vQ'^-`1g5qQ%svQ%{yQ&S|Q&h!VS'U!e-WQ'd!iS'j!r!yU*h$|*X*lQ+l%|Q+y&UQ,_&bQ-^']Q-h'eQ-p'kQ0U*nQ1q,`R<m;z%SdOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&p&r&s&u&y'R'`'p(R(T(Z(b(v(x(|){*f+U+Y,k,n,s-d-l-z.Q.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3d4q5y6Z6[6_6r8i8x9SS#q];w!r)]$Z$n'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sU*{%[<e<fQ+q&OQ,a&eQ,h&mQ0r+dQ0u+fQ1S+rQ1y,fQ3W.bQ5V0wQ5]0}Q6Q1rQ7O3[Q8U5^R9Y7Q'QkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=s!S!nQ!r!v!y!z$|'U']'^'j'k'l*h*l*n*o-W-^-`-p0U0X1g5q5s%[$ti#v$b$c$d$x${%O%Q%]%^%b)w*P*R*T*W*^*d*t*u+c+f+},Q.a.z/_/h/r/s/u0Y0[0g0h0i1^1a1i3Z4U4V4a4f4w5R5U5x6|7l7v7|8Q8f9V9e9n9t:S:f:t:};V;^<^<_<a<b<c<d<g<h<i<j<k<l<t<u<v<w<y<z<}=O=P=Q=R=S=T=U=X=Y=p=x=y=|=}Q&V|Q'S!eS'Y%h-ZQ+q&OQ,a&eQ0f+OQ1S+rQ1X+xQ1x,eQ1y,fQ5]0}Q5f1ZQ6Q1rQ6T1tQ6U1wQ8U5^Q8X5cQ8q6WQ9|8YQ:Y8nR<o*XrnOXst!V!Z#d%l&g&p&r&s&u,n,s2S2VR,c&i&z^OPXYstuvwz!Z!`!g!j!o#S#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y'R'`'p(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=r=s[#]WZ#W#Z'V(R!b%im#h#i#l$x%d%g([(f(g(h*W*[*_+W+X+Z,j-Q.O.U.V.W.Y/h/k2[3S3T4X6h6yQ%vxQ%zyS&P|&UQ&]!TQ'a!hQ'c!iQ(o#sS+k%{%|Q+o&OQ,Y&`Q,^&bS-g'd'eQ.d(pQ0{+lQ1R+rQ1T+sQ1W+wQ1l,ZS1p,_,`Q2t-hQ5[0}Q5`1QQ5e1YQ6P1qQ8T5^Q8W5bQ9x8SR:w9y!U$zi$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=y!^%xy!i!u%z%{%|'T'c'd'e'i's*g+k+l-T-g-h-o/{0O0{2m2t2{4i4j4m7s9pQ+e%vQ,O&YQ,R&ZQ,]&bQ.c(oQ1k,YU1o,^,_,`Q3].dQ5z1lS6O1p1qQ8m6P#f=t#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}o=u<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=YW%Ti%V*v=pS&Y!Q&gQ&Z!RQ&[!SQ+S%cR+|&W%]%Si#v$b$c$d$x${%O%Q%]%^%b)w*P*R*T*W*^*d*t*u+c+f+},Q.a.z/_/h/r/s/u0Y0[0g0h0i1^1a1i3Z4U4V4a4f4w5R5U5x6|7l7v7|8Q8f9V9e9n9t:S:f:t:};V;^<^<_<a<b<c<d<g<h<i<j<k<l<t<u<v<w<y<z<}=O=P=Q=R=S=T=U=X=Y=p=x=y=|=}T)x$u)yV*{%[<e<fW'Y!e%h*X-ZS({#y#zQ+`%qQ+v&RS.](k(lQ1b,SQ4x0cR8^5k'QkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=s$i$^c#Y#e%p%r%t(Q(W(r(w)P)Q)R)S)T)U)V)W)X)Y)[)^)`)e)o+a+u-U-s-x-}.P.n.q.u.w.x.y/]0j2c2f2v2}3c3h3i3j3k3l3m3n3o3p3q3r3s3t3w3x4P5O5Y6k6q6v7V7W7a7b8`8|9Q9[9b9c:c:y;R;x=gT#TV#U'RkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sQ'W!eR2i-W!W!nQ!e!r!v!y!z$|'U']'^'j'k'l*X*h*l*n*o-W-^-`-p0U0X1g5q5sR1d,UnqOXst!Z#d%l&p&r&s&u,n,s2S2VQ&w!^Q't!xS(q#u<OQ+i%yQ,W&]Q,X&_Q-e'bQ-r'mS.m(v<qS0k+U<{Q0y+jQ1f,VQ2Z,uQ2],vQ2e-RQ2r-fQ2u-jS5P0l=VQ5W0zS5Z0|=WQ6j2gQ6n2sQ6s2zQ8R5XQ8}6lQ9O6oQ9R6tR:`8z$d$]c#Y#e%r%t(Q(W(r(w)P)Q)R)S)T)U)V)W)X)Y)[)^)`)e)o+a+u-U-s-x-}.P.n.q.u.x.y/]0j2c2f2v2}3c3h3i3j3k3l3m3n3o3p3q3r3s3t3w3x4P5O5Y6k6q6v7V7W7a7b8`8|9Q9[9b9c:c:y;R;x=gS(m#p'gQ(}#zS+_%p.wS.^(l(nR3U._'QkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sS#q];wQ&r!XQ&s!YQ&u![Q&v!]R2R,qQ'_!hQ+b%vQ-c'aS.`(o+eQ2p-bW3Y.c.d0q0sQ6m2qW6z3V3X3]5TU9U6{6}7PU:e9W9X9ZS;T:d:gQ;b;UR;j;cU!wQ'^-`T5o1g5q!Q_OXZ`st!V!Z#d#h%d%l&g&i&p&r&s&u(h,n,s.V2S2V]!pQ!r'^-`1g5qT#q];w%^{OPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&m&p&r&s&u&y'R'`'p(R(T(Z(b(v(x(|){*f+U+Y+d,k,n,s-d-l-z.Q.b.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3[3d4q5y6Z6[6_6r7Q8i8x9SS({#y#zS.](k(l!s=^$Z$n'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sU$fd)],hS(n#p'gU*s%R(u3vU0e*z.i7]Q5T0rQ6{3WQ9X7OR:g9Ym!tQ!r!v!y!z'^'j'k'l-`-p1g5q5sQ'r!uS(d#g1|S-n'i'uQ/n*ZQ/{*gQ2|-qQ4]/oQ4i/}Q4j0OQ4o0WQ7h4WS7s4k4mS7w4p4rQ9g7iQ9k7oQ9p7tQ9u7yS:o9l9mS;Y:p:sS;e;Z;[S;m;f;gS;q;n;oR;t;rQ#wbQ'q!uS(c#g1|S(e#m+TQ+V%eQ+g%wQ+m%}U-m'i'r'uQ.R(dQ/m*ZQ/|*gQ0P*iQ0x+hQ1m,[S2y-n-qQ3R.ZS4[/n/oQ4e/yS4h/{0WQ4l0QQ5|1nQ6u2|Q7g4WQ7k4]U7r4i4o4rQ7u4nQ8k5}S9f7h7iQ9j7oQ9r7wQ9s7xQ:V8lQ:m9gS:n9k9mQ:v9uQ;P:WS;X:o:sS;d;Y;ZS;l;e;gS;p;m;oQ;s;qQ;u;tQ=a=[Q=l=eR=m=fV!wQ'^-`%^aOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&m&p&r&s&u&y'R'`'p(R(T(Z(b(v(x(|){*f+U+Y+d,k,n,s-d-l-z.Q.b.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3[3d4q5y6Z6[6_6r7Q8i8x9SS#wz!j!r=Z$Z$n'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sR=a=r%^bOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&m&p&r&s&u&y'R'`'p(R(T(Z(b(v(x(|){*f+U+Y+d,k,n,s-d-l-z.Q.b.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3[3d4q5y6Z6[6_6r7Q8i8x9SQ%ej!^%wy!i!u%z%{%|'T'c'd'e'i's*g+k+l-T-g-h-o/{0O0{2m2t2{4i4j4m7s9pS%}z!jQ+h%xQ,[&bW1n,],^,_,`U5}1o1p1qS8l6O6PQ:W8m!r=[$Z$n'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sQ=e=qR=f=r%QeOPXYstuvw!Z!`!g!o#S#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&p&r&s&u&y'R'`'p(T(Z(b(v(x(|){*f+U+Y+d,k,n,s-d-l-z.Q.b.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3[3d4q5y6Z6[6_6r7Q8i8x9SY#bWZ#W#Z(R!b%im#h#i#l$x%d%g([(f(g(h*W*[*_+W+X+Z,j-Q.O.U.V.W.Y/h/k2[3S3T4X6h6yQ,i&m!p=]$Z$n)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sR=`'VU'Z!e%h*XR2k-Z%SdOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&p&r&s&u&y'R'`'p(R(T(Z(b(v(x(|){*f+U+Y,k,n,s-d-l-z.Q.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3d4q5y6Z6[6_6r8i8x9S!r)]$Z$n'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sQ,h&mQ0r+dQ3W.bQ7O3[R9Y7Q!b$Tc#Y%p(Q(W(r(w)X)Y)^)e+u-s-x-}.P.n.q/]0j2v2}3c3s5O5Y6q6v7V9Q:c;x!P<U)[)o-U.w2c2f3h3q3r3w4P6k7W7a7b8`8|9[9b9c:y;R=g!f$Vc#Y%p(Q(W(r(w)U)V)X)Y)^)e+u-s-x-}.P.n.q/]0j2v2}3c3s5O5Y6q6v7V9Q:c;x!T<W)[)o-U.w2c2f3h3n3o3q3r3w4P6k7W7a7b8`8|9[9b9c:y;R=g!^$Zc#Y%p(Q(W(r(w)^)e+u-s-x-}.P.n.q/]0j2v2}3c3s5O5Y6q6v7V9Q:c;xQ4V/fz=s)[)o-U.w2c2f3h3w4P6k7W7a7b8`8|9[9b9c:y;R=gQ=x=zR=y={'QkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sS$oh$pR3|/P'XgOPWXYZhstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n$p%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/P/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sT$kf$qQ$ifS)h$l)lR)t$qT$jf$qT)j$l)l'XhOPWXYZhstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n$p%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/P/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sT$oh$pQ$rhR)s$p%^jOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&m&p&r&s&u&y'R'`'p(R(T(Z(b(v(x(|){*f+U+Y+d,k,n,s-d-l-z.Q.b.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3[3d4q5y6Z6[6_6r7Q8i8x9S!s=q$Z$n'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=s#glOPXZst!Z!`!o#S#d#o#{$n%l&i&l&m&p&r&s&u&y'R'`(|)q*f+Y+d,k,n,s-d.b/Q/i0V0d1j1z1{1}2P2S2V2X3[3{4q5y6Z6[6_7Q8i8x!U%Ri$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=y#f(u#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}Q+P%`Q/^)|o3v<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=Y!U$yi$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=yQ*`$zU*i$|*X*lQ+Q%aQ0Q*j#f=c#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}n=d<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=YQ=h=tQ=i=uQ=j=vR=k=w!U%Ri$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=y#f(u#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}o3v<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=YnoOXst!Z#d%l&p&r&s&u,n,s2S2VS*c${*WQ,|&|Q,}'OR4`/s%[%Si#v$b$c$d$x${%O%Q%]%^%b)w*P*R*T*W*^*d*t*u+c+f+},Q.a.z/_/h/r/s/u0Y0[0g0h0i1^1a1i3Z4U4V4a4f4w5R5U5x6|7l7v7|8Q8f9V9e9n9t:S:f:t:};V;^<^<_<a<b<c<d<g<h<i<j<k<l<t<u<v<w<y<z<}=O=P=Q=R=S=T=U=X=Y=p=x=y=|=}Q,P&ZQ1`,RQ5i1_R8]5jV*k$|*X*lU*k$|*X*lT5p1g5qS/y*f/iQ4n0VT7x4q:PQ+g%wQ0P*iQ0x+hQ1m,[Q5|1nQ8k5}Q:V8lR;P:W!U%Oi$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=yx*P$v)c*Q*r+R/q0^0_3y4^4{4|4}7f7z9v:l=b=n=oS0Y*q0Z#f<a#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}n<b<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=Y!d<t(s)a*Y*b.e.h.l/Y/f/v0p1]3`4S4_4c5h7R7U7m7p7}8P9i9q9w:q:u;W;];h=z={`<u3u7X7[7`9]:h:k;kS=P.g3aT=Q7Z9`!U%Qi$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=y|*R$v)c*S*q+R/b/q0^0_3y4^4s4{4|4}7f7z9v:l=b=n=oS0[*r0]#f<c#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}n<d<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=Y!h<v(s)a*Y*b.f.g.l/Y/f/v0p1]3^3`4S4_4c5h7R7S7U7m7p7}8P9i9q9w:q:u;W;];h=z={d<w3u7Y7Z7`9]9^:h:i:k;kS=R.h3bT=S7[9arnOXst!V!Z#d%l&g&p&r&s&u,n,s2S2VQ&d!UR,k&mrnOXst!V!Z#d%l&g&p&r&s&u,n,s2S2VR&d!UQ,T&[R1[+|snOXst!V!Z#d%l&g&p&r&s&u,n,s2S2VQ1h,YS5w1k1lU8e5u5v5zS:R8g8hS:{:Q:TQ;_:|R;i;`Q&k!VR,d&gR6T1tR:Y8nS&P|&UR1T+sQ&p!WR,n&qR,t&vT2T,s2VR,x&wQ,w&wR2^,xQ'w!{R-t'wSsOtQ#dXT%os#dQ#OTR'y#OQ#RUR'{#RQ)y$uR/Z)yQ#UVR(O#UQ#XWU(U#X(V-{Q(V#YR-{(WQ-X'WR2j-XQ.p(wS3e.p3fR3f.qQ-`'^R2n-`Y!rQ'^-`1g5qR'h!rQ.{)cR3z.{U#_W%g*WU(]#_(^-|Q(^#`R-|(XQ-['ZR2l-[t`OXst!V!Z#d%l&g&i&p&r&s&u,n,s2S2VS#hZ%dU#r`#h.VR.V(hQ(i#jQ.S(eW.[(i.S3P6wQ3P.TR6w3QQ)l$lR/R)lQ$phR)r$pQ$`cU)_$`-w<[Q-w;xR<[)oQ/l*ZW4Y/l4Z7j9hU4Z/m/n/oS7j4[4]R9h7k$e*O$v(s)a)c*Y*b*q*r*|*}+R.g.h.j.k.l/Y/b/d/f/q/v0^0_0p1]3^3_3`3u3y4S4^4_4c4s4u4{4|4}5h7R7S7T7U7Z7[7^7_7`7f7m7p7z7}8P9]9^9_9i9q9v9w:h:i:j:k:l:q:u;W;];h;k=b=n=o=z={Q/t*bU4b/t4d7nQ4d/vR7n4cS*l$|*XR0S*lx*Q$v)c*q*r+R/q0^0_3y4^4{4|4}7f7z9v:l=b=n=o!d.e(s)a*Y*b.g.h.l/Y/f/v0p1]3`4S4_4c5h7R7U7m7p7}8P9i9q9w:q:u;W;];h=z={U/c*Q.e7Xa7X3u7Z7[7`9]:h:k;kQ0Z*qQ3a.gU4t0Z3a9`R9`7Z|*S$v)c*q*r+R/b/q0^0_3y4^4s4{4|4}7f7z9v:l=b=n=o!h.f(s)a*Y*b.g.h.l/Y/f/v0p1]3^3`4S4_4c5h7R7S7U7m7p7}8P9i9q9w:q:u;W;];h=z={U/e*S.f7Ye7Y3u7Z7[7`9]9^:h:i:k;kQ0]*rQ3b.hU4v0]3b9aR9a7[Q*w%UR0a*wQ5S0pR8O5SQ+[%jR0o+[Q5l1bS8_5l:OR:O8`Q,V&]R1e,VQ5q1gR8b5qQ1s,aS6R1s8oR8o6TQ1O+oW5_1O5a8V9zQ5a1RQ8V5`R9z8WQ+t&PR1U+tQ2V,sR6c2VYrOXst#dQ&t!ZQ+^%lQ,m&pQ,o&rQ,p&sQ,r&uQ2Q,nS2T,s2VR6b2SQ%npQ&x!_Q&{!aQ&}!bQ'P!cQ'o!uQ+]%kQ+i%yQ+{&VQ,c&kQ,z&zW-k'i'q'r'uQ-r'mQ0R*kQ0y+jS1v,d,gQ2_,yQ2`,|Q2a,}Q2u-jW2w-m-n-q-sQ5W0zQ5d1XQ5g1]Q5{1mQ6V1xQ6a2RU6p2v2y2|Q6s2zQ8R5XQ8Z5fQ8[5hQ8a5pQ8j5|Q8p6US9P6q6uQ9R6tQ9{8XQ:U8kQ:Z8qQ:b9QQ:x9|Q;O:VQ;S:cR;a;PQ%yyQ'b!iQ'm!uU+j%z%{%|Q-R'TU-f'c'd'eS-j'i'sQ/z*gS0z+k+lQ2g-TS2s-g-hQ2z-oS4g/{0OQ5X0{Q6l2mQ6o2tQ6t2{U7q4i4j4mQ9o7sR:r9pS$wi=pR*x%VU%Ui%V=pR0`*vQ$viS(s#v+fS)a$b$cQ)c$dQ*Y$xS*b${*WQ*q%OQ*r%QQ*|%]Q*}%^Q+R%bQ.g<aQ.h<cQ.j<gQ.k<iQ.l<kQ/Y)wQ/b*PQ/d*RQ/f*TQ/q*^S/v*d/hQ0^*tQ0_*ul0p+c,Q.a1a1i3Z5x6|8f9V:S:f:};VQ1]+}Q3^<tQ3_<vQ3`<yS3u<^<_Q3y.zS4S/_4UQ4^/rQ4_/sQ4c/uQ4s0YQ4u0[Q4{0gQ4|0hQ4}0iQ5h1^Q7R<}Q7S=PQ7T=RQ7U=TQ7Z<bQ7[<dQ7^<hQ7_<jQ7`<lQ7f4VQ7m4aQ7p4fQ7z4wQ7}5RQ8P5UQ9]<zQ9^<uQ9_<wQ9i7lQ9q7vQ9v7|Q9w8QQ:h=OQ:i=QQ:j=SQ:k=UQ:l9eQ:q9nQ:u9tQ;W=XQ;]:tQ;h;^Q;k=YQ=b=pQ=n=xQ=o=yQ=z=|R={=}Q*z%[Q.i<eR7]<fnpOXst!Z#d%l&p&r&s&u,n,s2S2VQ!fPS#fZ#oQ&z!`W'f!o*f0V4qQ'}#SQ)O#{Q)p$nS,g&i&lQ,l&mQ,y&yS-O'R/iQ-b'`Q.s(|Q/V)qQ0m+YQ0s+dQ2O,kQ2q-dQ3X.bQ4O/QQ4y0dQ5v1jQ6X1zQ6Y1{Q6^1}Q6`2PQ6e2XQ7P3[Q7c3{Q8h5yQ8t6ZQ8u6[Q8w6_Q9Z7QQ:T8iR:_8x#[cOPXZst!Z!`!o#d#o#{%l&i&l&m&p&r&s&u&y'R'`(|*f+Y+d,k,n,s-d.b/i0V0d1j1z1{1}2P2S2V2X3[4q5y6Z6[6_7Q8i8xQ#YWQ#eYQ%puQ%rvS%tw!gS(Q#W(TQ(W#ZQ(r#uQ(w#xQ)P$OQ)Q$PQ)R$QQ)S$RQ)T$SQ)U$TQ)V$UQ)W$VQ)X$WQ)Y$XQ)[$ZQ)^$_Q)`$aQ)e$eW)o$n)q/Q3{Q+a%sQ+u&QS-U'V2hQ-s'pS-x(R-zQ-}(ZQ.P(bQ.n(vQ.q(xQ.u;vQ.w;yQ.x;zQ.y;}Q/]){Q0j+UQ2c-PQ2f-SQ2v-lQ2}.QQ3c.oQ3h<OQ3i<PQ3j<QQ3k<RQ3l<SQ3m<TQ3n<UQ3o<VQ3p<WQ3q<XQ3r<YQ3s.vQ3t<]Q3w<`Q3x<mQ4P<ZQ5O0lQ5Y0|Q6k<pQ6q2xQ6v3OQ7V3dQ7W<qQ7a<sQ7b<{Q8`5mQ8|6iQ9Q6rQ9[<|Q9b=VQ9c=WQ:c9SQ:y9}Q;R:aQ;x#SR=g=sR#[WR'X!el!tQ!r!v!y!z'^'j'k'l-`-p1g5q5sS'T!e-WU*g$|*X*lS-T'U']S0O*h*nQ0W*oQ2m-^Q4m0UR4r0XR(y#xQ!fQT-_'^-`]!qQ!r'^-`1g5qQ#p]R'g;wR)d$dY!uQ'^-`1g5qQ'i!rS's!v!yS'u!z5sS-o'j'kQ-q'lR2{-pT#kZ%dS#jZ%dS%jm,jU(e#h#i#lS.T(f(gQ.X(hQ0n+ZQ3Q.UU3R.V.W.YS6x3S3TR9T6yd#^W#W#Z%g(R([*W+W.O/hr#gZm#h#i#l%d(f(g(h+Z.U.V.W.Y3S3T6yS*Z$x*_Q/o*[Q1|,jQ2d-QQ4W/kQ6g2[Q7i4XQ8{6hT=_'V+XV#aW%g*WU#`W%g*WS(S#W([U(X#Z+W/hS-V'V+XT-y(R.OV'[!e%h*XQ$lfR)v$qT)k$l)lR3}/PT*]$x*_T*e${*WQ0q+cQ1_,QQ3V.aQ5j1aQ5u1iQ6}3ZQ8g5xQ9W6|Q:Q8fQ:d9VQ:|:SQ;U:fQ;`:}R;c;VnqOXst!Z#d%l&p&r&s&u,n,s2S2VQ&j!VR,c&gtmOXst!U!V!Z#d%l&g&p&r&s&u,n,s2S2VR,j&mT%km,jR1c,SR,b&eQ&T|R+z&UR+p&OT&n!W&qT&o!W&qT2U,s2V",
  nodeNames: "⚠ ArithOp ArithOp ?. JSXStartTag LineComment BlockComment Script Hashbang ExportDeclaration export Star as VariableName String Escape from ; default FunctionDeclaration async function VariableDefinition > < TypeParamList const TypeDefinition extends ThisType this LiteralType ArithOp Number BooleanLiteral TemplateType InterpolationEnd Interpolation InterpolationStart NullType null VoidType void TypeofType typeof MemberExpression . PropertyName [ TemplateString Escape Interpolation super RegExp ] ArrayExpression Spread , } { ObjectExpression Property async get set PropertyDefinition Block : NewTarget new NewExpression ) ( ArgList UnaryExpression delete LogicOp BitOp YieldExpression yield AwaitExpression await ParenthesizedExpression ClassExpression class ClassBody MethodDeclaration Decorator @ MemberExpression PrivatePropertyName CallExpression TypeArgList CompareOp < declare Privacy static abstract override PrivatePropertyDefinition PropertyDeclaration readonly accessor Optional TypeAnnotation Equals StaticBlock FunctionExpression ArrowFunction ParamList ParamList ArrayPattern ObjectPattern PatternProperty Privacy readonly Arrow MemberExpression BinaryExpression ArithOp ArithOp ArithOp ArithOp BitOp CompareOp instanceof satisfies in CompareOp BitOp BitOp BitOp LogicOp LogicOp ConditionalExpression LogicOp LogicOp AssignmentExpression UpdateOp PostfixExpression CallExpression InstantiationExpression TaggedTemplateExpression DynamicImport import ImportMeta JSXElement JSXSelfCloseEndTag JSXSelfClosingTag JSXIdentifier JSXBuiltin JSXIdentifier JSXNamespacedName JSXMemberExpression JSXSpreadAttribute JSXAttribute JSXAttributeValue JSXEscape JSXEndTag JSXOpenTag JSXFragmentTag JSXText JSXEscape JSXStartCloseTag JSXCloseTag PrefixCast < ArrowFunction TypeParamList SequenceExpression InstantiationExpression KeyofType keyof UniqueType unique ImportType InferredType infer TypeName ParenthesizedType FunctionSignature ParamList NewSignature IndexedType TupleType Label ArrayType ReadonlyType ObjectType MethodType PropertyType IndexSignature PropertyDefinition CallSignature TypePredicate asserts is NewSignature new UnionType LogicOp IntersectionType LogicOp ConditionalType ParameterizedType ClassDeclaration abstract implements type VariableDeclaration let var using TypeAliasDeclaration InterfaceDeclaration interface EnumDeclaration enum EnumBody NamespaceDeclaration namespace module AmbientDeclaration declare GlobalDeclaration global ClassDeclaration ClassBody AmbientFunctionDeclaration ExportGroup VariableName VariableName ImportDeclaration ImportGroup ForStatement for ForSpec ForInSpec ForOfSpec of WhileStatement while WithStatement with DoStatement do IfStatement if else SwitchStatement switch SwitchBody CaseLabel case DefaultLabel TryStatement try CatchClause catch FinallyClause finally ReturnStatement return ThrowStatement throw BreakStatement break ContinueStatement continue DebuggerStatement debugger LabeledStatement ExpressionStatement SingleExpression SingleClassItem",
  maxTerm: 378,
  context: pT,
  nodeProps: [
    ["isolate", -8, 5, 6, 14, 35, 37, 49, 51, 53, ""],
    ["group", -26, 9, 17, 19, 66, 206, 210, 214, 215, 217, 220, 223, 233, 235, 241, 243, 245, 247, 250, 256, 262, 264, 266, 268, 270, 272, 273, "Statement", -34, 13, 14, 30, 33, 34, 40, 49, 52, 53, 55, 60, 68, 70, 74, 78, 80, 82, 83, 108, 109, 118, 119, 135, 138, 140, 141, 142, 143, 144, 146, 147, 166, 168, 170, "Expression", -23, 29, 31, 35, 39, 41, 43, 172, 174, 176, 177, 179, 180, 181, 183, 184, 185, 187, 188, 189, 200, 202, 204, 205, "Type", -3, 86, 101, 107, "ClassItem"],
    ["openedBy", 23, "<", 36, "InterpolationStart", 54, "[", 58, "{", 71, "(", 159, "JSXStartCloseTag"],
    ["closedBy", -2, 24, 167, ">", 38, "InterpolationEnd", 48, "]", 59, "}", 72, ")", 164, "JSXEndTag"]
  ],
  propSources: [yT],
  skippedNodes: [0, 5, 6, 276],
  repeatNodeCount: 37,
  tokenData: "$Fq07[R!bOX%ZXY+gYZ-yZ[+g[]%Z]^.c^p%Zpq+gqr/mrs3cst:_tuEruvJSvwLkwx! Yxy!'iyz!(sz{!)}{|!,q|}!.O}!O!,q!O!P!/Y!P!Q!9j!Q!R#:O!R![#<_![!]#I_!]!^#Jk!^!_#Ku!_!`$![!`!a$$v!a!b$*T!b!c$,r!c!}Er!}#O$-|#O#P$/W#P#Q$4o#Q#R$5y#R#SEr#S#T$7W#T#o$8b#o#p$<r#p#q$=h#q#r$>x#r#s$@U#s$f%Z$f$g+g$g#BYEr#BY#BZ$A`#BZ$ISEr$IS$I_$A`$I_$I|Er$I|$I}$Dk$I}$JO$Dk$JO$JTEr$JT$JU$A`$JU$KVEr$KV$KW$A`$KW&FUEr&FU&FV$A`&FV;'SEr;'S;=`I|<%l?HTEr?HT?HU$A`?HUOEr(n%d_$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&j&hT$h&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c&j&zP;=`<%l&c'|'U]$h&j(X!bOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}!b(SU(X!bOY'}Zw'}x#O'}#P;'S'};'S;=`(f<%lO'}!b(iP;=`<%l'}'|(oP;=`<%l&}'[(y]$h&j(UpOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(rp)wU(UpOY)rZr)rs#O)r#P;'S)r;'S;=`*Z<%lO)rp*^P;=`<%l)r'[*dP;=`<%l(r#S*nX(Up(X!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g#S+^P;=`<%l*g(n+dP;=`<%l%Z07[+rq$h&j(Up(X!b'z0/lOX%ZXY+gYZ&cZ[+g[p%Zpq+gqr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p$f%Z$f$g+g$g#BY%Z#BY#BZ+g#BZ$IS%Z$IS$I_+g$I_$JT%Z$JT$JU+g$JU$KV%Z$KV$KW+g$KW&FU%Z&FU&FV+g&FV;'S%Z;'S;=`+a<%l?HT%Z?HT?HU+g?HUO%Z07[.ST(V#S$h&j'{0/lO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c07[.n_$h&j(Up(X!b'{0/lOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z)3p/x`$h&j!n),Q(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`0z!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW1V`#u(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`2X!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW2d_#u(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'At3l_(T':f$h&j(X!bOY4kYZ5qZr4krs7nsw4kwx5qx!^4k!^!_8p!_#O4k#O#P5q#P#o4k#o#p8p#p;'S4k;'S;=`:X<%lO4k(^4r_$h&j(X!bOY4kYZ5qZr4krs7nsw4kwx5qx!^4k!^!_8p!_#O4k#O#P5q#P#o4k#o#p8p#p;'S4k;'S;=`:X<%lO4k&z5vX$h&jOr5qrs6cs!^5q!^!_6y!_#o5q#o#p6y#p;'S5q;'S;=`7h<%lO5q&z6jT$c`$h&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c`6|TOr6yrs7]s;'S6y;'S;=`7b<%lO6y`7bO$c``7eP;=`<%l6y&z7kP;=`<%l5q(^7w]$c`$h&j(X!bOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}!r8uZ(X!bOY8pYZ6yZr8prs9hsw8pwx6yx#O8p#O#P6y#P;'S8p;'S;=`:R<%lO8p!r9oU$c`(X!bOY'}Zw'}x#O'}#P;'S'};'S;=`(f<%lO'}!r:UP;=`<%l8p(^:[P;=`<%l4k%9[:hh$h&j(Up(X!bOY%ZYZ&cZq%Zqr<Srs&}st%ZtuCruw%Zwx(rx!^%Z!^!_*g!_!c%Z!c!}Cr!}#O%Z#O#P&c#P#R%Z#R#SCr#S#T%Z#T#oCr#o#p*g#p$g%Z$g;'SCr;'S;=`El<%lOCr(r<__WS$h&j(Up(X!bOY<SYZ&cZr<Srs=^sw<Swx@nx!^<S!^!_Bm!_#O<S#O#P>`#P#o<S#o#pBm#p;'S<S;'S;=`Cl<%lO<S(Q=g]WS$h&j(X!bOY=^YZ&cZw=^wx>`x!^=^!^!_?q!_#O=^#O#P>`#P#o=^#o#p?q#p;'S=^;'S;=`@h<%lO=^&n>gXWS$h&jOY>`YZ&cZ!^>`!^!_?S!_#o>`#o#p?S#p;'S>`;'S;=`?k<%lO>`S?XSWSOY?SZ;'S?S;'S;=`?e<%lO?SS?hP;=`<%l?S&n?nP;=`<%l>`!f?xWWS(X!bOY?qZw?qwx?Sx#O?q#O#P?S#P;'S?q;'S;=`@b<%lO?q!f@eP;=`<%l?q(Q@kP;=`<%l=^'`@w]WS$h&j(UpOY@nYZ&cZr@nrs>`s!^@n!^!_Ap!_#O@n#O#P>`#P#o@n#o#pAp#p;'S@n;'S;=`Bg<%lO@ntAwWWS(UpOYApZrAprs?Ss#OAp#O#P?S#P;'SAp;'S;=`Ba<%lOAptBdP;=`<%lAp'`BjP;=`<%l@n#WBvYWS(Up(X!bOYBmZrBmrs?qswBmwxApx#OBm#O#P?S#P;'SBm;'S;=`Cf<%lOBm#WCiP;=`<%lBm(rCoP;=`<%l<S%9[C}i$h&j(m%1l(Up(X!bOY%ZYZ&cZr%Zrs&}st%ZtuCruw%Zwx(rx!Q%Z!Q![Cr![!^%Z!^!_*g!_!c%Z!c!}Cr!}#O%Z#O#P&c#P#R%Z#R#SCr#S#T%Z#T#oCr#o#p*g#p$g%Z$g;'SCr;'S;=`El<%lOCr%9[EoP;=`<%lCr07[FRk$h&j(Up(X!b$[#t(R,2j(c$I[OY%ZYZ&cZr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$g%Z$g;'SEr;'S;=`I|<%lOEr+dHRk$h&j(Up(X!b$[#tOY%ZYZ&cZr%Zrs&}st%ZtuGvuw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Gv![!^%Z!^!_*g!_!c%Z!c!}Gv!}#O%Z#O#P&c#P#R%Z#R#SGv#S#T%Z#T#oGv#o#p*g#p$g%Z$g;'SGv;'S;=`Iv<%lOGv+dIyP;=`<%lGv07[JPP;=`<%lEr(KWJ_`$h&j(Up(X!b#n(ChOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KWKl_$h&j$P(Ch(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z,#xLva(x+JY$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sv%ZvwM{wx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KWNW`$h&j#y(Ch(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'At! c_(W';W$h&j(UpOY!!bYZ!#hZr!!brs!#hsw!!bwx!$xx!^!!b!^!_!%z!_#O!!b#O#P!#h#P#o!!b#o#p!%z#p;'S!!b;'S;=`!'c<%lO!!b'l!!i_$h&j(UpOY!!bYZ!#hZr!!brs!#hsw!!bwx!$xx!^!!b!^!_!%z!_#O!!b#O#P!#h#P#o!!b#o#p!%z#p;'S!!b;'S;=`!'c<%lO!!b&z!#mX$h&jOw!#hwx6cx!^!#h!^!_!$Y!_#o!#h#o#p!$Y#p;'S!#h;'S;=`!$r<%lO!#h`!$]TOw!$Ywx7]x;'S!$Y;'S;=`!$l<%lO!$Y`!$oP;=`<%l!$Y&z!$uP;=`<%l!#h'l!%R]$c`$h&j(UpOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(r!Q!&PZ(UpOY!%zYZ!$YZr!%zrs!$Ysw!%zwx!&rx#O!%z#O#P!$Y#P;'S!%z;'S;=`!']<%lO!%z!Q!&yU$c`(UpOY)rZr)rs#O)r#P;'S)r;'S;=`*Z<%lO)r!Q!'`P;=`<%l!%z'l!'fP;=`<%l!!b/5|!'t_!j/.^$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#&U!)O_!i!Lf$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z-!n!*[b$h&j(Up(X!b(S%&f#o(ChOY%ZYZ&cZr%Zrs&}sw%Zwx(rxz%Zz{!+d{!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW!+o`$h&j(Up(X!b#l(ChOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z+;x!,|`$h&j(Up(X!bp+4YOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z,$U!.Z_!Z+Jf$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z07[!/ec$h&j(Up(X!b!O.2^OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!0p!P!Q%Z!Q![!3Y![!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#%|!0ya$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!2O!P!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#%|!2Z_!Y!L^$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad!3eg$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!3Y![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S!3Y#S#X%Z#X#Y!4|#Y#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad!5Vg$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx{%Z{|!6n|}%Z}!O!6n!O!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad!6wc$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad!8_c$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z07[!9uf$h&j(Up(X!b#m(ChOY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcxz!;Zz{#-}{!P!;Z!P!Q#/d!Q!^!;Z!^!_#(i!_!`#7S!`!a#8i!a!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;'S!;Z;'S;=`#-w<%lO!;Z?O!;fb$h&j(Up(X!b!V7`OY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcx!P!;Z!P!Q#&`!Q!^!;Z!^!_#(i!_!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;'S!;Z;'S;=`#-w<%lO!;Z>^!<w`$h&j(X!b!V7`OY!<nYZ&cZw!<nwx!=yx!P!<n!P!Q!Eq!Q!^!<n!^!_!Gr!_!}!<n!}#O!KS#O#P!Dy#P#o!<n#o#p!Gr#p;'S!<n;'S;=`!L]<%lO!<n<z!>Q^$h&j!V7`OY!=yYZ&cZ!P!=y!P!Q!>|!Q!^!=y!^!_!@c!_!}!=y!}#O!CW#O#P!Dy#P#o!=y#o#p!@c#p;'S!=y;'S;=`!Ek<%lO!=y<z!?Td$h&j!V7`O!^&c!_#W&c#W#X!>|#X#Z&c#Z#[!>|#[#]&c#]#^!>|#^#a&c#a#b!>|#b#g&c#g#h!>|#h#i&c#i#j!>|#j#k!>|#k#m&c#m#n!>|#n#o&c#p;'S&c;'S;=`&w<%lO&c7`!@hX!V7`OY!@cZ!P!@c!P!Q!AT!Q!}!@c!}#O!Ar#O#P!Bq#P;'S!@c;'S;=`!CQ<%lO!@c7`!AYW!V7`#W#X!AT#Z#[!AT#]#^!AT#a#b!AT#g#h!AT#i#j!AT#j#k!AT#m#n!AT7`!AuVOY!ArZ#O!Ar#O#P!B[#P#Q!@c#Q;'S!Ar;'S;=`!Bk<%lO!Ar7`!B_SOY!ArZ;'S!Ar;'S;=`!Bk<%lO!Ar7`!BnP;=`<%l!Ar7`!BtSOY!@cZ;'S!@c;'S;=`!CQ<%lO!@c7`!CTP;=`<%l!@c<z!C][$h&jOY!CWYZ&cZ!^!CW!^!_!Ar!_#O!CW#O#P!DR#P#Q!=y#Q#o!CW#o#p!Ar#p;'S!CW;'S;=`!Ds<%lO!CW<z!DWX$h&jOY!CWYZ&cZ!^!CW!^!_!Ar!_#o!CW#o#p!Ar#p;'S!CW;'S;=`!Ds<%lO!CW<z!DvP;=`<%l!CW<z!EOX$h&jOY!=yYZ&cZ!^!=y!^!_!@c!_#o!=y#o#p!@c#p;'S!=y;'S;=`!Ek<%lO!=y<z!EnP;=`<%l!=y>^!Ezl$h&j(X!b!V7`OY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#W&}#W#X!Eq#X#Z&}#Z#[!Eq#[#]&}#]#^!Eq#^#a&}#a#b!Eq#b#g&}#g#h!Eq#h#i&}#i#j!Eq#j#k!Eq#k#m&}#m#n!Eq#n#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}8r!GyZ(X!b!V7`OY!GrZw!Grwx!@cx!P!Gr!P!Q!Hl!Q!}!Gr!}#O!JU#O#P!Bq#P;'S!Gr;'S;=`!J|<%lO!Gr8r!Hse(X!b!V7`OY'}Zw'}x#O'}#P#W'}#W#X!Hl#X#Z'}#Z#[!Hl#[#]'}#]#^!Hl#^#a'}#a#b!Hl#b#g'}#g#h!Hl#h#i'}#i#j!Hl#j#k!Hl#k#m'}#m#n!Hl#n;'S'};'S;=`(f<%lO'}8r!JZX(X!bOY!JUZw!JUwx!Arx#O!JU#O#P!B[#P#Q!Gr#Q;'S!JU;'S;=`!Jv<%lO!JU8r!JyP;=`<%l!JU8r!KPP;=`<%l!Gr>^!KZ^$h&j(X!bOY!KSYZ&cZw!KSwx!CWx!^!KS!^!_!JU!_#O!KS#O#P!DR#P#Q!<n#Q#o!KS#o#p!JU#p;'S!KS;'S;=`!LV<%lO!KS>^!LYP;=`<%l!KS>^!L`P;=`<%l!<n=l!Ll`$h&j(Up!V7`OY!LcYZ&cZr!Lcrs!=ys!P!Lc!P!Q!Mn!Q!^!Lc!^!_# o!_!}!Lc!}#O#%P#O#P!Dy#P#o!Lc#o#p# o#p;'S!Lc;'S;=`#&Y<%lO!Lc=l!Mwl$h&j(Up!V7`OY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#W(r#W#X!Mn#X#Z(r#Z#[!Mn#[#](r#]#^!Mn#^#a(r#a#b!Mn#b#g(r#g#h!Mn#h#i(r#i#j!Mn#j#k!Mn#k#m(r#m#n!Mn#n#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(r8Q# vZ(Up!V7`OY# oZr# ors!@cs!P# o!P!Q#!i!Q!}# o!}#O#$R#O#P!Bq#P;'S# o;'S;=`#$y<%lO# o8Q#!pe(Up!V7`OY)rZr)rs#O)r#P#W)r#W#X#!i#X#Z)r#Z#[#!i#[#])r#]#^#!i#^#a)r#a#b#!i#b#g)r#g#h#!i#h#i)r#i#j#!i#j#k#!i#k#m)r#m#n#!i#n;'S)r;'S;=`*Z<%lO)r8Q#$WX(UpOY#$RZr#$Rrs!Ars#O#$R#O#P!B[#P#Q# o#Q;'S#$R;'S;=`#$s<%lO#$R8Q#$vP;=`<%l#$R8Q#$|P;=`<%l# o=l#%W^$h&j(UpOY#%PYZ&cZr#%Prs!CWs!^#%P!^!_#$R!_#O#%P#O#P!DR#P#Q!Lc#Q#o#%P#o#p#$R#p;'S#%P;'S;=`#&S<%lO#%P=l#&VP;=`<%l#%P=l#&]P;=`<%l!Lc?O#&kn$h&j(Up(X!b!V7`OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#W%Z#W#X#&`#X#Z%Z#Z#[#&`#[#]%Z#]#^#&`#^#a%Z#a#b#&`#b#g%Z#g#h#&`#h#i%Z#i#j#&`#j#k#&`#k#m%Z#m#n#&`#n#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z9d#(r](Up(X!b!V7`OY#(iZr#(irs!Grsw#(iwx# ox!P#(i!P!Q#)k!Q!}#(i!}#O#+`#O#P!Bq#P;'S#(i;'S;=`#,`<%lO#(i9d#)th(Up(X!b!V7`OY*gZr*grs'}sw*gwx)rx#O*g#P#W*g#W#X#)k#X#Z*g#Z#[#)k#[#]*g#]#^#)k#^#a*g#a#b#)k#b#g*g#g#h#)k#h#i*g#i#j#)k#j#k#)k#k#m*g#m#n#)k#n;'S*g;'S;=`+Z<%lO*g9d#+gZ(Up(X!bOY#+`Zr#+`rs!JUsw#+`wx#$Rx#O#+`#O#P!B[#P#Q#(i#Q;'S#+`;'S;=`#,Y<%lO#+`9d#,]P;=`<%l#+`9d#,cP;=`<%l#(i?O#,o`$h&j(Up(X!bOY#,fYZ&cZr#,frs!KSsw#,fwx#%Px!^#,f!^!_#+`!_#O#,f#O#P!DR#P#Q!;Z#Q#o#,f#o#p#+`#p;'S#,f;'S;=`#-q<%lO#,f?O#-tP;=`<%l#,f?O#-zP;=`<%l!;Z07[#.[b$h&j(Up(X!b'|0/l!V7`OY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcx!P!;Z!P!Q#&`!Q!^!;Z!^!_#(i!_!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;'S!;Z;'S;=`#-w<%lO!;Z07[#/o_$h&j(Up(X!bT0/lOY#/dYZ&cZr#/drs#0nsw#/dwx#4Ox!^#/d!^!_#5}!_#O#/d#O#P#1p#P#o#/d#o#p#5}#p;'S#/d;'S;=`#6|<%lO#/d06j#0w]$h&j(X!bT0/lOY#0nYZ&cZw#0nwx#1px!^#0n!^!_#3R!_#O#0n#O#P#1p#P#o#0n#o#p#3R#p;'S#0n;'S;=`#3x<%lO#0n05W#1wX$h&jT0/lOY#1pYZ&cZ!^#1p!^!_#2d!_#o#1p#o#p#2d#p;'S#1p;'S;=`#2{<%lO#1p0/l#2iST0/lOY#2dZ;'S#2d;'S;=`#2u<%lO#2d0/l#2xP;=`<%l#2d05W#3OP;=`<%l#1p01O#3YW(X!bT0/lOY#3RZw#3Rwx#2dx#O#3R#O#P#2d#P;'S#3R;'S;=`#3r<%lO#3R01O#3uP;=`<%l#3R06j#3{P;=`<%l#0n05x#4X]$h&j(UpT0/lOY#4OYZ&cZr#4Ors#1ps!^#4O!^!_#5Q!_#O#4O#O#P#1p#P#o#4O#o#p#5Q#p;'S#4O;'S;=`#5w<%lO#4O00^#5XW(UpT0/lOY#5QZr#5Qrs#2ds#O#5Q#O#P#2d#P;'S#5Q;'S;=`#5q<%lO#5Q00^#5tP;=`<%l#5Q05x#5zP;=`<%l#4O01p#6WY(Up(X!bT0/lOY#5}Zr#5}rs#3Rsw#5}wx#5Qx#O#5}#O#P#2d#P;'S#5};'S;=`#6v<%lO#5}01p#6yP;=`<%l#5}07[#7PP;=`<%l#/d)3h#7ab$h&j$P(Ch(Up(X!b!V7`OY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcx!P!;Z!P!Q#&`!Q!^!;Z!^!_#(i!_!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;'S!;Z;'S;=`#-w<%lO!;ZAt#8vb$Y#t$h&j(Up(X!b!V7`OY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcx!P!;Z!P!Q#&`!Q!^!;Z!^!_#(i!_!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;'S!;Z;'S;=`#-w<%lO!;Z'Ad#:Zp$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!3Y!P!Q%Z!Q![#<_![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S#<_#S#U%Z#U#V#?i#V#X%Z#X#Y!4|#Y#b%Z#b#c#>_#c#d#Bq#d#l%Z#l#m#Es#m#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#<jk$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!3Y!P!Q%Z!Q![#<_![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S#<_#S#X%Z#X#Y!4|#Y#b%Z#b#c#>_#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#>j_$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#?rd$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!R#AQ!R!S#AQ!S!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#AQ#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#A]f$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!R#AQ!R!S#AQ!S!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#AQ#S#b%Z#b#c#>_#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#Bzc$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!Y#DV!Y!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#DV#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#Dbe$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!Y#DV!Y!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#DV#S#b%Z#b#c#>_#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#E|g$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![#Ge![!^%Z!^!_*g!_!c%Z!c!i#Ge!i#O%Z#O#P&c#P#R%Z#R#S#Ge#S#T%Z#T#Z#Ge#Z#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#Gpi$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![#Ge![!^%Z!^!_*g!_!c%Z!c!i#Ge!i#O%Z#O#P&c#P#R%Z#R#S#Ge#S#T%Z#T#Z#Ge#Z#b%Z#b#c#>_#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z*)x#Il_!e$b$h&j#})Lv(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z)[#Jv_al$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z04f#LS^h#)`#P-<U(Up(X!b$m7`OY*gZr*grs'}sw*gwx)rx!P*g!P!Q#MO!Q!^*g!^!_#Mt!_!`$ f!`#O*g#P;'S*g;'S;=`+Z<%lO*g(n#MXX$j&j(Up(X!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g(El#M}Z#p(Ch(Up(X!bOY*gZr*grs'}sw*gwx)rx!_*g!_!`#Np!`#O*g#P;'S*g;'S;=`+Z<%lO*g(El#NyX$P(Ch(Up(X!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g(El$ oX#q(Ch(Up(X!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g*)x$!ga#^*!Y$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`0z!`!a$#l!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(K[$#w_#i(Cl$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z*)x$%Vag!*r#q(Ch$e#|$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`$&[!`!a$'f!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW$&g_#q(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW$'qa#p(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`!a$(v!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW$)R`#p(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(Kd$*`a(p(Ct$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!a%Z!a!b$+e!b#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW$+p`$h&j#z(Ch(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#`$,}_!z$Ip$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z04f$.X_!Q0,v$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(n$/]Z$h&jO!^$0O!^!_$0f!_#i$0O#i#j$0k#j#l$0O#l#m$2^#m#o$0O#o#p$0f#p;'S$0O;'S;=`$4i<%lO$0O(n$0VT_#S$h&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c#S$0kO_#S(n$0p[$h&jO!Q&c!Q![$1f![!^&c!_!c&c!c!i$1f!i#T&c#T#Z$1f#Z#o&c#o#p$3|#p;'S&c;'S;=`&w<%lO&c(n$1kZ$h&jO!Q&c!Q![$2^![!^&c!_!c&c!c!i$2^!i#T&c#T#Z$2^#Z#o&c#p;'S&c;'S;=`&w<%lO&c(n$2cZ$h&jO!Q&c!Q![$3U![!^&c!_!c&c!c!i$3U!i#T&c#T#Z$3U#Z#o&c#p;'S&c;'S;=`&w<%lO&c(n$3ZZ$h&jO!Q&c!Q![$0O![!^&c!_!c&c!c!i$0O!i#T&c#T#Z$0O#Z#o&c#p;'S&c;'S;=`&w<%lO&c#S$4PR!Q![$4Y!c!i$4Y#T#Z$4Y#S$4]S!Q![$4Y!c!i$4Y#T#Z$4Y#q#r$0f(n$4lP;=`<%l$0O#1[$4z_!W#)l$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW$6U`#w(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z+;p$7c_$h&j(Up(X!b(_+4QOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z07[$8qk$h&j(Up(X!b(R,2j$^#t(c$I[OY%ZYZ&cZr%Zrs&}st%Ztu$8buw%Zwx(rx}%Z}!O$:f!O!Q%Z!Q![$8b![!^%Z!^!_*g!_!c%Z!c!}$8b!}#O%Z#O#P&c#P#R%Z#R#S$8b#S#T%Z#T#o$8b#o#p*g#p$g%Z$g;'S$8b;'S;=`$<l<%lO$8b+d$:qk$h&j(Up(X!b$^#tOY%ZYZ&cZr%Zrs&}st%Ztu$:fuw%Zwx(rx}%Z}!O$:f!O!Q%Z!Q![$:f![!^%Z!^!_*g!_!c%Z!c!}$:f!}#O%Z#O#P&c#P#R%Z#R#S$:f#S#T%Z#T#o$:f#o#p*g#p$g%Z$g;'S$:f;'S;=`$<f<%lO$:f+d$<iP;=`<%l$:f07[$<oP;=`<%l$8b#Jf$<{X!]#Hb(Up(X!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g,#x$=sa(w+JY$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p#q$+e#q;'S%Z;'S;=`+a<%lO%Z)>v$?V_![(CdtBr$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z?O$@a_!o7`$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z07[$Aq|$h&j(Up(X!b'z0/l$[#t(R,2j(c$I[OX%ZXY+gYZ&cZ[+g[p%Zpq+gqr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$f%Z$f$g+g$g#BYEr#BY#BZ$A`#BZ$ISEr$IS$I_$A`$I_$JTEr$JT$JU$A`$JU$KVEr$KV$KW$A`$KW&FUEr&FU&FV$A`&FV;'SEr;'S;=`I|<%l?HTEr?HT?HU$A`?HUOEr07[$D|k$h&j(Up(X!b'{0/l$[#t(R,2j(c$I[OY%ZYZ&cZr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$g%Z$g;'SEr;'S;=`I|<%lOEr",
  tokenizers: [dT, mT, gT, bT, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, fT, new xf("$S~RRtu[#O#Pg#S#T#|~_P#o#pb~gOv~~jVO#i!P#i#j!U#j#l!P#l#m!q#m;'S!P;'S;=`#v<%lO!P~!UO!S~~!XS!Q![!e!c!i!e#T#Z!e#o#p#Z~!hR!Q![!q!c!i!q#T#Z!q~!tR!Q![!}!c!i!}#T#Z!}~#QR!Q![!P!c!i!P#T#Z!P~#^R!Q![#g!c!i#g#T#Z#g~#jS!Q![#g!c!i#g#T#Z#g#q#r!P~#yP;=`<%l!P~$RO(a~~", 141, 338), new xf("j~RQYZXz{^~^O(O~~aP!P!Qd~iO(P~~", 25, 321)],
  topRules: { Script: [0, 7], SingleExpression: [1, 274], SingleClassItem: [2, 275] },
  dialects: { jsx: 0, ts: 15091 },
  dynamicPrecedences: { 78: 1, 80: 1, 92: 1, 168: 1, 198: 1 },
  specialized: [{ term: 325, get: (t) => OT[t] || -1 }, { term: 341, get: (t) => vT[t] || -1 }, { term: 93, get: (t) => xT[t] || -1 }],
  tokenPrec: 15116
}), vA = [
  /* @__PURE__ */ Ln("function ${name}(${params}) {\n	${}\n}", {
    label: "function",
    detail: "definition",
    type: "keyword"
  }),
  /* @__PURE__ */ Ln("for (let ${index} = 0; ${index} < ${bound}; ${index}++) {\n	${}\n}", {
    label: "for",
    detail: "loop",
    type: "keyword"
  }),
  /* @__PURE__ */ Ln("for (let ${name} of ${collection}) {\n	${}\n}", {
    label: "for",
    detail: "of loop",
    type: "keyword"
  }),
  /* @__PURE__ */ Ln("do {\n	${}\n} while (${})", {
    label: "do",
    detail: "loop",
    type: "keyword"
  }),
  /* @__PURE__ */ Ln("while (${}) {\n	${}\n}", {
    label: "while",
    detail: "loop",
    type: "keyword"
  }),
  /* @__PURE__ */ Ln(`try {
	\${}
} catch (\${error}) {
	\${}
}`, {
    label: "try",
    detail: "/ catch block",
    type: "keyword"
  }),
  /* @__PURE__ */ Ln("if (${}) {\n	${}\n}", {
    label: "if",
    detail: "block",
    type: "keyword"
  }),
  /* @__PURE__ */ Ln(`if (\${}) {
	\${}
} else {
	\${}
}`, {
    label: "if",
    detail: "/ else block",
    type: "keyword"
  }),
  /* @__PURE__ */ Ln(`class \${name} {
	constructor(\${params}) {
		\${}
	}
}`, {
    label: "class",
    detail: "definition",
    type: "keyword"
  }),
  /* @__PURE__ */ Ln('import {${names}} from "${module}"\n${}', {
    label: "import",
    detail: "named",
    type: "keyword"
  }),
  /* @__PURE__ */ Ln('import ${name} from "${module}"\n${}', {
    label: "import",
    detail: "default",
    type: "keyword"
  })
], wT = /* @__PURE__ */ vA.concat([
  /* @__PURE__ */ Ln("interface ${name} {\n	${}\n}", {
    label: "interface",
    detail: "definition",
    type: "keyword"
  }),
  /* @__PURE__ */ Ln("type ${name} = ${type}", {
    label: "type",
    detail: "definition",
    type: "keyword"
  }),
  /* @__PURE__ */ Ln("enum ${name} {\n	${}\n}", {
    label: "enum",
    detail: "definition",
    type: "keyword"
  })
]), X0 = /* @__PURE__ */ new oM(), xA = /* @__PURE__ */ new Set([
  "Script",
  "Block",
  "FunctionExpression",
  "FunctionDeclaration",
  "ArrowFunction",
  "MethodDeclaration",
  "ForStatement"
]);
function io(t) {
  return (e, n) => {
    let r = e.node.getChild("VariableDefinition");
    return r && n(r, t), !0;
  };
}
const CT = ["FunctionDeclaration"], ST = {
  FunctionDeclaration: /* @__PURE__ */ io("function"),
  ClassDeclaration: /* @__PURE__ */ io("class"),
  ClassExpression: () => !0,
  EnumDeclaration: /* @__PURE__ */ io("constant"),
  TypeAliasDeclaration: /* @__PURE__ */ io("type"),
  NamespaceDeclaration: /* @__PURE__ */ io("namespace"),
  VariableDefinition(t, e) {
    t.matchContext(CT) || e(t, "variable");
  },
  TypeDefinition(t, e) {
    e(t, "type");
  },
  __proto__: null
};
function kA(t, e) {
  let n = X0.get(e);
  if (n)
    return n;
  let r = [], i = !0;
  function s(a, o) {
    let l = t.sliceString(a.from, a.to);
    r.push({ label: l, type: o });
  }
  return e.cursor(cn.IncludeAnonymous).iterate((a) => {
    if (i)
      i = !1;
    else if (a.name) {
      let o = ST[a.name];
      if (o && o(a, s) || xA.has(a.name))
        return !1;
    } else if (a.to - a.from > 8192) {
      for (let o of kA(t, a.node))
        r.push(o);
      return !1;
    }
  }), X0.set(e, r), r;
}
const W0 = /^[\w$\xa1-\uffff][\w$\d\xa1-\uffff]*$/, wA = [
  "TemplateString",
  "String",
  "RegExp",
  "LineComment",
  "BlockComment",
  "VariableDefinition",
  "TypeDefinition",
  "Label",
  "PropertyDefinition",
  "PropertyName",
  "PrivatePropertyDefinition",
  "PrivatePropertyName",
  ".",
  "?."
];
function AT(t) {
  let e = Sn(t.state).resolveInner(t.pos, -1);
  if (wA.indexOf(e.name) > -1)
    return null;
  let n = e.name == "VariableName" || e.to - e.from < 20 && W0.test(t.state.sliceDoc(e.from, e.to));
  if (!n && !t.explicit)
    return null;
  let r = [];
  for (let i = e; i; i = i.parent)
    xA.has(i.name) && (r = r.concat(kA(t.state.doc, i)));
  return {
    options: r,
    from: n ? e.from : t.pos,
    validFor: W0
  };
}
const Ps = /* @__PURE__ */ Mu.define({
  name: "javascript",
  parser: /* @__PURE__ */ kT.configure({
    props: [
      /* @__PURE__ */ rS.add({
        IfStatement: /* @__PURE__ */ zh({ except: /^\s*({|else\b)/ }),
        TryStatement: /* @__PURE__ */ zh({ except: /^\s*({|catch\b|finally\b)/ }),
        LabeledStatement: PM,
        SwitchBody: (t) => {
          let e = t.textAfter, n = /^\s*\}/.test(e), r = /^\s*(case|default)\b/.test(e);
          return t.baseIndent + (n ? 0 : r ? 1 : 2) * t.unit;
        },
        Block: /* @__PURE__ */ DM({ closing: "}" }),
        ArrowFunction: (t) => t.baseIndent + t.unit,
        "TemplateString BlockComment": () => null,
        "Statement Property": /* @__PURE__ */ zh({ except: /^{/ }),
        JSXElement(t) {
          let e = /^\s*<\//.test(t.textAfter);
          return t.lineIndent(t.node.from) + (e ? 0 : t.unit);
        },
        JSXEscape(t) {
          let e = /\s*\}/.test(t.textAfter);
          return t.lineIndent(t.node.from) + (e ? 0 : t.unit);
        },
        "JSXOpenTag JSXSelfClosingTag"(t) {
          return t.column(t.node.from) + t.unit;
        }
      }),
      /* @__PURE__ */ aS.add({
        "Block ClassBody SwitchBody EnumBody ObjectExpression ArrayExpression ObjectType": FM,
        BlockComment(t) {
          return { from: t.from + 2, to: t.to - 2 };
        }
      })
    ]
  }),
  languageData: {
    closeBrackets: { brackets: ["(", "[", "{", "'", '"', "`"] },
    commentTokens: { line: "//", block: { open: "/*", close: "*/" } },
    indentOnInput: /^\s*(?:case |default:|\{|\}|<\/)$/,
    wordChars: "$"
  }
}), CA = {
  test: (t) => /^JSX/.test(t.name),
  facet: /* @__PURE__ */ JC({ commentTokens: { block: { open: "{/*", close: "*/}" } } })
}, DT = /* @__PURE__ */ Ps.configure({ dialect: "ts" }, "typescript"), PT = /* @__PURE__ */ Ps.configure({
  dialect: "jsx",
  props: [/* @__PURE__ */ Yd.add((t) => t.isTop ? [CA] : void 0)]
}), ET = /* @__PURE__ */ Ps.configure({
  dialect: "jsx ts",
  props: [/* @__PURE__ */ Yd.add((t) => t.isTop ? [CA] : void 0)]
}, "typescript");
let SA = (t) => ({ label: t, type: "keyword" });
const AA = /* @__PURE__ */ "break case const continue default delete export extends false finally in instanceof let new return static super switch this throw true typeof var yield".split(" ").map(SA), FT = /* @__PURE__ */ AA.concat(/* @__PURE__ */ ["declare", "implements", "private", "protected", "public"].map(SA));
function BT(t = {}) {
  let e = t.jsx ? t.typescript ? ET : PT : t.typescript ? DT : Ps, n = t.typescript ? wT.concat(FT) : vA.concat(AA);
  return new OM(e, [
    Ps.data.of({
      autocomplete: a7(wA, xS(n))
    }),
    Ps.data.of({
      autocomplete: AT
    }),
    t.jsx ? TT : []
  ]);
}
function MT(t) {
  for (; ; ) {
    if (t.name == "JSXOpenTag" || t.name == "JSXSelfClosingTag" || t.name == "JSXFragmentTag")
      return t;
    if (t.name == "JSXEscape" || !t.parent)
      return null;
    t = t.parent;
  }
}
function q0(t, e, n = t.length) {
  for (let r = e?.firstChild; r; r = r.nextSibling)
    if (r.name == "JSXIdentifier" || r.name == "JSXBuiltin" || r.name == "JSXNamespacedName" || r.name == "JSXMemberExpression")
      return t.sliceString(r.from, Math.min(r.to, n));
  return "";
}
const QT = typeof navigator == "object" && /* @__PURE__ */ /Android\b/.test(navigator.userAgent), TT = /* @__PURE__ */ be.inputHandler.of((t, e, n, r, i) => {
  if ((QT ? t.composing : t.compositionStarted) || t.state.readOnly || e != n || r != ">" && r != "/" || !Ps.isActiveAt(t.state, e, -1))
    return !1;
  let s = i(), { state: a } = s, o = a.changeByRange((l) => {
    var c;
    let { head: h } = l, f = Sn(a).resolveInner(h - 1, -1), m;
    if (f.name == "JSXStartTag" && (f = f.parent), !(a.doc.sliceString(h - 1, h) != r || f.name == "JSXAttributeValue" && f.to > h)) {
      if (r == ">" && f.name == "JSXFragmentTag")
        return { range: l, changes: { from: h, insert: "</>" } };
      if (r == "/" && f.name == "JSXStartCloseTag") {
        let y = f.parent, x = y.parent;
        if (x && y.from == h - 2 && ((m = q0(a.doc, x.firstChild, h)) || ((c = x.firstChild) === null || c === void 0 ? void 0 : c.name) == "JSXFragmentTag")) {
          let C = `${m}>`;
          return { range: ne.cursor(h + C.length, -1), changes: { from: h, insert: C } };
        }
      } else if (r == ">") {
        let y = MT(f);
        if (y && y.name == "JSXOpenTag" && !/^\/?>|^<\//.test(a.doc.sliceString(h, h + 2)) && (m = q0(a.doc, y, h)))
          return { range: l, changes: { from: h, insert: `</${m}>` } };
      }
    }
    return { range: l };
  });
  return o.changes.empty ? !1 : (t.dispatch([
    s,
    a.update(o, { userEvent: "input.complete", scrollIntoView: !0 })
  ]), !0);
}), jT = /* @__PURE__ */ JSON.parse(`[{"comment":"/**\\n * Overrides the css of highlighted events. Make sure to use single quotes!\\n * @name markcss\\n * @example\\n * note(\\"c a f e\\")\\n * .markcss('text-decoration:underline')\\n */","meta":{"filename":"codemirror.mjs","lineno":363,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror","code":{}},"description":"<p>Overrides the css of highlighted events. Make sure to use single quotes!</p>","name":"markcss","examples":["note(\\"c a f e\\")\\n.markcss('text-decoration:underline')"],"longname":"markcss","kind":"member","scope":"global"},{"comment":"/**\\n * Displays a slider widget to allow the user manipulate a value\\n *\\n * @name slider\\n * @param {number} value Initial value\\n * @param {number} min Minimum value - optional, defaults to 0\\n * @param {number} max Maximum value - optional, defaults to 1\\n * @param {number} step Step size - optional\\n */","meta":{"filename":"slider.mjs","lineno":116,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror","code":{}},"description":"<p>Displays a slider widget to allow the user manipulate a value</p>","name":"slider","params":[{"type":{"names":["number"]},"description":"<p>Initial value</p>","name":"value"},{"type":{"names":["number"]},"description":"<p>Minimum value - optional, defaults to 0</p>","name":"min"},{"type":{"names":["number"]},"description":"<p>Maximum value - optional, defaults to 1</p>","name":"max"},{"type":{"names":["number"]},"description":"<p>Step size - optional</p>","name":"step"}],"longname":"slider","kind":"member","scope":"global"},{"comment":"/**\\n * @name Cutie Pi\\n * by Switch Angel\\n */","meta":{"filename":"CutiePi.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"Cutie Pi\\nby Switch Angel","longname":"Cutie Pi\\nby Switch Angel","kind":"member","scope":"global"},{"comment":"/**\\n * @name androidstudio\\n */","meta":{"filename":"androidstudio.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"androidstudio","longname":"androidstudio","kind":"member","scope":"global"},{"comment":"/**\\n * @name Atom One\\n * Atom One dark syntax theme\\n *\\n * https://github.com/atom/one-dark-syntax\\n */","meta":{"filename":"atomone.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"Atom One\\nAtom One dark syntax theme\\n\\nhttps://github.com/atom/one-dark-syntax","longname":"Atom One\\nAtom One dark syntax theme\\n\\nhttps://github.com/atom/one-dark-syntax","kind":"member","scope":"global"},{"comment":"/**\\n * @name darcula\\n * @author darcula\\n * Name: IntelliJ IDEA darcula theme\\n * From IntelliJ IDEA by JetBrains\\n */","meta":{"filename":"darcula.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"darcula","author":["darcula\\nName: IntelliJ IDEA darcula theme\\nFrom IntelliJ IDEA by JetBrains"],"longname":"darcula","kind":"member","scope":"global"},{"comment":"/**\\n * @name dracula\\n * @author dracula\\n * Michael Kaminsky (http://github.com/mkaminsky11)\\n * Original dracula color scheme by Zeno Rocha (https://github.com/zenorocha/dracula-theme)\\n */","meta":{"filename":"dracula.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"dracula","author":["dracula\\nMichael Kaminsky (http://github.com/mkaminsky11)\\nOriginal dracula color scheme by Zeno Rocha (https://github.com/zenorocha/dracula-theme)"],"longname":"dracula","kind":"member","scope":"global"},{"comment":"/**\\n * @name duotone\\n * @author Bram de Haan\\n * by Bram de Haan, adapted from DuoTone themes by Simurai (http://simurai.com/projects/2016/01/01/duotone-themes)\\n */","meta":{"filename":"duotoneDark.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"duotone","author":["Bram de Haan\\nby Bram de Haan, adapted from DuoTone themes by Simurai (http://simurai.com/projects/2016/01/01/duotone-themes)"],"longname":"duotone","kind":"member","scope":"global"},{"comment":"/**\\n * @name duotone\\n * @author Bram de Haan\\n * by Bram de Haan, adapted from DuoTone themes by Simurai (http://simurai.com/projects/2016/01/01/duotone-themes)\\n */","meta":{"filename":"duotoneLight.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"duotone","author":["Bram de Haan\\nby Bram de Haan, adapted from DuoTone themes by Simurai (http://simurai.com/projects/2016/01/01/duotone-themes)"],"longname":"duotone","kind":"member","scope":"global"},{"comment":"/**\\n * @name github\\n */","meta":{"filename":"githubDark.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"github","longname":"github","kind":"member","scope":"global"},{"comment":"/**\\n * @name github\\n */","meta":{"filename":"githubLight.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"github","longname":"github","kind":"member","scope":"global"},{"comment":"/**\\n * @name Atom One\\n * Atom One dark syntax theme\\n *\\n * https://github.com/atom/one-dark-syntax\\n */","meta":{"filename":"green-text.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"Atom One\\nAtom One dark syntax theme\\n\\nhttps://github.com/atom/one-dark-syntax","longname":"Atom One\\nAtom One dark syntax theme\\n\\nhttps://github.com/atom/one-dark-syntax","kind":"member","scope":"global"},{"comment":"/**\\n * @name gruvbox-dark\\n * @author morhetz\\n * Name: Gruvbox\\n * From github.com/codemirror/codemirror5/blob/master/theme/gruvbox-dark.css\\n */","meta":{"filename":"gruvboxDark.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"gruvbox-dark","author":["morhetz\\nName: Gruvbox\\nFrom github.com/codemirror/codemirror5/blob/master/theme/gruvbox-dark.css"],"longname":"gruvbox-dark","kind":"member","scope":"global"},{"comment":"/**\\n * @name gruvbox-light\\n * @author morhetz\\n * Name: Gruvbox\\n * From github.com/codemirror/codemirror5/blob/master/theme/gruvbox-light.css\\n */","meta":{"filename":"gruvboxLight.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"gruvbox-light","author":["morhetz\\nName: Gruvbox\\nFrom github.com/codemirror/codemirror5/blob/master/theme/gruvbox-light.css"],"longname":"gruvbox-light","kind":"member","scope":"global"},{"comment":"/**\\n * @name Atom One\\n * Atom One dark syntax theme\\n *\\n * https://github.com/atom/one-dark-syntax\\n */","meta":{"filename":"red-text.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"Atom One\\nAtom One dark syntax theme\\n\\nhttps://github.com/atom/one-dark-syntax","longname":"Atom One\\nAtom One dark syntax theme\\n\\nhttps://github.com/atom/one-dark-syntax","kind":"member","scope":"global"},{"comment":"/**\\n * @name Atom One\\n * Atom One dark syntax theme\\n *\\n * https://github.com/atom/one-dark-syntax\\n */","meta":{"filename":"sonic-pink.mjs","lineno":1,"columnno":0,"path":"/Users/felix/projects/strudel/packages/codemirror/themes","code":{}},"name":"Atom One\\nAtom One dark syntax theme\\n\\nhttps://github.com/atom/one-dark-syntax","longname":"Atom One\\nAtom One dark syntax theme\\n\\nhttps://github.com/atom/one-dark-syntax","kind":"member","scope":"global"},{"comment":"/**\\n * Select a sound / sample by name. When using mininotation, you can also optionally supply 'n' and 'gain' parameters\\n * separated by ':'.\\n *\\n * @name s\\n * @param {string | Pattern} sound The sound / pattern of sounds to pick\\n * @synonyms sound\\n * @example\\n * s(\\"bd hh\\")\\n * @example\\n * s(\\"bd:0 bd:1 bd:0:0.3 bd:1:1.4\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":65,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Select a sound / sample by name. When using mininotation, you can also optionally supply 'n' and 'gain' parameters\\nseparated by ':'.</p>","name":"s","params":[{"type":{"names":["string","Pattern"]},"description":"<p>The sound / pattern of sounds to pick</p>","name":"sound"}],"synonyms_text":"sound","synonyms":["sound"],"examples":["s(\\"bd hh\\")","s(\\"bd:0 bd:1 bd:0:0.3 bd:1:1.4\\")"],"longname":"s","kind":"member","scope":"global"},{"comment":"/**\\n * Define a custom webaudio node to use as a sound source.\\n *\\n * @name source\\n * @param {function} getSource\\n * @synonyms src\\n *\\n */","meta":{"filename":"controls.mjs","lineno":80,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Define a custom webaudio node to use as a sound source.</p>","name":"source","params":[{"type":{"names":["function"]},"name":"getSource"}],"synonyms_text":"src","synonyms":["src"],"longname":"source","kind":"member","scope":"global"},{"comment":"/**\\n * Selects the given index from the sample map.\\n * Numbers too high will wrap around.\\n * \`n\` can also be used to play midi numbers, but it is recommended to use \`note\` instead.\\n *\\n * @name n\\n * @param {number | Pattern} value sample index starting from 0\\n * @example\\n * s(\\"bd sd [~ bd] sd,hh*6\\").n(\\"<0 1>\\")\\n */","meta":{"filename":"controls.mjs","lineno":89,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Selects the given index from the sample map.\\nNumbers too high will wrap around.\\n<code>n</code> can also be used to play midi numbers, but it is recommended to use <code>note</code> instead.</p>","name":"n","params":[{"type":{"names":["number","Pattern"]},"description":"<p>sample index starting from 0</p>","name":"value"}],"examples":["s(\\"bd sd [~ bd] sd,hh*6\\").n(\\"<0 1>\\")"],"longname":"n","kind":"member","scope":"global"},{"comment":"/**\\n * Plays the given note name or midi number. A note name consists of\\n *\\n * - a letter (a-g or A-G)\\n * - optional accidentals (b or #)\\n * - optional octave number (0-9). Defaults to 3\\n *\\n * Examples of valid note names: \`c\`, \`bb\`, \`Bb\`, \`f#\`, \`c3\`, \`A4\`, \`Eb2\`, \`c#5\`\\n *\\n * You can also use midi numbers instead of note names, where 69 is mapped to A4 440Hz in 12EDO.\\n *\\n * @name note\\n * @example\\n * note(\\"c a f e\\")\\n * @example\\n * note(\\"c4 a4 f4 e4\\")\\n * @example\\n * note(\\"60 69 65 64\\")\\n */","meta":{"filename":"controls.mjs","lineno":101,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Plays the given note name or midi number. A note name consists of</p>\\n<ul>\\n<li>a letter (a-g or A-G)</li>\\n<li>optional accidentals (b or #)</li>\\n<li>optional octave number (0-9). Defaults to 3</li>\\n</ul>\\n<p>Examples of valid note names: <code>c</code>, <code>bb</code>, <code>Bb</code>, <code>f#</code>, <code>c3</code>, <code>A4</code>, <code>Eb2</code>, <code>c#5</code></p>\\n<p>You can also use midi numbers instead of note names, where 69 is mapped to A4 440Hz in 12EDO.</p>","name":"note","examples":["note(\\"c a f e\\")","note(\\"c4 a4 f4 e4\\")","note(\\"60 69 65 64\\")"],"longname":"note","kind":"member","scope":"global"},{"comment":"/**\\n * A pattern of numbers that speed up (or slow down) samples while they play. Currently only supported by osc / superdirt.\\n *\\n * @name accelerate\\n * @param {number | Pattern} amount acceleration.\\n * @superdirtOnly\\n * @example\\n * s(\\"sax\\").accelerate(\\"<0 1 2 4 8 16>\\").slow(2).osc()\\n *\\n */","meta":{"filename":"controls.mjs","lineno":122,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>A pattern of numbers that speed up (or slow down) samples while they play. Currently only supported by osc / superdirt.</p>","name":"accelerate","params":[{"type":{"names":["number","Pattern"]},"description":"<p>acceleration.</p>","name":"amount"}],"tags":[{"originalTitle":"superdirtOnly","title":"superdirtonly","text":""}],"examples":["s(\\"sax\\").accelerate(\\"<0 1 2 4 8 16>\\").slow(2).osc()"],"longname":"accelerate","kind":"member","scope":"global"},{"comment":"/**\\n *\\n * Sets the velocity from 0 to 1. Is multiplied together with gain.\\n * @name velocity\\n * @example\\n * s(\\"hh*8\\")\\n * .gain(\\".4!2 1 .4!2 1 .4 1\\")\\n * .velocity(\\".4 1\\")\\n */","meta":{"filename":"controls.mjs","lineno":133,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the velocity from 0 to 1. Is multiplied together with gain.</p>","name":"velocity","examples":["s(\\"hh*8\\")\\n.gain(\\".4!2 1 .4!2 1 .4 1\\")\\n.velocity(\\".4 1\\")"],"longname":"velocity","kind":"member","scope":"global"},{"comment":"/**\\n * Controls the gain by an exponential amount.\\n *\\n * @name gain\\n * @param {number | Pattern} amount gain.\\n * @example\\n * s(\\"hh*8\\").gain(\\".4!2 1 .4!2 1 .4 1\\").fast(2)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":143,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Controls the gain by an exponential amount.</p>","name":"gain","params":[{"type":{"names":["number","Pattern"]},"description":"<p>gain.</p>","name":"amount"}],"examples":["s(\\"hh*8\\").gain(\\".4!2 1 .4!2 1 .4 1\\").fast(2)"],"longname":"gain","kind":"member","scope":"global"},{"comment":"/**\\n * Gain applied after all effects have been processed.\\n *\\n * @name postgain\\n * @example\\n * s(\\"bd sd [~ bd] sd,hh*8\\")\\n * .compressor(\\"-20:20:10:.002:.02\\").postgain(1.5)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":153,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Gain applied after all effects have been processed.</p>","name":"postgain","examples":["s(\\"bd sd [~ bd] sd,hh*8\\")\\n.compressor(\\"-20:20:10:.002:.02\\").postgain(1.5)"],"longname":"postgain","kind":"member","scope":"global"},{"comment":"/**\\n * Like \`gain\`, but linear.\\n *\\n * @name amp\\n * @param {number | Pattern} amount gain.\\n * @superdirtOnly\\n * @example\\n * s(\\"bd*8\\").amp(\\".1*2 .5 .1*2 .5 .1 .5\\").osc()\\n *\\n */","meta":{"filename":"controls.mjs","lineno":163,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Like <code>gain</code>, but linear.</p>","name":"amp","params":[{"type":{"names":["number","Pattern"]},"description":"<p>gain.</p>","name":"amount"}],"tags":[{"originalTitle":"superdirtOnly","title":"superdirtonly","text":""}],"examples":["s(\\"bd*8\\").amp(\\".1*2 .5 .1*2 .5 .1 .5\\").osc()"],"longname":"amp","kind":"member","scope":"global"},{"comment":"/**\\n * Amplitude envelope attack time: Specifies how long it takes for the sound to reach its peak value, relative to the onset.\\n *\\n * @name attack\\n * @param {number | Pattern} attack time in seconds.\\n * @synonyms att\\n * @example\\n * note(\\"c3 e3 f3 g3\\").attack(\\"<0 .1 .5>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":174,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Amplitude envelope attack time: Specifies how long it takes for the sound to reach its peak value, relative to the onset.</p>","name":"attack","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time in seconds.</p>","name":"attack"}],"synonyms_text":"att","synonyms":["att"],"examples":["note(\\"c3 e3 f3 g3\\").attack(\\"<0 .1 .5>\\")"],"longname":"attack","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the Frequency Modulation Harmonicity Ratio.\\n * Controls the timbre of the sound.\\n * Whole numbers and simple ratios sound more natural,\\n * while decimal numbers and complex ratios sound metallic.\\n *\\n * @name fmh\\n * @param {number | Pattern} harmonicity\\n * @example\\n * note(\\"c e g b g e\\")\\n * .fm(4)\\n * .fmh(\\"<1 2 1.5 1.61>\\")\\n * ._scope()\\n *\\n */","meta":{"filename":"controls.mjs","lineno":186,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the Frequency Modulation Harmonicity Ratio.\\nControls the timbre of the sound.\\nWhole numbers and simple ratios sound more natural,\\nwhile decimal numbers and complex ratios sound metallic.</p>","name":"fmh","params":[{"type":{"names":["number","Pattern"]},"name":"harmonicity"}],"examples":["note(\\"c e g b g e\\")\\n.fm(4)\\n.fmh(\\"<1 2 1.5 1.61>\\")\\n._scope()"],"longname":"fmh","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the Frequency Modulation of the synth.\\n * Controls the modulation index, which defines the brightness of the sound.\\n *\\n * @name fm\\n * @param {number | Pattern} brightness modulation index\\n * @synonyms fmi\\n * @example\\n * note(\\"c e g b g e\\")\\n * .fm(\\"<0 1 2 8 32>\\")\\n * ._scope()\\n *\\n */","meta":{"filename":"controls.mjs","lineno":202,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the Frequency Modulation of the synth.\\nControls the modulation index, which defines the brightness of the sound.</p>","name":"fm","params":[{"type":{"names":["number","Pattern"]},"description":"<p>modulation index</p>","name":"brightness"}],"synonyms_text":"fmi","synonyms":["fmi"],"examples":["note(\\"c e g b g e\\")\\n.fm(\\"<0 1 2 8 32>\\")\\n._scope()"],"longname":"fm","kind":"member","scope":"global"},{"comment":"/**\\n * Ramp type of fm envelope. Exp might be a bit broken..\\n *\\n * @name fmenv\\n * @param {number | Pattern} type lin | exp\\n * @example\\n * note(\\"c e g b g e\\")\\n * .fm(4)\\n * .fmdecay(.2)\\n * .fmsustain(0)\\n * .fmenv(\\"<exp lin>\\")\\n * ._scope()\\n *\\n */","meta":{"filename":"controls.mjs","lineno":217,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Ramp type of fm envelope. Exp might be a bit broken..</p>","name":"fmenv","params":[{"type":{"names":["number","Pattern"]},"description":"<p>lin | exp</p>","name":"type"}],"examples":["note(\\"c e g b g e\\")\\n.fm(4)\\n.fmdecay(.2)\\n.fmsustain(0)\\n.fmenv(\\"<exp lin>\\")\\n._scope()"],"longname":"fmenv","kind":"member","scope":"global"},{"comment":"/**\\n * Attack time for the FM envelope: time it takes to reach maximum modulation\\n *\\n * @name fmattack\\n * @param {number | Pattern} time attack time\\n * @example\\n * note(\\"c e g b g e\\")\\n * .fm(4)\\n * .fmattack(\\"<0 .05 .1 .2>\\")\\n * ._scope()\\n *\\n */","meta":{"filename":"controls.mjs","lineno":232,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Attack time for the FM envelope: time it takes to reach maximum modulation</p>","name":"fmattack","params":[{"type":{"names":["number","Pattern"]},"description":"<p>attack time</p>","name":"time"}],"examples":["note(\\"c e g b g e\\")\\n.fm(4)\\n.fmattack(\\"<0 .05 .1 .2>\\")\\n._scope()"],"longname":"fmattack","kind":"member","scope":"global"},{"comment":"/**\\n * Decay time for the FM envelope: seconds until the sustain level is reached after the attack phase.\\n *\\n * @name fmdecay\\n * @param {number | Pattern} time decay time\\n * @example\\n * note(\\"c e g b g e\\")\\n * .fm(4)\\n * .fmdecay(\\"<.01 .05 .1 .2>\\")\\n * .fmsustain(.4)\\n * ._scope()\\n *\\n */","meta":{"filename":"controls.mjs","lineno":245,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Decay time for the FM envelope: seconds until the sustain level is reached after the attack phase.</p>","name":"fmdecay","params":[{"type":{"names":["number","Pattern"]},"description":"<p>decay time</p>","name":"time"}],"examples":["note(\\"c e g b g e\\")\\n.fm(4)\\n.fmdecay(\\"<.01 .05 .1 .2>\\")\\n.fmsustain(.4)\\n._scope()"],"longname":"fmdecay","kind":"member","scope":"global"},{"comment":"/**\\n * Sustain level for the FM envelope: how much modulation is applied after the decay phase\\n *\\n * @name fmsustain\\n * @param {number | Pattern} level sustain level\\n * @example\\n * note(\\"c e g b g e\\")\\n * .fm(4)\\n * .fmdecay(.1)\\n * .fmsustain(\\"<1 .75 .5 0>\\")\\n * ._scope()\\n *\\n */","meta":{"filename":"controls.mjs","lineno":259,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sustain level for the FM envelope: how much modulation is applied after the decay phase</p>","name":"fmsustain","params":[{"type":{"names":["number","Pattern"]},"description":"<p>sustain level</p>","name":"level"}],"examples":["note(\\"c e g b g e\\")\\n.fm(4)\\n.fmdecay(.1)\\n.fmsustain(\\"<1 .75 .5 0>\\")\\n._scope()"],"longname":"fmsustain","kind":"member","scope":"global"},{"comment":"/**\\n * Select the sound bank to use. To be used together with \`s\`. The bank name (+ \\"_\\") will be prepended to the value of \`s\`.\\n *\\n * @name bank\\n * @param {string | Pattern} bank the name of the bank\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").bank('RolandTR909') // = s(\\"RolandTR909_bd RolandTR909_sd\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":277,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Select the sound bank to use. To be used together with <code>s</code>. The bank name (+ &quot;_&quot;) will be prepended to the value of <code>s</code>.</p>","name":"bank","params":[{"type":{"names":["string","Pattern"]},"description":"<p>the name of the bank</p>","name":"bank"}],"examples":["s(\\"bd sd [~ bd] sd\\").bank('RolandTR909') // = s(\\"RolandTR909_bd RolandTR909_sd\\")"],"longname":"bank","kind":"member","scope":"global"},{"comment":"/**\\n * Amplitude envelope decay time: the time it takes after the attack time to reach the sustain level.\\n * Note that the decay is only audible if the sustain value is lower than 1.\\n *\\n * @name decay\\n * @param {number | Pattern} time decay time in seconds\\n * @example\\n * note(\\"c3 e3 f3 g3\\").decay(\\"<.1 .2 .3 .4>\\").sustain(0)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":293,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Amplitude envelope decay time: the time it takes after the attack time to reach the sustain level.\\nNote that the decay is only audible if the sustain value is lower than 1.</p>","name":"decay","params":[{"type":{"names":["number","Pattern"]},"description":"<p>decay time in seconds</p>","name":"time"}],"examples":["note(\\"c3 e3 f3 g3\\").decay(\\"<.1 .2 .3 .4>\\").sustain(0)"],"longname":"decay","kind":"member","scope":"global"},{"comment":"/**\\n * Amplitude envelope sustain level: The level which is reached after attack / decay, being sustained until the offset.\\n *\\n * @name sustain\\n * @param {number | Pattern} gain sustain level between 0 and 1\\n * @synonyms sus\\n * @example\\n * note(\\"c3 e3 f3 g3\\").decay(.2).sustain(\\"<0 .1 .4 .6 1>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":304,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Amplitude envelope sustain level: The level which is reached after attack / decay, being sustained until the offset.</p>","name":"sustain","params":[{"type":{"names":["number","Pattern"]},"description":"<p>sustain level between 0 and 1</p>","name":"gain"}],"synonyms_text":"sus","synonyms":["sus"],"examples":["note(\\"c3 e3 f3 g3\\").decay(.2).sustain(\\"<0 .1 .4 .6 1>\\")"],"longname":"sustain","kind":"member","scope":"global"},{"comment":"/**\\n * Amplitude envelope release time: The time it takes after the offset to go from sustain level to zero.\\n *\\n * @name release\\n * @param {number | Pattern} time release time in seconds\\n * @synonyms rel\\n * @example\\n * note(\\"c3 e3 g3 c4\\").release(\\"<0 .1 .4 .6 1>/2\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":315,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Amplitude envelope release time: The time it takes after the offset to go from sustain level to zero.</p>","name":"release","params":[{"type":{"names":["number","Pattern"]},"description":"<p>release time in seconds</p>","name":"time"}],"synonyms_text":"rel","synonyms":["rel"],"examples":["note(\\"c3 e3 g3 c4\\").release(\\"<0 .1 .4 .6 1>/2\\")"],"longname":"release","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the center frequency of the **b**and-**p**ass **f**ilter. When using mininotation, you\\n * can also optionally supply the 'bpq' parameter separated by ':'.\\n *\\n * @name bpf\\n * @param {number | Pattern} frequency center frequency\\n * @synonyms bandf, bp\\n * @example\\n * s(\\"bd sd [~ bd] sd,hh*6\\").bpf(\\"<1000 2000 4000 8000>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":328,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the center frequency of the <strong>b</strong>and-<strong>p</strong>ass <strong>f</strong>ilter. When using mininotation, you\\ncan also optionally supply the 'bpq' parameter separated by ':'.</p>","name":"bpf","params":[{"type":{"names":["number","Pattern"]},"description":"<p>center frequency</p>","name":"frequency"}],"synonyms_text":"bandf, bp","synonyms":["bandf","bp"],"examples":["s(\\"bd sd [~ bd] sd,hh*6\\").bpf(\\"<1000 2000 4000 8000>\\")"],"longname":"bpf","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the **b**and-**p**ass **q**-factor (resonance).\\n *\\n * @name bpq\\n * @param {number | Pattern} q q factor\\n * @synonyms bandq\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").bpf(500).bpq(\\"<0 1 2 3>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":341,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the <strong>b</strong>and-<strong>p</strong>ass <strong>q</strong>-factor (resonance).</p>","name":"bpq","params":[{"type":{"names":["number","Pattern"]},"description":"<p>q factor</p>","name":"q"}],"synonyms_text":"bandq","synonyms":["bandq"],"examples":["s(\\"bd sd [~ bd] sd\\").bpf(500).bpq(\\"<0 1 2 3>\\")"],"longname":"bpq","kind":"member","scope":"global"},{"comment":"/**\\n * a pattern of numbers from 0 to 1. Skips the beginning of each sample, e.g. \`0.25\` to cut off the first quarter from each sample.\\n *\\n * @memberof Pattern\\n * @name begin\\n * @param {number | Pattern} amount between 0 and 1, where 1 is the length of the sample\\n * @example\\n * samples({ rave: 'rave/AREUREADY.wav' }, 'github:tidalcycles/dirt-samples')\\n * s(\\"rave\\").begin(\\"<0 .25 .5 .75>\\").fast(2)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":354,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>a pattern of numbers from 0 to 1. Skips the beginning of each sample, e.g. <code>0.25</code> to cut off the first quarter from each sample.</p>","memberof":"Pattern","name":"begin","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1, where 1 is the length of the sample</p>","name":"amount"}],"examples":["samples({ rave: 'rave/AREUREADY.wav' }, 'github:tidalcycles/dirt-samples')\\ns(\\"rave\\").begin(\\"<0 .25 .5 .75>\\").fast(2)"],"scope":"static","longname":"Pattern.begin","kind":"member"},{"comment":"/**\\n * The same as .begin, but cuts off the end off each sample.\\n *\\n * @memberof Pattern\\n * @name end\\n * @param {number | Pattern} length 1 = whole sample, .5 = half sample, .25 = quarter sample etc..\\n * @example\\n * s(\\"bd*2,oh*4\\").end(\\"<.1 .2 .5 1>\\").fast(2)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":366,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>The same as .begin, but cuts off the end off each sample.</p>","memberof":"Pattern","name":"end","params":[{"type":{"names":["number","Pattern"]},"description":"<p>1 = whole sample, .5 = half sample, .25 = quarter sample etc..</p>","name":"length"}],"examples":["s(\\"bd*2,oh*4\\").end(\\"<.1 .2 .5 1>\\").fast(2)"],"scope":"static","longname":"Pattern.end","kind":"member"},{"comment":"/**\\n * Loops the sample.\\n * Note that the tempo of the loop is not synced with the cycle tempo.\\n * To change the loop region, use loopBegin / loopEnd.\\n *\\n * @name loop\\n * @param {number | Pattern} on If 1, the sample is looped\\n * @example\\n * s(\\"casio\\").loop(1)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":377,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Loops the sample.\\nNote that the tempo of the loop is not synced with the cycle tempo.\\nTo change the loop region, use loopBegin / loopEnd.</p>","name":"loop","params":[{"type":{"names":["number","Pattern"]},"description":"<p>If 1, the sample is looped</p>","name":"on"}],"examples":["s(\\"casio\\").loop(1)"],"longname":"loop","kind":"member","scope":"global"},{"comment":"/**\\n * Begin to loop at a specific point in the sample (inbetween \`begin\` and \`end\`).\\n * Note that the loop point must be inbetween \`begin\` and \`end\`, and before \`loopEnd\`!\\n * Note: Samples starting with wt_ will automatically loop! (wt = wavetable)\\n *\\n * @name loopBegin\\n * @param {number | Pattern} time between 0 and 1, where 1 is the length of the sample\\n * @synonyms loopb\\n * @example\\n * s(\\"space\\").loop(1)\\n * .loopBegin(\\"<0 .125 .25>\\")._scope()\\n */","meta":{"filename":"controls.mjs","lineno":389,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Begin to loop at a specific point in the sample (inbetween <code>begin</code> and <code>end</code>).\\nNote that the loop point must be inbetween <code>begin</code> and <code>end</code>, and before <code>loopEnd</code>!\\nNote: Samples starting with wt_ will automatically loop! (wt = wavetable)</p>","name":"loopBegin","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1, where 1 is the length of the sample</p>","name":"time"}],"synonyms_text":"loopb","synonyms":["loopb"],"examples":["s(\\"space\\").loop(1)\\n.loopBegin(\\"<0 .125 .25>\\")._scope()"],"longname":"loopBegin","kind":"member","scope":"global"},{"comment":"/**\\n *\\n * End the looping section at a specific point in the sample (inbetween \`begin\` and \`end\`).\\n * Note that the loop point must be inbetween \`begin\` and \`end\`, and after \`loopBegin\`!\\n *\\n * @name loopEnd\\n * @param {number | Pattern} time between 0 and 1, where 1 is the length of the sample\\n * @synonyms loope\\n * @example\\n * s(\\"space\\").loop(1)\\n * .loopEnd(\\"<1 .75 .5 .25>\\")._scope()\\n */","meta":{"filename":"controls.mjs","lineno":402,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>End the looping section at a specific point in the sample (inbetween <code>begin</code> and <code>end</code>).\\nNote that the loop point must be inbetween <code>begin</code> and <code>end</code>, and after <code>loopBegin</code>!</p>","name":"loopEnd","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1, where 1 is the length of the sample</p>","name":"time"}],"synonyms_text":"loope","synonyms":["loope"],"examples":["s(\\"space\\").loop(1)\\n.loopEnd(\\"<1 .75 .5 .25>\\")._scope()"],"longname":"loopEnd","kind":"member","scope":"global"},{"comment":"/**\\n * bit crusher effect.\\n *\\n * @name crush\\n * @param {number | Pattern} depth between 1 (for drastic reduction in bit-depth) to 16 (for barely no reduction).\\n * @example\\n * s(\\"<bd sd>,hh*3\\").fast(2).crush(\\"<16 8 7 6 5 4 3 2>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":415,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>bit crusher effect.</p>","name":"crush","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 1 (for drastic reduction in bit-depth) to 16 (for barely no reduction).</p>","name":"depth"}],"examples":["s(\\"<bd sd>,hh*3\\").fast(2).crush(\\"<16 8 7 6 5 4 3 2>\\")"],"longname":"crush","kind":"member","scope":"global"},{"comment":"/**\\n * fake-resampling for lowering the sample rate. Caution: This effect seems to only work in chromium based browsers\\n *\\n * @name coarse\\n * @param {number | Pattern} factor 1 for original 2 for half, 3 for a third and so on.\\n * @example\\n * s(\\"bd sd [~ bd] sd,hh*8\\").coarse(\\"<1 4 8 16 32>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":426,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>fake-resampling for lowering the sample rate. Caution: This effect seems to only work in chromium based browsers</p>","name":"coarse","params":[{"type":{"names":["number","Pattern"]},"description":"<p>1 for original 2 for half, 3 for a third and so on.</p>","name":"factor"}],"examples":["s(\\"bd sd [~ bd] sd,hh*8\\").coarse(\\"<1 4 8 16 32>\\")"],"longname":"coarse","kind":"member","scope":"global"},{"comment":"/**\\n * filter overdrive for supported filter types\\n *\\n * @name drive\\n * @param {number | Pattern} amount\\n * @example\\n * note(\\"{f g g c d a a#}%16\\".sub(17)).s(\\"supersaw\\").lpenv(8).lpf(150).lpq(.8).ftype('ladder').drive(\\"<.5 4>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":437,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>filter overdrive for supported filter types</p>","name":"drive","params":[{"type":{"names":["number","Pattern"]},"name":"amount"}],"examples":["note(\\"{f g g c d a a#}%16\\".sub(17)).s(\\"supersaw\\").lpenv(8).lpf(150).lpq(.8).ftype('ladder').drive(\\"<.5 4>\\")"],"longname":"drive","kind":"member","scope":"global"},{"comment":"/**\\n * Allows you to set the output channels on the interface\\n *\\n * @name channels\\n * @synonyms ch\\n *\\n * @param {number | Pattern} channels pattern the output channels\\n * @example\\n * note(\\"e a d b g\\").channels(\\"3:4\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":448,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Allows you to set the output channels on the interface</p>","name":"channels","synonyms_text":"ch","synonyms":["ch"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>pattern the output channels</p>","name":"channels"}],"examples":["note(\\"e a d b g\\").channels(\\"3:4\\")"],"longname":"channels","kind":"member","scope":"global"},{"comment":"/**\\n * Phaser audio effect that approximates popular guitar pedals.\\n *\\n * @name phaser\\n * @synonyms ph\\n * @param {number | Pattern} speed speed of modulation\\n * @example\\n * n(run(8)).scale(\\"D:pentatonic\\").s(\\"sawtooth\\").release(0.5)\\n * .phaser(\\"<1 2 4 8>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":461,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Phaser audio effect that approximates popular guitar pedals.</p>","name":"phaser","synonyms_text":"ph","synonyms":["ph"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>speed of modulation</p>","name":"speed"}],"examples":["n(run(8)).scale(\\"D:pentatonic\\").s(\\"sawtooth\\").release(0.5)\\n.phaser(\\"<1 2 4 8>\\")"],"longname":"phaser","kind":"member","scope":"global"},{"comment":"/**\\n * The frequency sweep range of the lfo for the phaser effect. Defaults to 2000\\n *\\n * @name phasersweep\\n * @synonyms phs\\n * @param {number | Pattern} phasersweep most useful values are between 0 and 4000\\n * @example\\n * n(run(8)).scale(\\"D:pentatonic\\").s(\\"sawtooth\\").release(0.5)\\n * .phaser(2).phasersweep(\\"<800 2000 4000>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":478,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>The frequency sweep range of the lfo for the phaser effect. Defaults to 2000</p>","name":"phasersweep","synonyms_text":"phs","synonyms":["phs"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>most useful values are between 0 and 4000</p>","name":"phasersweep"}],"examples":["n(run(8)).scale(\\"D:pentatonic\\").s(\\"sawtooth\\").release(0.5)\\n.phaser(2).phasersweep(\\"<800 2000 4000>\\")"],"longname":"phasersweep","kind":"member","scope":"global"},{"comment":"/**\\n *  The center frequency of the phaser in HZ. Defaults to 1000\\n *\\n * @name phasercenter\\n * @synonyms phc\\n * @param {number | Pattern} centerfrequency in HZ\\n * @example\\n * n(run(8)).scale(\\"D:pentatonic\\").s(\\"sawtooth\\").release(0.5)\\n * .phaser(2).phasercenter(\\"<800 2000 4000>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":491,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>The center frequency of the phaser in HZ. Defaults to 1000</p>","name":"phasercenter","synonyms_text":"phc","synonyms":["phc"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>in HZ</p>","name":"centerfrequency"}],"examples":["n(run(8)).scale(\\"D:pentatonic\\").s(\\"sawtooth\\").release(0.5)\\n.phaser(2).phasercenter(\\"<800 2000 4000>\\")"],"longname":"phasercenter","kind":"member","scope":"global"},{"comment":"/**\\n * The amount the signal is affected by the phaser effect. Defaults to 0.75\\n *\\n * @name phaserdepth\\n * @synonyms phd\\n * @param {number | Pattern} depth number between 0 and 1\\n * @example\\n * n(run(8)).scale(\\"D:pentatonic\\").s(\\"sawtooth\\").release(0.5)\\n * .phaser(2).phaserdepth(\\"<0 .5 .75 1>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":505,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>The amount the signal is affected by the phaser effect. Defaults to 0.75</p>","name":"phaserdepth","synonyms_text":"phd","synonyms":["phd"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>number between 0 and 1</p>","name":"depth"}],"examples":["n(run(8)).scale(\\"D:pentatonic\\").s(\\"sawtooth\\").release(0.5)\\n.phaser(2).phaserdepth(\\"<0 .5 .75 1>\\")"],"longname":"phaserdepth","kind":"member","scope":"global"},{"comment":"/**\\n * choose the channel the pattern is sent to in superdirt\\n *\\n * @name channel\\n * @param {number | Pattern} channel channel number\\n *\\n */","meta":{"filename":"controls.mjs","lineno":519,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>choose the channel the pattern is sent to in superdirt</p>","name":"channel","params":[{"type":{"names":["number","Pattern"]},"description":"<p>channel number</p>","name":"channel"}],"longname":"channel","kind":"member","scope":"global"},{"comment":"/**\\n * In the style of classic drum-machines, \`cut\` will stop a playing sample as soon as another samples with in same cutgroup is to be played. An example would be an open hi-hat followed by a closed one, essentially muting the open.\\n *\\n * @name cut\\n * @param {number | Pattern} group cut group number\\n * @example\\n * s(\\"[oh hh]*4\\").cut(1)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":527,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>In the style of classic drum-machines, <code>cut</code> will stop a playing sample as soon as another samples with in same cutgroup is to be played. An example would be an open hi-hat followed by a closed one, essentially muting the open.</p>","name":"cut","params":[{"type":{"names":["number","Pattern"]},"description":"<p>cut group number</p>","name":"group"}],"examples":["s(\\"[oh hh]*4\\").cut(1)"],"longname":"cut","kind":"member","scope":"global"},{"comment":"/**\\n * Applies the cutoff frequency of the **l**ow-**p**ass **f**ilter.\\n *\\n * When using mininotation, you can also optionally add the 'lpq' parameter, separated by ':'.\\n *\\n * @name lpf\\n * @param {number | Pattern} frequency audible between 0 and 20000\\n * @synonyms cutoff, ctf, lp\\n * @example\\n * s(\\"bd sd [~ bd] sd,hh*6\\").lpf(\\"<4000 2000 1000 500 200 100>\\")\\n * @example\\n * s(\\"bd*16\\").lpf(\\"1000:0 1000:10 1000:20 1000:30\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":537,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Applies the cutoff frequency of the <strong>l</strong>ow-<strong>p</strong>ass <strong>f</strong>ilter.</p>\\n<p>When using mininotation, you can also optionally add the 'lpq' parameter, separated by ':'.</p>","name":"lpf","params":[{"type":{"names":["number","Pattern"]},"description":"<p>audible between 0 and 20000</p>","name":"frequency"}],"synonyms_text":"cutoff, ctf, lp","synonyms":["cutoff","ctf","lp"],"examples":["s(\\"bd sd [~ bd] sd,hh*6\\").lpf(\\"<4000 2000 1000 500 200 100>\\")","s(\\"bd*16\\").lpf(\\"1000:0 1000:10 1000:20 1000:30\\")"],"longname":"lpf","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the lowpass filter envelope modulation depth.\\n * @name lpenv\\n * @param {number | Pattern} modulation depth of the lowpass filter envelope between 0 and _n_\\n * @synonyms lpe\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .lpf(300)\\n * .lpa(.5)\\n * .lpenv(\\"<4 2 1 0 -1 -2 -4>/4\\")\\n */","meta":{"filename":"controls.mjs","lineno":553,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the lowpass filter envelope modulation depth.</p>","name":"lpenv","params":[{"type":{"names":["number","Pattern"]},"description":"<p>depth of the lowpass filter envelope between 0 and <em>n</em></p>","name":"modulation"}],"synonyms_text":"lpe","synonyms":["lpe"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.lpf(300)\\n.lpa(.5)\\n.lpenv(\\"<4 2 1 0 -1 -2 -4>/4\\")"],"longname":"lpenv","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the highpass filter envelope modulation depth.\\n * @name hpenv\\n * @param {number | Pattern} modulation depth of the highpass filter envelope between 0 and _n_\\n * @synonyms hpe\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .hpf(500)\\n * .hpa(.5)\\n * .hpenv(\\"<4 2 1 0 -1 -2 -4>/4\\")\\n */","meta":{"filename":"controls.mjs","lineno":566,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the highpass filter envelope modulation depth.</p>","name":"hpenv","params":[{"type":{"names":["number","Pattern"]},"description":"<p>depth of the highpass filter envelope between 0 and <em>n</em></p>","name":"modulation"}],"synonyms_text":"hpe","synonyms":["hpe"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.hpf(500)\\n.hpa(.5)\\n.hpenv(\\"<4 2 1 0 -1 -2 -4>/4\\")"],"longname":"hpenv","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the bandpass filter envelope modulation depth.\\n * @name bpenv\\n * @param {number | Pattern} modulation depth of the bandpass filter envelope between 0 and _n_\\n * @synonyms bpe\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .bpf(500)\\n * .bpa(.5)\\n * .bpenv(\\"<4 2 1 0 -1 -2 -4>/4\\")\\n */","meta":{"filename":"controls.mjs","lineno":579,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the bandpass filter envelope modulation depth.</p>","name":"bpenv","params":[{"type":{"names":["number","Pattern"]},"description":"<p>depth of the bandpass filter envelope between 0 and <em>n</em></p>","name":"modulation"}],"synonyms_text":"bpe","synonyms":["bpe"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.bpf(500)\\n.bpa(.5)\\n.bpenv(\\"<4 2 1 0 -1 -2 -4>/4\\")"],"longname":"bpenv","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the attack duration for the lowpass filter envelope.\\n * @name lpattack\\n * @param {number | Pattern} attack time of the filter envelope\\n * @synonyms lpa\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .lpf(300)\\n * .lpa(\\"<.5 .25 .1 .01>/4\\")\\n * .lpenv(4)\\n */","meta":{"filename":"controls.mjs","lineno":592,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the attack duration for the lowpass filter envelope.</p>","name":"lpattack","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the filter envelope</p>","name":"attack"}],"synonyms_text":"lpa","synonyms":["lpa"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.lpf(300)\\n.lpa(\\"<.5 .25 .1 .01>/4\\")\\n.lpenv(4)"],"longname":"lpattack","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the attack duration for the highpass filter envelope.\\n * @name hpattack\\n * @param {number | Pattern} attack time of the highpass filter envelope\\n * @synonyms hpa\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .hpf(500)\\n * .hpa(\\"<.5 .25 .1 .01>/4\\")\\n * .hpenv(4)\\n */","meta":{"filename":"controls.mjs","lineno":605,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the attack duration for the highpass filter envelope.</p>","name":"hpattack","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the highpass filter envelope</p>","name":"attack"}],"synonyms_text":"hpa","synonyms":["hpa"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.hpf(500)\\n.hpa(\\"<.5 .25 .1 .01>/4\\")\\n.hpenv(4)"],"longname":"hpattack","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the attack duration for the bandpass filter envelope.\\n * @name bpattack\\n * @param {number | Pattern} attack time of the bandpass filter envelope\\n * @synonyms bpa\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .bpf(500)\\n * .bpa(\\"<.5 .25 .1 .01>/4\\")\\n * .bpenv(4)\\n */","meta":{"filename":"controls.mjs","lineno":618,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the attack duration for the bandpass filter envelope.</p>","name":"bpattack","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the bandpass filter envelope</p>","name":"attack"}],"synonyms_text":"bpa","synonyms":["bpa"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.bpf(500)\\n.bpa(\\"<.5 .25 .1 .01>/4\\")\\n.bpenv(4)"],"longname":"bpattack","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the decay duration for the lowpass filter envelope.\\n * @name lpdecay\\n * @param {number | Pattern} decay time of the filter envelope\\n * @synonyms lpd\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .lpf(300)\\n * .lpd(\\"<.5 .25 .1 0>/4\\")\\n * .lpenv(4)\\n */","meta":{"filename":"controls.mjs","lineno":631,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the decay duration for the lowpass filter envelope.</p>","name":"lpdecay","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the filter envelope</p>","name":"decay"}],"synonyms_text":"lpd","synonyms":["lpd"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.lpf(300)\\n.lpd(\\"<.5 .25 .1 0>/4\\")\\n.lpenv(4)"],"longname":"lpdecay","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the decay duration for the highpass filter envelope.\\n * @name hpdecay\\n * @param {number | Pattern} decay time of the highpass filter envelope\\n * @synonyms hpd\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .hpf(500)\\n * .hpd(\\"<.5 .25 .1 0>/4\\")\\n * .hps(0.2)\\n * .hpenv(4)\\n */","meta":{"filename":"controls.mjs","lineno":644,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the decay duration for the highpass filter envelope.</p>","name":"hpdecay","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the highpass filter envelope</p>","name":"decay"}],"synonyms_text":"hpd","synonyms":["hpd"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.hpf(500)\\n.hpd(\\"<.5 .25 .1 0>/4\\")\\n.hps(0.2)\\n.hpenv(4)"],"longname":"hpdecay","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the decay duration for the bandpass filter envelope.\\n * @name bpdecay\\n * @param {number | Pattern} decay time of the bandpass filter envelope\\n * @synonyms bpd\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .bpf(500)\\n * .bpd(\\"<.5 .25 .1 0>/4\\")\\n * .bps(0.2)\\n * .bpenv(4)\\n */","meta":{"filename":"controls.mjs","lineno":658,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the decay duration for the bandpass filter envelope.</p>","name":"bpdecay","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the bandpass filter envelope</p>","name":"decay"}],"synonyms_text":"bpd","synonyms":["bpd"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.bpf(500)\\n.bpd(\\"<.5 .25 .1 0>/4\\")\\n.bps(0.2)\\n.bpenv(4)"],"longname":"bpdecay","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the sustain amplitude for the lowpass filter envelope.\\n * @name lpsustain\\n * @param {number | Pattern} sustain amplitude of the lowpass filter envelope\\n * @synonyms lps\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .lpf(300)\\n * .lpd(.5)\\n * .lps(\\"<0 .25 .5 1>/4\\")\\n * .lpenv(4)\\n */","meta":{"filename":"controls.mjs","lineno":672,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the sustain amplitude for the lowpass filter envelope.</p>","name":"lpsustain","params":[{"type":{"names":["number","Pattern"]},"description":"<p>amplitude of the lowpass filter envelope</p>","name":"sustain"}],"synonyms_text":"lps","synonyms":["lps"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.lpf(300)\\n.lpd(.5)\\n.lps(\\"<0 .25 .5 1>/4\\")\\n.lpenv(4)"],"longname":"lpsustain","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the sustain amplitude for the highpass filter envelope.\\n * @name hpsustain\\n * @param {number | Pattern} sustain amplitude of the highpass filter envelope\\n * @synonyms hps\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .hpf(500)\\n * .hpd(.5)\\n * .hps(\\"<0 .25 .5 1>/4\\")\\n * .hpenv(4)\\n */","meta":{"filename":"controls.mjs","lineno":686,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the sustain amplitude for the highpass filter envelope.</p>","name":"hpsustain","params":[{"type":{"names":["number","Pattern"]},"description":"<p>amplitude of the highpass filter envelope</p>","name":"sustain"}],"synonyms_text":"hps","synonyms":["hps"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.hpf(500)\\n.hpd(.5)\\n.hps(\\"<0 .25 .5 1>/4\\")\\n.hpenv(4)"],"longname":"hpsustain","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the sustain amplitude for the bandpass filter envelope.\\n * @name bpsustain\\n * @param {number | Pattern} sustain amplitude of the bandpass filter envelope\\n * @synonyms bps\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .bpf(500)\\n * .bpd(.5)\\n * .bps(\\"<0 .25 .5 1>/4\\")\\n * .bpenv(4)\\n */","meta":{"filename":"controls.mjs","lineno":700,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the sustain amplitude for the bandpass filter envelope.</p>","name":"bpsustain","params":[{"type":{"names":["number","Pattern"]},"description":"<p>amplitude of the bandpass filter envelope</p>","name":"sustain"}],"synonyms_text":"bps","synonyms":["bps"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.bpf(500)\\n.bpd(.5)\\n.bps(\\"<0 .25 .5 1>/4\\")\\n.bpenv(4)"],"longname":"bpsustain","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the release time for the lowpass filter envelope.\\n * @name lprelease\\n * @param {number | Pattern} release time of the filter envelope\\n * @synonyms lpr\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .clip(.5)\\n * .lpf(300)\\n * .lpenv(4)\\n * .lpr(\\"<.5 .25 .1 0>/4\\")\\n * .release(.5)\\n */","meta":{"filename":"controls.mjs","lineno":714,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the release time for the lowpass filter envelope.</p>","name":"lprelease","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the filter envelope</p>","name":"release"}],"synonyms_text":"lpr","synonyms":["lpr"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.clip(.5)\\n.lpf(300)\\n.lpenv(4)\\n.lpr(\\"<.5 .25 .1 0>/4\\")\\n.release(.5)"],"longname":"lprelease","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the release time for the highpass filter envelope.\\n * @name hprelease\\n * @param {number | Pattern} release time of the highpass filter envelope\\n * @synonyms hpr\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .clip(.5)\\n * .hpf(500)\\n * .hpenv(4)\\n * .hpr(\\"<.5 .25 .1 0>/4\\")\\n * .release(.5)\\n */","meta":{"filename":"controls.mjs","lineno":729,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the release time for the highpass filter envelope.</p>","name":"hprelease","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the highpass filter envelope</p>","name":"release"}],"synonyms_text":"hpr","synonyms":["hpr"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.clip(.5)\\n.hpf(500)\\n.hpenv(4)\\n.hpr(\\"<.5 .25 .1 0>/4\\")\\n.release(.5)"],"longname":"hprelease","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the release time for the bandpass filter envelope.\\n * @name bprelease\\n * @param {number | Pattern} release time of the bandpass filter envelope\\n * @synonyms bpr\\n * @example\\n * note(\\"c2 e2 f2 g2\\")\\n * .sound('sawtooth')\\n * .clip(.5)\\n * .bpf(500)\\n * .bpenv(4)\\n * .bpr(\\"<.5 .25 .1 0>/4\\")\\n * .release(.5)\\n */","meta":{"filename":"controls.mjs","lineno":744,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the release time for the bandpass filter envelope.</p>","name":"bprelease","params":[{"type":{"names":["number","Pattern"]},"description":"<p>time of the bandpass filter envelope</p>","name":"release"}],"synonyms_text":"bpr","synonyms":["bpr"],"examples":["note(\\"c2 e2 f2 g2\\")\\n.sound('sawtooth')\\n.clip(.5)\\n.bpf(500)\\n.bpenv(4)\\n.bpr(\\"<.5 .25 .1 0>/4\\")\\n.release(.5)"],"longname":"bprelease","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the filter type. The ladder filter is more aggressive. More types might be added in the future.\\n * @name ftype\\n * @param {number | Pattern} type 12db (0), ladder (1), or 24db (2)\\n * @example\\n * note(\\"{f g g c d a a#}%8\\").s(\\"sawtooth\\").lpenv(4).lpf(500).ftype(\\"<0 1 2>\\").lpq(1)\\n * @example\\n * note(\\"c f g g a c d4\\").fast(2)\\n * .sound('sawtooth')\\n * .lpf(200).fanchor(0)\\n * .lpenv(3).lpq(1)\\n * .ftype(\\"<ladder 12db 24db>\\")\\n */","meta":{"filename":"controls.mjs","lineno":759,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the filter type. The ladder filter is more aggressive. More types might be added in the future.</p>","name":"ftype","params":[{"type":{"names":["number","Pattern"]},"description":"<p>12db (0), ladder (1), or 24db (2)</p>","name":"type"}],"examples":["note(\\"{f g g c d a a#}%8\\").s(\\"sawtooth\\").lpenv(4).lpf(500).ftype(\\"<0 1 2>\\").lpq(1)","note(\\"c f g g a c d4\\").fast(2)\\n.sound('sawtooth')\\n.lpf(200).fanchor(0)\\n.lpenv(3).lpq(1)\\n.ftype(\\"<ladder 12db 24db>\\")"],"longname":"ftype","kind":"member","scope":"global"},{"comment":"/**\\n * controls the center of the filter envelope. 0 is unipolar positive, .5 is bipolar, 1 is unipolar negative\\n * @name fanchor\\n * @param {number | Pattern} center 0 to 1\\n * @example\\n * note(\\"{f g g c d a a#}%8\\").s(\\"sawtooth\\").lpf(\\"{1000}%2\\")\\n * .lpenv(8).fanchor(\\"<0 .5 1>\\")\\n */","meta":{"filename":"controls.mjs","lineno":774,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>controls the center of the filter envelope. 0 is unipolar positive, .5 is bipolar, 1 is unipolar negative</p>","name":"fanchor","params":[{"type":{"names":["number","Pattern"]},"description":"<p>0 to 1</p>","name":"center"}],"examples":["note(\\"{f g g c d a a#}%8\\").s(\\"sawtooth\\").lpf(\\"{1000}%2\\")\\n.lpenv(8).fanchor(\\"<0 .5 1>\\")"],"longname":"fanchor","kind":"member","scope":"global"},{"comment":"/**\\n * Applies the cutoff frequency of the **h**igh-**p**ass **f**ilter.\\n *\\n * When using mininotation, you can also optionally add the 'hpq' parameter, separated by ':'.\\n *\\n * @name hpf\\n * @param {number | Pattern} frequency audible between 0 and 20000\\n * @synonyms hp, hcutoff\\n * @example\\n * s(\\"bd sd [~ bd] sd,hh*8\\").hpf(\\"<4000 2000 1000 500 200 100>\\")\\n * @example\\n * s(\\"bd sd [~ bd] sd,hh*8\\").hpf(\\"<2000 2000:25>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":783,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Applies the cutoff frequency of the <strong>h</strong>igh-<strong>p</strong>ass <strong>f</strong>ilter.</p>\\n<p>When using mininotation, you can also optionally add the 'hpq' parameter, separated by ':'.</p>","name":"hpf","params":[{"type":{"names":["number","Pattern"]},"description":"<p>audible between 0 and 20000</p>","name":"frequency"}],"synonyms_text":"hp, hcutoff","synonyms":["hp","hcutoff"],"examples":["s(\\"bd sd [~ bd] sd,hh*8\\").hpf(\\"<4000 2000 1000 500 200 100>\\")","s(\\"bd sd [~ bd] sd,hh*8\\").hpf(\\"<2000 2000:25>\\")"],"longname":"hpf","kind":"member","scope":"global"},{"comment":"/**\\n * Applies a vibrato to the frequency of the oscillator.\\n *\\n * @name vib\\n * @synonyms vibrato, v\\n * @param {number | Pattern} frequency of the vibrato in hertz\\n * @example\\n * note(\\"a e\\")\\n * .vib(\\"<.5 1 2 4 8 16>\\")\\n * ._scope()\\n * @example\\n * // change the modulation depth with \\":\\"\\n * note(\\"a e\\")\\n * .vib(\\"<.5 1 2 4 8 16>:12\\")\\n * ._scope()\\n */","meta":{"filename":"controls.mjs","lineno":799,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Applies a vibrato to the frequency of the oscillator.</p>","name":"vib","synonyms_text":"vibrato, v","synonyms":["vibrato","v"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>of the vibrato in hertz</p>","name":"frequency"}],"examples":["note(\\"a e\\")\\n.vib(\\"<.5 1 2 4 8 16>\\")\\n._scope()","// change the modulation depth with \\":\\"\\nnote(\\"a e\\")\\n.vib(\\"<.5 1 2 4 8 16>:12\\")\\n._scope()"],"longname":"vib","kind":"member","scope":"global"},{"comment":"/**\\n * Adds pink noise to the mix\\n *\\n * @name noise\\n * @param {number | Pattern} wet wet amount\\n * @example\\n * sound(\\"<white pink brown>/2\\")\\n */","meta":{"filename":"controls.mjs","lineno":816,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Adds pink noise to the mix</p>","name":"noise","params":[{"type":{"names":["number","Pattern"]},"description":"<p>wet amount</p>","name":"wet"}],"examples":["sound(\\"<white pink brown>/2\\")"],"longname":"noise","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the vibrato depth in semitones. Only has an effect if \`vibrato\` | \`vib\` | \`v\` is is also set\\n *\\n * @name vibmod\\n * @synonyms vmod\\n * @param {number | Pattern} depth of vibrato (in semitones)\\n * @example\\n * note(\\"a e\\").vib(4)\\n * .vibmod(\\"<.25 .5 1 2 12>\\")\\n * ._scope()\\n * @example\\n * // change the vibrato frequency with \\":\\"\\n * note(\\"a e\\")\\n * .vibmod(\\"<.25 .5 1 2 12>:8\\")\\n * ._scope()\\n */","meta":{"filename":"controls.mjs","lineno":825,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the vibrato depth in semitones. Only has an effect if <code>vibrato</code> | <code>vib</code> | <code>v</code> is is also set</p>","name":"vibmod","synonyms_text":"vmod","synonyms":["vmod"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>of vibrato (in semitones)</p>","name":"depth"}],"examples":["note(\\"a e\\").vib(4)\\n.vibmod(\\"<.25 .5 1 2 12>\\")\\n._scope()","// change the vibrato frequency with \\":\\"\\nnote(\\"a e\\")\\n.vibmod(\\"<.25 .5 1 2 12>:8\\")\\n._scope()"],"longname":"vibmod","kind":"member","scope":"global"},{"comment":"/**\\n * Controls the **h**igh-**p**ass **q**-value.\\n *\\n * @name hpq\\n * @param {number | Pattern} q resonance factor between 0 and 50\\n * @synonyms hresonance\\n * @example\\n * s(\\"bd sd [~ bd] sd,hh*8\\").hpf(2000).hpq(\\"<0 10 20 30>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":843,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Controls the <strong>h</strong>igh-<strong>p</strong>ass <strong>q</strong>-value.</p>","name":"hpq","params":[{"type":{"names":["number","Pattern"]},"description":"<p>resonance factor between 0 and 50</p>","name":"q"}],"synonyms_text":"hresonance","synonyms":["hresonance"],"examples":["s(\\"bd sd [~ bd] sd,hh*8\\").hpf(2000).hpq(\\"<0 10 20 30>\\")"],"longname":"hpq","kind":"member","scope":"global"},{"comment":"/**\\n * Controls the **l**ow-**p**ass **q**-value.\\n *\\n * @name lpq\\n * @param {number | Pattern} q resonance factor between 0 and 50\\n * @synonyms resonance\\n * @example\\n * s(\\"bd sd [~ bd] sd,hh*8\\").lpf(2000).lpq(\\"<0 10 20 30>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":854,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Controls the <strong>l</strong>ow-<strong>p</strong>ass <strong>q</strong>-value.</p>","name":"lpq","params":[{"type":{"names":["number","Pattern"]},"description":"<p>resonance factor between 0 and 50</p>","name":"q"}],"synonyms_text":"resonance","synonyms":["resonance"],"examples":["s(\\"bd sd [~ bd] sd,hh*8\\").lpf(2000).lpq(\\"<0 10 20 30>\\")"],"longname":"lpq","kind":"member","scope":"global"},{"comment":"/**\\n * DJ filter, below 0.5 is low pass filter, above is high pass filter.\\n *\\n * @name djf\\n * @param {number | Pattern} cutoff below 0.5 is low pass filter, above is high pass filter\\n * @example\\n * n(\\"0 3 7 [10,24]\\").s('superzow').octave(3).djf(\\"<.5 .25 .5 .75>\\").osc()\\n *\\n */","meta":{"filename":"controls.mjs","lineno":866,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>DJ filter, below 0.5 is low pass filter, above is high pass filter.</p>","name":"djf","params":[{"type":{"names":["number","Pattern"]},"description":"<p>below 0.5 is low pass filter, above is high pass filter</p>","name":"cutoff"}],"examples":["n(\\"0 3 7 [10,24]\\").s('superzow').octave(3).djf(\\"<.5 .25 .5 .75>\\").osc()"],"longname":"djf","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the level of the delay signal.\\n *\\n * When using mininotation, you can also optionally add the 'delaytime' and 'delayfeedback' parameter,\\n * separated by ':'.\\n *\\n *\\n * @name delay\\n * @param {number | Pattern} level between 0 and 1\\n * @example\\n * s(\\"bd bd\\").delay(\\"<0 .25 .5 1>\\")\\n * @example\\n * s(\\"bd bd\\").delay(\\"0.65:0.25:0.9 0.65:0.125:0.7\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":878,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the level of the delay signal.</p>\\n<p>When using mininotation, you can also optionally add the 'delaytime' and 'delayfeedback' parameter,\\nseparated by ':'.</p>","name":"delay","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1</p>","name":"level"}],"examples":["s(\\"bd bd\\").delay(\\"<0 .25 .5 1>\\")","s(\\"bd bd\\").delay(\\"0.65:0.25:0.9 0.65:0.125:0.7\\")"],"longname":"delay","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the level of the signal that is fed back into the delay.\\n * Caution: Values >= 1 will result in a signal that gets louder and louder! Don't do it\\n *\\n * @name delayfeedback\\n * @param {number | Pattern} feedback between 0 and 1\\n * @synonyms delayfb, dfb\\n * @example\\n * s(\\"bd\\").delay(.25).delayfeedback(\\"<.25 .5 .75 1>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":894,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the level of the signal that is fed back into the delay.\\nCaution: Values &gt;= 1 will result in a signal that gets louder and louder! Don't do it</p>","name":"delayfeedback","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1</p>","name":"feedback"}],"synonyms_text":"delayfb, dfb","synonyms":["delayfb","dfb"],"examples":["s(\\"bd\\").delay(.25).delayfeedback(\\"<.25 .5 .75 1>\\")"],"longname":"delayfeedback","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the time of the delay effect.\\n *\\n * @name delaytime\\n * @param {number | Pattern} seconds between 0 and Infinity\\n * @synonyms delayt, dt\\n * @example\\n * s(\\"bd bd\\").delay(.25).delaytime(\\"<.125 .25 .5 1>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":906,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the time of the delay effect.</p>","name":"delaytime","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and Infinity</p>","name":"seconds"}],"synonyms_text":"delayt, dt","synonyms":["delayt","dt"],"examples":["s(\\"bd bd\\").delay(.25).delaytime(\\"<.125 .25 .5 1>\\")"],"longname":"delaytime","kind":"member","scope":"global"},{"comment":"/**\\n * Set detune for stacked voices of supported oscillators\\n *\\n * @name detune\\n * @param {number | Pattern} amount\\n * @synonyms det\\n * @example\\n * note(\\"d f a a# a d3\\").fast(2).s(\\"supersaw\\").detune(\\"<.1 .2 .5 24.1>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":927,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Set detune for stacked voices of supported oscillators</p>","name":"detune","params":[{"type":{"names":["number","Pattern"]},"name":"amount"}],"synonyms_text":"det","synonyms":["det"],"examples":["note(\\"d f a a# a d3\\").fast(2).s(\\"supersaw\\").detune(\\"<.1 .2 .5 24.1>\\")"],"longname":"detune","kind":"member","scope":"global"},{"comment":"/**\\n * Set number of stacked voices for supported oscillators\\n *\\n * @name unison\\n * @param {number | Pattern} numvoices\\n * @example\\n * note(\\"d f a a# a d3\\").fast(2).s(\\"supersaw\\").unison(\\"<1 2 7>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":938,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Set number of stacked voices for supported oscillators</p>","name":"unison","params":[{"type":{"names":["number","Pattern"]},"name":"numvoices"}],"examples":["note(\\"d f a a# a d3\\").fast(2).s(\\"supersaw\\").unison(\\"<1 2 7>\\")"],"longname":"unison","kind":"member","scope":"global"},{"comment":"/**\\n * Set the stereo pan spread for supported oscillators\\n *\\n * @name spread\\n * @param {number | Pattern} spread between 0 and 1\\n * @example\\n * note(\\"d f a a# a d3\\").fast(2).s(\\"supersaw\\").spread(\\"<0 .3 1>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":949,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Set the stereo pan spread for supported oscillators</p>","name":"spread","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1</p>","name":"spread"}],"examples":["note(\\"d f a a# a d3\\").fast(2).s(\\"supersaw\\").spread(\\"<0 .3 1>\\")"],"longname":"spread","kind":"member","scope":"global"},{"comment":"/**\\n * Set dryness of reverb. See \`room\` and \`size\` for more information about reverb.\\n *\\n * @name dry\\n * @param {number | Pattern} dry 0 = wet, 1 = dry\\n * @example\\n * n(\\"[0,3,7](3,8)\\").s(\\"superpiano\\").room(.7).dry(\\"<0 .5 .75 1>\\").osc()\\n * @superdirtOnly\\n *\\n */","meta":{"filename":"controls.mjs","lineno":959,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Set dryness of reverb. See <code>room</code> and <code>size</code> for more information about reverb.</p>","name":"dry","params":[{"type":{"names":["number","Pattern"]},"description":"<p>0 = wet, 1 = dry</p>","name":"dry"}],"examples":["n(\\"[0,3,7](3,8)\\").s(\\"superpiano\\").room(.7).dry(\\"<0 .5 .75 1>\\").osc()"],"tags":[{"originalTitle":"superdirtOnly","title":"superdirtonly","text":""}],"longname":"dry","kind":"member","scope":"global"},{"comment":"/**\\n * Set frequency of sound.\\n *\\n * @name freq\\n * @param {number | Pattern} frequency in Hz. the audible range is between 20 and 20000 Hz\\n * @example\\n * freq(\\"220 110 440 110\\").s(\\"superzow\\").osc()\\n * @example\\n * freq(\\"110\\".mul.out(\\".5 1.5 .6 [2 3]\\")).s(\\"superzow\\").osc()\\n *\\n */","meta":{"filename":"controls.mjs","lineno":983,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Set frequency of sound.</p>","name":"freq","params":[{"type":{"names":["number","Pattern"]},"description":"<p>in Hz. the audible range is between 20 and 20000 Hz</p>","name":"frequency"}],"examples":["freq(\\"220 110 440 110\\").s(\\"superzow\\").osc()","freq(\\"110\\".mul.out(\\".5 1.5 .6 [2 3]\\")).s(\\"superzow\\").osc()"],"longname":"freq","kind":"member","scope":"global"},{"comment":"/**\\n * Attack time of pitch envelope.\\n *\\n * @name pattack\\n * @synonyms patt\\n * @param {number | Pattern} time time in seconds\\n * @example\\n * note(\\"c eb g bb\\").pattack(\\"0 .1 .25 .5\\").slow(2)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":996,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Attack time of pitch envelope.</p>","name":"pattack","synonyms_text":"patt","synonyms":["patt"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>time in seconds</p>","name":"time"}],"examples":["note(\\"c eb g bb\\").pattack(\\"0 .1 .25 .5\\").slow(2)"],"longname":"pattack","kind":"member","scope":"global"},{"comment":"/**\\n * Decay time of pitch envelope.\\n *\\n * @name pdecay\\n * @synonyms pdec\\n * @param {number | Pattern} time time in seconds\\n * @example\\n * note(\\"<c eb g bb>\\").pdecay(\\"<0 .1 .25 .5>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1007,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Decay time of pitch envelope.</p>","name":"pdecay","synonyms_text":"pdec","synonyms":["pdec"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>time in seconds</p>","name":"time"}],"examples":["note(\\"<c eb g bb>\\").pdecay(\\"<0 .1 .25 .5>\\")"],"longname":"pdecay","kind":"member","scope":"global"},{"comment":"/**\\n * Release time of pitch envelope\\n *\\n * @name prelease\\n * @synonyms prel\\n * @param {number | Pattern} time time in seconds\\n * @example\\n * note(\\"<c eb g bb> ~\\")\\n * .release(.5) // to hear the pitch release\\n * .prelease(\\"<0 .1 .25 .5>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1020,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Release time of pitch envelope</p>","name":"prelease","synonyms_text":"prel","synonyms":["prel"],"params":[{"type":{"names":["number","Pattern"]},"description":"<p>time in seconds</p>","name":"time"}],"examples":["note(\\"<c eb g bb> ~\\")\\n.release(.5) // to hear the pitch release\\n.prelease(\\"<0 .1 .25 .5>\\")"],"longname":"prelease","kind":"member","scope":"global"},{"comment":"/**\\n * Amount of pitch envelope. Negative values will flip the envelope.\\n * If you don't set other pitch envelope controls, \`pattack:.2\` will be the default.\\n *\\n * @name penv\\n * @param {number | Pattern} semitones change in semitones\\n * @example\\n * note(\\"c\\")\\n * .penv(\\"<12 7 1 .5 0 -1 -7 -12>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1033,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Amount of pitch envelope. Negative values will flip the envelope.\\nIf you don't set other pitch envelope controls, <code>pattack:.2</code> will be the default.</p>","name":"penv","params":[{"type":{"names":["number","Pattern"]},"description":"<p>change in semitones</p>","name":"semitones"}],"examples":["note(\\"c\\")\\n.penv(\\"<12 7 1 .5 0 -1 -7 -12>\\")"],"longname":"penv","kind":"member","scope":"global"},{"comment":"/**\\n * Curve of envelope. Defaults to linear. exponential is good for kicks\\n *\\n * @name pcurve\\n * @param {number | Pattern} type 0 = linear, 1 = exponential\\n * @example\\n * note(\\"g1*4\\")\\n * .s(\\"sine\\").pdec(.5)\\n * .penv(32)\\n * .pcurve(\\"<0 1>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1045,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Curve of envelope. Defaults to linear. exponential is good for kicks</p>","name":"pcurve","params":[{"type":{"names":["number","Pattern"]},"description":"<p>0 = linear, 1 = exponential</p>","name":"type"}],"examples":["note(\\"g1*4\\")\\n.s(\\"sine\\").pdec(.5)\\n.penv(32)\\n.pcurve(\\"<0 1>\\")"],"longname":"pcurve","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the range anchor of the envelope:\\n * - anchor 0: range = [note, note + penv]\\n * - anchor 1: range = [note - penv, note]\\n * If you don't set an anchor, the value will default to the psustain value.\\n *\\n * @name panchor\\n * @param {number | Pattern} anchor anchor offset\\n * @example\\n * note(\\"c c4\\").penv(12).panchor(\\"<0 .5 1 .5>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1058,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the range anchor of the envelope:</p>\\n<ul>\\n<li>anchor 0: range = [note, note + penv]</li>\\n<li>anchor 1: range = [note - penv, note]\\nIf you don't set an anchor, the value will default to the psustain value.</li>\\n</ul>","name":"panchor","params":[{"type":{"names":["number","Pattern"]},"description":"<p>anchor offset</p>","name":"anchor"}],"examples":["note(\\"c c4\\").penv(12).panchor(\\"<0 .5 1 .5>\\")"],"longname":"panchor","kind":"member","scope":"global"},{"comment":"/**\\n * Emulation of a Leslie speaker: speakers rotating in a wooden amplified cabinet.\\n *\\n * @name leslie\\n * @param {number | Pattern} wet between 0 and 1\\n * @example\\n * n(\\"0,4,7\\").s(\\"supersquare\\").leslie(\\"<0 .4 .6 1>\\").osc()\\n * @superdirtOnly\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1082,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Emulation of a Leslie speaker: speakers rotating in a wooden amplified cabinet.</p>","name":"leslie","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1</p>","name":"wet"}],"examples":["n(\\"0,4,7\\").s(\\"supersquare\\").leslie(\\"<0 .4 .6 1>\\").osc()"],"tags":[{"originalTitle":"superdirtOnly","title":"superdirtonly","text":""}],"longname":"leslie","kind":"member","scope":"global"},{"comment":"/**\\n * Rate of modulation / rotation for leslie effect\\n *\\n * @name lrate\\n * @param {number | Pattern} rate 6.7 for fast, 0.7 for slow\\n * @example\\n * n(\\"0,4,7\\").s(\\"supersquare\\").leslie(1).lrate(\\"<1 2 4 8>\\").osc()\\n * @superdirtOnly\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1093,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Rate of modulation / rotation for leslie effect</p>","name":"lrate","params":[{"type":{"names":["number","Pattern"]},"description":"<p>6.7 for fast, 0.7 for slow</p>","name":"rate"}],"examples":["n(\\"0,4,7\\").s(\\"supersquare\\").leslie(1).lrate(\\"<1 2 4 8>\\").osc()"],"tags":[{"originalTitle":"superdirtOnly","title":"superdirtonly","text":""}],"longname":"lrate","kind":"member","scope":"global"},{"comment":"/**\\n * Physical size of the cabinet in meters. Be careful, it might be slightly larger than your computer. Affects the Doppler amount (pitch warble)\\n *\\n * @name lsize\\n * @param {number | Pattern} meters somewhere between 0 and 1\\n * @example\\n * n(\\"0,4,7\\").s(\\"supersquare\\").leslie(1).lrate(2).lsize(\\"<.1 .5 1>\\").osc()\\n * @superdirtOnly\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1105,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Physical size of the cabinet in meters. Be careful, it might be slightly larger than your computer. Affects the Doppler amount (pitch warble)</p>","name":"lsize","params":[{"type":{"names":["number","Pattern"]},"description":"<p>somewhere between 0 and 1</p>","name":"meters"}],"examples":["n(\\"0,4,7\\").s(\\"supersquare\\").leslie(1).lrate(2).lsize(\\"<.1 .5 1>\\").osc()"],"tags":[{"originalTitle":"superdirtOnly","title":"superdirtonly","text":""}],"longname":"lsize","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the displayed text for an event on the pianoroll\\n *\\n * @name label\\n * @param {string} label text to display\\n */","meta":{"filename":"controls.mjs","lineno":1116,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the displayed text for an event on the pianoroll</p>","name":"label","params":[{"type":{"names":["string"]},"description":"<p>text to display</p>","name":"label"}],"longname":"label","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the default octave of a synth.\\n *\\n * @name octave\\n * @param {number | Pattern} octave octave number\\n * @example\\n * n(\\"0,4,7\\").s('supersquare').octave(\\"<3 4 5 6>\\").osc()\\n * @superDirtOnly\\n */","meta":{"filename":"controls.mjs","lineno":1152,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the default octave of a synth.</p>","name":"octave","params":[{"type":{"names":["number","Pattern"]},"description":"<p>octave number</p>","name":"octave"}],"examples":["n(\\"0,4,7\\").s('supersquare').octave(\\"<3 4 5 6>\\").osc()"],"tags":[{"originalTitle":"superDirtOnly","title":"superdirtonly","text":""}],"longname":"octave","kind":"member","scope":"global"},{"comment":"/**\\n * An \`orbit\` is a global parameter context for patterns. Patterns with the same orbit will share the same global effects.\\n *\\n * @name orbit\\n * @param {number | Pattern} number\\n * @example\\n * stack(\\n *   s(\\"hh*6\\").delay(.5).delaytime(.25).orbit(1),\\n *   s(\\"~ sd ~ sd\\").delay(.5).delaytime(.125).orbit(2)\\n * )\\n */","meta":{"filename":"controls.mjs","lineno":1165,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>An <code>orbit</code> is a global parameter context for patterns. Patterns with the same orbit will share the same global effects.</p>","name":"orbit","params":[{"type":{"names":["number","Pattern"]},"name":"number"}],"examples":["stack(\\n  s(\\"hh*6\\").delay(.5).delaytime(.25).orbit(1),\\n  s(\\"~ sd ~ sd\\").delay(.5).delaytime(.125).orbit(2)\\n)"],"longname":"orbit","kind":"member","scope":"global"},{"comment":"/**\\n * Sets position in stereo.\\n *\\n * @name pan\\n * @param {number | Pattern} pan between 0 and 1, from left to right (assuming stereo), once round a circle (assuming multichannel)\\n * @example\\n * s(\\"[bd hh]*2\\").pan(\\"<.5 1 .5 0>\\")\\n * @example\\n * s(\\"bd rim sd rim bd ~ cp rim\\").pan(sine.slow(2))\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1181,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets position in stereo.</p>","name":"pan","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1, from left to right (assuming stereo), once round a circle (assuming multichannel)</p>","name":"pan"}],"examples":["s(\\"[bd hh]*2\\").pan(\\"<.5 1 .5 0>\\")","s(\\"bd rim sd rim bd ~ cp rim\\").pan(sine.slow(2))"],"longname":"pan","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the level of reverb.\\n *\\n * When using mininotation, you can also optionally add the 'size' parameter, separated by ':'.\\n *\\n * @name room\\n * @param {number | Pattern} level between 0 and 1\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").room(\\"<0 .2 .4 .6 .8 1>\\")\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").room(\\"<0.9:1 0.9:4>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1244,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the level of reverb.</p>\\n<p>When using mininotation, you can also optionally add the 'size' parameter, separated by ':'.</p>","name":"room","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1</p>","name":"level"}],"examples":["s(\\"bd sd [~ bd] sd\\").room(\\"<0 .2 .4 .6 .8 1>\\")","s(\\"bd sd [~ bd] sd\\").room(\\"<0.9:1 0.9:4>\\")"],"longname":"room","kind":"member","scope":"global"},{"comment":"/**\\n * Reverb lowpass starting frequency (in hertz).\\n * When this property is changed, the reverb will be recaculated, so only change this sparsely..\\n *\\n * @name roomlp\\n * @synonyms rlp\\n * @param {number} frequency between 0 and 20000hz\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").room(0.5).rlp(10000)\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").room(0.5).rlp(5000)\\n */","meta":{"filename":"controls.mjs","lineno":1258,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Reverb lowpass starting frequency (in hertz).\\nWhen this property is changed, the reverb will be recaculated, so only change this sparsely..</p>","name":"roomlp","synonyms_text":"rlp","synonyms":["rlp"],"params":[{"type":{"names":["number"]},"description":"<p>between 0 and 20000hz</p>","name":"frequency"}],"examples":["s(\\"bd sd [~ bd] sd\\").room(0.5).rlp(10000)","s(\\"bd sd [~ bd] sd\\").room(0.5).rlp(5000)"],"longname":"roomlp","kind":"member","scope":"global"},{"comment":"/**\\n * Reverb lowpass frequency at -60dB (in hertz).\\n * When this property is changed, the reverb will be recaculated, so only change this sparsely..\\n *\\n * @name roomdim\\n * @synonyms rdim\\n * @param {number} frequency between 0 and 20000hz\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").room(0.5).rlp(10000).rdim(8000)\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").room(0.5).rlp(5000).rdim(400)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1271,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Reverb lowpass frequency at -60dB (in hertz).\\nWhen this property is changed, the reverb will be recaculated, so only change this sparsely..</p>","name":"roomdim","synonyms_text":"rdim","synonyms":["rdim"],"params":[{"type":{"names":["number"]},"description":"<p>between 0 and 20000hz</p>","name":"frequency"}],"examples":["s(\\"bd sd [~ bd] sd\\").room(0.5).rlp(10000).rdim(8000)","s(\\"bd sd [~ bd] sd\\").room(0.5).rlp(5000).rdim(400)"],"longname":"roomdim","kind":"member","scope":"global"},{"comment":"/**\\n * Reverb fade time (in seconds).\\n * When this property is changed, the reverb will be recaculated, so only change this sparsely..\\n *\\n * @name roomfade\\n * @synonyms rfade\\n * @param {number} seconds for the reverb to fade\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").room(0.5).rlp(10000).rfade(0.5)\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").room(0.5).rlp(5000).rfade(4)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1285,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Reverb fade time (in seconds).\\nWhen this property is changed, the reverb will be recaculated, so only change this sparsely..</p>","name":"roomfade","synonyms_text":"rfade","synonyms":["rfade"],"params":[{"type":{"names":["number"]},"description":"<p>for the reverb to fade</p>","name":"seconds"}],"examples":["s(\\"bd sd [~ bd] sd\\").room(0.5).rlp(10000).rfade(0.5)","s(\\"bd sd [~ bd] sd\\").room(0.5).rlp(5000).rfade(4)"],"longname":"roomfade","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the sample to use as an impulse response for the reverb.\\n * @name iresponse\\n * @param {string | Pattern} sample to use as an impulse response\\n * @synonyms ir\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").room(.8).ir(\\"<shaker_large:0 shaker_large:2>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1299,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the sample to use as an impulse response for the reverb.</p>","name":"iresponse","params":[{"type":{"names":["string","Pattern"]},"description":"<p>to use as an impulse response</p>","name":"sample"}],"synonyms_text":"ir","synonyms":["ir"],"examples":["s(\\"bd sd [~ bd] sd\\").room(.8).ir(\\"<shaker_large:0 shaker_large:2>\\")"],"longname":"iresponse","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the room size of the reverb, see \`room\`.\\n * When this property is changed, the reverb will be recaculated, so only change this sparsely..\\n *\\n * @name roomsize\\n * @param {number | Pattern} size between 0 and 10\\n * @synonyms rsize, sz, size\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").room(.8).rsize(1)\\n * @example\\n * s(\\"bd sd [~ bd] sd\\").room(.8).rsize(4)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1309,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the room size of the reverb, see <code>room</code>.\\nWhen this property is changed, the reverb will be recaculated, so only change this sparsely..</p>","name":"roomsize","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 10</p>","name":"size"}],"synonyms_text":"rsize, sz, size","synonyms":["rsize","sz","size"],"examples":["s(\\"bd sd [~ bd] sd\\").room(.8).rsize(1)","s(\\"bd sd [~ bd] sd\\").room(.8).rsize(4)"],"longname":"roomsize","kind":"member","scope":"global"},{"comment":"/**\\n * (Deprecated) Wave shaping distortion. WARNING: can suddenly get unpredictably loud.\\n * Please use distort instead, which has a more predictable response curve\\n * second option in optional array syntax (ex: \\".9:.5\\") applies a postgain to the output\\n *\\n *\\n * @name shape\\n * @param {number | Pattern} distortion between 0 and 1\\n * @example\\n * s(\\"bd sd [~ bd] sd,hh*8\\").shape(\\"<0 .2 .4 .6 .8>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1330,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>(Deprecated) Wave shaping distortion. WARNING: can suddenly get unpredictably loud.\\nPlease use distort instead, which has a more predictable response curve\\nsecond option in optional array syntax (ex: &quot;.9:.5&quot;) applies a postgain to the output</p>","name":"shape","params":[{"type":{"names":["number","Pattern"]},"description":"<p>between 0 and 1</p>","name":"distortion"}],"examples":["s(\\"bd sd [~ bd] sd,hh*8\\").shape(\\"<0 .2 .4 .6 .8>\\")"],"longname":"shape","kind":"member","scope":"global"},{"comment":"/**\\n * Wave shaping distortion. CAUTION: it can get loud.\\n * Second option in optional array syntax (ex: \\".9:.5\\") applies a postgain to the output.\\n * Most useful values are usually between 0 and 10 (depending on source gain). If you are feeling adventurous, you can turn it up to 11 and beyond ;)\\n *\\n * @name distort\\n * @synonyms dist\\n * @param {number | Pattern} distortion\\n * @example\\n * s(\\"bd sd [~ bd] sd,hh*8\\").distort(\\"<0 2 3 10:.5>\\")\\n * @example\\n * note(\\"d1!8\\").s(\\"sine\\").penv(36).pdecay(.12).decay(.23).distort(\\"8:.4\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1343,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Wave shaping distortion. CAUTION: it can get loud.\\nSecond option in optional array syntax (ex: &quot;.9:.5&quot;) applies a postgain to the output.\\nMost useful values are usually between 0 and 10 (depending on source gain). If you are feeling adventurous, you can turn it up to 11 and beyond ;)</p>","name":"distort","synonyms_text":"dist","synonyms":["dist"],"params":[{"type":{"names":["number","Pattern"]},"name":"distortion"}],"examples":["s(\\"bd sd [~ bd] sd,hh*8\\").distort(\\"<0 2 3 10:.5>\\")","note(\\"d1!8\\").s(\\"sine\\").penv(36).pdecay(.12).decay(.23).distort(\\"8:.4\\")"],"longname":"distort","kind":"member","scope":"global"},{"comment":"/**\\n * Dynamics Compressor. The params are \`compressor(\\"threshold:ratio:knee:attack:release\\")\`\\n * More info [here](https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode?retiredLocale=de#instance_properties)\\n *\\n * @name compressor\\n * @example\\n * s(\\"bd sd [~ bd] sd,hh*8\\")\\n * .compressor(\\"-20:20:10:.002:.02\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1358,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Dynamics Compressor. The params are <code>compressor(&quot;threshold:ratio:knee:attack:release&quot;)</code>\\nMore info <a href=\\"https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode?retiredLocale=de#instance_properties\\">here</a></p>","name":"compressor","examples":["s(\\"bd sd [~ bd] sd,hh*8\\")\\n.compressor(\\"-20:20:10:.002:.02\\")"],"longname":"compressor","kind":"member","scope":"global"},{"comment":"/**\\n * Changes the speed of sample playback, i.e. a cheap way of changing pitch.\\n *\\n * @name speed\\n * @param {number | Pattern} speed -inf to inf, negative numbers play the sample backwards.\\n * @example\\n * s(\\"bd*6\\").speed(\\"1 2 4 1 -2 -4\\")\\n * @example\\n * speed(\\"1 1.5*2 [2 1.1]\\").s(\\"piano\\").clip(1)\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1379,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Changes the speed of sample playback, i.e. a cheap way of changing pitch.</p>","name":"speed","params":[{"type":{"names":["number","Pattern"]},"description":"<p>inf to inf, negative numbers play the sample backwards.</p>","name":"speed"}],"examples":["s(\\"bd*6\\").speed(\\"1 2 4 1 -2 -4\\")","speed(\\"1 1.5*2 [2 1.1]\\").s(\\"piano\\").clip(1)"],"longname":"speed","kind":"member","scope":"global"},{"comment":"/**\\n * Changes the speed of sample playback, i.e. a cheap way of changing pitch.\\n *\\n * @name stretch\\n * @param {number | Pattern} factor -inf to inf, negative numbers play the sample backwards.\\n * @example\\n * s(\\"gm_flute\\").stretch(\\"1 2 .5\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1392,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Changes the speed of sample playback, i.e. a cheap way of changing pitch.</p>","name":"stretch","params":[{"type":{"names":["number","Pattern"]},"description":"<p>inf to inf, negative numbers play the sample backwards.</p>","name":"factor"}],"examples":["s(\\"gm_flute\\").stretch(\\"1 2 .5\\")"],"longname":"stretch","kind":"member","scope":"global"},{"comment":"/**\\n * Used in conjunction with \`speed\`, accepts values of \\"r\\" (rate, default behavior), \\"c\\" (cycles), or \\"s\\" (seconds). Using \`unit \\"c\\"\` means \`speed\` will be interpreted in units of cycles, e.g. \`speed \\"1\\"\` means samples will be stretched to fill a cycle. Using \`unit \\"s\\"\` means the playback speed will be adjusted so that the duration is the number of seconds specified by \`speed\`.\\n *\\n * @name unit\\n * @param {number | string | Pattern} unit see description above\\n * @example\\n * speed(\\"1 2 .5 3\\").s(\\"bd\\").unit(\\"c\\").osc()\\n * @superdirtOnly\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1402,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Used in conjunction with <code>speed</code>, accepts values of &quot;r&quot; (rate, default behavior), &quot;c&quot; (cycles), or &quot;s&quot; (seconds). Using <code>unit &quot;c&quot;</code> means <code>speed</code> will be interpreted in units of cycles, e.g. <code>speed &quot;1&quot;</code> means samples will be stretched to fill a cycle. Using <code>unit &quot;s&quot;</code> means the playback speed will be adjusted so that the duration is the number of seconds specified by <code>speed</code>.</p>","name":"unit","params":[{"type":{"names":["number","string","Pattern"]},"description":"<p>see description above</p>","name":"unit"}],"examples":["speed(\\"1 2 .5 3\\").s(\\"bd\\").unit(\\"c\\").osc()"],"tags":[{"originalTitle":"superdirtOnly","title":"superdirtonly","text":""}],"longname":"unit","kind":"member","scope":"global"},{"comment":"/**\\n * Made by Calum Gunn. Reminiscent of some weird mixture of filter, ring-modulator and pitch-shifter. The SuperCollider manual defines Squiz as:\\n *\\n * \\"A simplistic pitch-raising algorithm. It's not meant to sound natural; its sound is reminiscent of some weird mixture of filter, ring-modulator and pitch-shifter, depending on the input. The algorithm works by cutting the signal into fragments (delimited by upwards-going zero-crossings) and squeezing those fragments in the time domain (i.e. simply playing them back faster than they came in), leaving silences inbetween. All the parameters apart from memlen can be modulated.\\"\\n *\\n * @name squiz\\n * @param {number | Pattern} squiz Try passing multiples of 2 to it - 2, 4, 8 etc.\\n * @example\\n * squiz(\\"2 4/2 6 [8 16]\\").s(\\"bd\\").osc()\\n * @superdirtOnly\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1414,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Made by Calum Gunn. Reminiscent of some weird mixture of filter, ring-modulator and pitch-shifter. The SuperCollider manual defines Squiz as:</p>\\n<p>&quot;A simplistic pitch-raising algorithm. It's not meant to sound natural; its sound is reminiscent of some weird mixture of filter, ring-modulator and pitch-shifter, depending on the input. The algorithm works by cutting the signal into fragments (delimited by upwards-going zero-crossings) and squeezing those fragments in the time domain (i.e. simply playing them back faster than they came in), leaving silences inbetween. All the parameters apart from memlen can be modulated.&quot;</p>","name":"squiz","params":[{"type":{"names":["number","Pattern"]},"description":"<p>Try passing multiples of 2 to it - 2, 4, 8 etc.</p>","name":"squiz"}],"examples":["squiz(\\"2 4/2 6 [8 16]\\").s(\\"bd\\").osc()"],"tags":[{"originalTitle":"superdirtOnly","title":"superdirtonly","text":""}],"longname":"squiz","kind":"member","scope":"global"},{"comment":"/**\\n *\\n * Formant filter to make things sound like vowels.\\n *\\n * @name vowel\\n * @param {string | Pattern} vowel You can use a e i o u ae aa oe ue y uh un en an on, corresponding to [a] [e] [i] [o] [u] [æ] [ɑ] [ø] [y] [ɯ] [ʌ] [œ̃] [ɛ̃] [ɑ̃] [ɔ̃]. Aliases: aa = å = ɑ, oe = ø = ö, y = ı, ae = æ.\\n * @example\\n * note(\\"[c2 <eb2 <g2 g1>>]*2\\").s('sawtooth')\\n * .vowel(\\"<a e i <o u>>\\")\\n * @example\\n * s(\\"bd sd mt ht bd [~ cp] ht lt\\").vowel(\\"[a|e|i|o|u]\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1439,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Formant filter to make things sound like vowels.</p>","name":"vowel","params":[{"type":{"names":["string","Pattern"]},"description":"<p>You can use a e i o u ae aa oe ue y uh un en an on, corresponding to [a] [e] [i] [o] [u] [æ] [ɑ] [ø] [y] [ɯ] [ʌ] [œ̃] [ɛ̃] [ɑ̃] [ɔ̃]. Aliases: aa = å = ɑ, oe = ø = ö, y = ı, ae = æ.</p>","name":"vowel"}],"examples":["note(\\"[c2 <eb2 <g2 g1>>]*2\\").s('sawtooth')\\n.vowel(\\"<a e i <o u>>\\")","s(\\"bd sd mt ht bd [~ cp] ht lt\\").vowel(\\"[a|e|i|o|u]\\")"],"longname":"vowel","kind":"member","scope":"global"},{"comment":"/**\\n * Multiplies the duration with the given number. Also cuts samples off at the end if they exceed the duration.\\n *\\n * @name clip\\n * @synonyms legato\\n * @param {number | Pattern} factor >= 0\\n * @example\\n * note(\\"c a f e\\").s(\\"piano\\").clip(\\"<.5 1 2>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1526,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Multiplies the duration with the given number. Also cuts samples off at the end if they exceed the duration.</p>","name":"clip","synonyms_text":"legato","synonyms":["legato"],"params":[{"type":{"names":["number","Pattern"]},"description":"<blockquote>\\n<p>= 0</p>\\n</blockquote>","name":"factor"}],"examples":["note(\\"c a f e\\").s(\\"piano\\").clip(\\"<.5 1 2>\\")"],"longname":"clip","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the duration of the event in cycles. Similar to clip / legato, it also cuts samples off at the end if they exceed the duration.\\n *\\n * @name duration\\n * @synonyms dur\\n * @param {number | Pattern} seconds >= 0\\n * @example\\n * note(\\"c a f e\\").s(\\"piano\\").dur(\\"<.5 1 2>\\")\\n *\\n */","meta":{"filename":"controls.mjs","lineno":1538,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the duration of the event in cycles. Similar to clip / legato, it also cuts samples off at the end if they exceed the duration.</p>","name":"duration","synonyms_text":"dur","synonyms":["dur"],"params":[{"type":{"names":["number","Pattern"]},"description":"<blockquote>\\n<p>= 0</p>\\n</blockquote>","name":"seconds"}],"examples":["note(\\"c a f e\\").s(\\"piano\\").dur(\\"<.5 1 2>\\")"],"longname":"duration","kind":"member","scope":"global"},{"comment":"/**\\n * Sets the color of the hap in visualizations like pianoroll or highlighting.\\n * @name color\\n * @synonyms colour\\n * @param {string} color Hexadecimal or CSS color name\\n */","meta":{"filename":"controls.mjs","lineno":1568,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets the color of the hap in visualizations like pianoroll or highlighting.</p>","name":"color","synonyms_text":"colour","synonyms":["colour"],"params":[{"type":{"names":["string"]},"description":"<p>Hexadecimal or CSS color name</p>","name":"color"}],"longname":"color","kind":"member","scope":"global"},{"comment":"/**\\n * ADSR envelope: Combination of Attack, Decay, Sustain, and Release.\\n *\\n * @name adsr\\n * @param {number | Pattern} time attack time in seconds\\n * @param {number | Pattern} time decay time in seconds\\n * @param {number | Pattern} gain sustain level (0 to 1)\\n * @param {number | Pattern} time release time in seconds\\n * @example\\n * note(\\"[c3 bb2 f3 eb3]*2\\").sound(\\"sawtooth\\").lpf(600).adsr(\\".1:.1:.5:.2\\")\\n */","meta":{"filename":"controls.mjs","lineno":1581,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>ADSR envelope: Combination of Attack, Decay, Sustain, and Release.</p>","name":"adsr","params":[{"type":{"names":["number","Pattern"]},"description":"<p>attack time in seconds</p>","name":"time"},{"type":{"names":["number","Pattern"]},"description":"<p>decay time in seconds</p>","name":"time"},{"type":{"names":["number","Pattern"]},"description":"<p>sustain level (0 to 1)</p>","name":"gain"},{"type":{"names":["number","Pattern"]},"description":"<p>release time in seconds</p>","name":"time"}],"examples":["note(\\"[c3 bb2 f3 eb3]*2\\").sound(\\"sawtooth\\").lpf(600).adsr(\\".1:.1:.5:.2\\")"],"longname":"adsr","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI channel: Sets the MIDI channel for the event.\\n *\\n * @name midichan\\n * @param {number | Pattern} channel MIDI channel number (0-15)\\n * @example\\n * note(\\"c4\\").midichan(1).midi()\\n */","meta":{"filename":"controls.mjs","lineno":1615,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI channel: Sets the MIDI channel for the event.</p>","name":"midichan","params":[{"type":{"names":["number","Pattern"]},"description":"<p>MIDI channel number (0-15)</p>","name":"channel"}],"examples":["note(\\"c4\\").midichan(1).midi()"],"longname":"midichan","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI port: Sets the MIDI port for the event.\\n *\\n * @name midiport\\n * @param {number | Pattern} port MIDI port\\n * @example\\n * note(\\"c a f e\\").midiport(\\"<0 1 2 3>\\").midi()\\n */","meta":{"filename":"controls.mjs","lineno":1627,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI port: Sets the MIDI port for the event.</p>","name":"midiport","params":[{"type":{"names":["number","Pattern"]},"description":"<p>MIDI port</p>","name":"port"}],"examples":["note(\\"c a f e\\").midiport(\\"<0 1 2 3>\\").midi()"],"longname":"midiport","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI command: Sends a MIDI command message.\\n *\\n * @name midicmd\\n * @param {number | Pattern} command MIDI command\\n * @example\\n * midicmd(\\"clock*48,<start stop>/2\\").midi()\\n */","meta":{"filename":"controls.mjs","lineno":1637,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI command: Sends a MIDI command message.</p>","name":"midicmd","params":[{"type":{"names":["number","Pattern"]},"description":"<p>MIDI command</p>","name":"command"}],"examples":["midicmd(\\"clock*48,<start stop>/2\\").midi()"],"longname":"midicmd","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI control: Sends a MIDI control change message.\\n *\\n * @name control\\n * @param {number | Pattern}  MIDI control number (0-127)\\n * @param {number | Pattern}  MIDI controller value (0-127)\\n */","meta":{"filename":"controls.mjs","lineno":1647,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI control: Sends a MIDI control change message.</p>","name":"control","params":[{"type":{"names":["number","Pattern"]},"description":"<p>control number (0-127)</p>","name":"MIDI"},{"type":{"names":["number","Pattern"]},"description":"<p>controller value (0-127)</p>","name":"MIDI"}],"longname":"control","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI control number: Sends a MIDI control change message.\\n *\\n * @name ccn\\n * @param {number | Pattern}  MIDI control number (0-127)\\n */","meta":{"filename":"controls.mjs","lineno":1662,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI control number: Sends a MIDI control change message.</p>","name":"ccn","params":[{"type":{"names":["number","Pattern"]},"description":"<p>control number (0-127)</p>","name":"MIDI"}],"longname":"ccn","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI control value: Sends a MIDI control change message.\\n *\\n * @name ccv\\n * @param {number | Pattern}  MIDI control value (0-127)\\n */","meta":{"filename":"controls.mjs","lineno":1669,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI control value: Sends a MIDI control change message.</p>","name":"ccv","params":[{"type":{"names":["number","Pattern"]},"description":"<p>control value (0-127)</p>","name":"MIDI"}],"longname":"ccv","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI NRPN non-registered parameter number: Sends a MIDI NRPN non-registered parameter number message.\\n * @name nrpnn\\n * @param {number | Pattern} nrpnn MIDI NRPN non-registered parameter number (0-127)\\n * @example\\n * note(\\"c4\\").nrpnn(\\"1:8\\").nrpv(\\"123\\").midichan(1).midi()\\n */","meta":{"filename":"controls.mjs","lineno":1679,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI NRPN non-registered parameter number: Sends a MIDI NRPN non-registered parameter number message.</p>","name":"nrpnn","params":[{"type":{"names":["number","Pattern"]},"description":"<p>MIDI NRPN non-registered parameter number (0-127)</p>","name":"nrpnn"}],"examples":["note(\\"c4\\").nrpnn(\\"1:8\\").nrpv(\\"123\\").midichan(1).midi()"],"longname":"nrpnn","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI NRPN non-registered parameter value: Sends a MIDI NRPN non-registered parameter value message.\\n * @name nrpv\\n * @param {number | Pattern} nrpv MIDI NRPN non-registered parameter value (0-127)\\n * @example\\n * note(\\"c4\\").nrpnn(\\"1:8\\").nrpv(\\"123\\").midichan(1).midi()\\n */","meta":{"filename":"controls.mjs","lineno":1687,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI NRPN non-registered parameter value: Sends a MIDI NRPN non-registered parameter value message.</p>","name":"nrpv","params":[{"type":{"names":["number","Pattern"]},"description":"<p>MIDI NRPN non-registered parameter value (0-127)</p>","name":"nrpv"}],"examples":["note(\\"c4\\").nrpnn(\\"1:8\\").nrpv(\\"123\\").midichan(1).midi()"],"longname":"nrpv","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI program number: Sends a MIDI program change message.\\n *\\n * @name progNum\\n * @param {number | Pattern} program MIDI program number (0-127)\\n * @example\\n * note(\\"c4\\").progNum(10).midichan(1).midi()\\n */","meta":{"filename":"controls.mjs","lineno":1696,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI program number: Sends a MIDI program change message.</p>","name":"progNum","params":[{"type":{"names":["number","Pattern"]},"description":"<p>MIDI program number (0-127)</p>","name":"program"}],"examples":["note(\\"c4\\").progNum(10).midichan(1).midi()"],"longname":"progNum","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI sysex: Sends a MIDI sysex message.\\n * @name sysex\\n * @param {number | Pattern} id Sysex ID\\n * @param {number | Pattern} data Sysex data\\n * @example\\n * note(\\"c4\\").sysex([\\"0x77\\", \\"0x01:0x02:0x03:0x04\\"]).midichan(1).midi()\\n */","meta":{"filename":"controls.mjs","lineno":1706,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI sysex: Sends a MIDI sysex message.</p>","name":"sysex","params":[{"type":{"names":["number","Pattern"]},"description":"<p>Sysex ID</p>","name":"id"},{"type":{"names":["number","Pattern"]},"description":"<p>Sysex data</p>","name":"data"}],"examples":["note(\\"c4\\").sysex([\\"0x77\\", \\"0x01:0x02:0x03:0x04\\"]).midichan(1).midi()"],"longname":"sysex","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI sysex ID: Sends a MIDI sysex identifier message.\\n * @name sysexid\\n * @param {number | Pattern} id Sysex ID\\n * @example\\n * note(\\"c4\\").sysexid(\\"0x77\\").sysexdata(\\"0x01:0x02:0x03:0x04\\").midichan(1).midi()\\n */","meta":{"filename":"controls.mjs","lineno":1721,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI sysex ID: Sends a MIDI sysex identifier message.</p>","name":"sysexid","params":[{"type":{"names":["number","Pattern"]},"description":"<p>Sysex ID</p>","name":"id"}],"examples":["note(\\"c4\\").sysexid(\\"0x77\\").sysexdata(\\"0x01:0x02:0x03:0x04\\").midichan(1).midi()"],"longname":"sysexid","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI sysex data: Sends a MIDI sysex message.\\n * @name sysexdata\\n * @param {number | Pattern} data Sysex data\\n * @example\\n * note(\\"c4\\").sysexid(\\"0x77\\").sysexdata(\\"0x01:0x02:0x03:0x04\\").midichan(1).midi()\\n */","meta":{"filename":"controls.mjs","lineno":1729,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI sysex data: Sends a MIDI sysex message.</p>","name":"sysexdata","params":[{"type":{"names":["number","Pattern"]},"description":"<p>Sysex data</p>","name":"data"}],"examples":["note(\\"c4\\").sysexid(\\"0x77\\").sysexdata(\\"0x01:0x02:0x03:0x04\\").midichan(1).midi()"],"longname":"sysexdata","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI pitch bend: Sends a MIDI pitch bend message.\\n * @name midibend\\n * @param {number | Pattern} midibend MIDI pitch bend (-1 - 1)\\n * @example\\n * note(\\"c4\\").midibend(sine.slow(4).range(-0.4,0.4)).midi()\\n */","meta":{"filename":"controls.mjs","lineno":1738,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI pitch bend: Sends a MIDI pitch bend message.</p>","name":"midibend","params":[{"type":{"names":["number","Pattern"]},"description":"<p>MIDI pitch bend (-1 - 1)</p>","name":"midibend"}],"examples":["note(\\"c4\\").midibend(sine.slow(4).range(-0.4,0.4)).midi()"],"longname":"midibend","kind":"member","scope":"global"},{"comment":"/**\\n * MIDI key after touch: Sends a MIDI key after touch message.\\n * @name miditouch\\n * @param {number | Pattern} miditouch MIDI key after touch (0-1)\\n * @example\\n * note(\\"c4\\").miditouch(sine.slow(4).range(0,1)).midi()\\n */","meta":{"filename":"controls.mjs","lineno":1746,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>MIDI key after touch: Sends a MIDI key after touch message.</p>","name":"miditouch","params":[{"type":{"names":["number","Pattern"]},"description":"<p>MIDI key after touch (0-1)</p>","name":"miditouch"}],"examples":["note(\\"c4\\").miditouch(sine.slow(4).range(0,1)).midi()"],"longname":"miditouch","kind":"member","scope":"global"},{"comment":"/**\\n * Sets properties in a batch.\\n *\\n * @name as\\n * @param {String | Array} mapping the control names that are set\\n * @example\\n * \\"c:.5 a:1 f:.25 e:.8\\".as(\\"note:clip\\")\\n * @example\\n * \\"{0@2 0.25 0 0.5 .3 .5}%8\\".as(\\"begin\\").s(\\"sax_vib\\").clip(1)\\n */","meta":{"filename":"controls.mjs","lineno":1765,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Sets properties in a batch.</p>","name":"as","params":[{"type":{"names":["String","Array"]},"description":"<p>the control names that are set</p>","name":"mapping"}],"examples":["\\"c:.5 a:1 f:.25 e:.8\\".as(\\"note:clip\\")","\\"{0@2 0.25 0 0.5 .3 .5}%8\\".as(\\"begin\\").s(\\"sax_vib\\").clip(1)"],"longname":"as","kind":"member","scope":"global"},{"comment":"/**\\n * Allows you to scrub an audio file like a tape loop by passing values that represents the position in the audio file\\n * in the optional array syntax ex: \\"0.5:2\\", the second value controls the speed of playback\\n * @name scrub\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * samples('github:switchangel/pad')\\n * s(\\"swpad:0\\").scrub(\\"{0.1!2 .25@3 0.7!2 <0.8:1.5>}%8\\")\\n * @example\\n * samples('github:yaxu/clean-breaks/main');\\n * s(\\"amen/4\\").fit().scrub(\\"{0@3 0@2 4@3}%8\\".div(16))\\n */","meta":{"filename":"controls.mjs","lineno":1784,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Allows you to scrub an audio file like a tape loop by passing values that represents the position in the audio file\\nin the optional array syntax ex: &quot;0.5:2&quot;, the second value controls the speed of playback</p>","name":"scrub","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["samples('github:switchangel/pad')\\ns(\\"swpad:0\\").scrub(\\"{0.1!2 .25@3 0.7!2 <0.8:1.5>}%8\\")","samples('github:yaxu/clean-breaks/main');\\ns(\\"amen/4\\").fit().scrub(\\"{0@3 0@2 4@3}%8\\".div(16))"],"scope":"static","longname":"Pattern.scrub","kind":"member"},{"comment":"/**\\n * Intended for a debugging, drawLine renders the pattern as a string, where each character represents the same time span.\\n * Should only be used with single characters as values, otherwise the character slots will be messed up.\\n * Character legend:\\n *\\n * - \\"|\\" cycle separator\\n * - \\"-\\" hold previous value\\n * - \\".\\" silence\\n *\\n * @param {Pattern} pattern the pattern to use\\n * @param {number} chars max number of characters (approximately)\\n * @returns string\\n * @example\\n * const line = drawLine(\\"0 [1 2 3]\\", 10); // |0--123|0--123\\n * console.log(line);\\n * silence;\\n */","meta":{"range":[1426,2796],"filename":"drawLine.mjs","lineno":26,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100018942","name":"drawLine","type":"FunctionDeclaration","paramnames":["pat","chars"]},"vars":{"cycle":"drawLine~cycle","pos":"drawLine~pos","lines":"drawLine~lines","emptyLine":"drawLine~emptyLine","haps":"drawLine~haps","durations":"drawLine~durations","":null,"charFraction":"drawLine~charFraction","totalSlots":"drawLine~totalSlots","i":"drawLine~i","undefined":null,"matches":"drawLine~matches","missingLines":"drawLine~missingLines"}},"description":"<p>Intended for a debugging, drawLine renders the pattern as a string, where each character represents the same time span.\\nShould only be used with single characters as values, otherwise the character slots will be messed up.\\nCharacter legend:</p>\\n<ul>\\n<li>&quot;|&quot; cycle separator</li>\\n<li>&quot;-&quot; hold previous value</li>\\n<li>&quot;.&quot; silence</li>\\n</ul>","params":[{"type":{"names":["Pattern"]},"description":"<p>the pattern to use</p>","name":"pattern"},{"type":{"names":["number"]},"description":"<p>max number of characters (approximately)</p>","name":"chars"}],"returns":[{"description":"<p>string</p>"}],"examples":["const line = drawLine(\\"0 [1 2 3]\\", 10); // |0--123|0--123\\nconsole.log(line);\\nsilence;"],"name":"drawLine","longname":"drawLine","kind":"function","scope":"global"},{"comment":"/**\\n * Changes the structure of the pattern to form an euclidean rhythm.\\n * Euclidian rhythms are rhythms obtained using the greatest common\\n * divisor of two numbers.  They were described in 2004 by Godfried\\n * Toussaint, a canadian computer scientist.  Euclidian rhythms are\\n * really useful for computer/algorithmic music because they can\\n * describe a large number of rhythms with a couple of numbers.\\n *\\n * @memberof Pattern\\n * @name euclid\\n * @param {number} pulses the number of onsets / beats\\n * @param {number} steps the number of steps to fill\\n * @returns Pattern\\n * @example\\n * // The Cuban tresillo pattern.\\n * note(\\"c3\\").euclid(3,8)\\n */","meta":{"filename":"euclid.mjs","lineno":57,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Changes the structure of the pattern to form an euclidean rhythm.\\nEuclidian rhythms are rhythms obtained using the greatest common\\ndivisor of two numbers.  They were described in 2004 by Godfried\\nToussaint, a canadian computer scientist.  Euclidian rhythms are\\nreally useful for computer/algorithmic music because they can\\ndescribe a large number of rhythms with a couple of numbers.</p>","memberof":"Pattern","name":"euclid","params":[{"type":{"names":["number"]},"description":"<p>the number of onsets / beats</p>","name":"pulses"},{"type":{"names":["number"]},"description":"<p>the number of steps to fill</p>","name":"steps"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["// The Cuban tresillo pattern.\\nnote(\\"c3\\").euclid(3,8)"],"scope":"static","longname":"Pattern.euclid","kind":"member"},{"comment":"/**\\n * Like \`euclid\`, but has an additional parameter for 'rotating' the resulting sequence.\\n * @memberof Pattern\\n * @name euclidRot\\n * @param {number} pulses the number of onsets / beats\\n * @param {number} steps the number of steps to fill\\n * @param {number} rotation offset in steps\\n * @returns Pattern\\n * @example\\n * // A Samba rhythm necklace from Brazil\\n * note(\\"c3\\").euclidRot(3,16,14)\\n */","meta":{"filename":"euclid.mjs","lineno":75,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Like <code>euclid</code>, but has an additional parameter for 'rotating' the resulting sequence.</p>","memberof":"Pattern","name":"euclidRot","params":[{"type":{"names":["number"]},"description":"<p>the number of onsets / beats</p>","name":"pulses"},{"type":{"names":["number"]},"description":"<p>the number of steps to fill</p>","name":"steps"},{"type":{"names":["number"]},"description":"<p>offset in steps</p>","name":"rotation"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["// A Samba rhythm necklace from Brazil\\nnote(\\"c3\\").euclidRot(3,16,14)"],"scope":"static","longname":"Pattern.euclidRot","kind":"member"},{"comment":"/**\\n * @example // A thirteenth century Persian rhythm called Khafif-e-ramal.\\n * note(\\"c3\\").euclid(2,5)\\n * @example // The archetypal pattern of the Cumbia from Colombia, as well as a Calypso rhythm from Trinidad.\\n * note(\\"c3\\").euclid(3,4)\\n * @example // Another thirteenth century Persian rhythm by the name of Khafif-e-ramal, as well as a Rumanian folk-dance rhythm.\\n * note(\\"c3\\").euclidRot(3,5,2)\\n * @example // A Ruchenitza rhythm used in a Bulgarian folk-dance.\\n * note(\\"c3\\").euclid(3,7)\\n * @example // The Cuban tresillo pattern.\\n * note(\\"c3\\").euclid(3,8)\\n * @example // Another Ruchenitza Bulgarian folk-dance rhythm.\\n * note(\\"c3\\").euclid(4,7)\\n * @example // The Aksak rhythm of Turkey.\\n * note(\\"c3\\").euclid(4,9)\\n * @example // The metric pattern used by Frank Zappa in his piece titled Outside Now.\\n * note(\\"c3\\").euclid(4,11)\\n * @example // Yields the York-Samai pattern, a popular Arab rhythm.\\n * note(\\"c3\\").euclid(5,6)\\n * @example // The Nawakhat pattern, another popular Arab rhythm.\\n * note(\\"c3\\").euclid(5,7)\\n * @example // The Cuban cinquillo pattern.\\n * note(\\"c3\\").euclid(5,8)\\n * @example // A popular Arab rhythm called Agsag-Samai.\\n * note(\\"c3\\").euclid(5,9)\\n * @example // The metric pattern used by Moussorgsky in Pictures at an Exhibition.\\n * note(\\"c3\\").euclid(5,11)\\n * @example // The Venda clapping pattern of a South African children’s song.\\n * note(\\"c3\\").euclid(5,12)\\n * @example // The Bossa-Nova rhythm necklace of Brazil.\\n * note(\\"c3\\").euclid(5,16)\\n * @example // A typical rhythm played on the Bendir (frame drum).\\n * note(\\"c3\\").euclid(7,8)\\n * @example // A common West African bell pattern.\\n * note(\\"c3\\").euclid(7,12)\\n * @example // A Samba rhythm necklace from Brazil.\\n * note(\\"c3\\").euclidRot(7,16,14)\\n * @example // A rhythm necklace used in the Central African Republic.\\n * note(\\"c3\\").euclid(9,16)\\n * @example // A rhythm necklace of the Aka Pygmies of Central Africa.\\n * note(\\"c3\\").euclidRot(11,24,14)\\n * @example // Another rhythm necklace of the Aka Pygmies of the upper Sangha.\\n * note(\\"c3\\").euclidRot(13,24,5)\\n */","meta":{"range":[5273,5425],"filename":"euclid.mjs","lineno":133,"columnno":6,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100019446","name":"_euclidRot","type":"FunctionExpression"},"vars":{"b":"_euclidRot~b"}},"examples":["// A thirteenth century Persian rhythm called Khafif-e-ramal.\\nnote(\\"c3\\").euclid(2,5)","// The archetypal pattern of the Cumbia from Colombia, as well as a Calypso rhythm from Trinidad.\\nnote(\\"c3\\").euclid(3,4)","// Another thirteenth century Persian rhythm by the name of Khafif-e-ramal, as well as a Rumanian folk-dance rhythm.\\nnote(\\"c3\\").euclidRot(3,5,2)","// A Ruchenitza rhythm used in a Bulgarian folk-dance.\\nnote(\\"c3\\").euclid(3,7)","// The Cuban tresillo pattern.\\nnote(\\"c3\\").euclid(3,8)","// Another Ruchenitza Bulgarian folk-dance rhythm.\\nnote(\\"c3\\").euclid(4,7)","// The Aksak rhythm of Turkey.\\nnote(\\"c3\\").euclid(4,9)","// The metric pattern used by Frank Zappa in his piece titled Outside Now.\\nnote(\\"c3\\").euclid(4,11)","// Yields the York-Samai pattern, a popular Arab rhythm.\\nnote(\\"c3\\").euclid(5,6)","// The Nawakhat pattern, another popular Arab rhythm.\\nnote(\\"c3\\").euclid(5,7)","// The Cuban cinquillo pattern.\\nnote(\\"c3\\").euclid(5,8)","// A popular Arab rhythm called Agsag-Samai.\\nnote(\\"c3\\").euclid(5,9)","// The metric pattern used by Moussorgsky in Pictures at an Exhibition.\\nnote(\\"c3\\").euclid(5,11)","// The Venda clapping pattern of a South African children’s song.\\nnote(\\"c3\\").euclid(5,12)","// The Bossa-Nova rhythm necklace of Brazil.\\nnote(\\"c3\\").euclid(5,16)","// A typical rhythm played on the Bendir (frame drum).\\nnote(\\"c3\\").euclid(7,8)","// A common West African bell pattern.\\nnote(\\"c3\\").euclid(7,12)","// A Samba rhythm necklace from Brazil.\\nnote(\\"c3\\").euclidRot(7,16,14)","// A rhythm necklace used in the Central African Republic.\\nnote(\\"c3\\").euclid(9,16)","// A rhythm necklace of the Aka Pygmies of Central Africa.\\nnote(\\"c3\\").euclidRot(11,24,14)","// Another rhythm necklace of the Aka Pygmies of the upper Sangha.\\nnote(\\"c3\\").euclidRot(13,24,5)"],"name":"_euclidRot","longname":"_euclidRot","kind":"function","scope":"global","params":[]},{"comment":"/**\\n * Similar to \`euclid\`, but each pulse is held until the next pulse,\\n * so there will be no gaps.\\n * @name euclidLegato\\n * @memberof Pattern\\n * @param {number} pulses the number of onsets / beats\\n * @param {number} steps the number of steps to fill\\n * @example\\n * note(\\"c3\\").euclidLegato(3,8)\\n */","meta":{"filename":"euclid.mjs","lineno":149,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Similar to <code>euclid</code>, but each pulse is held until the next pulse,\\nso there will be no gaps.</p>","name":"euclidLegato","memberof":"Pattern","params":[{"type":{"names":["number"]},"description":"<p>the number of onsets / beats</p>","name":"pulses"},{"type":{"names":["number"]},"description":"<p>the number of steps to fill</p>","name":"steps"}],"examples":["note(\\"c3\\").euclidLegato(3,8)"],"scope":"static","longname":"Pattern.euclidLegato","kind":"member"},{"comment":"/**\\n * Similar to \`euclid\`, but each pulse is held until the next pulse,\\n * so there will be no gaps, and has an additional parameter for 'rotating'\\n * the resulting sequence\\n * @name euclidLegatoRot\\n * @memberof Pattern\\n * @param {number} pulses the number of onsets / beats\\n * @param {number} steps the number of steps to fill\\n * @param {number} rotation offset in steps\\n * @example\\n * note(\\"c3\\").euclidLegatoRot(3,5,2)\\n */","meta":{"filename":"euclid.mjs","lineno":177,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Similar to <code>euclid</code>, but each pulse is held until the next pulse,\\nso there will be no gaps, and has an additional parameter for 'rotating'\\nthe resulting sequence</p>","name":"euclidLegatoRot","memberof":"Pattern","params":[{"type":{"names":["number"]},"description":"<p>the number of onsets / beats</p>","name":"pulses"},{"type":{"names":["number"]},"description":"<p>the number of steps to fill</p>","name":"steps"},{"type":{"names":["number"]},"description":"<p>offset in steps</p>","name":"rotation"}],"examples":["note(\\"c3\\").euclidLegatoRot(3,5,2)"],"scope":"static","longname":"Pattern.euclidLegatoRot","kind":"member"},{"comment":"/** @class Class representing a pattern. */","meta":{"range":[1671,26458],"filename":"pattern.mjs","lineno":42,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100021927","name":"exports.Pattern","type":"ClassDeclaration"}},"name":"Pattern","longname":"Pattern","kind":"class","classdesc":"<p>Class representing a pattern.</p>","scope":"global","description":"<p>Create a pattern. As an end user, you will most likely not create a Pattern directly.</p>","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"memberof":"Pattern","params":[{"type":{"names":["function"]},"description":"<p>The function that maps a <code>State</code> to an array of <code>Hap</code>.</p>","name":"query"}]},{"comment":"/**\\n   * Returns a new pattern, with the function applied to the value of\\n   * each hap. It has the alias \`fmap\`.\\n   * @synonyms fmap\\n   * @param {Function} func to to apply to the value\\n   * @returns Pattern\\n   * @example\\n   * \\"0 1 2\\".withValue(v => v + 10).log()\\n   */","meta":{"range":[2978,3147],"filename":"pattern.mjs","lineno":91,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100022035","name":"Pattern#withValue","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>Returns a new pattern, with the function applied to the value of\\neach hap. It has the alias <code>fmap</code>.</p>","synonyms_text":"fmap","synonyms":["fmap"],"params":[{"type":{"names":["function"]},"description":"<p>to to apply to the value</p>","name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["\\"0 1 2\\".withValue(v => v + 10).log()"],"name":"withValue","longname":"Pattern#withValue","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * see \`withValue\`\\n   * @noAutocomplete\\n   */","meta":{"range":[3350,3399],"filename":"pattern.mjs","lineno":109,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100022092","name":"Pattern#fmap","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>see <code>withValue</code></p>","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"fmap","longname":"Pattern#fmap","kind":"function","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\n   * Assumes 'this' is a pattern of functions, and given a function to\\n   * resolve wholes, applies a given pattern of values to that\\n   * pattern of functions.\\n   * @param {Function} whole_func\\n   * @param {Function} func\\n   * @noAutocomplete\\n   * @returns Pattern\\n   */","meta":{"range":[3681,4423],"filename":"pattern.mjs","lineno":122,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100022103","name":"Pattern#appWhole","type":"MethodDefinition","paramnames":["whole_func","pat_val"]},"vars":{"":null}},"description":"<p>Assumes 'this' is a pattern of functions, and given a function to\\nresolve wholes, applies a given pattern of values to that\\npattern of functions.</p>","params":[{"type":{"names":["function"]},"name":"whole_func"},{"type":{"names":["function"]},"name":"func"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"returns":[{"description":"<p>Pattern</p>"}],"name":"appWhole","longname":"Pattern#appWhole","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * When this method is called on a pattern of functions, it matches its haps\\n   * with those in the given pattern of values.  A new pattern is returned, with\\n   * each matching value applied to the corresponding function.\\n   *\\n   * In this \`_appBoth\` variant, where timespans of the function and value haps\\n   * are not the same but do intersect, the resulting hap has a timespan of the\\n   * intersection. This applies to both the part and the whole timespan.\\n   * @param {Pattern} pat_val\\n   * @noAutocomplete\\n   * @returns Pattern\\n   */","meta":{"range":[4974,5398],"filename":"pattern.mjs","lineno":158,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100022210","name":"Pattern#appBoth","type":"MethodDefinition","paramnames":["pat_val"]},"vars":{"":null}},"description":"<p>When this method is called on a pattern of functions, it matches its haps\\nwith those in the given pattern of values.  A new pattern is returned, with\\neach matching value applied to the corresponding function.</p>\\n<p>In this <code>_appBoth</code> variant, where timespans of the function and value haps\\nare not the same but do intersect, the resulting hap has a timespan of the\\nintersection. This applies to both the part and the whole timespan.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat_val"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"returns":[{"description":"<p>Pattern</p>"}],"name":"appBoth","longname":"Pattern#appBoth","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * As with \`appBoth\`, but the \`whole\` timespan is not the intersection,\\n   * but the timespan from the function of patterns that this method is called\\n   * on. In practice, this means that the pattern structure, including onsets,\\n   * are preserved from the pattern of functions (often referred to as the left\\n   * hand or inner pattern).\\n   * @param {Pattern} pat_val\\n   * @noAutocomplete\\n   * @returns Pattern\\n   */","meta":{"range":[5828,6632],"filename":"pattern.mjs","lineno":185,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100022270","name":"Pattern#appLeft","type":"MethodDefinition","paramnames":["pat_val"]},"vars":{"":null}},"description":"<p>As with <code>appBoth</code>, but the <code>whole</code> timespan is not the intersection,\\nbut the timespan from the function of patterns that this method is called\\non. In practice, this means that the pattern structure, including onsets,\\nare preserved from the pattern of functions (often referred to as the left\\nhand or inner pattern).</p>","params":[{"type":{"names":["Pattern"]},"name":"pat_val"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"returns":[{"description":"<p>Pattern</p>"}],"name":"appLeft","longname":"Pattern#appLeft","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * As with \`appLeft\`, but \`whole\` timespans are instead taken from the\\n   * pattern of values, i.e. structure is preserved from the right hand/outer\\n   * pattern.\\n   * @param {Pattern} pat_val\\n   * @noAutocomplete\\n   * @returns Pattern\\n   */","meta":{"range":[6886,7694],"filename":"pattern.mjs","lineno":218,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100022392","name":"Pattern#appRight","type":"MethodDefinition","paramnames":["pat_val"]},"vars":{"":null}},"description":"<p>As with <code>appLeft</code>, but <code>whole</code> timespans are instead taken from the\\npattern of values, i.e. structure is preserved from the right hand/outer\\npattern.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat_val"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"returns":[{"description":"<p>Pattern</p>"}],"name":"appRight","longname":"Pattern#appRight","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Query haps inside the given time span.\\n   *\\n   * @param {Fraction | number} begin from time\\n   * @param {Fraction | number} end to time\\n   * @returns Hap[]\\n   * @example\\n   * const pattern = sequence('a', ['b', 'c'])\\n   * const haps = pattern.queryArc(0, 1)\\n   * console.log(haps)\\n   * silence\\n   * @noAutocomplete\\n   */","meta":{"range":[13330,13546],"filename":"pattern.mjs","lineno":414,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023072","name":"Pattern#queryArc","type":"MethodDefinition","paramnames":["begin","end","controls"]},"vars":{"":null}},"description":"<p>Query haps inside the given time span.</p>","params":[{"type":{"names":["Fraction","number"]},"description":"<p>from time</p>","name":"begin"},{"type":{"names":["Fraction","number"]},"description":"<p>to time</p>","name":"end"}],"returns":[{"description":"<p>Hap[]</p>"}],"examples":["const pattern = sequence('a', ['b', 'c'])\\nconst haps = pattern.queryArc(0, 1)\\nconsole.log(haps)\\nsilence"],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"queryArc","longname":"Pattern#queryArc","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Returns a new pattern, with queries split at cycle boundaries. This makes\\n   * some calculations easier to express, as all haps are then constrained to\\n   * happen within a cycle.\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[13790,13990],"filename":"pattern.mjs","lineno":430,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023108","name":"Pattern#splitQueries","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Returns a new pattern, with queries split at cycle boundaries. This makes\\nsome calculations easier to express, as all haps are then constrained to\\nhappen within a cycle.</p>","returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"splitQueries","longname":"Pattern#splitQueries","kind":"function","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\n   * Returns a new pattern, where the given function is applied to the query\\n   * timespan before passing it to the original pattern.\\n   * @param {Function} func the function to apply\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[14233,14327],"filename":"pattern.mjs","lineno":445,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023148","name":"Pattern#withQuerySpan","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>Returns a new pattern, where the given function is applied to the query\\ntimespan before passing it to the original pattern.</p>","params":[{"type":{"names":["function"]},"description":"<p>the function to apply</p>","name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"withQuerySpan","longname":"Pattern#withQuerySpan","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * As with \`withQuerySpan\`, but the function is applied to both the\\n   * begin and end time of the query timespan.\\n   * @param {Function} func the function to apply\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[14787,14906],"filename":"pattern.mjs","lineno":467,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023204","name":"Pattern#withQueryTime","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>As with <code>withQuerySpan</code>, but the function is applied to both the\\nbegin and end time of the query timespan.</p>","params":[{"type":{"names":["function"]},"description":"<p>the function to apply</p>","name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"withQueryTime","longname":"Pattern#withQueryTime","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Similar to \`withQuerySpan\`, but the function is applied to the timespans\\n   * of all haps returned by pattern queries (both \`part\` timespans, and where\\n   * present, \`whole\` timespans).\\n   * @param {Function} func\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[15184,15294],"filename":"pattern.mjs","lineno":479,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023229","name":"Pattern#withHapSpan","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>Similar to <code>withQuerySpan</code>, but the function is applied to the timespans\\nof all haps returned by pattern queries (both <code>part</code> timespans, and where\\npresent, <code>whole</code> timespans).</p>","params":[{"type":{"names":["function"]},"name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"withHapSpan","longname":"Pattern#withHapSpan","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * As with \`withHapSpan\`, but the function is applied to both the\\n   * begin and end time of the hap timespans.\\n   * @param {Function} func the function to apply\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[15517,15600],"filename":"pattern.mjs","lineno":490,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023254","name":"Pattern#withHapTime","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>As with <code>withHapSpan</code>, but the function is applied to both the\\nbegin and end time of the hap timespans.</p>","params":[{"type":{"names":["function"]},"description":"<p>the function to apply</p>","name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"withHapTime","longname":"Pattern#withHapTime","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Returns a new pattern with the given function applied to the list of haps returned by every query.\\n   * @param {Function} func\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[15791,15938],"filename":"pattern.mjs","lineno":500,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023271","name":"Pattern#withHaps","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>Returns a new pattern with the given function applied to the list of haps returned by every query.</p>","params":[{"type":{"names":["function"]},"name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"withHaps","longname":"Pattern#withHaps","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * As with \`withHaps\`, but applies the function to every hap, rather than every list of haps.\\n   * @param {Function} func\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[16121,16192],"filename":"pattern.mjs","lineno":512,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023301","name":"Pattern#withHap","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>As with <code>withHaps</code>, but applies the function to every hap, rather than every list of haps.</p>","params":[{"type":{"names":["function"]},"name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"withHap","longname":"Pattern#withHap","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Returns a new pattern with the context field set to every hap set to the given value.\\n   * @param {*} context\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[16366,16450],"filename":"pattern.mjs","lineno":522,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023318","name":"Pattern#setContext","type":"MethodDefinition","paramnames":["context"]},"vars":{"":null}},"description":"<p>Returns a new pattern with the context field set to every hap set to the given value.</p>","params":[{"type":{"names":["*"]},"name":"context"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"setContext","longname":"Pattern#setContext","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Returns a new pattern with the given function applied to the context field of every hap.\\n   * @param {Function} func\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[16631,16871],"filename":"pattern.mjs","lineno":532,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023335","name":"Pattern#withContext","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"<p>Returns a new pattern with the given function applied to the context field of every hap.</p>","params":[{"type":{"names":["function"]},"name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"withContext","longname":"Pattern#withContext","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Returns a new pattern with the context field of every hap set to an empty object.\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[17017,17091],"filename":"pattern.mjs","lineno":546,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023383","name":"Pattern#stripContext","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Returns a new pattern with the context field of every hap set to an empty object.</p>","returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"stripContext","longname":"Pattern#stripContext","kind":"function","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\n   * Returns a new pattern with the given location information added to the\\n   * context of every hap.\\n   * @param {Number} start start offset\\n   * @param {Number} end end offset\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[17329,17696],"filename":"pattern.mjs","lineno":558,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023399","name":"Pattern#withLoc","type":"MethodDefinition","paramnames":["start","end"]},"vars":{"":null}},"description":"<p>Returns a new pattern with the given location information added to the\\ncontext of every hap.</p>","params":[{"type":{"names":["Number"]},"description":"<p>start offset</p>","name":"start"},{"type":{"names":["Number"]},"description":"<p>end offset</p>","name":"end"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"withLoc","longname":"Pattern#withLoc","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Returns a new Pattern, which only returns haps that meet the given test.\\n   * @param {Function} hap_test - a function which returns false for haps to be removed from the pattern\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[17938,18035],"filename":"pattern.mjs","lineno":580,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023463","name":"Pattern#filterHaps","type":"MethodDefinition","paramnames":["hap_test"]},"vars":{"":null}},"description":"<p>Returns a new Pattern, which only returns haps that meet the given test.</p>","params":[{"type":{"names":["function"]},"description":"<p>a function which returns false for haps to be removed from the pattern</p>","name":"hap_test"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"filterHaps","longname":"Pattern#filterHaps","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * As with \`filterHaps\`, but the function is applied to values\\n   * inside haps.\\n   * @param {Function} value_test\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[18211,18356],"filename":"pattern.mjs","lineno":591,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023482","name":"Pattern#filterValues","type":"MethodDefinition","paramnames":["value_test"]},"vars":{"":null}},"description":"<p>As with <code>filterHaps</code>, but the function is applied to values\\ninside haps.</p>","params":[{"type":{"names":["function"]},"name":"value_test"}],"returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"filterValues","longname":"Pattern#filterValues","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Returns a new pattern, with haps containing undefined values removed from\\n   * query results.\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[18514,18595],"filename":"pattern.mjs","lineno":601,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023513","name":"Pattern#removeUndefineds","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Returns a new pattern, with haps containing undefined values removed from\\nquery results.</p>","returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"removeUndefineds","longname":"Pattern#removeUndefineds","kind":"function","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\n   * Returns a new pattern, with all haps without onsets filtered out. A hap\\n   * with an onset is one with a \`whole\` timespan that begins at the same time\\n   * as its \`part\` timespan.\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[18839,19104],"filename":"pattern.mjs","lineno":612,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023527","name":"Pattern#onsetsOnly","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Returns a new pattern, with all haps without onsets filtered out. A hap\\nwith an onset is one with a <code>whole</code> timespan that begins at the same time\\nas its <code>part</code> timespan.</p>","returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"onsetsOnly","longname":"Pattern#onsetsOnly","kind":"function","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\n   * Returns a new pattern, with 'continuous' haps (those without 'whole'\\n   * timespans) removed from query results.\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[19281,19415],"filename":"pattern.mjs","lineno":625,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023542","name":"Pattern#discreteOnly","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Returns a new pattern, with 'continuous' haps (those without 'whole'\\ntimespans) removed from query results.</p>","returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"discreteOnly","longname":"Pattern#discreteOnly","kind":"function","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\n   * Combines adjacent haps with the same value and whole.  Only\\n   * intended for use in tests.\\n   * @noAutocomplete\\n   */","meta":{"range":[19549,20994],"filename":"pattern.mjs","lineno":635,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023556","name":"Pattern#defragmentHaps","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Combines adjacent haps with the same value and whole.  Only\\nintended for use in tests.</p>","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"defragmentHaps","longname":"Pattern#defragmentHaps","kind":"function","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\n   * Queries the pattern for the first cycle, returning Haps. Mainly of use when\\n   * debugging a pattern.\\n   * @param {Boolean} with_context - set to true, otherwise the context field\\n   * will be stripped from the resulting haps.\\n   * @returns [Hap]\\n   * @noAutocomplete\\n   */","meta":{"range":[21283,21481],"filename":"pattern.mjs","lineno":690,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023787","name":"Pattern#firstCycle","type":"MethodDefinition","paramnames":["with_context"]},"vars":{"":null}},"description":"<p>Queries the pattern for the first cycle, returning Haps. Mainly of use when\\ndebugging a pattern.</p>","params":[{"type":{"names":["Boolean"]},"description":"<p>set to true, otherwise the context field\\nwill be stripped from the resulting haps.</p>","name":"with_context","defaultvalue":false}],"returns":[{"description":"<p>[Hap]</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"firstCycle","longname":"Pattern#firstCycle","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Accessor for a list of values returned by querying the first cycle.\\n   * @noAutocomplete\\n   */","meta":{"range":[21591,21673],"filename":"pattern.mjs","lineno":702,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023824","name":"Pattern#firstCycleValues","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Accessor for a list of values returned by querying the first cycle.</p>","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"firstCycleValues","longname":"Pattern#firstCycleValues","kind":"member","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\n   * More human-readable version of the \`firstCycleValues\` accessor.\\n   * @noAutocomplete\\n   */","meta":{"range":[21779,21942],"filename":"pattern.mjs","lineno":710,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023841","name":"Pattern#showFirstCycle","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>More human-readable version of the <code>firstCycleValues</code> accessor.</p>","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"showFirstCycle","longname":"Pattern#showFirstCycle","kind":"member","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\n   * Returns a new pattern, which returns haps sorted in temporal order. Mainly\\n   * of use when comparing two patterns for equality, in tests.\\n   * @returns Pattern\\n   * @noAutocomplete\\n   */","meta":{"range":[22145,22418],"filename":"pattern.mjs","lineno":722,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100023879","name":"Pattern#sortHapsByPart","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Returns a new pattern, which returns haps sorted in temporal order. Mainly\\nof use when comparing two patterns for equality, in tests.</p>","returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"sortHapsByPart","longname":"Pattern#sortHapsByPart","kind":"function","memberof":"Pattern","scope":"instance","params":[]},{"comment":"/**\\n   * Layers the result of the given function(s). Like \`superimpose\`, but without the original pattern:\\n   * @name layer\\n   * @memberof Pattern\\n   * @synonyms apply\\n   * @returns Pattern\\n   * @example\\n   * \\"<0 2 4 6 ~ 4 ~ 2 0!3 ~!5>*8\\"\\n   *   .layer(x=>x.add(\\"0,2\\"))\\n   *   .scale('C minor').note()\\n   */","meta":{"filename":"pattern.mjs","lineno":780,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Layers the result of the given function(s). Like <code>superimpose</code>, but without the original pattern:</p>","name":"layer","memberof":"Pattern","synonyms_text":"apply","synonyms":["apply"],"returns":[{"description":"<p>Pattern</p>"}],"examples":["\\"<0 2 4 6 ~ 4 ~ 2 0!3 ~!5>*8\\"\\n  .layer(x=>x.add(\\"0,2\\"))\\n  .scale('C minor').note()"],"scope":"static","longname":"Pattern.layer","kind":"member"},{"comment":"/**\\n   * Superimposes the result of the given function(s) on top of the original pattern:\\n   * @name superimpose\\n   * @memberof Pattern\\n   * @returns Pattern\\n   * @example\\n   * \\"<0 2 4 6 ~ 4 ~ 2 0!3 ~!5>*8\\"\\n   *   .superimpose(x=>x.add(2))\\n   *   .scale('C minor').note()\\n   */","meta":{"filename":"pattern.mjs","lineno":795,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Superimposes the result of the given function(s) on top of the original pattern:</p>","name":"superimpose","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["\\"<0 2 4 6 ~ 4 ~ 2 0!3 ~!5>*8\\"\\n  .superimpose(x=>x.add(2))\\n  .scale('C minor').note()"],"scope":"static","longname":"Pattern.superimpose","kind":"member"},{"comment":"/**\\n * Selects indices in in stacked notes.\\n * @example\\n * note(\\"<[c,eb,g]!2 [c,f,ab] [d,f,ab]>\\")\\n * .arpWith(haps => haps[2])\\n * */","meta":{"range":[27428,27638],"filename":"pattern.mjs","lineno":907,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024533","name":"Pattern.prototype.arpWith","type":"FunctionExpression","paramnames":["func"]},"vars":{"":null}},"description":"<p>Selects indices in in stacked notes.</p>","examples":["note(\\"<[c,eb,g]!2 [c,f,ab] [d,f,ab]>\\")\\n.arpWith(haps => haps[2])"],"name":"arpWith","longname":"Pattern#arpWith","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n * Selects indices in in stacked notes.\\n * @example\\n * note(\\"<[c,eb,g]!2 [c,f,ab] [d,f,ab]>\\")\\n * .arp(\\"0 [0,2] 1 [0,2]\\")\\n * */","meta":{"range":[27772,27887],"filename":"pattern.mjs","lineno":920,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100024586","name":"Pattern.prototype.arp","type":"FunctionExpression","paramnames":["pat"]},"vars":{"":null}},"description":"<p>Selects indices in in stacked notes.</p>","examples":["note(\\"<[c,eb,g]!2 [c,f,ab] [d,f,ab]>\\")\\n.arp(\\"0 [0,2] 1 [0,2]\\")"],"name":"arp","longname":"Pattern#arp","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n     *\\n     * Assumes a pattern of numbers. Adds the given number to each item in the pattern.\\n     * @name add\\n     * @memberof Pattern\\n     * @example\\n     * // Here, the triad 0, 2, 4 is shifted by different amounts\\n     * n(\\"0 2 4\\".add(\\"<0 3 4 0>\\")).scale(\\"C:major\\")\\n     * // Without add, the equivalent would be:\\n     * // n(\\"<[0 2 4] [3 5 7] [4 6 8] [0 2 4]>\\").scale(\\"C:major\\")\\n     * @example\\n     * // You can also use add with notes:\\n     * note(\\"c3 e3 g3\\".add(\\"<0 5 7 0>\\"))\\n     * // Behind the scenes, the notes are converted to midi numbers:\\n     * // note(\\"48 52 55\\".add(\\"<0 5 7 0>\\"))\\n     */","meta":{"filename":"pattern.mjs","lineno":981,"columnno":4,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Assumes a pattern of numbers. Adds the given number to each item in the pattern.</p>","name":"add","memberof":"Pattern","examples":["// Here, the triad 0, 2, 4 is shifted by different amounts\\nn(\\"0 2 4\\".add(\\"<0 3 4 0>\\")).scale(\\"C:major\\")\\n// Without add, the equivalent would be:\\n// n(\\"<[0 2 4] [3 5 7] [4 6 8] [0 2 4]>\\").scale(\\"C:major\\")","// You can also use add with notes:\\nnote(\\"c3 e3 g3\\".add(\\"<0 5 7 0>\\"))\\n// Behind the scenes, the notes are converted to midi numbers:\\n// note(\\"48 52 55\\".add(\\"<0 5 7 0>\\"))"],"scope":"static","longname":"Pattern.add","kind":"member"},{"comment":"/**\\n     *\\n     * Like add, but the given numbers are subtracted.\\n     * @name sub\\n     * @memberof Pattern\\n     * @example\\n     * n(\\"0 2 4\\".sub(\\"<0 1 2 3>\\")).scale(\\"C4:minor\\")\\n     * // See add for more information.\\n     */","meta":{"filename":"pattern.mjs","lineno":998,"columnno":4,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Like add, but the given numbers are subtracted.</p>","name":"sub","memberof":"Pattern","examples":["n(\\"0 2 4\\".sub(\\"<0 1 2 3>\\")).scale(\\"C4:minor\\")\\n// See add for more information."],"scope":"static","longname":"Pattern.sub","kind":"member"},{"comment":"/**\\n     *\\n     * Multiplies each number by the given factor.\\n     * @name mul\\n     * @memberof Pattern\\n     * @example\\n     * \\"<1 1.5 [1.66, <2 2.33>]>*4\\".mul(150).freq()\\n     */","meta":{"filename":"pattern.mjs","lineno":1008,"columnno":4,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Multiplies each number by the given factor.</p>","name":"mul","memberof":"Pattern","examples":["\\"<1 1.5 [1.66, <2 2.33>]>*4\\".mul(150).freq()"],"scope":"static","longname":"Pattern.mul","kind":"member"},{"comment":"/**\\n     *\\n     * Divides each number by the given factor.\\n     * @name div\\n     * @memberof Pattern\\n     */","meta":{"filename":"pattern.mjs","lineno":1017,"columnno":4,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Divides each number by the given factor.</p>","name":"div","memberof":"Pattern","scope":"static","longname":"Pattern.div","kind":"member"},{"comment":"/**\\n   * Applies the given structure to the pattern:\\n   *\\n   * @example\\n   * note(\\"c,eb,g\\")\\n   *   .struct(\\"x ~ x ~ ~ x ~ x ~ ~ ~ x ~ x ~ ~\\")\\n   *   .slow(2)\\n   */","meta":{"range":[33756,33844],"filename":"pattern.mjs","lineno":1113,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100025123","name":"Pattern.prototype.struct","type":"FunctionExpression","paramnames":["args"]}},"description":"<p>Applies the given structure to the pattern:</p>","examples":["note(\\"c,eb,g\\")\\n  .struct(\\"x ~ x ~ ~ x ~ x ~ ~ ~ x ~ x ~ ~\\")\\n  .slow(2)"],"name":"struct","longname":"Pattern#struct","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Returns silence when mask is 0 or \\"~\\"\\n   *\\n   * @example\\n   * note(\\"c [eb,g] d [eb,g]\\").mask(\\"<1 [0 1]>\\")\\n   */","meta":{"range":[34064,34149],"filename":"pattern.mjs","lineno":1125,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100025163","name":"Pattern.prototype.mask","type":"FunctionExpression","paramnames":["args"]}},"description":"<p>Returns silence when mask is 0 or &quot;~&quot;</p>","examples":["note(\\"c [eb,g] d [eb,g]\\").mask(\\"<1 [0 1]>\\")"],"name":"mask","longname":"Pattern#mask","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Resets the pattern to the start of the cycle for each onset of the reset pattern.\\n   *\\n   * @example\\n   * s(\\"[<bd lt> sd]*2, hh*8\\").reset(\\"<x@3 x(5,8)>\\")\\n   */","meta":{"range":[34414,34503],"filename":"pattern.mjs","lineno":1137,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100025203","name":"Pattern.prototype.reset","type":"FunctionExpression","paramnames":["args"]}},"description":"<p>Resets the pattern to the start of the cycle for each onset of the reset pattern.</p>","examples":["s(\\"[<bd lt> sd]*2, hh*8\\").reset(\\"<x@3 x(5,8)>\\")"],"name":"reset","longname":"Pattern#reset","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n   * Restarts the pattern for each onset of the restart pattern.\\n   * While reset will only reset the current cycle, restart will start from cycle 0.\\n   *\\n   * @example\\n   * s(\\"[<bd lt> sd]*2, hh*8\\").restart(\\"<x@3 x(5,8)>\\")\\n   */","meta":{"range":[34837,34930],"filename":"pattern.mjs","lineno":1150,"columnno":2,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100025243","name":"Pattern.prototype.restart","type":"FunctionExpression","paramnames":["args"]}},"description":"<p>Restarts the pattern for each onset of the restart pattern.\\nWhile reset will only reset the current cycle, restart will start from cycle 0.</p>","examples":["s(\\"[<bd lt> sd]*2, hh*8\\").restart(\\"<x@3 x(5,8)>\\")"],"name":"restart","longname":"Pattern#restart","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n * Does absolutely nothing, but with a given metrical 'steps'\\n * @name gap\\n * @param  {number} steps\\n * @example\\n * gap(3) // \\"~@3\\"\\n */","meta":{"filename":"pattern.mjs","lineno":1184,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Does absolutely nothing, but with a given metrical 'steps'</p>","name":"gap","params":[{"type":{"names":["number"]},"name":"steps"}],"examples":["gap(3) // \\"~@3\\""],"longname":"gap","kind":"member","scope":"global"},{"comment":"/**\\n * Does absolutely nothing..\\n * @name silence\\n * @example\\n * silence // \\"~\\"\\n */","meta":{"filename":"pattern.mjs","lineno":1193,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Does absolutely nothing..</p>","name":"silence","examples":["silence // \\"~\\""],"longname":"silence","kind":"member","scope":"global"},{"comment":"/** A discrete value that repeats once per cycle.\\n *\\n * @returns {Pattern}\\n * @example\\n * pure('e4') // \\"e4\\"\\n * @noAutocomplete\\n */","meta":{"range":[36178,36435],"filename":"pattern.mjs","lineno":1211,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100025322","name":"exports.pure","type":"FunctionDeclaration","paramnames":["value"]}},"description":"<p>A discrete value that repeats once per cycle.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["pure('e4') // \\"e4\\""],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"pure","longname":"pure","kind":"function","scope":"global"},{"comment":"/** Takes a list of patterns, and returns a pattern of lists.\\n */","meta":{"range":[37440,37620],"filename":"pattern.mjs","lineno":1249,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100025412","name":"exports.sequenceP","type":"FunctionDeclaration","paramnames":["pats"]}},"description":"<p>Takes a list of patterns, and returns a pattern of lists.</p>","name":"sequenceP","longname":"sequenceP","kind":"function","scope":"global"},{"comment":"/** The given items are played at the same time at the same length.\\n *\\n * @return {Pattern}\\n * @synonyms polyrhythm, pr\\n * @example\\n * stack(\\"g3\\", \\"b3\\", [\\"e4\\", \\"d4\\"]).note()\\n * // \\"g3,b3,[e4,d4]\\".note()\\n *\\n * @example\\n * // As a chained function:\\n * s(\\"hh*4\\").stack(\\n *   note(\\"c4(5,8)\\")\\n * )\\n */","meta":{"range":[37919,38297],"filename":"pattern.mjs","lineno":1271,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100025452","name":"exports.stack","type":"FunctionDeclaration","paramnames":["pats"]}},"description":"<p>The given items are played at the same time at the same length.</p>","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"polyrhythm, pr","synonyms":["polyrhythm","pr"],"examples":["stack(\\"g3\\", \\"b3\\", [\\"e4\\", \\"d4\\"]).note()\\n// \\"g3,b3,[e4,d4]\\".note()","// As a chained function:\\ns(\\"hh*4\\").stack(\\n  note(\\"c4(5,8)\\")\\n)"],"name":"stack","longname":"stack","kind":"function","scope":"global"},{"comment":"/** Concatenation: combines a list of patterns, switching between them successively, one per cycle:\\n *\\n * synonyms: \`cat\`\\n *\\n * @return {Pattern}\\n * @example\\n * slowcat(\\"e5\\", \\"b4\\", [\\"d5\\", \\"c5\\"])\\n *\\n */","meta":{"range":[39967,41017],"filename":"pattern.mjs","lineno":1349,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100025816","name":"exports.slowcat","type":"FunctionDeclaration","paramnames":["pats"]}},"description":"<p>Concatenation: combines a list of patterns, switching between them successively, one per cycle:</p>\\n<p>synonyms: <code>cat</code></p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["slowcat(\\"e5\\", \\"b4\\", [\\"d5\\", \\"c5\\"])"],"name":"slowcat","longname":"slowcat","kind":"function","scope":"global"},{"comment":"/** Concatenation: combines a list of patterns, switching between them successively, one per cycle. Unlike slowcat, this version will skip cycles.\\n * @param {...any} items - The items to concatenate\\n * @return {Pattern}\\n */","meta":{"range":[41243,41616],"filename":"pattern.mjs","lineno":1379,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100025976","name":"exports.slowcatPrime","type":"FunctionDeclaration","paramnames":["pats"]}},"description":"<p>Concatenation: combines a list of patterns, switching between them successively, one per cycle. Unlike slowcat, this version will skip cycles.</p>","params":[{"type":{"names":["any"]},"variable":true,"description":"<p>The items to concatenate</p>","name":"items"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"slowcatPrime","longname":"slowcatPrime","kind":"function","scope":"global"},{"comment":"/** The given items are con**cat**enated, where each one takes one cycle.\\n *\\n * @param {...any} items - The items to concatenate\\n * @synonyms slowcat\\n * @return {Pattern}\\n * @example\\n * cat(\\"e5\\", \\"b4\\", [\\"d5\\", \\"c5\\"]).note()\\n * // \\"<e5 b4 [d5 c5]>\\".note()\\n *\\n * @example\\n * // As a chained function:\\n * s(\\"hh*4\\").cat(\\n *    note(\\"c4(5,8)\\")\\n * )\\n */","meta":{"range":[41965,42024],"filename":"pattern.mjs","lineno":1404,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100026029","name":"exports.cat","type":"FunctionDeclaration","paramnames":["pats"]}},"description":"<p>The given items are con<strong>cat</strong>enated, where each one takes one cycle.</p>","params":[{"type":{"names":["any"]},"variable":true,"description":"<p>The items to concatenate</p>","name":"items"}],"synonyms_text":"slowcat","synonyms":["slowcat"],"returns":[{"type":{"names":["Pattern"]}}],"examples":["cat(\\"e5\\", \\"b4\\", [\\"d5\\", \\"c5\\"]).note()\\n// \\"<e5 b4 [d5 c5]>\\".note()","// As a chained function:\\ns(\\"hh*4\\").cat(\\n   note(\\"c4(5,8)\\")\\n)"],"name":"cat","longname":"cat","kind":"function","scope":"global"},{"comment":"/**\\n * Allows to arrange multiple patterns together over multiple cycles.\\n * Takes a variable number of arrays with two elements specifying the number of cycles and the pattern to use.\\n *\\n * @return {Pattern}\\n * @example\\n * arrange(\\n *   [4, \\"<c a f e>(3,8)\\"],\\n *   [2, \\"<g a>(5,8)\\"]\\n * ).note()\\n */","meta":{"range":[42326,42560],"filename":"pattern.mjs","lineno":1419,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100026040","name":"exports.arrange","type":"FunctionDeclaration","paramnames":["sections"]}},"description":"<p>Allows to arrange multiple patterns together over multiple cycles.\\nTakes a variable number of arrays with two elements specifying the number of cycles and the pattern to use.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["arrange(\\n  [4, \\"<c a f e>(3,8)\\"],\\n  [2, \\"<g a>(5,8)\\"]\\n).note()"],"name":"arrange","longname":"arrange","kind":"function","scope":"global"},{"comment":"/**\\n * Similarly to \`arrange\`, allows you to arrange multiple patterns together over multiple cycles.\\n * Unlike \`arrange\`, you specify a start and stop time for each pattern rather than duration, which\\n * means that patterns can overlap.\\n * @return {Pattern}\\n * @example\\nseqPLoop([0, 2, \\"bd(3,8)\\"],\\n         [1, 3, \\"cp(3,8)\\"]\\n        )\\n  .sound()\\n */","meta":{"range":[42913,43337],"filename":"pattern.mjs","lineno":1436,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100026085","name":"exports.seqPLoop","type":"FunctionDeclaration","paramnames":["parts"]}},"description":"<p>Similarly to <code>arrange</code>, allows you to arrange multiple patterns together over multiple cycles.\\nUnlike <code>arrange</code>, you specify a start and stop time for each pattern rather than duration, which\\nmeans that patterns can overlap.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["seqPLoop([0, 2, \\"bd(3,8)\\"],\\n         [1, 3, \\"cp(3,8)\\"]\\n        )\\n  .sound()"],"name":"seqPLoop","longname":"seqPLoop","kind":"function","scope":"global"},{"comment":"/** See \`fastcat\` */","meta":{"range":[43640,43704],"filename":"pattern.mjs","lineno":1468,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100026228","name":"exports.sequence","type":"FunctionDeclaration","paramnames":["pats"]}},"description":"<p>See <code>fastcat</code></p>","name":"sequence","longname":"sequence","kind":"function","scope":"global"},{"comment":"/** Like **cat**, but the items are crammed into one cycle.\\n * @synonyms sequence, fastcat\\n * @example\\n * seq(\\"e5\\", \\"b4\\", [\\"d5\\", \\"c5\\"]).note()\\n * // \\"e5 b4 [d5 c5]\\".note()\\n *\\n * @example\\n * // As a chained function:\\n * s(\\"hh*4\\").seq(\\n *   note(\\"c4(5,8)\\")\\n * )\\n */","meta":{"range":[43971,44030],"filename":"pattern.mjs","lineno":1485,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100026239","name":"exports.seq","type":"FunctionDeclaration","paramnames":["pats"]}},"description":"<p>Like <strong>cat</strong>, but the items are crammed into one cycle.</p>","synonyms_text":"sequence, fastcat","synonyms":["sequence","fastcat"],"examples":["seq(\\"e5\\", \\"b4\\", [\\"d5\\", \\"c5\\"]).note()\\n// \\"e5 b4 [d5 c5]\\".note()","// As a chained function:\\ns(\\"hh*4\\").seq(\\n  note(\\"c4(5,8)\\")\\n)"],"name":"seq","longname":"seq","kind":"function","scope":"global"},{"comment":"/**\\n * Registers a new pattern method. The method is added to the Pattern class + the standalone function is returned from register.\\n *\\n * @param {string} name name of the function\\n * @param {function} func function with 1 or more params, where last is the current pattern\\n * @noAutocomplete\\n *\\n */","meta":{"range":[46604,49280],"filename":"pattern.mjs","lineno":1549,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100026871","name":"exports.register","type":"FunctionDeclaration","paramnames":["name","func","patternify","preserveSteps","join"]}},"description":"<p>Registers a new pattern method. The method is added to the Pattern class + the standalone function is returned from register.</p>","params":[{"type":{"names":["string"]},"description":"<p>name of the function</p>","name":"name"},{"type":{"names":["function"]},"description":"<p>function with 1 or more params, where last is the current pattern</p>","name":"func"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"register","longname":"register","kind":"function","scope":"global"},{"comment":"/**\\n * Assumes a numerical pattern. Returns a new pattern with all values rounded\\n * to the nearest integer.\\n * @name round\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * n(\\"0.5 1.5 2.5\\".round()).scale(\\"C:major\\")\\n */","meta":{"filename":"pattern.mjs","lineno":1642,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Assumes a numerical pattern. Returns a new pattern with all values rounded\\nto the nearest integer.</p>","name":"round","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["n(\\"0.5 1.5 2.5\\".round()).scale(\\"C:major\\")"],"scope":"static","longname":"Pattern.round","kind":"member"},{"comment":"/**\\n * Assumes a numerical pattern. Returns a new pattern with all values set to\\n * their mathematical floor. E.g. \`3.7\` replaced with to \`3\`, and \`-4.2\`\\n * replaced with \`-5\`.\\n * @name floor\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * note(\\"42 42.1 42.5 43\\".floor())\\n */","meta":{"filename":"pattern.mjs","lineno":1655,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Assumes a numerical pattern. Returns a new pattern with all values set to\\ntheir mathematical floor. E.g. <code>3.7</code> replaced with to <code>3</code>, and <code>-4.2</code>\\nreplaced with <code>-5</code>.</p>","name":"floor","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["note(\\"42 42.1 42.5 43\\".floor())"],"scope":"static","longname":"Pattern.floor","kind":"member"},{"comment":"/**\\n * Assumes a numerical pattern. Returns a new pattern with all values set to\\n * their mathematical ceiling. E.g. \`3.2\` replaced with \`4\`, and \`-4.2\`\\n * replaced with \`-4\`.\\n * @name ceil\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * note(\\"42 42.1 42.5 43\\".ceil())\\n */","meta":{"filename":"pattern.mjs","lineno":1669,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Assumes a numerical pattern. Returns a new pattern with all values set to\\ntheir mathematical ceiling. E.g. <code>3.2</code> replaced with <code>4</code>, and <code>-4.2</code>\\nreplaced with <code>-4</code>.</p>","name":"ceil","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["note(\\"42 42.1 42.5 43\\".ceil())"],"scope":"static","longname":"Pattern.ceil","kind":"member"},{"comment":"/**\\n * Assumes a numerical pattern, containing unipolar values in the range 0 ..\\n * 1. Returns a new pattern with values scaled to the bipolar range -1 .. 1\\n * @returns Pattern\\n * @noAutocomplete\\n */","meta":{"range":[50925,51029],"filename":"pattern.mjs","lineno":1688,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100027387","name":"exports.toBipolar","type":"VariableDeclaration"}},"description":"<p>Assumes a numerical pattern, containing unipolar values in the range 0 ..</p>\\n<ol>\\n<li>Returns a new pattern with values scaled to the bipolar range -1 .. 1</li>\\n</ol>","returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"toBipolar","longname":"toBipolar","kind":"constant","scope":"global"},{"comment":"/**\\n * Assumes a numerical pattern, containing bipolar values in the range -1 .. 1\\n * Returns a new pattern with values scaled to the unipolar range 0 .. 1\\n * @returns Pattern\\n * @noAutocomplete\\n */","meta":{"range":[51230,51340],"filename":"pattern.mjs","lineno":1698,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100027409","name":"exports.fromBipolar","type":"VariableDeclaration"}},"description":"<p>Assumes a numerical pattern, containing bipolar values in the range -1 .. 1\\nReturns a new pattern with values scaled to the unipolar range 0 .. 1</p>","returns":[{"description":"<p>Pattern</p>"}],"tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"fromBipolar","longname":"fromBipolar","kind":"constant","scope":"global"},{"comment":"/**\\n * Assumes a numerical pattern, containing unipolar values in the range 0 .. 1.\\n * Returns a new pattern with values scaled to the given min/max range.\\n * Most useful in combination with continuous patterns.\\n * @name range\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"[bd sd]*2,hh*8\\")\\n * .cutoff(sine.range(500,4000))\\n */","meta":{"filename":"pattern.mjs","lineno":1702,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Assumes a numerical pattern, containing unipolar values in the range 0 .. 1.\\nReturns a new pattern with values scaled to the given min/max range.\\nMost useful in combination with continuous patterns.</p>","name":"range","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"[bd sd]*2,hh*8\\")\\n.cutoff(sine.range(500,4000))"],"scope":"static","longname":"Pattern.range","kind":"member"},{"comment":"/**\\n * Assumes a numerical pattern, containing unipolar values in the range 0 .. 1\\n * Returns a new pattern with values scaled to the given min/max range,\\n * following an exponential curve.\\n * @name rangex\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"[bd sd]*2,hh*8\\")\\n * .cutoff(sine.rangex(500,4000))\\n */","meta":{"filename":"pattern.mjs","lineno":1717,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Assumes a numerical pattern, containing unipolar values in the range 0 .. 1\\nReturns a new pattern with values scaled to the given min/max range,\\nfollowing an exponential curve.</p>","name":"rangex","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"[bd sd]*2,hh*8\\")\\n.cutoff(sine.rangex(500,4000))"],"scope":"static","longname":"Pattern.rangex","kind":"member"},{"comment":"/**\\n * Assumes a numerical pattern, containing bipolar values in the range -1 .. 1\\n * Returns a new pattern with values scaled to the given min/max range.\\n * @name range2\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"[bd sd]*2,hh*8\\")\\n * .cutoff(sine2.range2(500,4000))\\n */","meta":{"filename":"pattern.mjs","lineno":1732,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Assumes a numerical pattern, containing bipolar values in the range -1 .. 1\\nReturns a new pattern with values scaled to the given min/max range.</p>","name":"range2","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"[bd sd]*2,hh*8\\")\\n.cutoff(sine2.range2(500,4000))"],"scope":"static","longname":"Pattern.range2","kind":"member"},{"comment":"/**\\n * Allows dividing numbers via list notation using \\":\\".\\n * Returns a new pattern with just numbers.\\n * @name ratio\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * ratio(\\"1, 5:4, 3:2\\").mul(110)\\n * .freq().s(\\"piano\\")\\n */","meta":{"filename":"pattern.mjs","lineno":1746,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Allows dividing numbers via list notation using &quot;:&quot;.\\nReturns a new pattern with just numbers.</p>","name":"ratio","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["ratio(\\"1, 5:4, 3:2\\").mul(110)\\n.freq().s(\\"piano\\")"],"scope":"static","longname":"Pattern.ratio","kind":"member"},{"comment":"/** Compress each cycle into the given timespan, leaving a gap\\n * @example\\n * cat(\\n *   s(\\"bd sd\\").compress(.25,.75),\\n *   s(\\"~ bd sd ~\\")\\n * )\\n */","meta":{"range":[53333,53586],"filename":"pattern.mjs","lineno":1775,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100027554","name":"exports.compress","type":"VariableDeclaration"}},"description":"<p>Compress each cycle into the given timespan, leaving a gap</p>","examples":["cat(\\n  s(\\"bd sd\\").compress(.25,.75),\\n  s(\\"~ bd sd ~\\")\\n)"],"name":"compress","longname":"compress","kind":"constant","scope":"global"},{"comment":"/**\\n * speeds up a pattern like fast, but rather than it playing multiple times as fast would it instead leaves a gap in the remaining space of the cycle. For example, the following will play the sound pattern \\"bd sn\\" only once but compressed into the first half of the cycle, i.e. twice as fast.\\n * @name fastGap\\n * @synonyms fastgap\\n * @example\\n * s(\\"bd sd\\").fastGap(2)\\n */","meta":{"filename":"pattern.mjs","lineno":1788,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>speeds up a pattern like fast, but rather than it playing multiple times as fast would it instead leaves a gap in the remaining space of the cycle. For example, the following will play the sound pattern &quot;bd sn&quot; only once but compressed into the first half of the cycle, i.e. twice as fast.</p>","name":"fastGap","synonyms_text":"fastgap","synonyms":["fastgap"],"examples":["s(\\"bd sd\\").fastGap(2)"],"longname":"fastGap","kind":"member","scope":"global"},{"comment":"/**\\n * Similar to \`compress\`, but doesn't leave gaps, and the 'focus' can be bigger than a cycle\\n * @example\\n * s(\\"bd hh sd hh\\").focus(1/4, 3/4)\\n */","meta":{"range":[55477,55667],"filename":"pattern.mjs","lineno":1830,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100027896","name":"exports.focus","type":"VariableDeclaration"}},"description":"<p>Similar to <code>compress</code>, but doesn't leave gaps, and the 'focus' can be bigger than a cycle</p>","examples":["s(\\"bd hh sd hh\\").focus(1/4, 3/4)"],"name":"focus","longname":"focus","kind":"constant","scope":"global"},{"comment":"/** The ply function repeats each event the given number of times.\\n * @example\\n * s(\\"bd ~ sd cp\\").ply(\\"<1 2 3>\\")\\n */","meta":{"range":[55934,56165],"filename":"pattern.mjs","lineno":1847,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100027975","name":"exports.ply","type":"VariableDeclaration"}},"description":"<p>The ply function repeats each event the given number of times.</p>","examples":["s(\\"bd ~ sd cp\\").ply(\\"<1 2 3>\\")"],"name":"ply","longname":"ply","kind":"constant","scope":"global"},{"comment":"/**\\n * Speed up a pattern by the given factor. Used by \\"*\\" in mini notation.\\n *\\n * @name fast\\n * @synonyms density\\n * @memberof Pattern\\n * @param {number | Pattern} factor speed up factor\\n * @returns Pattern\\n * @example\\n * s(\\"bd hh sd hh\\").fast(2) // s(\\"[bd hh sd hh]*2\\")\\n */","meta":{"filename":"pattern.mjs","lineno":1855,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Speed up a pattern by the given factor. Used by &quot;*&quot; in mini notation.</p>","name":"fast","synonyms_text":"density","synonyms":["density"],"memberof":"Pattern","params":[{"type":{"names":["number","Pattern"]},"description":"<p>speed up factor</p>","name":"factor"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"bd hh sd hh\\").fast(2) // s(\\"[bd hh sd hh]*2\\")"],"scope":"static","longname":"Pattern.fast","kind":"member"},{"comment":"/**\\n * Both speeds up the pattern (like 'fast') and the sample playback (like 'speed').\\n * @example\\n * s(\\"bd sd:2\\").hurry(\\"<1 2 4 3>\\").slow(1.5)\\n */","meta":{"range":[56933,57042],"filename":"pattern.mjs","lineno":1885,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028088","name":"exports.hurry","type":"VariableDeclaration"}},"description":"<p>Both speeds up the pattern (like 'fast') and the sample playback (like 'speed').</p>","examples":["s(\\"bd sd:2\\").hurry(\\"<1 2 4 3>\\").slow(1.5)"],"name":"hurry","longname":"hurry","kind":"constant","scope":"global"},{"comment":"/**\\n * Slow down a pattern over the given number of cycles. Like the \\"/\\" operator in mini notation.\\n *\\n * @name slow\\n * @synonyms sparsity\\n * @memberof Pattern\\n * @param {number | Pattern} factor slow down factor\\n * @returns Pattern\\n * @example\\n * s(\\"bd hh sd hh\\").slow(2) // s(\\"[bd hh sd hh]/2\\")\\n */","meta":{"filename":"pattern.mjs","lineno":1889,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Slow down a pattern over the given number of cycles. Like the &quot;/&quot; operator in mini notation.</p>","name":"slow","synonyms_text":"sparsity","synonyms":["sparsity"],"memberof":"Pattern","params":[{"type":{"names":["number","Pattern"]},"description":"<p>slow down factor</p>","name":"factor"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"bd hh sd hh\\").slow(2) // s(\\"[bd hh sd hh]/2\\")"],"scope":"static","longname":"Pattern.slow","kind":"member"},{"comment":"/**\\n * Carries out an operation 'inside' a cycle.\\n * @example\\n * \\"0 1 2 3 4 3 2 1\\".inside(4, rev).scale('C major').note()\\n * // \\"0 1 2 3 4 3 2 1\\".slow(4).rev().fast(4).scale('C major').note()\\n */","meta":{"range":[57727,57844],"filename":"pattern.mjs","lineno":1913,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028149","name":"exports.inside","type":"VariableDeclaration"}},"description":"<p>Carries out an operation 'inside' a cycle.</p>","examples":["\\"0 1 2 3 4 3 2 1\\".inside(4, rev).scale('C major').note()\\n// \\"0 1 2 3 4 3 2 1\\".slow(4).rev().fast(4).scale('C major').note()"],"name":"inside","longname":"inside","kind":"constant","scope":"global"},{"comment":"/**\\n * Carries out an operation 'outside' a cycle.\\n * @example\\n * \\"<[0 1] 2 [3 4] 5>\\".outside(4, rev).scale('C major').note()\\n * // \\"<[0 1] 2 [3 4] 5>\\".fast(4).rev().slow(4).scale('C major').note()\\n */","meta":{"range":[58048,58167],"filename":"pattern.mjs","lineno":1923,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028173","name":"exports.outside","type":"VariableDeclaration"}},"description":"<p>Carries out an operation 'outside' a cycle.</p>","examples":["\\"<[0 1] 2 [3 4] 5>\\".outside(4, rev).scale('C major').note()\\n// \\"<[0 1] 2 [3 4] 5>\\".fast(4).rev().slow(4).scale('C major').note()"],"name":"outside","longname":"outside","kind":"constant","scope":"global"},{"comment":"/**\\n * Applies the given function every n cycles, starting from the last cycle.\\n * @name lastOf\\n * @memberof Pattern\\n * @param {number} n how many cycles\\n * @param {function} func function to apply\\n * @returns Pattern\\n * @example\\n * note(\\"c3 d3 e3 g3\\").lastOf(4, x=>x.rev())\\n */","meta":{"filename":"pattern.mjs","lineno":1927,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Applies the given function every n cycles, starting from the last cycle.</p>","name":"lastOf","memberof":"Pattern","params":[{"type":{"names":["number"]},"description":"<p>how many cycles</p>","name":"n"},{"type":{"names":["function"]},"description":"<p>function to apply</p>","name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["note(\\"c3 d3 e3 g3\\").lastOf(4, x=>x.rev())"],"scope":"static","longname":"Pattern.lastOf","kind":"member"},{"comment":"/**\\n * Applies the given function every n cycles, starting from the first cycle.\\n * @name firstOf\\n * @memberof Pattern\\n * @param {number} n how many cycles\\n * @param {function} func function to apply\\n * @returns Pattern\\n * @example\\n * note(\\"c3 d3 e3 g3\\").firstOf(4, x=>x.rev())\\n */","meta":{"filename":"pattern.mjs","lineno":1943,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Applies the given function every n cycles, starting from the first cycle.</p>","name":"firstOf","memberof":"Pattern","params":[{"type":{"names":["number"]},"description":"<p>how many cycles</p>","name":"n"},{"type":{"names":["function"]},"description":"<p>function to apply</p>","name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["note(\\"c3 d3 e3 g3\\").firstOf(4, x=>x.rev())"],"scope":"static","longname":"Pattern.firstOf","kind":"member"},{"comment":"/**\\n * An alias for \`firstOf\`\\n * @name every\\n * @memberof Pattern\\n * @param {number} n how many cycles\\n * @param {function} func function to apply\\n * @returns Pattern\\n * @example\\n * note(\\"c3 d3 e3 g3\\").every(4, x=>x.rev())\\n */","meta":{"filename":"pattern.mjs","lineno":1954,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>An alias for <code>firstOf</code></p>","name":"every","memberof":"Pattern","params":[{"type":{"names":["number"]},"description":"<p>how many cycles</p>","name":"n"},{"type":{"names":["function"]},"description":"<p>function to apply</p>","name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["note(\\"c3 d3 e3 g3\\").every(4, x=>x.rev())"],"scope":"static","longname":"Pattern.every","kind":"member"},{"comment":"/**\\n * Like layer, but with a single function:\\n * @name apply\\n * @memberof Pattern\\n * @example\\n * \\"<c3 eb3 g3>\\".scale('C minor').apply(scaleTranspose(\\"0,2,4\\")).note()\\n */","meta":{"filename":"pattern.mjs","lineno":1970,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Like layer, but with a single function:</p>","name":"apply","memberof":"Pattern","examples":["\\"<c3 eb3 g3>\\".scale('C minor').apply(scaleTranspose(\\"0,2,4\\")).note()"],"scope":"static","longname":"Pattern.apply","kind":"member"},{"comment":"/**\\n * Plays the pattern at the given cycles per minute.\\n * @example\\n * s(\\"<bd sd>,hh*2\\").cpm(90) // = 90 bpm\\n */","meta":{"range":[59796,59890],"filename":"pattern.mjs","lineno":1988,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028292","name":"exports.cpm","type":"VariableDeclaration"}},"description":"<p>Plays the pattern at the given cycles per minute.</p>","examples":["s(\\"<bd sd>,hh*2\\").cpm(90) // = 90 bpm"],"name":"cpm","longname":"cpm","kind":"constant","scope":"global"},{"comment":"/**\\n * Nudge a pattern to start earlier in time. Equivalent of Tidal's <~ operator\\n *\\n * @name early\\n * @memberof Pattern\\n * @param {number | Pattern} cycles number of cycles to nudge left\\n * @returns Pattern\\n * @example\\n * \\"bd ~\\".stack(\\"hh ~\\".early(.1)).s()\\n */","meta":{"filename":"pattern.mjs","lineno":1992,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Nudge a pattern to start earlier in time. Equivalent of Tidal's &lt;~ operator</p>","name":"early","memberof":"Pattern","params":[{"type":{"names":["number","Pattern"]},"description":"<p>number of cycles to nudge left</p>","name":"cycles"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["\\"bd ~\\".stack(\\"hh ~\\".early(.1)).s()"],"scope":"static","longname":"Pattern.early","kind":"member"},{"comment":"/**\\n * Nudge a pattern to start later in time. Equivalent of Tidal's ~> operator\\n *\\n * @name late\\n * @memberof Pattern\\n * @param {number | Pattern} cycles number of cycles to nudge right\\n * @returns Pattern\\n * @example\\n * \\"bd ~\\".stack(\\"hh ~\\".late(.1)).s()\\n */","meta":{"filename":"pattern.mjs","lineno":2012,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Nudge a pattern to start later in time. Equivalent of Tidal's ~&gt; operator</p>","name":"late","memberof":"Pattern","params":[{"type":{"names":["number","Pattern"]},"description":"<p>number of cycles to nudge right</p>","name":"cycles"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["\\"bd ~\\".stack(\\"hh ~\\".late(.1)).s()"],"scope":"static","longname":"Pattern.late","kind":"member"},{"comment":"/**\\n * Plays a portion of a pattern, specified by the beginning and end of a time span. The new resulting pattern is played over the time period of the original pattern:\\n *\\n * @example\\n * s(\\"bd*2 hh*3 [sd bd]*2 perc\\").zoom(0.25, 0.75)\\n * // s(\\"hh*3 [sd bd]*2\\") // equivalent\\n */","meta":{"range":[61076,61495],"filename":"pattern.mjs","lineno":2039,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028385","name":"exports.zoom","type":"VariableDeclaration"}},"description":"<p>Plays a portion of a pattern, specified by the beginning and end of a time span. The new resulting pattern is played over the time period of the original pattern:</p>","examples":["s(\\"bd*2 hh*3 [sd bd]*2 perc\\").zoom(0.25, 0.75)\\n// s(\\"hh*3 [sd bd]*2\\") // equivalent"],"name":"zoom","longname":"zoom","kind":"constant","scope":"global"},{"comment":"/**\\n * Splits a pattern into the given number of slices, and plays them according to a pattern of slice numbers.\\n * Similar to \`slice\`, but slices up patterns rather than sound samples.\\n * @param {number} number of slices\\n * @param {number} slices to play\\n * @example\\n * note(\\"0 1 2 3 4 5 6 7\\".scale('c:mixolydian'))\\n *.bite(4, \\"3 2 1 0\\")\\n * @example\\n * sound(\\"bd - bd bd*2, - sd:6 - sd:5 sd:1 - [- sd:2] -, hh [- cp:7]\\")\\n  .bank(\\"RolandTR909\\").speed(1.2)\\n  .bite(4, \\"0 0 [1 2] <3 2> 0 0 [2 1] 3\\")\\n */","meta":{"range":[62128,62426],"filename":"pattern.mjs","lineno":2071,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028510","name":"exports.bite","type":"VariableDeclaration"}},"description":"<p>Splits a pattern into the given number of slices, and plays them according to a pattern of slice numbers.\\nSimilar to <code>slice</code>, but slices up patterns rather than sound samples.</p>","params":[{"type":{"names":["number"]},"description":"<p>of slices</p>","name":"number"},{"type":{"names":["number"]},"description":"<p>to play</p>","name":"slices"}],"examples":["note(\\"0 1 2 3 4 5 6 7\\".scale('c:mixolydian'))\\n.bite(4, \\"3 2 1 0\\")","sound(\\"bd - bd bd*2, - sd:6 - sd:5 sd:1 - [- sd:2] -, hh [- cp:7]\\")\\n  .bank(\\"RolandTR909\\").speed(1.2)\\n  .bite(4, \\"0 0 [1 2] <3 2> 0 0 [2 1] 3\\")"],"name":"bite","longname":"bite","kind":"constant","scope":"global"},{"comment":"/**\\n * Selects the given fraction of the pattern and repeats that part to fill the remainder of the cycle.\\n * @param {number} fraction fraction to select\\n * @example\\n * s(\\"lt ht mt cp, [hh oh]*2\\").linger(\\"<1 .5 .25 .125>\\")\\n */","meta":{"range":[62655,62897],"filename":"pattern.mjs","lineno":2092,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028575","name":"exports.linger","type":"VariableDeclaration"}},"description":"<p>Selects the given fraction of the pattern and repeats that part to fill the remainder of the cycle.</p>","params":[{"type":{"names":["number"]},"description":"<p>fraction to select</p>","name":"fraction"}],"examples":["s(\\"lt ht mt cp, [hh oh]*2\\").linger(\\"<1 .5 .25 .125>\\")"],"name":"linger","longname":"linger","kind":"constant","scope":"global"},{"comment":"/**\\n * Samples the pattern at a rate of n events per cycle. Useful for turning a continuous pattern into a discrete one.\\n * @name segment\\n * @synonyms seg\\n * @param {number} segments number of segments per cycle\\n * @example\\n * note(saw.range(40,52).segment(24))\\n */","meta":{"filename":"pattern.mjs","lineno":2106,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Samples the pattern at a rate of n events per cycle. Useful for turning a continuous pattern into a discrete one.</p>","name":"segment","synonyms_text":"seg","synonyms":["seg"],"params":[{"type":{"names":["number"]},"description":"<p>number of segments per cycle</p>","name":"segments"}],"examples":["note(saw.range(40,52).segment(24))"],"longname":"segment","kind":"member","scope":"global"},{"comment":"/**\\n * The function \`swingBy x n\` breaks each cycle into \`n\` slices, and then delays events in the second half of each slice by the amount \`x\`, which is relative to the size of the (half) slice. So if \`x\` is 0 it does nothing, \`0.5\` delays for half the note duration, and 1 will wrap around to doing nothing again. The end result is a shuffle or swing-like rhythm\\n * @param {number} subdivision\\n * @param {number} offset\\n * @example\\n * s(\\"hh*8\\").swingBy(1/3, 4)\\n */","meta":{"range":[63780,63882],"filename":"pattern.mjs","lineno":2125,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028659","name":"exports.swingBy","type":"VariableDeclaration"}},"description":"<p>The function <code>swingBy x n</code> breaks each cycle into <code>n</code> slices, and then delays events in the second half of each slice by the amount <code>x</code>, which is relative to the size of the (half) slice. So if <code>x</code> is 0 it does nothing, <code>0.5</code> delays for half the note duration, and 1 will wrap around to doing nothing again. The end result is a shuffle or swing-like rhythm</p>","params":[{"type":{"names":["number"]},"name":"subdivision"},{"type":{"names":["number"]},"name":"offset"}],"examples":["s(\\"hh*8\\").swingBy(1/3, 4)"],"name":"swingBy","longname":"swingBy","kind":"constant","scope":"global"},{"comment":"/**\\n * Shorthand for swingBy with 1/3:\\n * @param {number} subdivision\\n * @example\\n * s(\\"hh*8\\").swing(4)\\n * // s(\\"hh*8\\").swingBy(1/3, 4)\\n */","meta":{"range":[64024,64098],"filename":"pattern.mjs","lineno":2134,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028683","name":"exports.swing","type":"VariableDeclaration"}},"description":"<p>Shorthand for swingBy with 1/3:</p>","params":[{"type":{"names":["number"]},"name":"subdivision"}],"examples":["s(\\"hh*8\\").swing(4)\\n// s(\\"hh*8\\").swingBy(1/3, 4)"],"name":"swing","longname":"swing","kind":"constant","scope":"global"},{"comment":"/**\\n * Swaps 1s and 0s in a binary pattern.\\n * @name invert\\n * @synonyms inv\\n * @example\\n * s(\\"bd\\").struct(\\"1 0 0 1 0 0 1 0\\".lastOf(4, invert))\\n */","meta":{"filename":"pattern.mjs","lineno":2136,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Swaps 1s and 0s in a binary pattern.</p>","name":"invert","synonyms_text":"inv","synonyms":["inv"],"examples":["s(\\"bd\\").struct(\\"1 0 0 1 0 0 1 0\\".lastOf(4, invert))"],"longname":"invert","kind":"member","scope":"global"},{"comment":"/**\\n * Applies the given function whenever the given pattern is in a true state.\\n * @name when\\n * @memberof Pattern\\n * @param {Pattern} binary_pat\\n * @param {function} func\\n * @returns Pattern\\n * @example\\n * \\"c3 eb3 g3\\".when(\\"<0 1>/2\\", x=>x.sub(\\"5\\")).note()\\n */","meta":{"filename":"pattern.mjs","lineno":2153,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Applies the given function whenever the given pattern is in a true state.</p>","name":"when","memberof":"Pattern","params":[{"type":{"names":["Pattern"]},"name":"binary_pat"},{"type":{"names":["function"]},"name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["\\"c3 eb3 g3\\".when(\\"<0 1>/2\\", x=>x.sub(\\"5\\")).note()"],"scope":"static","longname":"Pattern.when","kind":"member"},{"comment":"/**\\n * Superimposes the function result on top of the original pattern, delayed by the given time.\\n * @name off\\n * @memberof Pattern\\n * @param {Pattern | number} time offset time\\n * @param {function} func function to apply\\n * @returns Pattern\\n * @example\\n * \\"c3 eb3 g3\\".off(1/8, x=>x.add(7)).note()\\n */","meta":{"filename":"pattern.mjs","lineno":2167,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Superimposes the function result on top of the original pattern, delayed by the given time.</p>","name":"off","memberof":"Pattern","params":[{"type":{"names":["Pattern","number"]},"description":"<p>offset time</p>","name":"time"},{"type":{"names":["function"]},"description":"<p>function to apply</p>","name":"func"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["\\"c3 eb3 g3\\".off(1/8, x=>x.add(7)).note()"],"scope":"static","longname":"Pattern.off","kind":"member"},{"comment":"/**\\n * Returns a new pattern where every other cycle is played once, twice as\\n * fast, and offset in time by one quarter of a cycle. Creates a kind of\\n * breakbeat feel.\\n * @returns Pattern\\n */","meta":{"range":[65408,65546],"filename":"pattern.mjs","lineno":2187,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028770","name":"exports.brak","type":"VariableDeclaration"}},"description":"<p>Returns a new pattern where every other cycle is played once, twice as\\nfast, and offset in time by one quarter of a cycle. Creates a kind of\\nbreakbeat feel.</p>","returns":[{"description":"<p>Pattern</p>"}],"name":"brak","longname":"brak","kind":"constant","scope":"global"},{"comment":"/**\\n * Reverse all haps in a pattern\\n *\\n * @name rev\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * note(\\"c d e g\\").rev()\\n */","meta":{"filename":"pattern.mjs","lineno":2191,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Reverse all haps in a pattern</p>","name":"rev","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["note(\\"c d e g\\").rev()"],"scope":"static","longname":"Pattern.rev","kind":"member"},{"comment":"/** Like press, but allows you to specify the amount by which each\\n * event is shifted. pressBy(0.5) is the same as press, while\\n * pressBy(1/3) shifts each event by a third of its timespan.\\n * @example\\n * stack(s(\\"hh*4\\"),\\n *       s(\\"bd mt sd ht\\").pressBy(\\"<0 0.5 0.25>\\")\\n *      ).slow(2)\\n */","meta":{"range":[66754,66884],"filename":"pattern.mjs","lineno":2232,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028920","name":"exports.pressBy","type":"VariableDeclaration"}},"description":"<p>Like press, but allows you to specify the amount by which each\\nevent is shifted. pressBy(0.5) is the same as press, while\\npressBy(1/3) shifts each event by a third of its timespan.</p>","examples":["stack(s(\\"hh*4\\"),\\n      s(\\"bd mt sd ht\\").pressBy(\\"<0 0.5 0.25>\\")\\n     ).slow(2)"],"name":"pressBy","longname":"pressBy","kind":"constant","scope":"global"},{"comment":"/**\\n * Syncopates a rhythm, by shifting each event halfway into its timespan.\\n * @example\\n * stack(s(\\"hh*4\\"),\\n *       s(\\"bd mt sd ht\\").every(4, press)\\n *      ).slow(2)\\n */","meta":{"range":[67060,67147],"filename":"pattern.mjs","lineno":2243,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028949","name":"exports.press","type":"VariableDeclaration"}},"description":"<p>Syncopates a rhythm, by shifting each event halfway into its timespan.</p>","examples":["stack(s(\\"hh*4\\"),\\n      s(\\"bd mt sd ht\\").every(4, press)\\n     ).slow(2)"],"name":"press","longname":"press","kind":"constant","scope":"global"},{"comment":"/**\\n * Silences a pattern.\\n * @example\\n * stack(\\n *   s(\\"bd\\").hush(),\\n *   s(\\"hh*3\\")\\n * )\\n */","meta":{"range":[67243,67301],"filename":"pattern.mjs","lineno":2255,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028966","name":"Pattern.prototype.hush","type":"FunctionExpression","paramnames":[]}},"description":"<p>Silences a pattern.</p>","examples":["stack(\\n  s(\\"bd\\").hush(),\\n  s(\\"hh*3\\")\\n)"],"name":"hush","longname":"Pattern#hush","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n * Applies \`rev\` to a pattern every other cycle, so that the pattern alternates between forwards and backwards.\\n * @example\\n * note(\\"c d e g\\").palindrome()\\n */","meta":{"range":[67468,67593],"filename":"pattern.mjs","lineno":2264,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100028976","name":"exports.palindrome","type":"VariableDeclaration"}},"description":"<p>Applies <code>rev</code> to a pattern every other cycle, so that the pattern alternates between forwards and backwards.</p>","examples":["note(\\"c d e g\\").palindrome()"],"name":"palindrome","longname":"palindrome","kind":"constant","scope":"global"},{"comment":"/**\\n * Jux with adjustable stereo width. 0 = mono, 1 = full stereo.\\n * @name juxBy\\n * @synonyms juxby\\n * @example\\n * s(\\"bd lt [~ ht] mt cp ~ bd hh\\").juxBy(\\"<0 .5 1>/2\\", rev)\\n */","meta":{"filename":"pattern.mjs","lineno":2273,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Jux with adjustable stereo width. 0 = mono, 1 = full stereo.</p>","name":"juxBy","synonyms_text":"juxby","synonyms":["juxby"],"examples":["s(\\"bd lt [~ ht] mt cp ~ bd hh\\").juxBy(\\"<0 .5 1>/2\\", rev)"],"longname":"juxBy","kind":"member","scope":"global"},{"comment":"/**\\n * The jux function creates strange stereo effects, by applying a function to a pattern, but only in the right-hand channel.\\n * @example\\n * s(\\"bd lt [~ ht] mt cp ~ bd hh\\").jux(rev)\\n * @example\\n * s(\\"bd lt [~ ht] mt cp ~ bd hh\\").jux(press)\\n * @example\\n * s(\\"bd lt [~ ht] mt cp ~ bd hh\\").jux(iter(4))\\n */","meta":{"range":[68612,68708],"filename":"pattern.mjs","lineno":2303,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100029105","name":"exports.jux","type":"VariableDeclaration"}},"description":"<p>The jux function creates strange stereo effects, by applying a function to a pattern, but only in the right-hand channel.</p>","examples":["s(\\"bd lt [~ ht] mt cp ~ bd hh\\").jux(rev)","s(\\"bd lt [~ ht] mt cp ~ bd hh\\").jux(press)","s(\\"bd lt [~ ht] mt cp ~ bd hh\\").jux(iter(4))"],"name":"jux","longname":"jux","kind":"constant","scope":"global"},{"comment":"/**\\n * Superimpose and offset multiple times, applying the given function each time.\\n * @name echoWith\\n * @synonyms echowith, stutWith, stutwith\\n * @param {number} times how many times to repeat\\n * @param {number} time cycle offset between iterations\\n * @param {function} func function to apply, given the pattern and the iteration index\\n * @example\\n * \\"<0 [2 4]>\\"\\n * .echoWith(4, 1/8, (p,n) => p.add(n*2))\\n * .scale(\\"C:minor\\").note()\\n */","meta":{"filename":"pattern.mjs","lineno":2307,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Superimpose and offset multiple times, applying the given function each time.</p>","name":"echoWith","synonyms_text":"echowith, stutWith, stutwith","synonyms":["echowith","stutWith","stutwith"],"params":[{"type":{"names":["number"]},"description":"<p>how many times to repeat</p>","name":"times"},{"type":{"names":["number"]},"description":"<p>cycle offset between iterations</p>","name":"time"},{"type":{"names":["function"]},"description":"<p>function to apply, given the pattern and the iteration index</p>","name":"func"}],"examples":["\\"<0 [2 4]>\\"\\n.echoWith(4, 1/8, (p,n) => p.add(n*2))\\n.scale(\\"C:minor\\").note()"],"longname":"echoWith","kind":"member","scope":"global"},{"comment":"/**\\n * Superimpose and offset multiple times, gradually decreasing the velocity\\n * @name echo\\n * @memberof Pattern\\n * @returns Pattern\\n * @param {number} times how many times to repeat\\n * @param {number} time cycle offset between iterations\\n * @param {number} feedback velocity multiplicator for each iteration\\n * @example\\n * s(\\"bd sd\\").echo(3, 1/6, .8)\\n */","meta":{"filename":"pattern.mjs","lineno":2326,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Superimpose and offset multiple times, gradually decreasing the velocity</p>","name":"echo","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"params":[{"type":{"names":["number"]},"description":"<p>how many times to repeat</p>","name":"times"},{"type":{"names":["number"]},"description":"<p>cycle offset between iterations</p>","name":"time"},{"type":{"names":["number"]},"description":"<p>velocity multiplicator for each iteration</p>","name":"feedback"}],"examples":["s(\\"bd sd\\").echo(3, 1/6, .8)"],"scope":"static","longname":"Pattern.echo","kind":"member"},{"comment":"/**\\n * Deprecated. Like echo, but the last 2 parameters are flipped.\\n * @name stut\\n * @param {number} times how many times to repeat\\n * @param {number} feedback velocity multiplicator for each iteration\\n * @param {number} time cycle offset between iterations\\n * @example\\n * s(\\"bd sd\\").stut(3, .8, 1/6)\\n */","meta":{"filename":"pattern.mjs","lineno":2341,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Deprecated. Like echo, but the last 2 parameters are flipped.</p>","name":"stut","params":[{"type":{"names":["number"]},"description":"<p>how many times to repeat</p>","name":"times"},{"type":{"names":["number"]},"description":"<p>velocity multiplicator for each iteration</p>","name":"feedback"},{"type":{"names":["number"]},"description":"<p>cycle offset between iterations</p>","name":"time"}],"examples":["s(\\"bd sd\\").stut(3, .8, 1/6)"],"longname":"stut","kind":"member","scope":"global"},{"comment":"/**\\n * Divides a pattern into a given number of subdivisions, plays the subdivisions in order, but increments the starting subdivision each cycle. The pattern wraps to the first subdivision after the last subdivision is played.\\n * @name iter\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * note(\\"0 1 2 3\\".scale('A minor')).iter(4)\\n */","meta":{"filename":"pattern.mjs","lineno":2354,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Divides a pattern into a given number of subdivisions, plays the subdivisions in order, but increments the starting subdivision each cycle. The pattern wraps to the first subdivision after the last subdivision is played.</p>","name":"iter","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["note(\\"0 1 2 3\\".scale('A minor')).iter(4)"],"scope":"static","longname":"Pattern.iter","kind":"member"},{"comment":"/**\\n * Like \`iter\`, but plays the subdivisions in reverse order. Known as iter' in tidalcycles\\n * @name iterBack\\n * @synonyms iterback\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * note(\\"0 1 2 3\\".scale('A minor')).iterBack(4)\\n */","meta":{"filename":"pattern.mjs","lineno":2381,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Like <code>iter</code>, but plays the subdivisions in reverse order. Known as iter' in tidalcycles</p>","name":"iterBack","synonyms_text":"iterback","synonyms":["iterback"],"memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["note(\\"0 1 2 3\\".scale('A minor')).iterBack(4)"],"scope":"static","longname":"Pattern.iterBack","kind":"member"},{"comment":"/**\\n * Repeats each cycle the given number of times.\\n * @name repeatCycles\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * note(irand(12).add(34)).segment(4).repeatCycles(2).s(\\"gm_acoustic_guitar_nylon\\")\\n */","meta":{"filename":"pattern.mjs","lineno":2399,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Repeats each cycle the given number of times.</p>","name":"repeatCycles","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["note(irand(12).add(34)).segment(4).repeatCycles(2).s(\\"gm_acoustic_guitar_nylon\\")"],"scope":"static","longname":"Pattern.repeatCycles","kind":"member"},{"comment":"/**\\n * Divides a pattern into a given number of parts, then cycles through those parts in turn, applying the given function to each part in turn (one part per cycle).\\n * @name chunk\\n * @synonyms slowChunk, slowchunk\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * \\"0 1 2 3\\".chunk(4, x=>x.add(7))\\n * .scale(\\"A:minor\\").note()\\n */","meta":{"filename":"pattern.mjs","lineno":2422,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Divides a pattern into a given number of parts, then cycles through those parts in turn, applying the given function to each part in turn (one part per cycle).</p>","name":"chunk","synonyms_text":"slowChunk, slowchunk","synonyms":["slowChunk","slowchunk"],"memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["\\"0 1 2 3\\".chunk(4, x=>x.add(7))\\n.scale(\\"A:minor\\").note()"],"scope":"static","longname":"Pattern.chunk","kind":"member"},{"comment":"/**\\n * Like \`chunk\`, but cycles through the parts in reverse order. Known as chunk' in tidalcycles\\n * @name chunkBack\\n * @synonyms chunkback\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * \\"0 1 2 3\\".chunkBack(4, x=>x.add(7))\\n * .scale(\\"A:minor\\").note()\\n */","meta":{"filename":"pattern.mjs","lineno":2448,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Like <code>chunk</code>, but cycles through the parts in reverse order. Known as chunk' in tidalcycles</p>","name":"chunkBack","synonyms_text":"chunkback","synonyms":["chunkback"],"memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["\\"0 1 2 3\\".chunkBack(4, x=>x.add(7))\\n.scale(\\"A:minor\\").note()"],"scope":"static","longname":"Pattern.chunkBack","kind":"member"},{"comment":"/**\\n * Like \`chunk\`, but the cycles of the source pattern aren't repeated\\n * for each set of chunks.\\n * @name fastChunk\\n * @synonyms fastchunk\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * \\"<0 8> 1 2 3 4 5 6 7\\"\\n * .fastChunk(4, x => x.color('red')).slow(2)\\n * .scale(\\"C2:major\\").note()\\n */","meta":{"filename":"pattern.mjs","lineno":2462,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Like <code>chunk</code>, but the cycles of the source pattern aren't repeated\\nfor each set of chunks.</p>","name":"fastChunk","synonyms_text":"fastchunk","synonyms":["fastchunk"],"memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["\\"<0 8> 1 2 3 4 5 6 7\\"\\n.fastChunk(4, x => x.color('red')).slow(2)\\n.scale(\\"C2:major\\").note()"],"scope":"static","longname":"Pattern.fastChunk","kind":"member"},{"comment":"/**\\n * Loops the pattern inside an \`offset\` for \`cycles\`.\\n * If you think of the entire span of time in cycles as a ribbon, you can cut a single piece and loop it.\\n * @name ribbon\\n * @synonym rib\\n * @param {number} offset start point of loop in cycles\\n * @param {number} cycles loop length in cycles\\n * @example\\n * note(\\"<c d e f>\\").ribbon(1, 2)\\n * @example\\n * // Looping a portion of randomness\\n * n(irand(8).segment(4)).scale(\\"c:pentatonic\\").ribbon(1337, 2)\\n * @example\\n * // rhythm generator\\n * s(\\"bd!16?\\").ribbon(29,.5)\\n */","meta":{"filename":"pattern.mjs","lineno":2489,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Loops the pattern inside an <code>offset</code> for <code>cycles</code>.\\nIf you think of the entire span of time in cycles as a ribbon, you can cut a single piece and loop it.</p>","name":"ribbon","tags":[{"originalTitle":"synonym","title":"synonym","text":"rib","value":"rib"}],"params":[{"type":{"names":["number"]},"description":"<p>start point of loop in cycles</p>","name":"offset"},{"type":{"names":["number"]},"description":"<p>loop length in cycles</p>","name":"cycles"}],"examples":["note(\\"<c d e f>\\").ribbon(1, 2)","// Looping a portion of randomness\\nn(irand(8).segment(4)).scale(\\"c:pentatonic\\").ribbon(1337, 2)","// rhythm generator\\ns(\\"bd!16?\\").ribbon(29,.5)"],"longname":"ribbon","kind":"member","scope":"global"},{"comment":"/**\\n * Tags each Hap with an identifier. Good for filtering. The function populates Hap.context.tags (Array).\\n * @name tag\\n * @noAutocomplete\\n * @param {string} tag anything unique\\n */","meta":{"filename":"pattern.mjs","lineno":2517,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Tags each Hap with an identifier. Good for filtering. The function populates Hap.context.tags (Array).</p>","name":"tag","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>anything unique</p>","name":"tag"}],"longname":"tag","kind":"member","scope":"global"},{"comment":"/**\\n * Filters haps using the given function\\n * @name filter\\n * @param {Function} test function to test Hap\\n * @example\\n * s(\\"hh!7 oh\\").filter(hap => hap.value.s==='hh')\\n */","meta":{"filename":"pattern.mjs","lineno":2527,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Filters haps using the given function</p>","name":"filter","params":[{"type":{"names":["function"]},"description":"<p>function to test Hap</p>","name":"test"}],"examples":["s(\\"hh!7 oh\\").filter(hap => hap.value.s==='hh')"],"longname":"filter","kind":"member","scope":"global"},{"comment":"/**\\n * Filters haps by their begin time\\n * @name filterWhen\\n * @noAutocomplete\\n * @param {Function} test function to test Hap.whole.begin\\n */","meta":{"filename":"pattern.mjs","lineno":2536,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Filters haps by their begin time</p>","name":"filterWhen","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"params":[{"type":{"names":["function"]},"description":"<p>function to test Hap.whole.begin</p>","name":"test"}],"longname":"filterWhen","kind":"member","scope":"global"},{"comment":"/**\\n * Use within to apply a function to only a part of a pattern.\\n * @name within\\n * @param {number} start start within cycle (0 - 1)\\n * @param {number} end end within cycle (0 - 1). Must be > start\\n * @param {Function} func function to be applied to the sub-pattern\\n */","meta":{"filename":"pattern.mjs","lineno":2544,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Use within to apply a function to only a part of a pattern.</p>","name":"within","params":[{"type":{"names":["number"]},"description":"<p>start within cycle (0 - 1)</p>","name":"start"},{"type":{"names":["number"]},"description":"<p>end within cycle (0 - 1). Must be &gt; start</p>","name":"end"},{"type":{"names":["function"]},"description":"<p>function to be applied to the sub-pattern</p>","name":"func"}],"longname":"within","kind":"member","scope":"global"},{"comment":"/**\\n * *Experimental*\\n *\\n * Speeds a pattern up or down, to fit to the given number of steps per cycle.\\n * @example\\n * sound(\\"bd sd cp\\").pace(4)\\n * // The same as sound(\\"{bd sd cp}%4\\") or sound(\\"<bd sd cp>*4\\")\\n */","meta":{"range":[78739,79034],"filename":"pattern.mjs","lineno":2625,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100030216","name":"exports.pace","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\n<p>Speeds a pattern up or down, to fit to the given number of steps per cycle.</p>","examples":["sound(\\"bd sd cp\\").pace(4)\\n// The same as sound(\\"{bd sd cp}%4\\") or sound(\\"<bd sd cp>*4\\")"],"name":"pace","longname":"pace","kind":"constant","scope":"global"},{"comment":"/**\\n * *Experimental*\\n *\\n * Aligns the steps of the patterns, creating polymeters. The patterns are repeated until they all fit the cycle. For example, in the below the first pattern is repeated twice, and the second is repeated three times, to fit the lowest common multiple of six steps.\\n * @synonyms pm\\n * @example\\n * // The same as note(\\"{c eb g, c2 g2}%6\\")\\n * polymeter(\\"c eb g\\", \\"c2 g2\\").note()\\n *\\n */","meta":{"range":[79912,80420],"filename":"pattern.mjs","lineno":2668,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100030369","name":"exports.polymeter","type":"FunctionDeclaration","paramnames":["args"]}},"description":"<p><em>Experimental</em></p>\\n<p>Aligns the steps of the patterns, creating polymeters. The patterns are repeated until they all fit the cycle. For example, in the below the first pattern is repeated twice, and the second is repeated three times, to fit the lowest common multiple of six steps.</p>","synonyms_text":"pm","synonyms":["pm"],"examples":["// The same as note(\\"{c eb g, c2 g2}%6\\")\\npolymeter(\\"c eb g\\", \\"c2 g2\\").note()"],"name":"polymeter","longname":"polymeter","kind":"function","scope":"global"},{"comment":"/** 'Concatenates' patterns like \`fastcat\`, but proportional to a number of steps per cycle.\\n * The steps can either be inferred from the pattern, or provided as a [length, pattern] pair.\\n * Has the alias \`timecat\`.\\n * @name stepcat\\n * @synonyms timeCat, timecat\\n * @return {Pattern}\\n * @example\\n * stepcat([3,\\"e3\\"],[1, \\"g3\\"]).note()\\n * // the same as \\"e3@3 g3\\".note()\\n * @example\\n * stepcat(\\"bd sd cp\\",\\"hh hh\\").sound()\\n * // the same as \\"bd sd cp hh hh\\".sound()\\n */","meta":{"filename":"pattern.mjs","lineno":2690,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>'Concatenates' patterns like <code>fastcat</code>, but proportional to a number of steps per cycle.\\nThe steps can either be inferred from the pattern, or provided as a [length, pattern] pair.\\nHas the alias <code>timecat</code>.</p>","name":"stepcat","synonyms_text":"timeCat, timecat","synonyms":["timeCat","timecat"],"returns":[{"type":{"names":["Pattern"]}}],"examples":["stepcat([3,\\"e3\\"],[1, \\"g3\\"]).note()\\n// the same as \\"e3@3 g3\\".note()","stepcat(\\"bd sd cp\\",\\"hh hh\\").sound()\\n// the same as \\"bd sd cp hh hh\\".sound()"],"longname":"stepcat","kind":"member","scope":"global"},{"comment":"/**\\n * *Experimental*\\n *\\n * Concatenates patterns stepwise, according to an inferred 'steps per cycle'.\\n * Similar to \`stepcat\`, but if an argument is a list, the whole pattern will alternate between the elements in the list.\\n *\\n * @return {Pattern}\\n * @example\\n * stepalt([\\"bd cp\\", \\"mt\\"], \\"bd\\").sound()\\n * // The same as \\"bd cp bd mt bd\\".sound()\\n */","meta":{"range":[82479,83026],"filename":"pattern.mjs","lineno":2756,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100030738","name":"exports.stepalt","type":"FunctionDeclaration","paramnames":["groups"]}},"description":"<p><em>Experimental</em></p>\\n<p>Concatenates patterns stepwise, according to an inferred 'steps per cycle'.\\nSimilar to <code>stepcat</code>, but if an argument is a list, the whole pattern will alternate between the elements in the list.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["stepalt([\\"bd cp\\", \\"mt\\"], \\"bd\\").sound()\\n// The same as \\"bd cp bd mt bd\\".sound()"],"name":"stepalt","longname":"stepalt","kind":"function","scope":"global"},{"comment":"/**\\n * *Experimental*\\n *\\n * Takes the given number of steps from a pattern (dropping the rest).\\n * A positive number will take steps from the start of a pattern, and a negative number from the end.\\n * @return {Pattern}\\n * @example\\n * \\"bd cp ht mt\\".take(\\"2\\").sound()\\n * // The same as \\"bd cp\\".sound()\\n * @example\\n * \\"bd cp ht mt\\".take(\\"1 2 3\\").sound()\\n * // The same as \\"bd bd cp bd cp ht\\".sound()\\n * @example\\n * \\"bd cp ht mt\\".take(\\"-1 -2 -3\\").sound()\\n * // The same as \\"mt ht mt cp ht mt\\".sound()\\n */","meta":{"range":[83529,84021],"filename":"pattern.mjs","lineno":2788,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100030879","name":"exports.take","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\n<p>Takes the given number of steps from a pattern (dropping the rest).\\nA positive number will take steps from the start of a pattern, and a negative number from the end.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["\\"bd cp ht mt\\".take(\\"2\\").sound()\\n// The same as \\"bd cp\\".sound()","\\"bd cp ht mt\\".take(\\"1 2 3\\").sound()\\n// The same as \\"bd bd cp bd cp ht\\".sound()","\\"bd cp ht mt\\".take(\\"-1 -2 -3\\").sound()\\n// The same as \\"mt ht mt cp ht mt\\".sound()"],"name":"take","longname":"take","kind":"constant","scope":"global"},{"comment":"/**\\n * *Experimental*\\n *\\n * Drops the given number of steps from a pattern.\\n * A positive number will drop steps from the start of a pattern, and a negative number from the end.\\n * @return {Pattern}\\n * @example\\n * \\"tha dhi thom nam\\".drop(\\"1\\").sound().bank(\\"mridangam\\")\\n * @example\\n * \\"tha dhi thom nam\\".drop(\\"-1\\").sound().bank(\\"mridangam\\")\\n * @example\\n * \\"tha dhi thom nam\\".drop(\\"0 1 2 3\\").sound().bank(\\"mridangam\\")\\n * @example\\n * \\"tha dhi thom nam\\".drop(\\"0 -1 -2 -3\\").sound().bank(\\"mridangam\\")\\n */","meta":{"range":[84522,84769],"filename":"pattern.mjs","lineno":2831,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100030991","name":"exports.drop","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\n<p>Drops the given number of steps from a pattern.\\nA positive number will drop steps from the start of a pattern, and a negative number from the end.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["\\"tha dhi thom nam\\".drop(\\"1\\").sound().bank(\\"mridangam\\")","\\"tha dhi thom nam\\".drop(\\"-1\\").sound().bank(\\"mridangam\\")","\\"tha dhi thom nam\\".drop(\\"0 1 2 3\\").sound().bank(\\"mridangam\\")","\\"tha dhi thom nam\\".drop(\\"0 -1 -2 -3\\").sound().bank(\\"mridangam\\")"],"name":"drop","longname":"drop","kind":"constant","scope":"global"},{"comment":"/**\\n * *Experimental*\\n *\\n * \`extend\` is similar to \`fast\` in that it increases its density, but it also increases the step count\\n * accordingly. So \`stepcat(\\"a b\\".extend(2), \\"c d\\")\` would be the same as \`\\"a b a b c d\\"\`, whereas\\n * \`stepcat(\\"a b\\".fast(2), \\"c d\\")\` would be the same as \`\\"[a b] [a b] c d\\"\`.\\n * @example\\n * stepcat(\\n *   sound(\\"bd bd - cp\\").extend(2),\\n *   sound(\\"bd - sd -\\")\\n * ).pace(8)\\n */","meta":{"range":[85177,85292],"filename":"pattern.mjs","lineno":2855,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100031053","name":"exports.extend","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\n<p><code>extend</code> is similar to <code>fast</code> in that it increases its density, but it also increases the step count\\naccordingly. So <code>stepcat(&quot;a b&quot;.extend(2), &quot;c d&quot;)</code> would be the same as <code>&quot;a b a b c d&quot;</code>, whereas\\n<code>stepcat(&quot;a b&quot;.fast(2), &quot;c d&quot;)</code> would be the same as <code>&quot;[a b] [a b] c d&quot;</code>.</p>","examples":["stepcat(\\n  sound(\\"bd bd - cp\\").extend(2),\\n  sound(\\"bd - sd -\\")\\n).pace(8)"],"name":"extend","longname":"extend","kind":"constant","scope":"global"},{"comment":"/**\\n * *Experimental*\\n *\\n * Expands the step size of the pattern by the given factor.\\n * @example\\n * sound(\\"tha dhi thom nam\\").bank(\\"mridangam\\").expand(\\"3 2 1 1 2 3\\").pace(8)\\n */","meta":{"range":[85473,85602],"filename":"pattern.mjs","lineno":2866,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100031074","name":"exports.expand","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\n<p>Expands the step size of the pattern by the given factor.</p>","examples":["sound(\\"tha dhi thom nam\\").bank(\\"mridangam\\").expand(\\"3 2 1 1 2 3\\").pace(8)"],"name":"expand","longname":"expand","kind":"constant","scope":"global"},{"comment":"/**\\n * *Experimental*\\n *\\n * Contracts the step size of the pattern by the given factor. See also \`expand\`.\\n * @example\\n * sound(\\"tha dhi thom nam\\").bank(\\"mridangam\\").contract(\\"3 2 1 1 2 3\\").pace(8)\\n */","meta":{"range":[85806,85939],"filename":"pattern.mjs","lineno":2877,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100031099","name":"exports.contract","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\n<p>Contracts the step size of the pattern by the given factor. See also <code>expand</code>.</p>","examples":["sound(\\"tha dhi thom nam\\").bank(\\"mridangam\\").contract(\\"3 2 1 1 2 3\\").pace(8)"],"name":"contract","longname":"contract","kind":"constant","scope":"global"},{"comment":"/**\\n * *Experimental*\\n *\\n * Progressively shrinks the pattern by 'n' steps until there's nothing left, or if a second value is given (using mininotation list syntax with \`:\`),\\n * that number of times.\\n * A positive number will progressively drop steps from the start of a pattern, and a negative number from the end.\\n * @return {Pattern}\\n * @example\\n * \\"tha dhi thom nam\\".shrink(\\"1\\").sound()\\n * .bank(\\"mridangam\\")\\n * @example\\n * \\"tha dhi thom nam\\".shrink(\\"-1\\").sound()\\n * .bank(\\"mridangam\\")\\n * @example\\n * \\"tha dhi thom nam\\".shrink(\\"1 -1\\").sound().bank(\\"mridangam\\").pace(4)\\n * @example\\n * note(\\"0 1 2 3 4 5 6 7\\".scale(\\"C:ritusen\\")).sound(\\"folkharp\\")\\n   .shrink(\\"1 -1\\").pace(8)\\n\\n */","meta":{"range":[87588,87970],"filename":"pattern.mjs","lineno":2943,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100031339","name":"exports.shrink","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\n<p>Progressively shrinks the pattern by 'n' steps until there's nothing left, or if a second value is given (using mininotation list syntax with <code>:</code>),\\nthat number of times.\\nA positive number will progressively drop steps from the start of a pattern, and a negative number from the end.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["\\"tha dhi thom nam\\".shrink(\\"1\\").sound()\\n.bank(\\"mridangam\\")","\\"tha dhi thom nam\\".shrink(\\"-1\\").sound()\\n.bank(\\"mridangam\\")","\\"tha dhi thom nam\\".shrink(\\"1 -1\\").sound().bank(\\"mridangam\\").pace(4)","note(\\"0 1 2 3 4 5 6 7\\".scale(\\"C:ritusen\\")).sound(\\"folkharp\\")\\n   .shrink(\\"1 -1\\").pace(8)"],"name":"shrink","longname":"shrink","kind":"constant","scope":"global"},{"comment":"/**\\n * *Experimental*\\n *\\n * Progressively grows the pattern by 'n' steps until the full pattern is played, or if a second value is given (using mininotation list syntax with \`:\`),\\n * that number of times.\\n * A positive number will progressively grow steps from the start of a pattern, and a negative number from the end.\\n * @return {Pattern}\\n * @example\\n * \\"tha dhi thom nam\\".grow(\\"1\\").sound()\\n * .bank(\\"mridangam\\")\\n * @example\\n * \\"tha dhi thom nam\\".grow(\\"-1\\").sound()\\n * .bank(\\"mridangam\\")\\n * @example\\n * \\"tha dhi thom nam\\".grow(\\"1 -1\\").sound().bank(\\"mridangam\\").pace(4)\\n * @example\\n * note(\\"0 1 2 3 4 5 6 7\\".scale(\\"C:ritusen\\")).sound(\\"folkharp\\")\\n   .grow(\\"1 -1\\").pace(8)\\n */","meta":{"range":[88650,89065],"filename":"pattern.mjs","lineno":2981,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100031405","name":"exports.grow","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\n<p>Progressively grows the pattern by 'n' steps until the full pattern is played, or if a second value is given (using mininotation list syntax with <code>:</code>),\\nthat number of times.\\nA positive number will progressively grow steps from the start of a pattern, and a negative number from the end.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["\\"tha dhi thom nam\\".grow(\\"1\\").sound()\\n.bank(\\"mridangam\\")","\\"tha dhi thom nam\\".grow(\\"-1\\").sound()\\n.bank(\\"mridangam\\")","\\"tha dhi thom nam\\".grow(\\"1 -1\\").sound().bank(\\"mridangam\\").pace(4)","note(\\"0 1 2 3 4 5 6 7\\".scale(\\"C:ritusen\\")).sound(\\"folkharp\\")\\n   .grow(\\"1 -1\\").pace(8)"],"name":"grow","longname":"grow","kind":"constant","scope":"global"},{"comment":"/**\\n * *Experimental*\\n * \\n * Inserts a pattern into a list of patterns. On the first repetition it will be inserted at the end of the list, then moved backwards through the list \\n * on successive repetitions. The patterns are added together stepwise, with all repetitions taking place over a single cycle. Using \`pace\` to set the \\n * number of steps per cycle is therefore usually recommended.\\n * \\n * @return {Pattern}\\n * @example\\n * \\"[c g]\\".tour(\\"e f\\", \\"e f g\\", \\"g f e c\\").note()\\n   .sound(\\"folkharp\\")\\n   .pace(8)\\n */","meta":{"range":[89586,89662],"filename":"pattern.mjs","lineno":3013,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100031482","name":"exports.tour","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\n<p>Inserts a pattern into a list of patterns. On the first repetition it will be inserted at the end of the list, then moved backwards through the list\\non successive repetitions. The patterns are added together stepwise, with all repetitions taking place over a single cycle. Using <code>pace</code> to set the\\nnumber of steps per cycle is therefore usually recommended.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["\\"[c g]\\".tour(\\"e f\\", \\"e f g\\", \\"g f e c\\").note()\\n   .sound(\\"folkharp\\")\\n   .pace(8)"],"name":"tour","longname":"tour","kind":"constant","scope":"global"},{"comment":"/**\\n * *Experimental*\\n * \\n * 'zips' together the steps of the provided patterns. This can create a long repetition, taking place over a single, dense cycle. \\n * Using \`pace\` to set the number of steps per cycle is therefore usually recommended.\\n * \\n * @returns {Pattern}\\n * @example\\n * zip(\\"e f\\", \\"e f g\\", \\"g [f e] a f4 c\\").note()\\n   .sound(\\"folkharp\\")\\n   .pace(8)\\n */","meta":{"range":[90262,90517],"filename":"pattern.mjs","lineno":3039,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100031551","name":"exports.zip","type":"VariableDeclaration"}},"description":"<p><em>Experimental</em></p>\\n<p>'zips' together the steps of the provided patterns. This can create a long repetition, taking place over a single, dense cycle.\\nUsing <code>pace</code> to set the number of steps per cycle is therefore usually recommended.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["zip(\\"e f\\", \\"e f g\\", \\"g [f e] a f4 c\\").note()\\n   .sound(\\"folkharp\\")\\n   .pace(8)"],"name":"zip","longname":"zip","kind":"constant","scope":"global"},{"comment":"/** Aliases for \`stepcat\` */","meta":{"range":[90548,90579],"filename":"pattern.mjs","lineno":3047,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100031615","name":"exports.timecat","type":"VariableDeclaration"}},"description":"<p>Aliases for <code>stepcat</code></p>","name":"timecat","longname":"timecat","kind":"constant","scope":"global"},{"comment":"/**\\n * Cuts each sample into the given number of parts, allowing you to explore a technique known as 'granular synthesis'.\\n * It turns a pattern of samples into a pattern of parts of samples.\\n * @name chop\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * samples({ rhodes: 'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3' })\\n * s(\\"rhodes\\")\\n *  .chop(4)\\n *  .rev() // reverse order of chops\\n *  .loopAt(2) // fit sample into 2 cycles\\n *\\n */","meta":{"filename":"pattern.mjs","lineno":3080,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Cuts each sample into the given number of parts, allowing you to explore a technique known as 'granular synthesis'.\\nIt turns a pattern of samples into a pattern of parts of samples.</p>","name":"chop","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["samples({ rhodes: 'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3' })\\ns(\\"rhodes\\")\\n .chop(4)\\n .rev() // reverse order of chops\\n .loopAt(2) // fit sample into 2 cycles"],"scope":"static","longname":"Pattern.chop","kind":"member"},{"comment":"/**\\n * Cuts each sample into the given number of parts, triggering progressive portions of each sample at each loop.\\n * @name striate\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"numbers:0 numbers:1 numbers:2\\").striate(6).slow(3)\\n */","meta":{"filename":"pattern.mjs","lineno":3111,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Cuts each sample into the given number of parts, triggering progressive portions of each sample at each loop.</p>","name":"striate","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"numbers:0 numbers:1 numbers:2\\").striate(6).slow(3)"],"scope":"static","longname":"Pattern.striate","kind":"member"},{"comment":"/**\\n * Makes the sample fit the given number of cycles by changing the speed.\\n * @name loopAt\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * samples({ rhodes: 'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3' })\\n * s(\\"rhodes\\").loopAt(2)\\n */","meta":{"filename":"pattern.mjs","lineno":3129,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Makes the sample fit the given number of cycles by changing the speed.</p>","name":"loopAt","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["samples({ rhodes: 'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3' })\\ns(\\"rhodes\\").loopAt(2)"],"scope":"static","longname":"Pattern.loopAt","kind":"member"},{"comment":"/**\\n * Chops samples into the given number of slices, triggering those slices with a given pattern of slice numbers.\\n * Instead of a number, it also accepts a list of numbers from 0 to 1 to slice at specific points.\\n * @name slice\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * samples('github:tidalcycles/dirt-samples')\\n * s(\\"breaks165\\").slice(8, \\"0 1 <2 2*2> 3 [4 0] 5 6 7\\".every(3, rev)).slow(0.75)\\n * @example\\n * samples('github:tidalcycles/dirt-samples')\\n * s(\\"breaks125\\").fit().slice([0,.25,.5,.75], \\"0 1 1 <2 3>\\")\\n */","meta":{"filename":"pattern.mjs","lineno":3146,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Chops samples into the given number of slices, triggering those slices with a given pattern of slice numbers.\\nInstead of a number, it also accepts a list of numbers from 0 to 1 to slice at specific points.</p>","name":"slice","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["samples('github:tidalcycles/dirt-samples')\\ns(\\"breaks165\\").slice(8, \\"0 1 <2 2*2> 3 [4 0] 5 6 7\\".every(3, rev)).slow(0.75)","samples('github:tidalcycles/dirt-samples')\\ns(\\"breaks125\\").fit().slice([0,.25,.5,.75], \\"0 1 1 <2 3>\\")"],"scope":"static","longname":"Pattern.slice","kind":"member"},{"comment":"/**\\n * Works the same as slice, but changes the playback speed of each slice to match the duration of its step.\\n * @name splice\\n * @example\\n * samples('github:tidalcycles/dirt-samples')\\n * s(\\"breaks165\\")\\n * .splice(8,  \\"0 1 [2 3 0]@2 3 0@2 7\\")\\n */","meta":{"filename":"pattern.mjs","lineno":3180,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Works the same as slice, but changes the playback speed of each slice to match the duration of its step.</p>","name":"splice","examples":["samples('github:tidalcycles/dirt-samples')\\ns(\\"breaks165\\")\\n.splice(8,  \\"0 1 [2 3 0]@2 3 0@2 7\\")"],"longname":"splice","kind":"member","scope":"global"},{"comment":"/**\\n * Makes the sample fit its event duration. Good for rhythmical loops like drum breaks.\\n * Similar to \`loopAt\`.\\n * @name fit\\n * @example\\n * samples({ rhodes: 'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3' })\\n * s(\\"rhodes/2\\").fit()\\n */","meta":{"filename":"pattern.mjs","lineno":3216,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Makes the sample fit its event duration. Good for rhythmical loops like drum breaks.\\nSimilar to <code>loopAt</code>.</p>","name":"fit","examples":["samples({ rhodes: 'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3' })\\ns(\\"rhodes/2\\").fit()"],"longname":"fit","kind":"member","scope":"global"},{"comment":"/**\\n * Makes the sample fit the given number of cycles and cps value, by\\n * changing the speed. Please note that at some point cps will be\\n * given by a global clock and this function will be\\n * deprecated/removed.\\n * @name loopAtCps\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * samples({ rhodes: 'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3' })\\n * s(\\"rhodes\\").loopAtCps(4,1.5).cps(1.5)\\n */","meta":{"filename":"pattern.mjs","lineno":3239,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Makes the sample fit the given number of cycles and cps value, by\\nchanging the speed. Please note that at some point cps will be\\ngiven by a global clock and this function will be\\ndeprecated/removed.</p>","name":"loopAtCps","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["samples({ rhodes: 'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3' })\\ns(\\"rhodes\\").loopAtCps(4,1.5).cps(1.5)"],"scope":"static","longname":"Pattern.loopAtCps","kind":"member"},{"comment":"/** exposes a custom value at query time. basically allows mutating state without evaluation */","meta":{"range":[97560,97660],"filename":"pattern.mjs","lineno":3257,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032413","name":"exports.ref","type":"VariableDeclaration"}},"description":"<p>exposes a custom value at query time. basically allows mutating state without evaluation</p>","name":"ref","longname":"ref","kind":"constant","scope":"global"},{"comment":"/**\\n * Cross-fades between left and right from 0 to 1:\\n * - 0 = (full left, no right)\\n * - .5 = (both equal)\\n * - 1 = (no left, full right)\\n *\\n * @name xfade\\n * @example\\n * xfade(s(\\"bd*2\\"), \\"<0 .25 .5 .75 1>\\", s(\\"hh*8\\"))\\n */","meta":{"filename":"pattern.mjs","lineno":3264,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Cross-fades between left and right from 0 to 1:</p>\\n<ul>\\n<li>0 = (full left, no right)</li>\\n<li>.5 = (both equal)</li>\\n<li>1 = (no left, full right)</li>\\n</ul>","name":"xfade","examples":["xfade(s(\\"bd*2\\"), \\"<0 .25 .5 .75 1>\\", s(\\"hh*8\\"))"],"longname":"xfade","kind":"member","scope":"global"},{"comment":"/**\\n * creates a structure pattern from divisions of a cycle\\n * especially useful for creating rhythms\\n * @name beat\\n * @example\\n * s(\\"bd\\").beat(\\"0,7,10\\", 16)\\n * @example\\n * s(\\"sd\\").beat(\\"4,12\\", 16)\\n */","meta":{"filename":"pattern.mjs","lineno":3288,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>creates a structure pattern from divisions of a cycle\\nespecially useful for creating rhythms</p>","name":"beat","examples":["s(\\"bd\\").beat(\\"0,7,10\\", 16)","s(\\"sd\\").beat(\\"4,12\\", 16)"],"longname":"beat","kind":"member","scope":"global"},{"comment":"/** * Picks patterns (or plain values) either from a list (by index) or a lookup table (by name).\\n * Similar to \`inhabit\`, but maintains the structure of the original patterns.\\n * @param {Pattern} pat\\n * @param {*} xs\\n * @returns {Pattern}\\n * @example\\n * note(\\"<0 1 2!2 3>\\".pick([\\"g a\\", \\"e f\\", \\"f g f g\\" , \\"g c d\\"]))\\n * @example\\n * sound(\\"<0 1 [2,0]>\\".pick([\\"bd sd\\", \\"cp cp\\", \\"hh hh\\"]))\\n * @example\\n * sound(\\"<0!2 [0,1] 1>\\".pick([\\"bd(3,8)\\", \\"sd sd\\"]))\\n * @example\\n * s(\\"<a!2 [a,b] b>\\".pick({a: \\"bd(3,8)\\", b: \\"sd sd\\"}))\\n */","meta":{"range":[1892,2094],"filename":"pick.mjs","lineno":44,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032724","name":"exports.pick","type":"VariableDeclaration"}},"description":"<p>Picks patterns (or plain values) either from a list (by index) or a lookup table (by name).\\nSimilar to <code>inhabit</code>, but maintains the structure of the original patterns.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"examples":["note(\\"<0 1 2!2 3>\\".pick([\\"g a\\", \\"e f\\", \\"f g f g\\" , \\"g c d\\"]))","sound(\\"<0 1 [2,0]>\\".pick([\\"bd sd\\", \\"cp cp\\", \\"hh hh\\"]))","sound(\\"<0!2 [0,1] 1>\\".pick([\\"bd(3,8)\\", \\"sd sd\\"]))","s(\\"<a!2 [a,b] b>\\".pick({a: \\"bd(3,8)\\", b: \\"sd sd\\"}))"],"name":"pick","longname":"pick","kind":"constant","scope":"global"},{"comment":"/** * The same as \`pick\`, but if you pick a number greater than the size of the list,\\n * it wraps around, rather than sticking at the maximum value.\\n * For example, if you pick the fifth pattern of a list of three, you'll get the\\n * second one.\\n * @param {Pattern} pat\\n * @param {*} xs\\n * @returns {Pattern}\\n */","meta":{"range":[2519,2637],"filename":"pick.mjs","lineno":65,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032769","name":"exports.pickmod","type":"VariableDeclaration"}},"description":"<p>The same as <code>pick</code>, but if you pick a number greater than the size of the list,\\nit wraps around, rather than sticking at the maximum value.\\nFor example, if you pick the fifth pattern of a list of three, you'll get the\\nsecond one.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"pickmod","longname":"pickmod","kind":"constant","scope":"global"},{"comment":"/** * pickF lets you use a pattern of numbers to pick which function to apply to another pattern.\\n * @param {Pattern} pat\\n * @param {Pattern} lookup a pattern of indices\\n * @param {function[]} funcs the array of functions from which to pull\\n * @returns {Pattern}\\n * @example\\n * s(\\"bd [rim hh]\\").pickF(\\"<0 1 2>\\", [rev,jux(rev),fast(2)])\\n * @example\\n * note(\\"<c2 d2>(3,8)\\").s(\\"square\\")\\n *     .pickF(\\"<0 2> 1\\", [jux(rev),fast(2),x=>x.lpf(800)])\\n */","meta":{"range":[3086,3201],"filename":"pick.mjs","lineno":80,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032789","name":"exports.pickF","type":"VariableDeclaration"}},"description":"<p>pickF lets you use a pattern of numbers to pick which function to apply to another pattern.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["Pattern"]},"description":"<p>a pattern of indices</p>","name":"lookup"},{"type":{"names":["Array.<function()>"]},"description":"<p>the array of functions from which to pull</p>","name":"funcs"}],"returns":[{"type":{"names":["Pattern"]}}],"examples":["s(\\"bd [rim hh]\\").pickF(\\"<0 1 2>\\", [rev,jux(rev),fast(2)])","note(\\"<c2 d2>(3,8)\\").s(\\"square\\")\\n    .pickF(\\"<0 2> 1\\", [jux(rev),fast(2),x=>x.lpf(800)])"],"name":"pickF","longname":"pickF","kind":"constant","scope":"global"},{"comment":"/** * The same as \`pickF\`, but if you pick a number greater than the size of the functions list,\\n * it wraps around, rather than sticking at the maximum value.\\n * @param {Pattern} pat\\n * @param {Pattern} lookup a pattern of indices\\n * @param {function[]} funcs the array of functions from which to pull\\n * @returns {Pattern}\\n */","meta":{"range":[3532,3656],"filename":"pick.mjs","lineno":91,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032810","name":"exports.pickmodF","type":"VariableDeclaration"}},"description":"<p>The same as <code>pickF</code>, but if you pick a number greater than the size of the functions list,\\nit wraps around, rather than sticking at the maximum value.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["Pattern"]},"description":"<p>a pattern of indices</p>","name":"lookup"},{"type":{"names":["Array.<function()>"]},"description":"<p>the array of functions from which to pull</p>","name":"funcs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"pickmodF","longname":"pickmodF","kind":"constant","scope":"global"},{"comment":"/** * Similar to \`pick\`, but it applies an outerJoin instead of an innerJoin.\\n * @param {Pattern} pat\\n * @param {*} xs\\n * @returns {Pattern}\\n */","meta":{"range":[3803,3922],"filename":"pick.mjs","lineno":100,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032831","name":"exports.pickOut","type":"VariableDeclaration"}},"description":"<p>Similar to <code>pick</code>, but it applies an outerJoin instead of an innerJoin.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"pickOut","longname":"pickOut","kind":"constant","scope":"global"},{"comment":"/** * The same as \`pickOut\`, but if you pick a number greater than the size of the list,\\n * it wraps around, rather than sticking at the maximum value.\\n * @param {Pattern} pat\\n * @param {*} xs\\n * @returns {Pattern}\\n */","meta":{"range":[4143,4267],"filename":"pick.mjs","lineno":110,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032851","name":"exports.pickmodOut","type":"VariableDeclaration"}},"description":"<p>The same as <code>pickOut</code>, but if you pick a number greater than the size of the list,\\nit wraps around, rather than sticking at the maximum value.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"pickmodOut","longname":"pickmodOut","kind":"constant","scope":"global"},{"comment":"/** * Similar to \`pick\`, but the choosen pattern is restarted when its index is triggered.\\n * @param {Pattern} pat\\n * @param {*} xs\\n * @returns {Pattern}\\n */","meta":{"range":[4427,4556],"filename":"pick.mjs","lineno":119,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032871","name":"exports.pickRestart","type":"VariableDeclaration"}},"description":"<p>Similar to <code>pick</code>, but the choosen pattern is restarted when its index is triggered.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"pickRestart","longname":"pickRestart","kind":"constant","scope":"global"},{"comment":"/** * The same as \`pickRestart\`, but if you pick a number greater than the size of the list,\\n   * it wraps around, rather than sticking at the maximum value.\\n   * @param {Pattern} pat\\n   * @param {*} xs\\n   * @returns {Pattern}\\n   * @example\\n   * \\"<a@2 b@2 c@2 d@2>\\".pickRestart({\\n        a: n(\\"0 1 2 0\\"),\\n        b: n(\\"2 3 4 ~\\"),\\n        c: n(\\"[4 5] [4 3] 2 0\\"),\\n        d: n(\\"0 -3 0 ~\\")\\n      }).scale(\\"C:major\\").s(\\"piano\\")\\n   */","meta":{"range":[4989,5123],"filename":"pick.mjs","lineno":136,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032891","name":"exports.pickmodRestart","type":"VariableDeclaration"}},"description":"<p>The same as <code>pickRestart</code>, but if you pick a number greater than the size of the list,\\nit wraps around, rather than sticking at the maximum value.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"examples":["\\"<a@2 b@2 c@2 d@2>\\".pickRestart({\\n        a: n(\\"0 1 2 0\\"),\\n        b: n(\\"2 3 4 ~\\"),\\n        c: n(\\"[4 5] [4 3] 2 0\\"),\\n        d: n(\\"0 -3 0 ~\\")\\n      }).scale(\\"C:major\\").s(\\"piano\\")"],"name":"pickmodRestart","longname":"pickmodRestart","kind":"constant","scope":"global"},{"comment":"/** * Similar to \`pick\`, but the choosen pattern is reset when its index is triggered.\\n * @param {Pattern} pat\\n * @param {*} xs\\n * @returns {Pattern}\\n */","meta":{"range":[5279,5402],"filename":"pick.mjs","lineno":145,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032911","name":"exports.pickReset","type":"VariableDeclaration"}},"description":"<p>Similar to <code>pick</code>, but the choosen pattern is reset when its index is triggered.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"pickReset","longname":"pickReset","kind":"constant","scope":"global"},{"comment":"/** * The same as \`pickReset\`, but if you pick a number greater than the size of the list,\\n * it wraps around, rather than sticking at the maximum value.\\n * @param {Pattern} pat\\n * @param {*} xs\\n * @returns {Pattern}\\n */","meta":{"range":[5625,5753],"filename":"pick.mjs","lineno":155,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100032931","name":"exports.pickmodReset","type":"VariableDeclaration"}},"description":"<p>The same as <code>pickReset</code>, but if you pick a number greater than the size of the list,\\nit wraps around, rather than sticking at the maximum value.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"pickmodReset","longname":"pickmodReset","kind":"constant","scope":"global"},{"comment":"/**\\n  /** * Picks patterns (or plain values) either from a list (by index) or a lookup table (by name).\\n   * Similar to \`pick\`, but cycles are squeezed into the target ('inhabited') pattern.\\n   * @name inhabit\\n   * @synonyms pickSqueeze\\n   * @param {Pattern} pat\\n   * @param {*} xs\\n   * @returns {Pattern}\\n   * @example\\n   * \\"<a b [a,b]>\\".inhabit({a: s(\\"bd(3,8)\\"),\\n                            b: s(\\"cp sd\\")\\n                           })\\n   * @example\\n   * s(\\"a@2 [a b] a\\".inhabit({a: \\"bd(3,8)\\", b: \\"sd sd\\"})).slow(4)\\n   */","meta":{"filename":"pick.mjs","lineno":159,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>/** * Picks patterns (or plain values) either from a list (by index) or a lookup table (by name).\\nSimilar to <code>pick</code>, but cycles are squeezed into the target ('inhabited') pattern.</p>","name":"inhabit","synonyms_text":"pickSqueeze","synonyms":["pickSqueeze"],"params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"examples":["\\"<a b [a,b]>\\".inhabit({a: s(\\"bd(3,8)\\"),\\n                            b: s(\\"cp sd\\")\\n                           })","s(\\"a@2 [a b] a\\".inhabit({a: \\"bd(3,8)\\", b: \\"sd sd\\"})).slow(4)"],"longname":"inhabit","kind":"member","scope":"global"},{"comment":"/** * The same as \`inhabit\`, but if you pick a number greater than the size of the list,\\n * it wraps around, rather than sticking at the maximum value.\\n * For example, if you pick the fifth pattern of a list of three, you'll get the\\n * second one.\\n * @name inhabitmod\\n * @synonyms pickmodSqueeze\\n * @param {Pattern} pat\\n * @param {*} xs\\n * @returns {Pattern}\\n */","meta":{"filename":"pick.mjs","lineno":178,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>The same as <code>inhabit</code>, but if you pick a number greater than the size of the list,\\nit wraps around, rather than sticking at the maximum value.\\nFor example, if you pick the fifth pattern of a list of three, you'll get the\\nsecond one.</p>","name":"inhabitmod","synonyms_text":"pickmodSqueeze","synonyms":["pickmodSqueeze"],"params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"longname":"inhabitmod","kind":"member","scope":"global"},{"comment":"/**\\n * Pick from the list of values (or patterns of values) via the index using the given\\n * pattern of integers. The selected pattern will be compressed to fit the duration of the selecting event\\n * @param {Pattern} pat\\n * @param {*} xs\\n * @returns {Pattern}\\n * @example\\n * note(squeeze(\\"<0@2 [1!2] 2>\\", [\\"g a\\", \\"f g f g\\" , \\"g a c d\\"]))\\n */","meta":{"range":[7310,7551],"filename":"pick.mjs","lineno":203,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100033003","name":"exports.squeeze","type":"VariableDeclaration"}},"description":"<p>Pick from the list of values (or patterns of values) via the index using the given\\npattern of integers. The selected pattern will be compressed to fit the duration of the selecting event</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"examples":["note(squeeze(\\"<0@2 [1!2] 2>\\", [\\"g a\\", \\"f g f g\\" , \\"g a c d\\"]))"],"name":"squeeze","longname":"squeeze","kind":"constant","scope":"global"},{"comment":"/** Applies a function to all the running patterns. Note that the patterns are groups together into a single \`stack\` before the function is applied. This is probably what you want, but see \`each\` for\\n   * a version that applies the function to each pattern separately.\\n   * \`\`\`\\n   * $: sound(\\"bd - cp sd\\")\\n   * $: sound(\\"hh*8\\")\\n   * all(fast(\\"<2 3>\\"))\\n   * \`\`\`\\n   * \`\`\`\\n   * $: sound(\\"bd - cp sd\\")\\n   * $: sound(\\"hh*8\\")\\n   * all(x => x.pianoroll())\\n   * \`\`\`\\n   */","meta":{"range":[2920,3002],"filename":"repl.mjs","lineno":105,"columnno":8,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100033369","name":"all","type":"FunctionExpression"},"vars":{"allTransform":"repl~all~allTransform"}},"description":"<p>Applies a function to all the running patterns. Note that the patterns are groups together into a single <code>stack</code> before the function is applied. This is probably what you want, but see <code>each</code> for\\na version that applies the function to each pattern separately.</p>\\n<pre class=\\"prettyprint source\\"><code>$: sound(&quot;bd - cp sd&quot;)\\n$: sound(&quot;hh*8&quot;)\\nall(fast(&quot;&lt;2 3>&quot;))\\n</code></pre>\\n<pre class=\\"prettyprint source\\"><code>$: sound(&quot;bd - cp sd&quot;)\\n$: sound(&quot;hh*8&quot;)\\nall(x => x.pianoroll())\\n</code></pre>","name":"all","longname":"repl~all","kind":"function","memberof":"repl","scope":"inner","params":[]},{"comment":"/** Applies a function to each of the running patterns separately. This is intended for future use with upcoming 'stepwise' features. See \`all\` for a version that applies the function to all the patterns stacked together into a single pattern.\\n   * \`\`\`\\n   * $: sound(\\"bd - cp sd\\")\\n   * $: sound(\\"hh*8\\")\\n   * each(fast(\\"<2 3>\\"))\\n   * \`\`\`\\n   */","meta":{"range":[3357,3441],"filename":"repl.mjs","lineno":116,"columnno":8,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100033381","name":"each","type":"FunctionExpression"},"vars":{"eachTransform":"repl~each~eachTransform"}},"description":"<p>Applies a function to each of the running patterns separately. This is intended for future use with upcoming 'stepwise' features. See <code>all</code> for a version that applies the function to all the patterns stacked together into a single pattern.</p>\\n<pre class=\\"prettyprint source\\"><code>$: sound(&quot;bd - cp sd&quot;)\\n$: sound(&quot;hh*8&quot;)\\neach(fast(&quot;&lt;2 3>&quot;))\\n</code></pre>","name":"each","longname":"repl~each","kind":"function","memberof":"repl","scope":"inner","params":[]},{"comment":"/**\\n *  A sawtooth signal between 0 and 1.\\n *\\n * @return {Pattern}\\n * @example\\n * note(\\"<c3 [eb3,g3] g2 [g3,bb3]>*8\\")\\n * .clip(saw.slow(2))\\n * @example\\n * n(saw.range(0,8).segment(8))\\n * .scale('C major')\\n *\\n */","meta":{"range":[1533,1573],"filename":"signal.mjs","lineno":35,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100033990","name":"exports.saw","type":"VariableDeclaration"}},"description":"<p>A sawtooth signal between 0 and 1.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["note(\\"<c3 [eb3,g3] g2 [g3,bb3]>*8\\")\\n.clip(saw.slow(2))","n(saw.range(0,8).segment(8))\\n.scale('C major')"],"name":"saw","longname":"saw","kind":"constant","scope":"global"},{"comment":"/**\\n *  A sawtooth signal between -1 and 1 (like \`saw\`, but bipolar).\\n *\\n * @return {Pattern}\\n */","meta":{"range":[1673,1709],"filename":"signal.mjs","lineno":42,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034001","name":"exports.saw2","type":"VariableDeclaration"}},"description":"<p>A sawtooth signal between -1 and 1 (like <code>saw</code>, but bipolar).</p>","returns":[{"type":{"names":["Pattern"]}}],"name":"saw2","longname":"saw2","kind":"constant","scope":"global"},{"comment":"/**\\n *  A sawtooth signal between 1 and 0 (like \`saw\`, but flipped).\\n *\\n * @return {Pattern}\\n * @example\\n * note(\\"<c3 [eb3,g3] g2 [g3,bb3]>*8\\")\\n * .clip(isaw.slow(2))\\n * @example\\n * n(isaw.range(0,8).segment(8))\\n * .scale('C major')\\n *\\n */","meta":{"range":[1951,1998],"filename":"signal.mjs","lineno":56,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034009","name":"exports.isaw","type":"VariableDeclaration"}},"description":"<p>A sawtooth signal between 1 and 0 (like <code>saw</code>, but flipped).</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["note(\\"<c3 [eb3,g3] g2 [g3,bb3]>*8\\")\\n.clip(isaw.slow(2))","n(isaw.range(0,8).segment(8))\\n.scale('C major')"],"name":"isaw","longname":"isaw","kind":"constant","scope":"global"},{"comment":"/**\\n *  A sawtooth signal between 1 and -1 (like \`saw2\`, but flipped).\\n *\\n * @return {Pattern}\\n */","meta":{"range":[2099,2137],"filename":"signal.mjs","lineno":63,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034022","name":"exports.isaw2","type":"VariableDeclaration"}},"description":"<p>A sawtooth signal between 1 and -1 (like <code>saw2</code>, but flipped).</p>","returns":[{"type":{"names":["Pattern"]}}],"name":"isaw2","longname":"isaw2","kind":"constant","scope":"global"},{"comment":"/**\\n *  A sine signal between -1 and 1 (like \`sine\`, but bipolar).\\n *\\n * @return {Pattern}\\n */","meta":{"range":[2234,2296],"filename":"signal.mjs","lineno":70,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034030","name":"exports.sine2","type":"VariableDeclaration"}},"description":"<p>A sine signal between -1 and 1 (like <code>sine</code>, but bipolar).</p>","returns":[{"type":{"names":["Pattern"]}}],"name":"sine2","longname":"sine2","kind":"constant","scope":"global"},{"comment":"/**\\n *  A sine signal between 0 and 1.\\n *\\n * @return {Pattern}\\n * @example\\n * n(sine.segment(16).range(0,15))\\n * .scale(\\"C:minor\\")\\n *\\n */","meta":{"range":[2436,2476],"filename":"signal.mjs","lineno":81,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034049","name":"exports.sine","type":"VariableDeclaration"}},"description":"<p>A sine signal between 0 and 1.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["n(sine.segment(16).range(0,15))\\n.scale(\\"C:minor\\")"],"name":"sine","longname":"sine","kind":"constant","scope":"global"},{"comment":"/**\\n *  A cosine signal between 0 and 1.\\n *\\n * @return {Pattern}\\n * @example\\n * n(stack(sine,cosine).segment(16).range(0,15))\\n * .scale(\\"C:minor\\")\\n *\\n */","meta":{"range":[2632,2686],"filename":"signal.mjs","lineno":92,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034057","name":"exports.cosine","type":"VariableDeclaration"}},"description":"<p>A cosine signal between 0 and 1.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["n(stack(sine,cosine).segment(16).range(0,15))\\n.scale(\\"C:minor\\")"],"name":"cosine","longname":"cosine","kind":"constant","scope":"global"},{"comment":"/**\\n *  A cosine signal between -1 and 1 (like \`cosine\`, but bipolar).\\n *\\n * @return {Pattern}\\n */","meta":{"range":[2787,2843],"filename":"signal.mjs","lineno":99,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034072","name":"exports.cosine2","type":"VariableDeclaration"}},"description":"<p>A cosine signal between -1 and 1 (like <code>cosine</code>, but bipolar).</p>","returns":[{"type":{"names":["Pattern"]}}],"name":"cosine2","longname":"cosine2","kind":"constant","scope":"global"},{"comment":"/**\\n *  A square signal between 0 and 1.\\n *\\n * @return {Pattern}\\n * @example\\n * n(square.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"range":[2981,3042],"filename":"signal.mjs","lineno":109,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034087","name":"exports.square","type":"VariableDeclaration"}},"description":"<p>A square signal between 0 and 1.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["n(square.segment(4).range(0,7)).scale(\\"C:minor\\")"],"name":"square","longname":"square","kind":"constant","scope":"global"},{"comment":"/**\\n *  A square signal between -1 and 1 (like \`square\`, but bipolar).\\n *\\n * @return {Pattern}\\n */","meta":{"range":[3143,3185],"filename":"signal.mjs","lineno":116,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034104","name":"exports.square2","type":"VariableDeclaration"}},"description":"<p>A square signal between -1 and 1 (like <code>square</code>, but bipolar).</p>","returns":[{"type":{"names":["Pattern"]}}],"name":"square2","longname":"square2","kind":"constant","scope":"global"},{"comment":"/**\\n *  A triangle signal between 0 and 1.\\n *\\n * @return {Pattern}\\n * @example\\n * n(tri.segment(8).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"range":[3322,3360],"filename":"signal.mjs","lineno":126,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034112","name":"exports.tri","type":"VariableDeclaration"}},"description":"<p>A triangle signal between 0 and 1.</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["n(tri.segment(8).range(0,7)).scale(\\"C:minor\\")"],"name":"tri","longname":"tri","kind":"constant","scope":"global"},{"comment":"/**\\n *  A triangle signal between -1 and 1 (like \`tri\`, but bipolar).\\n *\\n * @return {Pattern}\\n */","meta":{"range":[3460,3501],"filename":"signal.mjs","lineno":133,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034120","name":"exports.tri2","type":"VariableDeclaration"}},"description":"<p>A triangle signal between -1 and 1 (like <code>tri</code>, but bipolar).</p>","returns":[{"type":{"names":["Pattern"]}}],"name":"tri2","longname":"tri2","kind":"constant","scope":"global"},{"comment":"/**\\n *  An inverted triangle signal between 1 and 0 (like \`tri\`, but flipped).\\n *\\n * @return {Pattern}\\n * @example\\n * n(itri.segment(8).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"range":[3675,3714],"filename":"signal.mjs","lineno":143,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034128","name":"exports.itri","type":"VariableDeclaration"}},"description":"<p>An inverted triangle signal between 1 and 0 (like <code>tri</code>, but flipped).</p>","returns":[{"type":{"names":["Pattern"]}}],"examples":["n(itri.segment(8).range(0,7)).scale(\\"C:minor\\")"],"name":"itri","longname":"itri","kind":"constant","scope":"global"},{"comment":"/**\\n *  An inverted triangle signal between -1 and 1 (like \`itri\`, but bipolar).\\n *\\n * @return {Pattern}\\n */","meta":{"range":[3825,3867],"filename":"signal.mjs","lineno":150,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034136","name":"exports.itri2","type":"VariableDeclaration"}},"description":"<p>An inverted triangle signal between -1 and 1 (like <code>itri</code>, but bipolar).</p>","returns":[{"type":{"names":["Pattern"]}}],"name":"itri2","longname":"itri2","kind":"constant","scope":"global"},{"comment":"/**\\n *  A signal representing the cycle time.\\n *\\n * @return {Pattern}\\n */","meta":{"range":[3943,3974],"filename":"signal.mjs","lineno":157,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034144","name":"exports.time","type":"VariableDeclaration"}},"description":"<p>A signal representing the cycle time.</p>","returns":[{"type":{"names":["Pattern"]}}],"name":"time","longname":"time","kind":"constant","scope":"global"},{"comment":"/**\\n *  The mouse's x position value ranges from 0 to 1.\\n * @name mousex\\n * @return {Pattern}\\n * @example\\n * n(mousex.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"signal.mjs","lineno":159,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>The mouse's x position value ranges from 0 to 1.</p>","name":"mousex","returns":[{"type":{"names":["Pattern"]}}],"examples":["n(mousex.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"mousex","kind":"member","scope":"global"},{"comment":"/**\\n *  The mouse's y position value ranges from 0 to 1.\\n * @name mousey\\n * @return {Pattern}\\n * @example\\n * n(mousey.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"signal.mjs","lineno":168,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>The mouse's y position value ranges from 0 to 1.</p>","name":"mousey","returns":[{"type":{"names":["Pattern"]}}],"examples":["n(mousey.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"mousey","kind":"member","scope":"global"},{"comment":"/**\\n * A discrete pattern of numbers from 0 to n-1\\n * @example\\n * n(run(4)).scale(\\"C4:pentatonic\\")\\n * // n(\\"0 1 2 3\\").scale(\\"C4:pentatonic\\")\\n */","meta":{"range":[5669,5730],"filename":"signal.mjs","lineno":230,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034361","name":"exports.run","type":"VariableDeclaration"}},"description":"<p>A discrete pattern of numbers from 0 to n-1</p>","examples":["n(run(4)).scale(\\"C4:pentatonic\\")\\n// n(\\"0 1 2 3\\").scale(\\"C4:pentatonic\\")"],"name":"run","longname":"run","kind":"constant","scope":"global"},{"comment":"/**\\n * Creates a pattern from a binary number.\\n *\\n * @name binary\\n * @param {number} n - input number to convert to binary\\n * @example\\n * \\"hh\\".s().struct(binary(5))\\n * // \\"hh\\".s().struct(\\"1 0 1\\")\\n */","meta":{"filename":"signal.mjs","lineno":232,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Creates a pattern from a binary number.</p>","name":"binary","params":[{"type":{"names":["number"]},"description":"<p>input number to convert to binary</p>","name":"n"}],"examples":["\\"hh\\".s().struct(binary(5))\\n// \\"hh\\".s().struct(\\"1 0 1\\")"],"longname":"binary","kind":"member","scope":"global"},{"comment":"/**\\n * Creates a pattern from a binary number, padded to n bits long.\\n *\\n * @name binaryN\\n * @param {number} n - input number to convert to binary\\n * @param {number} nBits - pattern length, defaults to 16\\n * @example\\n * \\"hh\\".s().struct(binaryN(55532, 16))\\n * // \\"hh\\".s().struct(\\"1 1 0 1 1 0 0 0 1 1 1 0 1 1 0 0\\")\\n */","meta":{"filename":"signal.mjs","lineno":246,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Creates a pattern from a binary number, padded to n bits long.</p>","name":"binaryN","params":[{"type":{"names":["number"]},"description":"<p>input number to convert to binary</p>","name":"n"},{"type":{"names":["number"]},"description":"<p>pattern length, defaults to 16</p>","name":"nBits"}],"examples":["\\"hh\\".s().struct(binaryN(55532, 16))\\n// \\"hh\\".s().struct(\\"1 1 0 1 1 0 0 0 1 1 1 0 1 1 0 0\\")"],"longname":"binaryN","kind":"member","scope":"global"},{"comment":"/**\\n * @name shuffle\\n * Slices a pattern into the given number of parts, then plays those parts in random order.\\n * Each part will be played exactly once per cycle.\\n * @example\\n * note(\\"c d e f\\").sound(\\"piano\\").shuffle(4)\\n * @example\\n * note(\\"c d e f\\".shuffle(4), \\"g\\").sound(\\"piano\\")\\n */","meta":{"filename":"signal.mjs","lineno":281,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"name":"shuffle\\nSlices a pattern into the given number of parts, then plays those parts in random order.\\nEach part will be played exactly once per cycle.","examples":["note(\\"c d e f\\").sound(\\"piano\\").shuffle(4)","note(\\"c d e f\\".shuffle(4), \\"g\\").sound(\\"piano\\")"],"longname":"shuffle\\nSlices a pattern into the given number of parts, then plays those parts in random order.\\nEach part will be played exactly once per cycle.","kind":"member","scope":"global"},{"comment":"/**\\n * @name scramble\\n * Slices a pattern into the given number of parts, then plays those parts at random. Similar to \`shuffle\`,\\n * but parts might be played more than once, or not at all, per cycle.\\n * @example\\n * note(\\"c d e f\\").sound(\\"piano\\").scramble(4)\\n * @example\\n * note(\\"c d e f\\".scramble(4), \\"g\\").sound(\\"piano\\")\\n */","meta":{"filename":"signal.mjs","lineno":294,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"name":"scramble\\nSlices a pattern into the given number of parts, then plays those parts at random. Similar to \`shuffle\`,\\nbut parts might be played more than once, or not at all, per cycle.","examples":["note(\\"c d e f\\").sound(\\"piano\\").scramble(4)","note(\\"c d e f\\".scramble(4), \\"g\\").sound(\\"piano\\")"],"longname":"scramble\\nSlices a pattern into the given number of parts, then plays those parts at random. Similar to \`shuffle\`,\\nbut parts might be played more than once, or not at all, per cycle.","kind":"member","scope":"global"},{"comment":"/**\\n * A continuous pattern of random numbers, between 0 and 1.\\n *\\n * @name rand\\n * @example\\n * // randomly change the cutoff\\n * s(\\"bd*4,hh*8\\").cutoff(rand.range(500,8000))\\n *\\n */","meta":{"filename":"signal.mjs","lineno":307,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>A continuous pattern of random numbers, between 0 and 1.</p>","name":"rand","examples":["// randomly change the cutoff\\ns(\\"bd*4,hh*8\\").cutoff(rand.range(500,8000))"],"longname":"rand","kind":"member","scope":"global"},{"comment":"/**\\n * A continuous pattern of random numbers, between -1 and 1\\n */","meta":{"range":[8345,8383],"filename":"signal.mjs","lineno":320,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034669","name":"exports.rand2","type":"VariableDeclaration"}},"description":"<p>A continuous pattern of random numbers, between -1 and 1</p>","name":"rand2","longname":"rand2","kind":"constant","scope":"global"},{"comment":"/**\\n * A continuous pattern of 0 or 1 (binary random), with a probability for the value being 1\\n *\\n * @name brandBy\\n * @param {number} probability - a number between 0 and 1\\n * @example\\n * s(\\"hh*10\\").pan(brandBy(0.2))\\n */","meta":{"filename":"signal.mjs","lineno":324,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>A continuous pattern of 0 or 1 (binary random), with a probability for the value being 1</p>","name":"brandBy","params":[{"type":{"names":["number"]},"description":"<p>a number between 0 and 1</p>","name":"probability"}],"examples":["s(\\"hh*10\\").pan(brandBy(0.2))"],"longname":"brandBy","kind":"member","scope":"global"},{"comment":"/**\\n * A continuous pattern of 0 or 1 (binary random)\\n *\\n * @name brand\\n * @example\\n * s(\\"hh*10\\").pan(brand)\\n */","meta":{"filename":"signal.mjs","lineno":334,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>A continuous pattern of 0 or 1 (binary random)</p>","name":"brand","examples":["s(\\"hh*10\\").pan(brand)"],"longname":"brand","kind":"member","scope":"global"},{"comment":"/**\\n * A continuous pattern of random integers, between 0 and n-1.\\n *\\n * @name irand\\n * @param {number} n max value (exclusive)\\n * @example\\n * // randomly select scale notes from 0 - 7 (= C to C)\\n * n(irand(8)).struct(\\"x x*2 x x*3\\").scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"signal.mjs","lineno":345,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>A continuous pattern of random integers, between 0 and n-1.</p>","name":"irand","params":[{"type":{"names":["number"]},"description":"<p>max value (exclusive)</p>","name":"n"}],"examples":["// randomly select scale notes from 0 - 7 (= C to C)\\nn(irand(8)).struct(\\"x x*2 x x*3\\").scale(\\"C:minor\\")"],"longname":"irand","kind":"member","scope":"global"},{"comment":"/**\\n * Choose from the list of values (or patterns of values) using the given\\n * pattern of numbers, which should be in the range of 0..1\\n * @param {Pattern} pat\\n * @param {*} xs\\n * @returns {Pattern}\\n * @example\\n * note(\\"c2 g2!2 d2 f1\\").s(chooseWith(sine.fast(2), [\\"sawtooth\\", \\"triangle\\", \\"bd:6\\"]))\\n */","meta":{"range":[9845,9932],"filename":"signal.mjs","lineno":377,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034816","name":"exports.chooseWith","type":"VariableDeclaration"}},"description":"<p>Choose from the list of values (or patterns of values) using the given\\npattern of numbers, which should be in the range of 0..1</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"examples":["note(\\"c2 g2!2 d2 f1\\").s(chooseWith(sine.fast(2), [\\"sawtooth\\", \\"triangle\\", \\"bd:6\\"]))"],"name":"chooseWith","longname":"chooseWith","kind":"constant","scope":"global"},{"comment":"/**\\n * As with {chooseWith}, but the structure comes from the chosen values, rather\\n * than the pattern you're using to choose with.\\n * @param {Pattern} pat\\n * @param {*} xs\\n * @returns {Pattern}\\n */","meta":{"range":[10134,10223],"filename":"signal.mjs","lineno":388,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034832","name":"exports.chooseInWith","type":"VariableDeclaration"}},"description":"<p>As with {chooseWith}, but the structure comes from the chosen values, rather\\nthan the pattern you're using to choose with.</p>","params":[{"type":{"names":["Pattern"]},"name":"pat"},{"type":{"names":["*"]},"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"chooseInWith","longname":"chooseInWith","kind":"constant","scope":"global"},{"comment":"/**\\n * Chooses randomly from the given list of elements.\\n * @param  {...any} xs values / patterns to choose from.\\n * @returns {Pattern} - a continuous pattern.\\n * @example\\n * note(\\"c2 g2!2 d2 f1\\").s(choose(\\"sine\\", \\"triangle\\", \\"bd:6\\"))\\n */","meta":{"range":[10464,10518],"filename":"signal.mjs","lineno":399,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034848","name":"exports.choose","type":"VariableDeclaration"}},"description":"<p>Chooses randomly from the given list of elements.</p>","params":[{"type":{"names":["any"]},"variable":true,"description":"<p>values / patterns to choose from.</p>","name":"xs"}],"returns":[{"type":{"names":["Pattern"]},"description":"<ul>\\n<li>a continuous pattern.</li>\\n</ul>"}],"examples":["note(\\"c2 g2!2 d2 f1\\").s(choose(\\"sine\\", \\"triangle\\", \\"bd:6\\"))"],"name":"choose","longname":"choose","kind":"constant","scope":"global"},{"comment":"/**\\n * Chooses from the given list of values (or patterns of values), according\\n * to the pattern that the method is called on. The pattern should be in\\n * the range 0 .. 1.\\n * @param  {...any} xs\\n * @returns {Pattern}\\n */","meta":{"range":[10743,10821],"filename":"signal.mjs","lineno":408,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034860","name":"Pattern.prototype.choose","type":"FunctionExpression","paramnames":["xs"]}},"description":"<p>Chooses from the given list of values (or patterns of values), according\\nto the pattern that the method is called on. The pattern should be in\\nthe range 0 .. 1.</p>","params":[{"type":{"names":["any"]},"variable":true,"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"choose","longname":"Pattern#choose","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n * As with choose, but the pattern that this method is called on should be\\n * in the range -1 .. 1\\n * @param  {...any} xs\\n * @returns {Pattern}\\n */","meta":{"range":[10976,11069],"filename":"signal.mjs","lineno":418,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034876","name":"Pattern.prototype.choose2","type":"FunctionExpression","paramnames":["xs"]}},"description":"<p>As with choose, but the pattern that this method is called on should be\\nin the range -1 .. 1</p>","params":[{"type":{"names":["any"]},"variable":true,"name":"xs"}],"returns":[{"type":{"names":["Pattern"]}}],"name":"choose2","longname":"Pattern#choose2","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n * Picks one of the elements at random each cycle.\\n * @synonyms randcat\\n * @returns {Pattern}\\n * @example\\n * chooseCycles(\\"bd\\", \\"hh\\", \\"sd\\").s().fast(8)\\n * @example\\n * s(\\"bd | hh | sd\\").fast(8)\\n */","meta":{"range":[11273,11346],"filename":"signal.mjs","lineno":431,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100034894","name":"exports.chooseCycles","type":"VariableDeclaration"}},"description":"<p>Picks one of the elements at random each cycle.</p>","synonyms_text":"randcat","synonyms":["randcat"],"returns":[{"type":{"names":["Pattern"]}}],"examples":["chooseCycles(\\"bd\\", \\"hh\\", \\"sd\\").s().fast(8)","s(\\"bd | hh | sd\\").fast(8)"],"name":"chooseCycles","longname":"chooseCycles","kind":"constant","scope":"global"},{"comment":"/**\\n * Chooses randomly from the given list of elements by giving a probability to each element\\n * @param {...any} pairs arrays of value and weight\\n * @returns {Pattern} - a continuous pattern.\\n * @example\\n * note(\\"c2 g2!2 d2 f1\\").s(wchoose([\\"sine\\",10], [\\"triangle\\",1], [\\"bd:6\\",1]))\\n */","meta":{"range":[12638,12703],"filename":"signal.mjs","lineno":471,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100035032","name":"exports.wchoose","type":"VariableDeclaration"}},"description":"<p>Chooses randomly from the given list of elements by giving a probability to each element</p>","params":[{"type":{"names":["any"]},"variable":true,"description":"<p>arrays of value and weight</p>","name":"pairs"}],"returns":[{"type":{"names":["Pattern"]},"description":"<ul>\\n<li>a continuous pattern.</li>\\n</ul>"}],"examples":["note(\\"c2 g2!2 d2 f1\\").s(wchoose([\\"sine\\",10], [\\"triangle\\",1], [\\"bd:6\\",1]))"],"name":"wchoose","longname":"wchoose","kind":"constant","scope":"global"},{"comment":"/**\\n * Picks one of the elements at random each cycle by giving a probability to each element\\n * @synonyms wrandcat\\n * @returns {Pattern}\\n * @example\\n * wchooseCycles([\\"bd\\",10], [\\"hh\\",1], [\\"sd\\",1]).s().fast(8)\\n * @example\\n * wchooseCycles([\\"bd bd bd\\",5], [\\"hh hh hh\\",3], [\\"sd sd sd\\",1]).fast(4).s()\\n * @example\\n * // The probability can itself be a pattern\\n * wchooseCycles([\\"bd(3,8)\\",\\"<5 0>\\"], [\\"hh hh hh\\",3]).fast(4).s()\\n */","meta":{"range":[13132,13227],"filename":"signal.mjs","lineno":485,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100035044","name":"exports.wchooseCycles","type":"VariableDeclaration"}},"description":"<p>Picks one of the elements at random each cycle by giving a probability to each element</p>","synonyms_text":"wrandcat","synonyms":["wrandcat"],"returns":[{"type":{"names":["Pattern"]}}],"examples":["wchooseCycles([\\"bd\\",10], [\\"hh\\",1], [\\"sd\\",1]).s().fast(8)","wchooseCycles([\\"bd bd bd\\",5], [\\"hh hh hh\\",3], [\\"sd sd sd\\",1]).fast(4).s()","// The probability can itself be a pattern\\nwchooseCycles([\\"bd(3,8)\\",\\"<5 0>\\"], [\\"hh hh hh\\",3]).fast(4).s()"],"name":"wchooseCycles","longname":"wchooseCycles","kind":"constant","scope":"global"},{"comment":"/**\\n * Generates a continuous pattern of [perlin noise](https://en.wikipedia.org/wiki/Perlin_noise), in the range 0..1.\\n *\\n * @name perlin\\n * @example\\n * // randomly change the cutoff\\n * s(\\"bd*4,hh*8\\").cutoff(perlin.range(500,8000))\\n *\\n */","meta":{"filename":"signal.mjs","lineno":498,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Generates a continuous pattern of <a href=\\"https://en.wikipedia.org/wiki/Perlin_noise\\">perlin noise</a>, in the range 0..1.</p>","name":"perlin","examples":["// randomly change the cutoff\\ns(\\"bd*4,hh*8\\").cutoff(perlin.range(500,8000))"],"longname":"perlin","kind":"member","scope":"global"},{"comment":"/**\\n * Randomly removes events from the pattern by a given amount.\\n * 0 = 0% chance of removal\\n * 1 = 100% chance of removal\\n *\\n * @name degradeBy\\n * @memberof Pattern\\n * @param {number} amount - a number between 0 and 1\\n * @returns Pattern\\n * @example\\n * s(\\"hh*8\\").degradeBy(0.2)\\n * @example\\n * s(\\"[hh?0.2]*8\\")\\n * @example\\n * //beat generator\\n * s(\\"bd\\").segment(16).degradeBy(.5).ribbon(16,1)\\n */","meta":{"filename":"signal.mjs","lineno":516,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Randomly removes events from the pattern by a given amount.\\n0 = 0% chance of removal\\n1 = 100% chance of removal</p>","name":"degradeBy","memberof":"Pattern","params":[{"type":{"names":["number"]},"description":"<p>a number between 0 and 1</p>","name":"amount"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"hh*8\\").degradeBy(0.2)","s(\\"[hh?0.2]*8\\")","//beat generator\\ns(\\"bd\\").segment(16).degradeBy(.5).ribbon(16,1)"],"scope":"static","longname":"Pattern.degradeBy","kind":"member"},{"comment":"/**\\n *\\n * Randomly removes 50% of events from the pattern. Shorthand for \`.degradeBy(0.5)\`\\n *\\n * @name degrade\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"hh*8\\").degrade()\\n * @example\\n * s(\\"[hh?]*8\\")\\n */","meta":{"filename":"signal.mjs","lineno":542,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Randomly removes 50% of events from the pattern. Shorthand for <code>.degradeBy(0.5)</code></p>","name":"degrade","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"hh*8\\").degrade()","s(\\"[hh?]*8\\")"],"scope":"static","longname":"Pattern.degrade","kind":"member"},{"comment":"/**\\n * Inverse of \`degradeBy\`: Randomly removes events from the pattern by a given amount.\\n * 0 = 100% chance of removal\\n * 1 = 0% chance of removal\\n * Events that would be removed by degradeBy are let through by undegradeBy and vice versa (see second example).\\n *\\n * @name undegradeBy\\n * @memberof Pattern\\n * @param {number} amount - a number between 0 and 1\\n * @returns Pattern\\n * @example\\n * s(\\"hh*8\\").undegradeBy(0.2)\\n * @example\\n * s(\\"hh*10\\").layer(\\n *   x => x.degradeBy(0.2).pan(0),\\n *   x => x.undegradeBy(0.8).pan(1)\\n * )\\n */","meta":{"filename":"signal.mjs","lineno":556,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Inverse of <code>degradeBy</code>: Randomly removes events from the pattern by a given amount.\\n0 = 100% chance of removal\\n1 = 0% chance of removal\\nEvents that would be removed by degradeBy are let through by undegradeBy and vice versa (see second example).</p>","name":"undegradeBy","memberof":"Pattern","params":[{"type":{"names":["number"]},"description":"<p>a number between 0 and 1</p>","name":"amount"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"hh*8\\").undegradeBy(0.2)","s(\\"hh*10\\").layer(\\n  x => x.degradeBy(0.2).pan(0),\\n  x => x.undegradeBy(0.8).pan(1)\\n)"],"scope":"static","longname":"Pattern.undegradeBy","kind":"member"},{"comment":"/**\\n * Inverse of \`degrade\`: Randomly removes 50% of events from the pattern. Shorthand for \`.undegradeBy(0.5)\`\\n * Events that would be removed by degrade are let through by undegrade and vice versa (see second example).\\n *\\n * @name undegrade\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"hh*8\\").undegrade()\\n * @example\\n * s(\\"hh*10\\").layer(\\n *   x => x.degrade().pan(0),\\n *   x => x.undegrade().pan(1)\\n * )\\n */","meta":{"filename":"signal.mjs","lineno":586,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Inverse of <code>degrade</code>: Randomly removes 50% of events from the pattern. Shorthand for <code>.undegradeBy(0.5)</code>\\nEvents that would be removed by degrade are let through by undegrade and vice versa (see second example).</p>","name":"undegrade","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"hh*8\\").undegrade()","s(\\"hh*10\\").layer(\\n  x => x.degrade().pan(0),\\n  x => x.undegrade().pan(1)\\n)"],"scope":"static","longname":"Pattern.undegrade","kind":"member"},{"comment":"/**\\n *\\n * Randomly applies the given function by the given probability.\\n * Similar to \`someCyclesBy\`\\n *\\n * @name sometimesBy\\n * @memberof Pattern\\n * @param {number | Pattern} probability - a number between 0 and 1\\n * @param {function} function - the transformation to apply\\n * @returns Pattern\\n * @example\\n * s(\\"hh*8\\").sometimesBy(.4, x=>x.speed(\\"0.5\\"))\\n */","meta":{"filename":"signal.mjs","lineno":603,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Randomly applies the given function by the given probability.\\nSimilar to <code>someCyclesBy</code></p>","name":"sometimesBy","memberof":"Pattern","params":[{"type":{"names":["number","Pattern"]},"description":"<p>a number between 0 and 1</p>","name":"probability"},{"type":{"names":["function"]},"description":"<p>the transformation to apply</p>","name":"function"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"hh*8\\").sometimesBy(.4, x=>x.speed(\\"0.5\\"))"],"scope":"static","longname":"Pattern.sometimesBy","kind":"member"},{"comment":"/**\\n *\\n * Applies the given function with a 50% chance\\n *\\n * @name sometimes\\n * @memberof Pattern\\n * @param {function} function - the transformation to apply\\n * @returns Pattern\\n * @example\\n * s(\\"hh*8\\").sometimes(x=>x.speed(\\"0.5\\"))\\n */","meta":{"filename":"signal.mjs","lineno":623,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Applies the given function with a 50% chance</p>","name":"sometimes","memberof":"Pattern","params":[{"type":{"names":["function"]},"description":"<p>the transformation to apply</p>","name":"function"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"hh*8\\").sometimes(x=>x.speed(\\"0.5\\"))"],"scope":"static","longname":"Pattern.sometimes","kind":"member"},{"comment":"/**\\n *\\n * Randomly applies the given function by the given probability on a cycle by cycle basis.\\n * Similar to \`sometimesBy\`\\n *\\n * @name someCyclesBy\\n * @memberof Pattern\\n * @param {number | Pattern} probability - a number between 0 and 1\\n * @param {function} function - the transformation to apply\\n * @returns Pattern\\n * @example\\n * s(\\"bd,hh*8\\").someCyclesBy(.3, x=>x.speed(\\"0.5\\"))\\n */","meta":{"filename":"signal.mjs","lineno":638,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Randomly applies the given function by the given probability on a cycle by cycle basis.\\nSimilar to <code>sometimesBy</code></p>","name":"someCyclesBy","memberof":"Pattern","params":[{"type":{"names":["number","Pattern"]},"description":"<p>a number between 0 and 1</p>","name":"probability"},{"type":{"names":["function"]},"description":"<p>the transformation to apply</p>","name":"function"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"bd,hh*8\\").someCyclesBy(.3, x=>x.speed(\\"0.5\\"))"],"scope":"static","longname":"Pattern.someCyclesBy","kind":"member"},{"comment":"/**\\n *\\n * Shorthand for \`.someCyclesBy(0.5, fn)\`\\n *\\n * @name someCycles\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"bd,hh*8\\").someCycles(x=>x.speed(\\"0.5\\"))\\n */","meta":{"filename":"signal.mjs","lineno":663,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Shorthand for <code>.someCyclesBy(0.5, fn)</code></p>","name":"someCycles","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"bd,hh*8\\").someCycles(x=>x.speed(\\"0.5\\"))"],"scope":"static","longname":"Pattern.someCycles","kind":"member"},{"comment":"/**\\n *\\n * Shorthand for \`.sometimesBy(0.75, fn)\`\\n *\\n * @name often\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"hh*8\\").often(x=>x.speed(\\"0.5\\"))\\n */","meta":{"filename":"signal.mjs","lineno":677,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Shorthand for <code>.sometimesBy(0.75, fn)</code></p>","name":"often","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"hh*8\\").often(x=>x.speed(\\"0.5\\"))"],"scope":"static","longname":"Pattern.often","kind":"member"},{"comment":"/**\\n *\\n * Shorthand for \`.sometimesBy(0.25, fn)\`\\n *\\n * @name rarely\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"hh*8\\").rarely(x=>x.speed(\\"0.5\\"))\\n */","meta":{"filename":"signal.mjs","lineno":691,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Shorthand for <code>.sometimesBy(0.25, fn)</code></p>","name":"rarely","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"hh*8\\").rarely(x=>x.speed(\\"0.5\\"))"],"scope":"static","longname":"Pattern.rarely","kind":"member"},{"comment":"/**\\n *\\n * Shorthand for \`.sometimesBy(0.1, fn)\`\\n *\\n * @name almostNever\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"hh*8\\").almostNever(x=>x.speed(\\"0.5\\"))\\n */","meta":{"filename":"signal.mjs","lineno":705,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Shorthand for <code>.sometimesBy(0.1, fn)</code></p>","name":"almostNever","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"hh*8\\").almostNever(x=>x.speed(\\"0.5\\"))"],"scope":"static","longname":"Pattern.almostNever","kind":"member"},{"comment":"/**\\n *\\n * Shorthand for \`.sometimesBy(0.9, fn)\`\\n *\\n * @name almostAlways\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"hh*8\\").almostAlways(x=>x.speed(\\"0.5\\"))\\n */","meta":{"filename":"signal.mjs","lineno":719,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Shorthand for <code>.sometimesBy(0.9, fn)</code></p>","name":"almostAlways","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"hh*8\\").almostAlways(x=>x.speed(\\"0.5\\"))"],"scope":"static","longname":"Pattern.almostAlways","kind":"member"},{"comment":"/**\\n *\\n * Shorthand for \`.sometimesBy(0, fn)\` (never calls fn)\\n *\\n * @name never\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"hh*8\\").never(x=>x.speed(\\"0.5\\"))\\n */","meta":{"filename":"signal.mjs","lineno":733,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Shorthand for <code>.sometimesBy(0, fn)</code> (never calls fn)</p>","name":"never","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"hh*8\\").never(x=>x.speed(\\"0.5\\"))"],"scope":"static","longname":"Pattern.never","kind":"member"},{"comment":"/**\\n *\\n * Shorthand for \`.sometimesBy(1, fn)\` (always calls fn)\\n *\\n * @name always\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"hh*8\\").always(x=>x.speed(\\"0.5\\"))\\n */","meta":{"filename":"signal.mjs","lineno":747,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Shorthand for <code>.sometimesBy(1, fn)</code> (always calls fn)</p>","name":"always","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"hh*8\\").always(x=>x.speed(\\"0.5\\"))"],"scope":"static","longname":"Pattern.always","kind":"member"},{"comment":"/**\\n *\\n * Do something on a keypress, or array of keypresses\\n * [Key name reference](https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values)\\n *\\n * @name whenKey\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * s(\\"bd(5,8)\\").whenKey(\\"Control:j\\", x => x.segment(16).color(\\"red\\")).whenKey(\\"Control:i\\", x => x.fast(2).color(\\"blue\\"))\\n */","meta":{"filename":"signal.mjs","lineno":774,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>Do something on a keypress, or array of keypresses\\n<a href=\\"https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\\">Key name reference</a></p>","name":"whenKey","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["s(\\"bd(5,8)\\").whenKey(\\"Control:j\\", x => x.segment(16).color(\\"red\\")).whenKey(\\"Control:i\\", x => x.fast(2).color(\\"blue\\"))"],"scope":"static","longname":"Pattern.whenKey","kind":"member"},{"comment":"/**\\n *\\n * returns true when a key or array of keys is held\\n * [Key name reference](https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values)\\n *\\n * @name keyDown\\n * @memberof Pattern\\n * @returns Pattern\\n * @example\\n * keyDown(\\"Control:j\\").pick([s(\\"bd(5,8)\\"), s(\\"cp(3,8)\\")])\\n */","meta":{"filename":"signal.mjs","lineno":790,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{}},"description":"<p>returns true when a key or array of keys is held\\n<a href=\\"https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\\">Key name reference</a></p>","name":"keyDown","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"examples":["keyDown(\\"Control:j\\").pick([s(\\"bd(5,8)\\"), s(\\"cp(3,8)\\")])"],"scope":"static","longname":"Pattern.keyDown","kind":"member"},{"comment":"/**\\n * @deprecated does not appear to be referenced or invoked anywhere in the codebase\\n * @noAutocomplete\\n */","meta":{"range":[2812,2979],"filename":"util.mjs","lineno":73,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100047353","name":"exports.getFreq","type":"VariableDeclaration"}},"deprecated":"does not appear to be referenced or invoked anywhere in the codebase","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"getFreq","longname":"getFreq","kind":"constant","scope":"global"},{"comment":"/**\\n * @deprecated only used in workshop (first-notes)\\n * @noAutocomplete\\n */","meta":{"range":[3138,3257],"filename":"util.mjs","lineno":85,"columnno":0,"path":"/Users/felix/projects/strudel/packages/core","code":{"id":"astnode100047392","name":"exports.midi2note","type":"VariableDeclaration"}},"deprecated":"only used in workshop (first-notes)","tags":[{"originalTitle":"noAutocomplete","title":"noautocomplete","text":""}],"name":"midi2note","longname":"midi2note","kind":"constant","scope":"global"},{"comment":"/**\\n * Sends notes to Csound for rendering with MIDI semantics. The hap value is\\n * translated to these Csound pfields:\\n *\\n *  p1 -- Csound instrument either as a number (1-based, can be a fraction),\\n *        or as a string name.\\n *  p2 -- time in beats (usually seconds) from start of performance.\\n *  p3 -- duration in beats (usually seconds).\\n *  p4 -- MIDI key number (as a real number, not an integer but in [0, 127].\\n *  p5 -- MIDI velocity (as a real number, not an integer but in [0, 127].\\n *  p6 -- Strudel controls, as a string.\\n */","meta":{"range":[4695,6078],"filename":"index.mjs","lineno":139,"columnno":0,"path":"/Users/felix/projects/strudel/packages/csound","code":{"id":"astnode100049954","name":"exports.csoundm","type":"VariableDeclaration"}},"description":"<p>Sends notes to Csound for rendering with MIDI semantics. The hap value is\\ntranslated to these Csound pfields:</p>\\n<p>p1 -- Csound instrument either as a number (1-based, can be a fraction),\\nor as a string name.\\np2 -- time in beats (usually seconds) from start of performance.\\np3 -- duration in beats (usually seconds).\\np4 -- MIDI key number (as a real number, not an integer but in [0, 127].\\np5 -- MIDI velocity (as a real number, not an integer but in [0, 127].\\np6 -- Strudel controls, as a string.</p>","name":"csoundm","longname":"csoundm","kind":"constant","scope":"global"},{"comment":"/**\\n * Visualises a pattern as a scrolling 'pianoroll', displayed in the background of the editor. To show a pianoroll for all running patterns, use \`all(pianoroll)\`. To have a pianoroll appear below\\n * a pattern instead, prefix with \`_\`, e.g.: \`sound(\\"bd sd\\")._pianoroll()\`.\\n *\\n * @name pianoroll\\n * @synonyms punchcard\\n * @param {Object} options Object containing all the optional following parameters as key value pairs:\\n * @param {integer} cycles number of cycles to be displayed at the same time - defaults to 4\\n * @param {number} playhead location of the active notes on the time axis - 0 to 1, defaults to 0.5\\n * @param {boolean} vertical displays the roll vertically - 0 by default\\n * @param {boolean} labels displays labels on individual notes (see the label function) - 0 by default\\n * @param {boolean} flipTime reverse the direction of the roll - 0 by default\\n * @param {boolean} flipValues reverse the relative location of notes on the value axis - 0 by default\\n * @param {number} overscan lookup X cycles outside of the cycles window to display notes in advance - 1 by default\\n * @param {boolean} hideNegative hide notes with negative time (before starting playing the pattern) - 0 by default\\n * @param {boolean} smear notes leave a solid trace - 0 by default\\n * @param {boolean} fold notes takes the full value axis width - 0 by default\\n * @param {string} active hexadecimal or CSS color of the active notes - defaults to #FFCA28\\n * @param {string} inactive hexadecimal or CSS color of the inactive notes - defaults to #7491D2\\n * @param {string} background hexadecimal or CSS color of the background - defaults to transparent\\n * @param {string} playheadColor hexadecimal or CSS color of the line representing the play head - defaults to white\\n * @param {boolean} fill notes are filled with color (otherwise only the label is displayed) - 0 by default\\n * @param {boolean} fillActive active notes are filled with color - 0 by default\\n * @param {boolean} stroke notes are shown with colored borders - 0 by default\\n * @param {boolean} strokeActive active notes are shown with colored borders - 0 by default\\n * @param {boolean} hideInactive only active notes are shown - 0 by default\\n * @param {boolean} colorizeInactive use note color for inactive notes - 1 by default\\n * @param {string} fontFamily define the font used by notes labels - defaults to 'monospace'\\n * @param {integer} minMidi minimum note value to display on the value axis - defaults to 10\\n * @param {integer} maxMidi maximum note value to display on the value axis - defaults to 90\\n * @param {boolean} autorange automatically calculate the minMidi and maxMidi parameters - 0 by default\\n * @see _pianoroll\\n * @example\\n * note(\\"c2 a2 eb2\\")\\n * .euclid(5,8)\\n * .s('sawtooth')\\n * .lpenv(4).lpf(300)\\n * .pianoroll({ labels: 1 })\\n */","meta":{"filename":"pianoroll.mjs","lineno":39,"columnno":0,"path":"/Users/felix/projects/strudel/packages/draw","code":{}},"description":"<p>Visualises a pattern as a scrolling 'pianoroll', displayed in the background of the editor. To show a pianoroll for all running patterns, use <code>all(pianoroll)</code>. To have a pianoroll appear below\\na pattern instead, prefix with <code>_</code>, e.g.: <code>sound(&quot;bd sd&quot;)._pianoroll()</code>.</p>","name":"pianoroll","synonyms_text":"punchcard","synonyms":["punchcard"],"params":[{"type":{"names":["Object"]},"description":"<p>Object containing all the optional following parameters as key value pairs:</p>","name":"options"},{"type":{"names":["integer"]},"description":"<p>number of cycles to be displayed at the same time - defaults to 4</p>","name":"cycles"},{"type":{"names":["number"]},"description":"<p>location of the active notes on the time axis - 0 to 1, defaults to 0.5</p>","name":"playhead"},{"type":{"names":["boolean"]},"description":"<p>displays the roll vertically - 0 by default</p>","name":"vertical"},{"type":{"names":["boolean"]},"description":"<p>displays labels on individual notes (see the label function) - 0 by default</p>","name":"labels"},{"type":{"names":["boolean"]},"description":"<p>reverse the direction of the roll - 0 by default</p>","name":"flipTime"},{"type":{"names":["boolean"]},"description":"<p>reverse the relative location of notes on the value axis - 0 by default</p>","name":"flipValues"},{"type":{"names":["number"]},"description":"<p>lookup X cycles outside of the cycles window to display notes in advance - 1 by default</p>","name":"overscan"},{"type":{"names":["boolean"]},"description":"<p>hide notes with negative time (before starting playing the pattern) - 0 by default</p>","name":"hideNegative"},{"type":{"names":["boolean"]},"description":"<p>notes leave a solid trace - 0 by default</p>","name":"smear"},{"type":{"names":["boolean"]},"description":"<p>notes takes the full value axis width - 0 by default</p>","name":"fold"},{"type":{"names":["string"]},"description":"<p>hexadecimal or CSS color of the active notes - defaults to #FFCA28</p>","name":"active"},{"type":{"names":["string"]},"description":"<p>hexadecimal or CSS color of the inactive notes - defaults to #7491D2</p>","name":"inactive"},{"type":{"names":["string"]},"description":"<p>hexadecimal or CSS color of the background - defaults to transparent</p>","name":"background"},{"type":{"names":["string"]},"description":"<p>hexadecimal or CSS color of the line representing the play head - defaults to white</p>","name":"playheadColor"},{"type":{"names":["boolean"]},"description":"<p>notes are filled with color (otherwise only the label is displayed) - 0 by default</p>","name":"fill"},{"type":{"names":["boolean"]},"description":"<p>active notes are filled with color - 0 by default</p>","name":"fillActive"},{"type":{"names":["boolean"]},"description":"<p>notes are shown with colored borders - 0 by default</p>","name":"stroke"},{"type":{"names":["boolean"]},"description":"<p>active notes are shown with colored borders - 0 by default</p>","name":"strokeActive"},{"type":{"names":["boolean"]},"description":"<p>only active notes are shown - 0 by default</p>","name":"hideInactive"},{"type":{"names":["boolean"]},"description":"<p>use note color for inactive notes - 1 by default</p>","name":"colorizeInactive"},{"type":{"names":["string"]},"description":"<p>define the font used by notes labels - defaults to 'monospace'</p>","name":"fontFamily"},{"type":{"names":["integer"]},"description":"<p>minimum note value to display on the value axis - defaults to 10</p>","name":"minMidi"},{"type":{"names":["integer"]},"description":"<p>maximum note value to display on the value axis - defaults to 90</p>","name":"maxMidi"},{"type":{"names":["boolean"]},"description":"<p>automatically calculate the minMidi and maxMidi parameters - 0 by default</p>","name":"autorange"}],"see":["_pianoroll"],"examples":["note(\\"c2 a2 eb2\\")\\n.euclid(5,8)\\n.s('sawtooth')\\n.lpenv(4).lpf(300)\\n.pianoroll({ labels: 1 })"],"longname":"pianoroll","kind":"member","scope":"global"},{"comment":"/**\\n * Displays a vertical pianoroll with event labels.\\n * Supports all the same options as pianoroll.\\n *\\n * @name wordfall\\n */","meta":{"filename":"pianoroll.mjs","lineno":297,"columnno":0,"path":"/Users/felix/projects/strudel/packages/draw","code":{}},"description":"<p>Displays a vertical pianoroll with event labels.\\nSupports all the same options as pianoroll.</p>","name":"wordfall","longname":"wordfall","kind":"member","scope":"global"},{"comment":"/**\\n * Renders a pitch circle to visualize frequencies within one octave\\n * @name pitchwheel\\n * @param {number} hapcircles\\n * @param {number} circle\\n * @param {number} edo\\n * @param {string} root\\n * @param {number} thickness\\n * @param {number} hapRadius\\n * @param {string} mode\\n * @param {number} margin\\n * @example\\n * n(\\"0 .. 12\\").scale(\\"C:chromatic\\")\\n * .s(\\"sawtooth\\")\\n * .lpf(500)\\n * ._pitchwheel()\\n */","meta":{"filename":"pitchwheel.mjs","lineno":116,"columnno":0,"path":"/Users/felix/projects/strudel/packages/draw","code":{}},"description":"<p>Renders a pitch circle to visualize frequencies within one octave</p>","name":"pitchwheel","params":[{"type":{"names":["number"]},"name":"hapcircles"},{"type":{"names":["number"]},"name":"circle"},{"type":{"names":["number"]},"name":"edo"},{"type":{"names":["string"]},"name":"root"},{"type":{"names":["number"]},"name":"thickness"},{"type":{"names":["number"]},"name":"hapRadius"},{"type":{"names":["string"]},"name":"mode"},{"type":{"names":["number"]},"name":"margin"}],"examples":["n(\\"0 .. 12\\").scale(\\"C:chromatic\\")\\n.s(\\"sawtooth\\")\\n.lpf(500)\\n._pitchwheel()"],"longname":"pitchwheel","kind":"member","scope":"global"},{"comment":"/**\\n * Displays a spiral visual.\\n *\\n * @name spiral\\n * @param {Object} options Object containing all the optional following parameters as key value pairs:\\n * @param {number} stretch controls the rotations per cycle ratio, where 1 = 1 cycle / 360 degrees\\n * @param {number} size the diameter of the spiral\\n * @param {number} thickness line thickness\\n * @param {string} cap style of line ends: butt (default), round, square\\n * @param {string} inset number of rotations before spiral starts (default 3)\\n * @param {string} playheadColor color of playhead, defaults to white\\n * @param {number} playheadLength length of playhead in rotations, defaults to 0.02\\n * @param {number} playheadThickness thickness of playheadrotations, defaults to thickness\\n * @param {number} padding space around spiral\\n * @param {number} steady steadyness of spiral vs playhead. 1 = spiral doesn't move, playhead does.\\n * @param {number} activeColor color of active segment. defaults to foreground of theme\\n * @param {number} inactiveColor color of inactive segments. defaults to gutterForeground of theme\\n * @param {boolean} colorizeInactive wether or not to colorize inactive segments, defaults to 0\\n * @param {boolean} fade wether or not past and future should fade out. defaults to 1\\n * @param {boolean} logSpiral wether or not the spiral should be logarithmic. defaults to 0\\n * @example\\n * note(\\"c2 a2 eb2\\")\\n * .euclid(5,8)\\n * .s('sawtooth')\\n * .lpenv(4).lpf(300)\\n * ._spiral({ steady: .96 })\\n */","meta":{"filename":"spiral.mjs","lineno":128,"columnno":0,"path":"/Users/felix/projects/strudel/packages/draw","code":{}},"description":"<p>Displays a spiral visual.</p>","name":"spiral","params":[{"type":{"names":["Object"]},"description":"<p>Object containing all the optional following parameters as key value pairs:</p>","name":"options"},{"type":{"names":["number"]},"description":"<p>controls the rotations per cycle ratio, where 1 = 1 cycle / 360 degrees</p>","name":"stretch"},{"type":{"names":["number"]},"description":"<p>the diameter of the spiral</p>","name":"size"},{"type":{"names":["number"]},"description":"<p>line thickness</p>","name":"thickness"},{"type":{"names":["string"]},"description":"<p>style of line ends: butt (default), round, square</p>","name":"cap"},{"type":{"names":["string"]},"description":"<p>number of rotations before spiral starts (default 3)</p>","name":"inset"},{"type":{"names":["string"]},"description":"<p>color of playhead, defaults to white</p>","name":"playheadColor"},{"type":{"names":["number"]},"description":"<p>length of playhead in rotations, defaults to 0.02</p>","name":"playheadLength"},{"type":{"names":["number"]},"description":"<p>thickness of playheadrotations, defaults to thickness</p>","name":"playheadThickness"},{"type":{"names":["number"]},"description":"<p>space around spiral</p>","name":"padding"},{"type":{"names":["number"]},"description":"<p>steadyness of spiral vs playhead. 1 = spiral doesn't move, playhead does.</p>","name":"steady"},{"type":{"names":["number"]},"description":"<p>color of active segment. defaults to foreground of theme</p>","name":"activeColor"},{"type":{"names":["number"]},"description":"<p>color of inactive segments. defaults to gutterForeground of theme</p>","name":"inactiveColor"},{"type":{"names":["boolean"]},"description":"<p>wether or not to colorize inactive segments, defaults to 0</p>","name":"colorizeInactive"},{"type":{"names":["boolean"]},"description":"<p>wether or not past and future should fade out. defaults to 1</p>","name":"fade"},{"type":{"names":["boolean"]},"description":"<p>wether or not the spiral should be logarithmic. defaults to 0</p>","name":"logSpiral"}],"examples":["note(\\"c2 a2 eb2\\")\\n.euclid(5,8)\\n.s('sawtooth')\\n.lpenv(4).lpf(300)\\n._spiral({ steady: .96 })"],"longname":"spiral","kind":"member","scope":"global"},{"comment":"/**\\n * configures the default midimap, which is used when no \\"midimap\\" port is set\\n * @example\\n * defaultmidimap({ lpf: 74 })\\n * $: note(\\"c a f e\\").midi();\\n * $: lpf(sine.slow(4).segment(16)).midi();\\n */","meta":{"range":[4416,4515],"filename":"midi.mjs","lineno":131,"columnno":0,"path":"/Users/felix/projects/strudel/packages/midi","code":{"id":"astnode100057877","name":"exports.defaultmidimap","type":"FunctionDeclaration","paramnames":["mapping"]}},"description":"<p>configures the default midimap, which is used when no &quot;midimap&quot; port is set</p>","examples":["defaultmidimap({ lpf: 74 })\\n$: note(\\"c a f e\\").midi();\\n$: lpf(sine.slow(4).segment(16)).midi();"],"name":"defaultmidimap","longname":"defaultmidimap","kind":"function","scope":"global"},{"comment":"/**\\n * Adds midimaps to the registry. Inside each midimap, control names (e.g. lpf) are mapped to cc numbers.\\n * @example\\n * midimaps({ mymap: { lpf: 74 } })\\n * $: note(\\"c a f e\\")\\n * .lpf(sine.slow(4))\\n * .midimap('mymap')\\n * .midi()\\n * @example\\n * midimaps({ mymap: {\\n *   lpf: { ccn: 74, min: 0, max: 20000, exp: 0.5 }\\n * }})\\n * $: note(\\"c a f e\\")\\n * .lpf(sine.slow(2).range(400,2000))\\n * .midimap('mymap')\\n * .midi()\\n */","meta":{"range":[4962,5392],"filename":"midi.mjs","lineno":154,"columnno":0,"path":"/Users/felix/projects/strudel/packages/midi","code":{"id":"astnode100057895","name":"exports.midimaps","type":"FunctionDeclaration","paramnames":["map"]}},"description":"<p>Adds midimaps to the registry. Inside each midimap, control names (e.g. lpf) are mapped to cc numbers.</p>","examples":["midimaps({ mymap: { lpf: 74 } })\\n$: note(\\"c a f e\\")\\n.lpf(sine.slow(4))\\n.midimap('mymap')\\n.midi()","midimaps({ mymap: {\\n  lpf: { ccn: 74, min: 0, max: 20000, exp: 0.5 }\\n}})\\n$: note(\\"c a f e\\")\\n.lpf(sine.slow(2).range(400,2000))\\n.midimap('mymap')\\n.midi()"],"name":"midimaps","longname":"midimaps","kind":"function","scope":"global"},{"comment":"/**\\n * MIDI output: Opens a MIDI output port.\\n * @param {string | number} midiport MIDI device name or index defaulting to 0\\n * @param {object} options Additional MIDI configuration options\\n * @example\\n * note(\\"c4\\").midichan(1).midi('IAC Driver Bus 1')\\n * @example\\n * note(\\"c4\\").midichan(1).midi('IAC Driver Bus 1', { controller: true, latency: 50 })\\n */","meta":{"range":[10343,16489],"filename":"midi.mjs","lineno":289,"columnno":0,"path":"/Users/felix/projects/strudel/packages/midi","code":{"id":"astnode100058546","name":"Pattern.prototype.midi","type":"FunctionExpression","paramnames":["midiport","options"]},"vars":{"undefined":null,"options":"Pattern#midi~options","midiport":"Pattern#midi~midiport","midiConfig":"Pattern#midi~midiConfig","":null}},"description":"<p>MIDI output: Opens a MIDI output port.</p>","params":[{"type":{"names":["string","number"]},"description":"<p>MIDI device name or index defaulting to 0</p>","name":"midiport"},{"type":{"names":["object"]},"description":"<p>Additional MIDI configuration options</p>","name":"options"}],"examples":["note(\\"c4\\").midichan(1).midi('IAC Driver Bus 1')","note(\\"c4\\").midichan(1).midi('IAC Driver Bus 1', { controller: true, latency: 50 })"],"name":"midi","longname":"Pattern#midi","kind":"function","memberof":"Pattern","scope":"instance"},{"comment":"/**\\n * MIDI input: Opens a MIDI input port to receive MIDI control change messages.\\n * @param {string | number} input MIDI device name or index defaulting to 0\\n * @returns {Function}\\n * @example\\n * let cc = await midin('IAC Driver Bus 1')\\n * note(\\"c a f e\\").lpf(cc(0).range(0, 1000)).lpq(cc(1).range(0, 10)).sound(\\"sawtooth\\")\\n */","meta":{"range":[16860,18060],"filename":"midi.mjs","lineno":474,"columnno":0,"path":"/Users/felix/projects/strudel/packages/midi","code":{"id":"astnode100059196","name":"exports.midin","type":"FunctionDeclaration","paramnames":["input"]}},"description":"<p>MIDI input: Opens a MIDI input port to receive MIDI control change messages.</p>","params":[{"type":{"names":["string","number"]},"description":"<p>MIDI device name or index defaulting to 0</p>","name":"input"}],"returns":[{"type":{"names":["function"]}}],"examples":["let cc = await midin('IAC Driver Bus 1')\\nnote(\\"c a f e\\").lpf(cc(0).range(0, 1000)).lpq(cc(1).range(0, 10)).sound(\\"sawtooth\\")"],"name":"midin","longname":"midin","kind":"function","scope":"global"},{"comment":"/**\\n *  The accelerometer's x-axis value ranges from 0 to 1.\\n * @name accelerationX\\n * @return {Pattern}\\n * @synonyms accX\\n * @example\\n * n(accelerationX.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":5,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The accelerometer's x-axis value ranges from 0 to 1.</p>","name":"accelerationX","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"accX","synonyms":["accX"],"examples":["n(accelerationX.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"accelerationX","kind":"member","scope":"global"},{"comment":"/**\\n *  The accelerometer's y-axis value ranges from 0 to 1.\\n * @name accelerationY\\n * @return {Pattern}\\n * @synonyms accY\\n * @example\\n * n(accelerationY.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":15,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The accelerometer's y-axis value ranges from 0 to 1.</p>","name":"accelerationY","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"accY","synonyms":["accY"],"examples":["n(accelerationY.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"accelerationY","kind":"member","scope":"global"},{"comment":"/**\\n *  The accelerometer's z-axis value ranges from 0 to 1.\\n * @name accelerationZ\\n * @return {Pattern}\\n * @synonyms accZ\\n * @example\\n * n(accelerationZ.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":25,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The accelerometer's z-axis value ranges from 0 to 1.</p>","name":"accelerationZ","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"accZ","synonyms":["accZ"],"examples":["n(accelerationZ.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"accelerationZ","kind":"member","scope":"global"},{"comment":"/**\\n *  The device's gravity x-axis value ranges from 0 to 1.\\n * @name gravityX\\n * @return {Pattern}\\n * @synonyms gravX\\n * @example\\n * n(gravityX.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":35,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device's gravity x-axis value ranges from 0 to 1.</p>","name":"gravityX","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"gravX","synonyms":["gravX"],"examples":["n(gravityX.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"gravityX","kind":"member","scope":"global"},{"comment":"/**\\n *  The device's gravity y-axis value ranges from 0 to 1.\\n * @name gravityY\\n * @return {Pattern}\\n * @synonyms gravY\\n * @example\\n * n(gravityY.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":45,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device's gravity y-axis value ranges from 0 to 1.</p>","name":"gravityY","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"gravY","synonyms":["gravY"],"examples":["n(gravityY.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"gravityY","kind":"member","scope":"global"},{"comment":"/**\\n *  The device's gravity z-axis value ranges from 0 to 1.\\n * @name gravityZ\\n * @return {Pattern}\\n * @synonyms gravZ\\n * @example\\n * n(gravityZ.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":55,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device's gravity z-axis value ranges from 0 to 1.</p>","name":"gravityZ","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"gravZ","synonyms":["gravZ"],"examples":["n(gravityZ.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"gravityZ","kind":"member","scope":"global"},{"comment":"/**\\n *  The device's rotation around the alpha-axis value ranges from 0 to 1.\\n * @name rotationAlpha\\n * @return {Pattern}\\n * @synonyms rotA, rotZ, rotationZ\\n * @example\\n * n(rotationAlpha.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":65,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device's rotation around the alpha-axis value ranges from 0 to 1.</p>","name":"rotationAlpha","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"rotA, rotZ, rotationZ","synonyms":["rotA","rotZ","rotationZ"],"examples":["n(rotationAlpha.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"rotationAlpha","kind":"member","scope":"global"},{"comment":"/**\\n *  The device's rotation around the beta-axis value ranges from 0 to 1.\\n * @name rotationBeta\\n * @return {Pattern}\\n * @synonyms rotB, rotX, rotationX\\n * @example\\n * n(rotationBeta.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":75,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device's rotation around the beta-axis value ranges from 0 to 1.</p>","name":"rotationBeta","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"rotB, rotX, rotationX","synonyms":["rotB","rotX","rotationX"],"examples":["n(rotationBeta.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"rotationBeta","kind":"member","scope":"global"},{"comment":"/**\\n *  The device's rotation around the gamma-axis value ranges from 0 to 1.\\n * @name rotationGamma\\n * @return {Pattern}\\n * @synonyms rotG, rotY, rotationY\\n * @example\\n * n(rotationGamma.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":85,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device's rotation around the gamma-axis value ranges from 0 to 1.</p>","name":"rotationGamma","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"rotG, rotY, rotationY","synonyms":["rotG","rotY","rotationY"],"examples":["n(rotationGamma.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"rotationGamma","kind":"member","scope":"global"},{"comment":"/**\\n *  The device's orientation alpha value ranges from 0 to 1.\\n * @name orientationAlpha\\n * @return {Pattern}\\n * @synonyms oriA, oriZ, orientationZ\\n * @example\\n * n(orientationAlpha.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":95,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device's orientation alpha value ranges from 0 to 1.</p>","name":"orientationAlpha","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"oriA, oriZ, orientationZ","synonyms":["oriA","oriZ","orientationZ"],"examples":["n(orientationAlpha.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"orientationAlpha","kind":"member","scope":"global"},{"comment":"/**\\n *  The device's orientation beta value ranges from 0 to 1.\\n * @name orientationBeta\\n * @return {Pattern}\\n * @synonyms oriB, oriX, orientationX\\n * @example\\n * n(orientationBeta.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":105,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device's orientation beta value ranges from 0 to 1.</p>","name":"orientationBeta","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"oriB, oriX, orientationX","synonyms":["oriB","oriX","orientationX"],"examples":["n(orientationBeta.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"orientationBeta","kind":"member","scope":"global"},{"comment":"/**\\n *  The device's orientation gamma value ranges from 0 to 1.\\n * @name orientationGamma\\n * @return {Pattern}\\n * @synonyms oriG, oriY, orientationY\\n * @example\\n * n(orientationGamma.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":115,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device's orientation gamma value ranges from 0 to 1.</p>","name":"orientationGamma","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"oriG, oriY, orientationY","synonyms":["oriG","oriY","orientationY"],"examples":["n(orientationGamma.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"orientationGamma","kind":"member","scope":"global"},{"comment":"/**\\n *  The device's absolute orientation alpha value ranges from 0 to 1.\\n * @name absoluteOrientationAlpha\\n * @return {Pattern}\\n * @synonyms absOriA, absOriZ, absoluteOrientationZ\\n * @example\\n * n(absoluteOrientationAlpha.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":125,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device's absolute orientation alpha value ranges from 0 to 1.</p>","name":"absoluteOrientationAlpha","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"absOriA, absOriZ, absoluteOrientationZ","synonyms":["absOriA","absOriZ","absoluteOrientationZ"],"examples":["n(absoluteOrientationAlpha.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"absoluteOrientationAlpha","kind":"member","scope":"global"},{"comment":"/**\\n *  The device's absolute orientation beta value ranges from 0 to 1.\\n * @name absoluteOrientationBeta\\n * @return {Pattern}\\n * @synonyms absOriB, absOriX, absoluteOrientationX\\n * @example\\n * n(absoluteOrientationBeta.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":135,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device's absolute orientation beta value ranges from 0 to 1.</p>","name":"absoluteOrientationBeta","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"absOriB, absOriX, absoluteOrientationX","synonyms":["absOriB","absOriX","absoluteOrientationX"],"examples":["n(absoluteOrientationBeta.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"absoluteOrientationBeta","kind":"member","scope":"global"},{"comment":"/**\\n *  The device's absolute orientation gamma value ranges from 0 to 1.\\n * @name absoluteOrientationGamma\\n * @return {Pattern}\\n * @synonyms absOriG, absOriY, absoluteOrientationY\\n * @example\\n * n(absoluteOrientationGamma.segment(4).range(0,7)).scale(\\"C:minor\\")\\n *\\n */","meta":{"filename":"motion.mjs","lineno":145,"columnno":0,"path":"/Users/felix/projects/strudel/packages/motion","code":{}},"description":"<p>The device's absolute orientation gamma value ranges from 0 to 1.</p>","name":"absoluteOrientationGamma","returns":[{"type":{"names":["Pattern"]}}],"synonyms_text":"absOriG, absOriY, absoluteOrientationY","synonyms":["absOriG","absOriY","absoluteOrientationY"],"examples":["n(absoluteOrientationGamma.segment(4).range(0,7)).scale(\\"C:minor\\")"],"longname":"absoluteOrientationGamma","kind":"member","scope":"global"},{"comment":"/**\\n *\\n * Sends each hap as an OSC message, which can be picked up by SuperCollider or any other OSC-enabled software.\\n * For more info, read [MIDI & OSC in the docs](https://strudel.cc/learn/input-output/)\\n *\\n * @name osc\\n * @memberof Pattern\\n * @returns Pattern\\n */","meta":{"filename":"osc.mjs","lineno":75,"columnno":0,"path":"/Users/felix/projects/strudel/packages/osc","code":{}},"description":"<p>Sends each hap as an OSC message, which can be picked up by SuperCollider or any other OSC-enabled software.\\nFor more info, read <a href=\\"https://strudel.cc/learn/input-output/\\">MIDI &amp; OSC in the docs</a></p>","name":"osc","memberof":"Pattern","returns":[{"description":"<p>Pattern</p>"}],"scope":"static","longname":"Pattern.osc","kind":"member"},{"comment":"/** Overlap-Add Node */","meta":{"range":[150,6513],"filename":"ola-processor.js","lineno":7,"columnno":0,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100088602","name":"OLAProcessor","type":"ClassDeclaration","paramnames":["options"]}},"name":"OLAProcessor","longname":"OLAProcessor","kind":"class","classdesc":"<p>Overlap-Add Node</p>","scope":"global"},{"comment":"/** Handles dynamic reallocation of input/output channels buffer\\n     (channel numbers may lety during lifecycle) **/","meta":{"range":[1429,1897],"filename":"ola-processor.js","lineno":39,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100088755","name":"OLAProcessor#reallocateChannelsIfNeeded","type":"MethodDefinition","paramnames":["inputs","outputs"]},"vars":{"":null}},"description":"<p>Handles dynamic reallocation of input/output channels buffer\\n(channel numbers may lety during lifecycle)</p>","name":"reallocateChannelsIfNeeded","longname":"OLAProcessor#reallocateChannelsIfNeeded","kind":"function","memberof":"OLAProcessor","scope":"instance","params":[]},{"comment":"/** Read next web audio block to input buffers **/","meta":{"range":[3534,4122],"filename":"ola-processor.js","lineno":92,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100089062","name":"OLAProcessor#readInputs","type":"MethodDefinition","paramnames":["inputs"]},"vars":{"":null}},"description":"<p>Read next web audio block to input buffers</p>","name":"readInputs","longname":"OLAProcessor#readInputs","kind":"function","memberof":"OLAProcessor","scope":"instance","params":[]},{"comment":"/** Write next web audio block from output buffers **/","meta":{"range":[4183,4461],"filename":"ola-processor.js","lineno":112,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100089183","name":"OLAProcessor#writeOutputs","type":"MethodDefinition","paramnames":["outputs"]},"vars":{"":null}},"description":"<p>Write next web audio block from output buffers</p>","name":"writeOutputs","longname":"OLAProcessor#writeOutputs","kind":"function","memberof":"OLAProcessor","scope":"instance","params":[]},{"comment":"/** Shift left content of input buffers to receive new web audio block **/","meta":{"range":[4542,4757],"filename":"ola-processor.js","lineno":122,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100089243","name":"OLAProcessor#shiftInputBuffers","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Shift left content of input buffers to receive new web audio block</p>","name":"shiftInputBuffers","longname":"OLAProcessor#shiftInputBuffers","kind":"function","memberof":"OLAProcessor","scope":"instance","params":[]},{"comment":"/** Shift left content of output buffers to receive new web audio block **/","meta":{"range":[4839,5147],"filename":"ola-processor.js","lineno":131,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100089290","name":"OLAProcessor#shiftOutputBuffers","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Shift left content of output buffers to receive new web audio block</p>","name":"shiftOutputBuffers","longname":"OLAProcessor#shiftOutputBuffers","kind":"function","memberof":"OLAProcessor","scope":"instance","params":[]},{"comment":"/** Copy contents of input buffers to buffer actually sent to process **/","meta":{"range":[5227,5454],"filename":"ola-processor.js","lineno":141,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100089357","name":"OLAProcessor#prepareInputBuffersToSend","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Copy contents of input buffers to buffer actually sent to process</p>","name":"prepareInputBuffersToSend","longname":"OLAProcessor#prepareInputBuffersToSend","kind":"function","memberof":"OLAProcessor","scope":"instance","params":[]},{"comment":"/** Add contents of output buffers just processed to output buffers **/","meta":{"range":[5532,5852],"filename":"ola-processor.js","lineno":150,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100089409","name":"OLAProcessor#handleOutputBuffersToRetrieve","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Add contents of output buffers just processed to output buffers</p>","name":"handleOutputBuffersToRetrieve","longname":"OLAProcessor#handleOutputBuffersToRetrieve","kind":"function","memberof":"OLAProcessor","scope":"instance","params":[]},{"comment":"/** Generates a reverb impulse response.\\n\\n @param {!Object} params TODO: Document the properties.\\n @param {!function(!AudioBuffer)} callback Function to call when\\n  the impulse response has been generated. The impulse response\\n  is passed to this function as its parameter. May be called\\n  immediately within the current execution context, or later. */","meta":{"range":[969,2138],"filename":"reverbGen.mjs","lineno":24,"columnno":0,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100089818","name":"reverbGen.generateReverb","type":"FunctionExpression","paramnames":["params","callback"]},"vars":{"audioContext":"reverbGen.generateReverb~audioContext","sampleRate":"reverbGen.generateReverb~sampleRate","numChannels":"reverbGen.generateReverb~numChannels","totalTime":"reverbGen.generateReverb~totalTime","decaySampleFrames":"reverbGen.generateReverb~decaySampleFrames","numSampleFrames":"reverbGen.generateReverb~numSampleFrames","fadeInSampleFrames":"reverbGen.generateReverb~fadeInSampleFrames","decayBase":"reverbGen.generateReverb~decayBase","reverbIR":"reverbGen.generateReverb~reverbIR","i":"reverbGen.generateReverb~i","chan":"reverbGen.generateReverb~chan","j":"reverbGen.generateReverb~j","chan[undefined]":"reverbGen.generateReverb~chan.undefined]"}},"description":"<p>Generates a reverb impulse response.</p>","params":[{"type":{"names":["Object"]},"nullable":false,"description":"<p>TODO: Document the properties.</p>","name":"params"},{"type":{"names":["function"]},"nullable":false,"description":"<p>Function to call when\\nthe impulse response has been generated. The impulse response\\nis passed to this function as its parameter. May be called\\nimmediately within the current execution context, or later.</p>","name":"callback"}],"name":"generateReverb","longname":"reverbGen.generateReverb","kind":"function","memberof":"reverbGen","scope":"static"},{"comment":"/** Creates a canvas element showing a graph of the given data.\\n\\n\\n @param {!Float32Array} data An array of numbers, or a Float32Array.\\n @param {number} width Width in pixels of the canvas.\\n @param {number} height Height in pixels of the canvas.\\n @param {number} min Minimum value of data for the graph (lower edge).\\n @param {number} max Maximum value of data in the graph (upper edge).\\n @return {!CanvasElement} The generated canvas element. */","meta":{"range":[2586,3097],"filename":"reverbGen.mjs","lineno":58,"columnno":0,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100089998","name":"reverbGen.generateGraph","type":"FunctionExpression","paramnames":["data","width","height","min","max"]},"vars":{"canvas":"reverbGen.generateGraph~canvas","canvas.width":"reverbGen.generateGraph~canvas.width","canvas.height":"reverbGen.generateGraph~canvas.height","gc":"reverbGen.generateGraph~gc","gc.fillStyle":"reverbGen.generateGraph~gc.fillStyle","xscale":"reverbGen.generateGraph~xscale","yscale":"reverbGen.generateGraph~yscale","i":"reverbGen.generateGraph~i"}},"description":"<p>Creates a canvas element showing a graph of the given data.</p>","params":[{"type":{"names":["Float32Array"]},"nullable":false,"description":"<p>An array of numbers, or a Float32Array.</p>","name":"data"},{"type":{"names":["number"]},"description":"<p>Width in pixels of the canvas.</p>","name":"width"},{"type":{"names":["number"]},"description":"<p>Height in pixels of the canvas.</p>","name":"height"},{"type":{"names":["number"]},"description":"<p>Minimum value of data for the graph (lower edge).</p>","name":"min"},{"type":{"names":["number"]},"description":"<p>Maximum value of data in the graph (upper edge).</p>","name":"max"}],"returns":[{"type":{"names":["CanvasElement"]},"nullable":false,"description":"<p>The generated canvas element.</p>"}],"name":"generateGraph","longname":"reverbGen.generateGraph","kind":"function","memberof":"reverbGen","scope":"static"},{"comment":"/** Applies a constantly changing lowpass filter to the given sound.\\n\\n @private\\n @param {!AudioBuffer} input\\n @param {number} lpFreqStart\\n @param {number} lpFreqEnd\\n @param {number} lpFreqEndAt\\n @param {!function(!AudioBuffer)} callback May be called\\n  immediately within the current execution context, or later.*/","meta":{"range":[3419,4357],"filename":"reverbGen.mjs","lineno":83,"columnno":4,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100090113","name":"applyGradualLowpass","type":"FunctionExpression"},"vars":{"channelData":"applyGradualLowpass~channelData","context":"applyGradualLowpass~context","player":"applyGradualLowpass~player","player.buffer":"applyGradualLowpass~player.buffer","filter":"applyGradualLowpass~filter","lpFreqStart":"applyGradualLowpass~lpFreqStart","lpFreqEnd":"applyGradualLowpass~lpFreqEnd","filter.type":"applyGradualLowpass~filter.type","filter.Q.value":"applyGradualLowpass~filter.Q.value","context.oncomplete":"applyGradualLowpass~context.oncomplete","":null,"window.filterNode":"window.filterNode"}},"description":"<p>Applies a constantly changing lowpass filter to the given sound.</p>","access":"private","params":[{"type":{"names":["AudioBuffer"]},"nullable":false,"name":"input"},{"type":{"names":["number"]},"name":"lpFreqStart"},{"type":{"names":["number"]},"name":"lpFreqEnd"},{"type":{"names":["number"]},"name":"lpFreqEndAt"},{"type":{"names":["function"]},"nullable":false,"description":"<p>May be called\\nimmediately within the current execution context, or later.</p>","name":"callback"}],"name":"applyGradualLowpass","longname":"applyGradualLowpass","kind":"function","scope":"global"},{"comment":"/** @private\\n @param {!AudioBuffer} buffer\\n @return {!Array.<!Float32Array>} An array containing the Float32Array of each channel's samples. */","meta":{"range":[4508,4691],"filename":"reverbGen.mjs","lineno":116,"columnno":4,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100090277","name":"getAllChannelData","type":"FunctionExpression"},"vars":{"channels":"getAllChannelData~channels","i":"getAllChannelData~i","channels[undefined]":"getAllChannelData~channels.undefined]"}},"access":"private","params":[{"type":{"names":["AudioBuffer"]},"nullable":false,"name":"buffer"}],"returns":[{"type":{"names":["Array.<!Float32Array>"]},"nullable":false,"description":"<p>An array containing the Float32Array of each channel's samples.</p>"}],"name":"getAllChannelData","longname":"getAllChannelData","kind":"function","scope":"global"},{"comment":"/** @private\\n @return {number} A random number from -1 to 1. */","meta":{"range":[4762,4824],"filename":"reverbGen.mjs","lineno":126,"columnno":4,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100090312","name":"randomSample","type":"FunctionExpression"}},"access":"private","returns":[{"type":{"names":["number"]},"description":"<p>A random number from -1 to 1.</p>"}],"name":"randomSample","longname":"randomSample","kind":"function","scope":"global","params":[]},{"comment":"/**\\n * Loads a collection of samples to use with \`s\`\\n * @example\\n * samples('github:tidalcycles/dirt-samples');\\n * s(\\"[bd ~]*2, [~ hh]*2, ~ sd\\")\\n * @example\\n * samples({\\n *  bd: '808bd/BD0000.WAV',\\n *  sd: '808sd/SD0010.WAV'\\n *  }, 'https://raw.githubusercontent.com/tidalcycles/Dirt-Samples/master/');\\n * s(\\"[bd ~]*2, [~ hh]*2, ~ sd\\")\\n * @example\\n * samples('shabda:noise,chimp:2')\\n * s(\\"noise <chimp:0*2 chimp:1>\\")\\n * @example\\n * samples('shabda/speech/fr-FR/f:chocolat')\\n * s(\\"chocolat*4\\")\\n */","meta":{"range":[7678,9659],"filename":"sampler.mjs","lineno":218,"columnno":0,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100091358","name":"exports.samples","type":"VariableDeclaration"}},"description":"<p>Loads a collection of samples to use with <code>s</code></p>","examples":["samples('github:tidalcycles/dirt-samples');\\ns(\\"[bd ~]*2, [~ hh]*2, ~ sd\\")","samples({\\n bd: '808bd/BD0000.WAV',\\n sd: '808sd/SD0010.WAV'\\n }, 'https://raw.githubusercontent.com/tidalcycles/Dirt-Samples/master/');\\ns(\\"[bd ~]*2, [~ hh]*2, ~ sd\\")","samples('shabda:noise,chimp:2')\\ns(\\"noise <chimp:0*2 chimp:1>\\")","samples('shabda/speech/fr-FR/f:chocolat')\\ns(\\"chocolat*4\\")"],"name":"samples","longname":"samples","kind":"constant","scope":"global"},{"comment":"/**\\n * Register an alias for a bank of sounds.\\n * Optionally accepts a single argument map of bank aliases.\\n * Optionally accepts a single argument string of a path to a JSON file containing bank aliases.\\n * @param {string} bank - The bank to alias\\n * @param {string} alias - The alias to use for the bank\\n */","meta":{"range":[3321,3708],"filename":"superdough.mjs","lineno":88,"columnno":0,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100092230","name":"exports.aliasBank","type":"FunctionDeclaration","paramnames":["args"]}},"description":"<p>Register an alias for a bank of sounds.\\nOptionally accepts a single argument map of bank aliases.\\nOptionally accepts a single argument string of a path to a JSON file containing bank aliases.</p>","params":[{"type":{"names":["string"]},"description":"<p>The bank to alias</p>","name":"bank"},{"type":{"names":["string"]},"description":"<p>The alias to use for the bank</p>","name":"alias"}],"name":"aliasBank","longname":"aliasBank","kind":"function","scope":"global"},{"comment":"/** Apply Hann window in-place */","meta":{"range":[14719,14855],"filename":"worklets.mjs","lineno":558,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100099414","name":"PhaseVocoderProcessor#applyHannWindow","type":"MethodDefinition","paramnames":["input"]},"vars":{"":null}},"description":"<p>Apply Hann window in-place</p>","name":"applyHannWindow","longname":"PhaseVocoderProcessor#applyHannWindow","kind":"function","memberof":"PhaseVocoderProcessor","scope":"instance","params":[]},{"comment":"/** Compute squared magnitudes for peak finding **/","meta":{"range":[14913,15225],"filename":"worklets.mjs","lineno":565,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100099448","name":"PhaseVocoderProcessor#computeMagnitudes","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Compute squared magnitudes for peak finding</p>","name":"computeMagnitudes","longname":"PhaseVocoderProcessor#computeMagnitudes","kind":"function","memberof":"PhaseVocoderProcessor","scope":"instance","params":[]},{"comment":"/** Find peaks in spectrum magnitudes **/","meta":{"range":[15273,15744],"filename":"worklets.mjs","lineno":579,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100099508","name":"PhaseVocoderProcessor#findPeaks","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Find peaks in spectrum magnitudes</p>","name":"findPeaks","longname":"PhaseVocoderProcessor#findPeaks","kind":"function","memberof":"PhaseVocoderProcessor","scope":"instance","params":[]},{"comment":"/** Shift peaks and regions of influence by pitchFactor into new specturm */","meta":{"range":[15827,17890],"filename":"worklets.mjs","lineno":603,"columnno":2,"path":"/Users/felix/projects/strudel/packages/superdough","code":{"id":"astnode100099614","name":"PhaseVocoderProcessor#shiftPeaks","type":"MethodDefinition","paramnames":["pitchFactor"]},"vars":{"":null}},"description":"<p>Shift peaks and regions of influence by pitchFactor into new specturm</p>","name":"shiftPeaks","longname":"PhaseVocoderProcessor#shiftPeaks","kind":"function","memberof":"PhaseVocoderProcessor","scope":"instance","params":[]},{"comment":"/**\\n * Change the pitch of each value by the given amount. Expects numbers or note strings as values.\\n * The amount can be given as a number of semitones or as a string in interval short notation.\\n * If you don't care about enharmonic correctness, just use numbers. Otherwise, pass the interval of\\n * the form: ST where S is the degree number and T the type of interval with\\n *\\n * - M = major\\n * - m = minor\\n * - P = perfect\\n * - A = augmented\\n * - d = diminished\\n *\\n * Examples intervals:\\n *\\n * - 1P = unison\\n * - 3M = major third\\n * - 3m = minor third\\n * - 4P = perfect fourth\\n * - 4A = augmented fourth\\n * - 5P = perfect fifth\\n * - 5d = diminished fifth\\n *\\n * @param {string | number} amount Either number of semitones or interval string.\\n * @returns Pattern\\n * @memberof Pattern\\n * @name transpose\\n * @example\\n * \\"c2 c3\\".fast(2).transpose(\\"<0 -2 5 3>\\".slow(2)).note()\\n * @example\\n * \\"c2 c3\\".fast(2).transpose(\\"<1P -2M 4P 3m>\\".slow(2)).note()\\n */","meta":{"filename":"tonal.mjs","lineno":65,"columnno":0,"path":"/Users/felix/projects/strudel/packages/tonal","code":{}},"description":"<p>Change the pitch of each value by the given amount. Expects numbers or note strings as values.\\nThe amount can be given as a number of semitones or as a string in interval short notation.\\nIf you don't care about enharmonic correctness, just use numbers. Otherwise, pass the interval of\\nthe form: ST where S is the degree number and T the type of interval with</p>\\n<ul>\\n<li>M = major</li>\\n<li>m = minor</li>\\n<li>P = perfect</li>\\n<li>A = augmented</li>\\n<li>d = diminished</li>\\n</ul>\\n<p>Examples intervals:</p>\\n<ul>\\n<li>1P = unison</li>\\n<li>3M = major third</li>\\n<li>3m = minor third</li>\\n<li>4P = perfect fourth</li>\\n<li>4A = augmented fourth</li>\\n<li>5P = perfect fifth</li>\\n<li>5d = diminished fifth</li>\\n</ul>","params":[{"type":{"names":["string","number"]},"description":"<p>Either number of semitones or interval string.</p>","name":"amount"}],"returns":[{"description":"<p>Pattern</p>"}],"memberof":"Pattern","name":"transpose","examples":["\\"c2 c3\\".fast(2).transpose(\\"<0 -2 5 3>\\".slow(2)).note()","\\"c2 c3\\".fast(2).transpose(\\"<1P -2M 4P 3m>\\".slow(2)).note()"],"scope":"static","longname":"Pattern.transpose","kind":"member"},{"comment":"/**\\n * Transposes notes inside the scale by the number of steps.\\n * Expected to be called on a Pattern which already has a {@link Pattern#scale}\\n *\\n * @memberof Pattern\\n * @name scaleTranspose\\n * @param {offset} offset number of steps inside the scale\\n * @returns Pattern\\n * @example\\n * \\"-8 [2,4,6]\\"\\n * .scale('C4 bebop major')\\n * .scaleTranspose(\\"<0 -1 -2 -3 -4 -5 -6 -4>\\")\\n * .note()\\n */","meta":{"filename":"tonal.mjs","lineno":137,"columnno":0,"path":"/Users/felix/projects/strudel/packages/tonal","code":{}},"description":"<p>Transposes notes inside the scale by the number of steps.\\nExpected to be called on a Pattern which already has a {@link Pattern#scale}</p>","memberof":"Pattern","name":"scaleTranspose","params":[{"type":{"names":["offset"]},"description":"<p>number of steps inside the scale</p>","name":"offset"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["\\"-8 [2,4,6]\\"\\n.scale('C4 bebop major')\\n.scaleTranspose(\\"<0 -1 -2 -3 -4 -5 -6 -4>\\")\\n.note()"],"scope":"static","longname":"Pattern.scaleTranspose","kind":"member"},{"comment":"/**\\n * Turns numbers into notes in the scale (zero indexed). Also sets scale for other scale operations, like {@link Pattern#scaleTranspose}.\\n *\\n * A scale consists of a root note (e.g. \`c4\`, \`c\`, \`f#\`, \`bb4\`) followed by semicolon (':') and then a [scale type](https://github.com/tonaljs/tonal/blob/main/packages/scale-type/data.ts).\\n *\\n * The root note defaults to octave 3, if no octave number is given.\\n *\\n * @name scale\\n * @param {string} scale Name of scale\\n * @returns Pattern\\n * @example\\n * n(\\"0 2 4 6 4 2\\").scale(\\"C:major\\")\\n * @example\\n * n(\\"[0,7] 4 [2,7] 4\\")\\n * .scale(\\"C:<major minor>/2\\")\\n * .s(\\"piano\\")\\n * @example\\n * n(rand.range(0,12).segment(8))\\n * .scale(\\"C:ritusen\\")\\n * .s(\\"piano\\")\\n */","meta":{"filename":"tonal.mjs","lineno":169,"columnno":0,"path":"/Users/felix/projects/strudel/packages/tonal","code":{}},"description":"<p>Turns numbers into notes in the scale (zero indexed). Also sets scale for other scale operations, like {@link Pattern#scaleTranspose}.</p>\\n<p>A scale consists of a root note (e.g. <code>c4</code>, <code>c</code>, <code>f#</code>, <code>bb4</code>) followed by semicolon (':') and then a <a href=\\"https://github.com/tonaljs/tonal/blob/main/packages/scale-type/data.ts\\">scale type</a>.</p>\\n<p>The root note defaults to octave 3, if no octave number is given.</p>","name":"scale","params":[{"type":{"names":["string"]},"description":"<p>Name of scale</p>","name":"scale"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["n(\\"0 2 4 6 4 2\\").scale(\\"C:major\\")","n(\\"[0,7] 4 [2,7] 4\\")\\n.scale(\\"C:<major minor>/2\\")\\n.s(\\"piano\\")","n(rand.range(0,12).segment(8))\\n.scale(\\"C:ritusen\\")\\n.s(\\"piano\\")"],"longname":"scale","kind":"member","scope":"global"},{"comment":"/**\\n * Adds a new custom voicing dictionary.\\n *\\n * @name addVoicings\\n * @memberof Pattern\\n * @param {string} name identifier for the voicing dictionary\\n * @param {Object} dictionary maps chord symbol to possible voicings\\n * @param {Array} range min, max note\\n * @returns Pattern\\n * @example\\n * addVoicings('cookie', {\\n *   7: ['3M 7m 9M 12P 15P', '7m 10M 13M 16M 19P'],\\n *   '^7': ['3M 6M 9M 12P 14M', '7M 10M 13M 16M 19P'],\\n *   m7: ['8P 11P 14m 17m 19P', '5P 8P 11P 14m 17m'],\\n *   m7b5: ['3m 5d 8P 11P 14m', '5d 8P 11P 14m 17m'],\\n *   o7: ['3m 6M 9M 11A 15P'],\\n *   '7alt': ['3M 7m 10m 13m 15P'],\\n *   '7#11': ['7m 10m 13m 15P 17m'],\\n * }, ['C3', 'C6'])\\n * \\"<C^7 A7 Dm7 G7>\\".voicings('cookie').note()\\n */","meta":{"filename":"voicings.mjs","lineno":89,"columnno":0,"path":"/Users/felix/projects/strudel/packages/tonal","code":{}},"description":"<p>Adds a new custom voicing dictionary.</p>","name":"addVoicings","memberof":"Pattern","params":[{"type":{"names":["string"]},"description":"<p>identifier for the voicing dictionary</p>","name":"name"},{"type":{"names":["Object"]},"description":"<p>maps chord symbol to possible voicings</p>","name":"dictionary"},{"type":{"names":["Array"]},"description":"<p>min, max note</p>","name":"range"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["addVoicings('cookie', {\\n  7: ['3M 7m 9M 12P 15P', '7m 10M 13M 16M 19P'],\\n  '^7': ['3M 6M 9M 12P 14M', '7M 10M 13M 16M 19P'],\\n  m7: ['8P 11P 14m 17m 19P', '5P 8P 11P 14m 17m'],\\n  m7b5: ['3m 5d 8P 11P 14m', '5d 8P 11P 14m 17m'],\\n  o7: ['3m 6M 9M 11A 15P'],\\n  '7alt': ['3M 7m 10m 13m 15P'],\\n  '7#11': ['7m 10m 13m 15P 17m'],\\n}, ['C3', 'C6'])\\n\\"<C^7 A7 Dm7 G7>\\".voicings('cookie').note()"],"scope":"static","longname":"Pattern.addVoicings","kind":"member"},{"comment":"/**\\n * DEPRECATED: still works, but it is recommended you use .voicing instead (without s).\\n * Turns chord symbols into voicings, using the smoothest voice leading possible.\\n * Uses [chord-voicings package](https://github.com/felixroos/chord-voicings#chord-voicings).\\n *\\n * @name voicings\\n * @memberof Pattern\\n * @param {string} dictionary which voicing dictionary to use.\\n * @returns Pattern\\n * @example\\n * stack(\\"<C^7 A7 Dm7 G7>\\".voicings('lefthand'), \\"<C3 A2 D3 G2>\\").note()\\n */","meta":{"filename":"voicings.mjs","lineno":130,"columnno":0,"path":"/Users/felix/projects/strudel/packages/tonal","code":{}},"description":"<p>DEPRECATED: still works, but it is recommended you use .voicing instead (without s).\\nTurns chord symbols into voicings, using the smoothest voice leading possible.\\nUses <a href=\\"https://github.com/felixroos/chord-voicings#chord-voicings\\">chord-voicings package</a>.</p>","name":"voicings","memberof":"Pattern","params":[{"type":{"names":["string"]},"description":"<p>which voicing dictionary to use.</p>","name":"dictionary"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["stack(\\"<C^7 A7 Dm7 G7>\\".voicings('lefthand'), \\"<C3 A2 D3 G2>\\").note()"],"scope":"static","longname":"Pattern.voicings","kind":"member"},{"comment":"/**\\n * Maps the chords of the incoming pattern to root notes in the given octave.\\n *\\n * @name rootNotes\\n * @memberof Pattern\\n * @param {octave} octave octave to use\\n * @returns Pattern\\n * @example\\n * \\"<C^7 A7 Dm7 G7>\\".rootNotes(2).note()\\n */","meta":{"filename":"voicings.mjs","lineno":156,"columnno":0,"path":"/Users/felix/projects/strudel/packages/tonal","code":{}},"description":"<p>Maps the chords of the incoming pattern to root notes in the given octave.</p>","name":"rootNotes","memberof":"Pattern","params":[{"type":{"names":["octave"]},"description":"<p>octave to use</p>","name":"octave"}],"returns":[{"description":"<p>Pattern</p>"}],"examples":["\\"<C^7 A7 Dm7 G7>\\".rootNotes(2).note()"],"scope":"static","longname":"Pattern.rootNotes","kind":"member"},{"comment":"/**\\n * Turns chord symbols into voicings. You can use the following control params:\\n *\\n * - \`chord\`: Note, followed by chord symbol, e.g. C Am G7 Bb^7\\n * - \`dict\`: voicing dictionary to use, falls back to default dictionary\\n * - \`anchor\`: the note that is used to align the chord\\n * - \`mode\`: how the voicing is aligned to the anchor\\n *   - \`below\`: top note <= anchor\\n *   - \`duck\`: top note <= anchor, anchor excluded\\n *   - \`above\`: bottom note >= anchor\\n * - \`offset\`: whole number that shifts the voicing up or down to the next voicing\\n * - \`n\`: if set, the voicing is played like a scale. Overshooting numbers will be octaved\\n *\\n * All of the above controls are optional, except \`chord\`.\\n * If you pass a pattern of strings to voicing, they will be interpreted as chords.\\n *\\n * @name voicing\\n * @returns Pattern\\n * @example\\n * n(\\"0 1 2 3\\").chord(\\"<C Am F G>\\").voicing()\\n */","meta":{"filename":"voicings.mjs","lineno":175,"columnno":0,"path":"/Users/felix/projects/strudel/packages/tonal","code":{}},"description":"<p>Turns chord symbols into voicings. You can use the following control params:</p>\\n<ul>\\n<li><code>chord</code>: Note, followed by chord symbol, e.g. C Am G7 Bb^7</li>\\n<li><code>dict</code>: voicing dictionary to use, falls back to default dictionary</li>\\n<li><code>anchor</code>: the note that is used to align the chord</li>\\n<li><code>mode</code>: how the voicing is aligned to the anchor\\n<ul>\\n<li><code>below</code>: top note &lt;= anchor</li>\\n<li><code>duck</code>: top note &lt;= anchor, anchor excluded</li>\\n<li><code>above</code>: bottom note &gt;= anchor</li>\\n</ul>\\n</li>\\n<li><code>offset</code>: whole number that shifts the voicing up or down to the next voicing</li>\\n<li><code>n</code>: if set, the voicing is played like a scale. Overshooting numbers will be octaved</li>\\n</ul>\\n<p>All of the above controls are optional, except <code>chord</code>.\\nIf you pass a pattern of strings to voicing, they will be interpreted as chords.</p>","name":"voicing","returns":[{"description":"<p>Pattern</p>"}],"examples":["n(\\"0 1 2 3\\").chord(\\"<C Am F G>\\").voicing()"],"longname":"voicing","kind":"member","scope":"global"},{"comment":"/**\\n * Renders an oscilloscope for the frequency domain of the audio signal.\\n * @name fscope\\n * @param {string} color line color as hex or color name. defaults to white.\\n * @param {number} scale scales the y-axis. Defaults to 0.25\\n * @param {number} pos y-position relative to screen height. 0 = top, 1 = bottom of screen\\n * @param {number} lean y-axis alignment where 0 = top and 1 = bottom\\n * @param {number} min min value\\n * @param {number} max max value\\n * @example\\n * s(\\"sawtooth\\").fscope()\\n */","meta":{"filename":"scope.mjs","lineno":98,"columnno":0,"path":"/Users/felix/projects/strudel/packages/webaudio","code":{}},"description":"<p>Renders an oscilloscope for the frequency domain of the audio signal.</p>","name":"fscope","params":[{"type":{"names":["string"]},"description":"<p>line color as hex or color name. defaults to white.</p>","name":"color"},{"type":{"names":["number"]},"description":"<p>scales the y-axis. Defaults to 0.25</p>","name":"scale"},{"type":{"names":["number"]},"description":"<p>y-position relative to screen height. 0 = top, 1 = bottom of screen</p>","name":"pos"},{"type":{"names":["number"]},"description":"<p>y-axis alignment where 0 = top and 1 = bottom</p>","name":"lean"},{"type":{"names":["number"]},"description":"<p>min value</p>","name":"min"},{"type":{"names":["number"]},"description":"<p>max value</p>","name":"max"}],"examples":["s(\\"sawtooth\\").fscope()"],"longname":"fscope","kind":"member","scope":"global"},{"comment":"/**\\n * Renders an oscilloscope for the time domain of the audio signal.\\n * @name scope\\n * @synonyms tscope\\n * @param {object} config optional config with options:\\n * @param {boolean} align if 1, the scope will be aligned to the first zero crossing. defaults to 1\\n * @param {string} color line color as hex or color name. defaults to white.\\n * @param {number} thickness line thickness. defaults to 3\\n * @param {number} scale scales the y-axis. Defaults to 0.25\\n * @param {number} pos y-position relative to screen height. 0 = top, 1 = bottom of screen\\n * @param {number} trigger amplitude value that is used to align the scope. defaults to 0.\\n * @example\\n * s(\\"sawtooth\\")._scope()\\n */","meta":{"filename":"scope.mjs","lineno":121,"columnno":0,"path":"/Users/felix/projects/strudel/packages/webaudio","code":{}},"description":"<p>Renders an oscilloscope for the time domain of the audio signal.</p>","name":"scope","synonyms_text":"tscope","synonyms":["tscope"],"params":[{"type":{"names":["object"]},"description":"<p>optional config with options:</p>","name":"config"},{"type":{"names":["boolean"]},"description":"<p>if 1, the scope will be aligned to the first zero crossing. defaults to 1</p>","name":"align"},{"type":{"names":["string"]},"description":"<p>line color as hex or color name. defaults to white.</p>","name":"color"},{"type":{"names":["number"]},"description":"<p>line thickness. defaults to 3</p>","name":"thickness"},{"type":{"names":["number"]},"description":"<p>scales the y-axis. Defaults to 0.25</p>","name":"scale"},{"type":{"names":["number"]},"description":"<p>y-position relative to screen height. 0 = top, 1 = bottom of screen</p>","name":"pos"},{"type":{"names":["number"]},"description":"<p>amplitude value that is used to align the scope. defaults to 0.</p>","name":"trigger"}],"examples":["s(\\"sawtooth\\")._scope()"],"longname":"scope","kind":"member","scope":"global"},{"comment":"/**\\n * Renders a spectrum analyzer for the incoming audio signal.\\n * @name spectrum\\n * @param {object} config optional config with options:\\n * @param {integer} thickness line thickness in px (default 3)\\n * @param {integer} speed scroll speed (default 1)\\n * @param {integer} min min db (default -80)\\n * @param {integer} max max db (default 0)\\n * @example\\n * n(\\"<0 4 <2 3> 1>*3\\")\\n * .off(1/8, add(n(5)))\\n * .off(1/5, add(n(7)))\\n * .scale(\\"d3:minor:pentatonic\\")\\n * .s('sine')\\n * .dec(.3).room(.5)\\n * ._spectrum()\\n */","meta":{"filename":"spectrum.mjs","lineno":5,"columnno":0,"path":"/Users/felix/projects/strudel/packages/webaudio","code":{}},"description":"<p>Renders a spectrum analyzer for the incoming audio signal.</p>","name":"spectrum","params":[{"type":{"names":["object"]},"description":"<p>optional config with options:</p>","name":"config"},{"type":{"names":["integer"]},"description":"<p>line thickness in px (default 3)</p>","name":"thickness"},{"type":{"names":["integer"]},"description":"<p>scroll speed (default 1)</p>","name":"speed"},{"type":{"names":["integer"]},"description":"<p>min db (default -80)</p>","name":"min"},{"type":{"names":["integer"]},"description":"<p>max db (default 0)</p>","name":"max"}],"examples":["n(\\"<0 4 <2 3> 1>*3\\")\\n.off(1/8, add(n(5)))\\n.off(1/5, add(n(7)))\\n.scale(\\"d3:minor:pentatonic\\")\\n.s('sine')\\n.dec(.3).room(.5)\\n._spectrum()"],"longname":"spectrum","kind":"member","scope":"global"},{"kind":"package","longname":"package:undefined","files":["/Users/felix/projects/strudel/packages/codemirror/autocomplete.mjs","/Users/felix/projects/strudel/packages/codemirror/codemirror.mjs","/Users/felix/projects/strudel/packages/codemirror/flash.mjs","/Users/felix/projects/strudel/packages/codemirror/highlight.mjs","/Users/felix/projects/strudel/packages/codemirror/html.mjs","/Users/felix/projects/strudel/packages/codemirror/index.mjs","/Users/felix/projects/strudel/packages/codemirror/keybindings.mjs","/Users/felix/projects/strudel/packages/codemirror/slider.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/CutiePi.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/algoboy.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/androidstudio.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/atomone.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/aura.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/bbedit.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/blackscreen.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/bluescreen.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/darcula.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/dracula.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/duotoneDark.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/duotoneLight.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/eclipse.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/githubDark.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/githubLight.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/green-text.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/gruvboxDark.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/gruvboxLight.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/materialDark.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/materialLight.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/monokai.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/noctisLilac.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/nord.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/red-text.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/solarizedDark.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/solarizedLight.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/sonic-pink.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/strudel-theme.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/sublime.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/teletext.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/terminal.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/theme-helper.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/tokioNightStorm.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/tokyoNight.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/tokyoNightDay.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/vscodeDark.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/vscodeLight.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/whitescreen.mjs","/Users/felix/projects/strudel/packages/codemirror/themes/xcodeLight.mjs","/Users/felix/projects/strudel/packages/codemirror/themes.mjs","/Users/felix/projects/strudel/packages/codemirror/tooltip.mjs","/Users/felix/projects/strudel/packages/codemirror/vite.config.js","/Users/felix/projects/strudel/packages/codemirror/widget.mjs","/Users/felix/projects/strudel/packages/core/bench/pattern.bench.mjs","/Users/felix/projects/strudel/packages/core/clockworker.js","/Users/felix/projects/strudel/packages/core/controls.mjs","/Users/felix/projects/strudel/packages/core/cyclist.mjs","/Users/felix/projects/strudel/packages/core/drawLine.mjs","/Users/felix/projects/strudel/packages/core/euclid.mjs","/Users/felix/projects/strudel/packages/core/evaluate.mjs","/Users/felix/projects/strudel/packages/core/fraction.mjs","/Users/felix/projects/strudel/packages/core/hap.mjs","/Users/felix/projects/strudel/packages/core/index.mjs","/Users/felix/projects/strudel/packages/core/logger.mjs","/Users/felix/projects/strudel/packages/core/neocyclist.mjs","/Users/felix/projects/strudel/packages/core/pattern.mjs","/Users/felix/projects/strudel/packages/core/pick.mjs","/Users/felix/projects/strudel/packages/core/repl.mjs","/Users/felix/projects/strudel/packages/core/signal.mjs","/Users/felix/projects/strudel/packages/core/speak.mjs","/Users/felix/projects/strudel/packages/core/state.mjs","/Users/felix/projects/strudel/packages/core/test/controls.test.mjs","/Users/felix/projects/strudel/packages/core/test/drawLine.test.mjs","/Users/felix/projects/strudel/packages/core/test/fraction.test.mjs","/Users/felix/projects/strudel/packages/core/test/pattern.test.mjs","/Users/felix/projects/strudel/packages/core/test/solmization.test.js","/Users/felix/projects/strudel/packages/core/test/util.test.mjs","/Users/felix/projects/strudel/packages/core/test/value.test.mjs","/Users/felix/projects/strudel/packages/core/time.mjs","/Users/felix/projects/strudel/packages/core/timespan.mjs","/Users/felix/projects/strudel/packages/core/ui.mjs","/Users/felix/projects/strudel/packages/core/util.mjs","/Users/felix/projects/strudel/packages/core/value.mjs","/Users/felix/projects/strudel/packages/core/vite.config.js","/Users/felix/projects/strudel/packages/core/zyklus.mjs","/Users/felix/projects/strudel/packages/csound/index.mjs","/Users/felix/projects/strudel/packages/csound/vite.config.js","/Users/felix/projects/strudel/packages/desktopbridge/index.mjs","/Users/felix/projects/strudel/packages/desktopbridge/loggerbridge.mjs","/Users/felix/projects/strudel/packages/desktopbridge/midibridge.mjs","/Users/felix/projects/strudel/packages/desktopbridge/oscbridge.mjs","/Users/felix/projects/strudel/packages/desktopbridge/utils.mjs","/Users/felix/projects/strudel/packages/draw/animate.mjs","/Users/felix/projects/strudel/packages/draw/color.mjs","/Users/felix/projects/strudel/packages/draw/draw.mjs","/Users/felix/projects/strudel/packages/draw/index.mjs","/Users/felix/projects/strudel/packages/draw/pianoroll.mjs","/Users/felix/projects/strudel/packages/draw/pitchwheel.mjs","/Users/felix/projects/strudel/packages/draw/spiral.mjs","/Users/felix/projects/strudel/packages/draw/vite.config.js","/Users/felix/projects/strudel/packages/embed/embed.js","/Users/felix/projects/strudel/packages/gamepad/gamepad.mjs","/Users/felix/projects/strudel/packages/gamepad/index.mjs","/Users/felix/projects/strudel/packages/gamepad/vite.config.js","/Users/felix/projects/strudel/packages/hs2js/src/hs2js.mjs","/Users/felix/projects/strudel/packages/hs2js/src/index.mjs","/Users/felix/projects/strudel/packages/hs2js/src/parser.mjs","/Users/felix/projects/strudel/packages/hs2js/vite.config.js","/Users/felix/projects/strudel/packages/hydra/hydra.mjs","/Users/felix/projects/strudel/packages/hydra/vite.config.js","/Users/felix/projects/strudel/packages/midi/index.mjs","/Users/felix/projects/strudel/packages/midi/midi.mjs","/Users/felix/projects/strudel/packages/midi/vite.config.js","/Users/felix/projects/strudel/packages/mini/bench/mini.bench.mjs","/Users/felix/projects/strudel/packages/mini/index.mjs","/Users/felix/projects/strudel/packages/mini/krill-parser.js","/Users/felix/projects/strudel/packages/mini/mini.mjs","/Users/felix/projects/strudel/packages/mini/test/mini.test.mjs","/Users/felix/projects/strudel/packages/mini/vite.config.js","/Users/felix/projects/strudel/packages/motion/index.mjs","/Users/felix/projects/strudel/packages/motion/motion.mjs","/Users/felix/projects/strudel/packages/motion/vite.config.js","/Users/felix/projects/strudel/packages/mqtt/mqtt.mjs","/Users/felix/projects/strudel/packages/mqtt/vite.config.js","/Users/felix/projects/strudel/packages/osc/osc.mjs","/Users/felix/projects/strudel/packages/osc/server.js","/Users/felix/projects/strudel/packages/osc/superdirtoutput.js","/Users/felix/projects/strudel/packages/osc/tidal-sniffer.js","/Users/felix/projects/strudel/packages/osc/vite.config.js","/Users/felix/projects/strudel/packages/reference/index.mjs","/Users/felix/projects/strudel/packages/reference/vite.config.js","/Users/felix/projects/strudel/packages/repl/index.mjs","/Users/felix/projects/strudel/packages/repl/prebake.mjs","/Users/felix/projects/strudel/packages/repl/repl-component.mjs","/Users/felix/projects/strudel/packages/repl/vite.config.js","/Users/felix/projects/strudel/packages/sampler/sample-server.mjs","/Users/felix/projects/strudel/packages/serial/serial.mjs","/Users/felix/projects/strudel/packages/serial/vite.config.js","/Users/felix/projects/strudel/packages/soundfonts/convert.js","/Users/felix/projects/strudel/packages/soundfonts/fontloader.mjs","/Users/felix/projects/strudel/packages/soundfonts/gm.mjs","/Users/felix/projects/strudel/packages/soundfonts/index.mjs","/Users/felix/projects/strudel/packages/soundfonts/list.mjs","/Users/felix/projects/strudel/packages/soundfonts/sfumato.mjs","/Users/felix/projects/strudel/packages/soundfonts/vite.config.js","/Users/felix/projects/strudel/packages/superdough/dspworklet.mjs","/Users/felix/projects/strudel/packages/superdough/feedbackdelay.mjs","/Users/felix/projects/strudel/packages/superdough/fft.js","/Users/felix/projects/strudel/packages/superdough/helpers.mjs","/Users/felix/projects/strudel/packages/superdough/index.mjs","/Users/felix/projects/strudel/packages/superdough/logger.mjs","/Users/felix/projects/strudel/packages/superdough/noise.mjs","/Users/felix/projects/strudel/packages/superdough/ola-processor.js","/Users/felix/projects/strudel/packages/superdough/reverb.mjs","/Users/felix/projects/strudel/packages/superdough/reverbGen.mjs","/Users/felix/projects/strudel/packages/superdough/sampler.mjs","/Users/felix/projects/strudel/packages/superdough/superdough.mjs","/Users/felix/projects/strudel/packages/superdough/synth.mjs","/Users/felix/projects/strudel/packages/superdough/util.mjs","/Users/felix/projects/strudel/packages/superdough/vite.config.js","/Users/felix/projects/strudel/packages/superdough/vowel.mjs","/Users/felix/projects/strudel/packages/superdough/worklets.mjs","/Users/felix/projects/strudel/packages/superdough/zzfx.mjs","/Users/felix/projects/strudel/packages/superdough/zzfx_fork.mjs","/Users/felix/projects/strudel/packages/tidal/tidal.mjs","/Users/felix/projects/strudel/packages/tonal/index.mjs","/Users/felix/projects/strudel/packages/tonal/ireal.mjs","/Users/felix/projects/strudel/packages/tonal/test/tonal.test.mjs","/Users/felix/projects/strudel/packages/tonal/test/tonleiter.test.mjs","/Users/felix/projects/strudel/packages/tonal/tonal.mjs","/Users/felix/projects/strudel/packages/tonal/tonleiter.mjs","/Users/felix/projects/strudel/packages/tonal/vite.config.js","/Users/felix/projects/strudel/packages/tonal/voicings.mjs","/Users/felix/projects/strudel/packages/transpiler/index.mjs","/Users/felix/projects/strudel/packages/transpiler/test/transpiler.test.mjs","/Users/felix/projects/strudel/packages/transpiler/transpiler.mjs","/Users/felix/projects/strudel/packages/transpiler/vite.config.js","/Users/felix/projects/strudel/packages/vite-plugin-bundle-audioworklet/vite-plugin-bundle-audioworklet.js","/Users/felix/projects/strudel/packages/web/vite.config.js","/Users/felix/projects/strudel/packages/web/web.mjs","/Users/felix/projects/strudel/packages/webaudio/index.mjs","/Users/felix/projects/strudel/packages/webaudio/scope.mjs","/Users/felix/projects/strudel/packages/webaudio/spectrum.mjs","/Users/felix/projects/strudel/packages/webaudio/vite.config.js","/Users/felix/projects/strudel/packages/webaudio/webaudio.mjs","/Users/felix/projects/strudel/packages/xen/index.mjs","/Users/felix/projects/strudel/packages/xen/test/xen.test.mjs","/Users/felix/projects/strudel/packages/xen/tune.mjs","/Users/felix/projects/strudel/packages/xen/tunejs.js","/Users/felix/projects/strudel/packages/xen/vite.config.js","/Users/felix/projects/strudel/packages/xen/xen.mjs"]}]`), Cf = {
  docs: jT
}, _T = typeof DOMParser < "u" ? new DOMParser() : null;
let RT = (t) => _T?.parseFromString(t, "text/html").querySelectorAll("*"), U0 = (t) => Array.isArray(t) ? t.flat().join("") : t === void 0 ? "" : t, $T = (t, ...e) => {
  let n = "";
  for (let r in t)
    n += U0(t[r]), n += U0(e[r]);
  return RT(n);
};
function ZT(t) {
  const e = document.createElement("div");
  return e.innerText = t, e.innerHTML;
}
const cu = (t) => t.name || t.longname, LT = (t) => {
  var e = document.createElement("div");
  return e.innerHTML = t, e.textContent || e.innerText || "";
};
function DA({ doc: t, label: e }) {
  return $T`<div class="prose dark:prose-invert max-h-[400px] overflow-auto p-2">
<h1 class="pt-0 mt-0">${e || cu(t)}</h1>
${t.description}
<ul>
  ${t.params?.map(
    ({ name: n, type: r, description: i }) => `<li>${n} : ${r.names?.join(" | ")} ${i ? ` - ${LT(i)}` : ""}</li>`
  )}
</ul>
<div>
  ${t.examples?.map((n) => `<div><pre>${ZT(n)}</pre></div>`)}
</div>
</div>`[0];
}
const IT = Cf.docs.filter(
  (t) => cu(t) && !cu(t).startsWith("_") && !["package"].includes(t.kind) && !["superdirtOnly", "noAutocomplete"].some((e) => t.tags?.find((n) => n.originalTitle === e))
).map((t) => ({
  label: cu(t),
  // detail: 'xxx', // An optional short piece of information to show (with a different style) after the label.
  info: () => DA({ doc: t }),
  type: "function"
  // https://codemirror.net/docs/ref/#autocomplete.Completion.type
})), NT = (t) => {
  let e = t.matchBefore(/\w*/);
  return e.from == e.to && !t.explicit ? null : {
    from: e.from,
    options: IT
    /*     options: [
      { label: 'match', type: 'keyword' },
      { label: 'hello', type: 'variable', info: '(World)' },
      { label: 'magic', type: 'text', apply: '⠁⭒*.✩.*⭒⠁', detail: 'macro' },
    ], */
  };
};
function VT(t) {
  return t ? [
    H7({ override: [NT] })
    //javascriptLanguage.data.of({ autocomplete: strudelAutocomplete }),
  ] : [];
}
const XT = (t) => t.name || t.longname;
let Sf = !1;
typeof window < "u" && (window.addEventListener(
  "keyup",
  function(t) {
    t.key == "Control" && (Sf = !1);
  },
  !0
), window.addEventListener(
  "keydown",
  function(t) {
    t.key == "Control" && (Sf = !0);
  },
  !0
));
const WT = IC(
  (t, e, n) => {
    if (!Sf)
      return null;
    let { from: r, to: i, text: s } = t.state.doc.lineAt(e), a = e, o = e;
    for (; a > r && /\w/.test(s[a - r - 1]); )
      a--;
    for (; o < i && /\w/.test(s[o - r]); )
      o++;
    if (a == e && n < 0 || o == e && n > 0)
      return null;
    let l = s.slice(a - r, o - r), c = Cf.docs.filter((h) => XT(h) === l)[0];
    return !c && (c = Cf.docs.filter((h) => h.synonyms && h.synonyms.includes(l))[0], !c) ? null : {
      pos: a,
      end: o,
      above: !1,
      arrow: !0,
      create(h) {
        let f = document.createElement("div");
        f.className = "strudel-tooltip";
        const m = DA({ doc: c, label: l });
        return f.appendChild(m), { dom: f };
      }
    };
  },
  { hoverTime: 10 }
), qT = (t) => t ? WT : [], oc = Ie.define(), PA = Vt.define({
  create() {
    return Te.none;
  },
  update(t, e) {
    try {
      for (let n of e.effects)
        if (n.is(oc))
          if (n.value && e.newDoc.length > 0) {
            const r = Te.mark({
              attributes: { style: "background-color: rgba(255,255,255, .4); filter: invert(10%)" }
            });
            t = Te.set([r.range(0, e.newDoc.length)]);
          } else
            t = Te.set([]);
      return t;
    } catch (n) {
      return console.warn("flash error", n), t;
    }
  },
  provide: (t) => be.decorations.from(t)
}), EA = (t, e = 200) => {
  t.dispatch({ effects: oc.of(!0) }), setTimeout(() => {
    t.dispatch({ effects: oc.of(!1) });
  }, e);
}, FA = (t) => t ? PA : [], fm = Ie.define(), dm = Ie.define(), lc = (t, e) => {
  t.dispatch({ effects: fm.of(e) });
}, BA = (t, e, n) => {
  t.dispatch({ effects: dm.of({ atTime: e, haps: n }) });
}, Af = Vt.define({
  create() {
    return Te.none;
  },
  update(t, e) {
    e.docChanged && (t = t.map(e.changes));
    for (let n of e.effects)
      if (n.is(fm)) {
        const r = n.value.filter(([i]) => i < e.newDoc.length).map(([i, s]) => [i, Math.min(s, e.newDoc.length)]).map(
          (i) => Te.mark({
            id: i.join(":"),
            // this green is only to verify that the decoration moves when the document is edited
            // it will be removed later, so the mark is not visible by default
            attributes: { style: "background-color: #00CA2880" }
          }).range(...i)
          // -> Decoration
        );
        t = Te.set(r, !0);
      }
    return t;
  }
}), Df = Vt.define({
  create() {
    return { atTime: 0, haps: /* @__PURE__ */ new Map() };
  },
  update(t, e) {
    for (let n of e.effects)
      if (n.is(dm)) {
        const r = /* @__PURE__ */ new Map();
        for (let i of n.value.haps)
          if (!(!i.context?.locations || !i.whole))
            for (let { start: s, end: a } of i.context.locations) {
              let o = `${s}:${a}`;
              (!r.has(o) || r.get(o).whole.begin.lt(i.whole.begin)) && r.set(o, i);
            }
        t = { atTime: n.value.atTime, haps: r };
      }
    return t;
  }
}), UT = be.decorations.compute([Af, Df], (t) => {
  const e = t.field(Af).iter(), { haps: n } = t.field(Df), r = new Mi();
  for (; e.value; ) {
    const {
      from: i,
      to: s,
      value: {
        spec: { id: a }
      }
    } = e;
    if (n.has(a)) {
      const o = n.get(a), l = o.value?.color ?? "var(--foreground)", c = o.value?.markcss || `outline: solid 2px ${l}`;
      r.add(
        i,
        s,
        Te.mark({
          // attributes: { style: `outline: solid 2px rgba(${channels.join(', ')})` },
          attributes: { style: c }
        })
      );
    }
    e.next();
  }
  return r.finish();
}), MA = [Af, Df, UT], QA = (t, e) => (t && e && setTimeout(() => {
  lc(e.editor, e.miniLocations);
}, 100), t ? MA : []);
function Mt() {
  var t = arguments[0];
  typeof t == "string" && (t = document.createElement(t));
  var e = 1, n = arguments[1];
  if (n && typeof n == "object" && n.nodeType == null && !Array.isArray(n)) {
    for (var r in n) if (Object.prototype.hasOwnProperty.call(n, r)) {
      var i = n[r];
      typeof i == "string" ? t.setAttribute(r, i) : i != null && (t[r] = i);
    }
    e++;
  }
  for (; e < arguments.length; e++) TA(t, arguments[e]);
  return t;
}
function TA(t, e) {
  if (typeof e == "string")
    t.appendChild(document.createTextNode(e));
  else if (e != null) if (e.nodeType != null)
    t.appendChild(e);
  else if (Array.isArray(e))
    for (var n = 0; n < e.length; n++) TA(t, e[n]);
  else
    throw new RangeError("Unsupported child node: " + e);
}
const G0 = typeof String.prototype.normalize == "function" ? (t) => t.normalize("NFKD") : (t) => t;
class _o {
  /**
  Create a text cursor. The query is the search string, `from` to
  `to` provides the region to search.
  
  When `normalize` is given, it will be called, on both the query
  string and the content it is matched against, before comparing.
  You can, for example, create a case-insensitive search by
  passing `s => s.toLowerCase()`.
  
  Text is always normalized with
  [`.normalize("NFKD")`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize)
  (when supported).
  */
  constructor(e, n, r = 0, i = e.length, s, a) {
    this.test = a, this.value = { from: 0, to: 0 }, this.done = !1, this.matches = [], this.buffer = "", this.bufferPos = 0, this.iter = e.iterRange(r, i), this.bufferStart = r, this.normalize = s ? (o) => s(G0(o)) : G0, this.query = this.normalize(n);
  }
  peek() {
    if (this.bufferPos == this.buffer.length) {
      if (this.bufferStart += this.buffer.length, this.iter.next(), this.iter.done)
        return -1;
      this.bufferPos = 0, this.buffer = this.iter.value;
    }
    return ur(this.buffer, this.bufferPos);
  }
  /**
  Look for the next match. Updates the iterator's
  [`value`](https://codemirror.net/6/docs/ref/#search.SearchCursor.value) and
  [`done`](https://codemirror.net/6/docs/ref/#search.SearchCursor.done) properties. Should be called
  at least once before using the cursor.
  */
  next() {
    for (; this.matches.length; )
      this.matches.pop();
    return this.nextOverlapping();
  }
  /**
  The `next` method will ignore matches that partially overlap a
  previous match. This method behaves like `next`, but includes
  such matches.
  */
  nextOverlapping() {
    for (; ; ) {
      let e = this.peek();
      if (e < 0)
        return this.done = !0, this;
      let n = Bd(e), r = this.bufferStart + this.bufferPos;
      this.bufferPos += ai(e);
      let i = this.normalize(n);
      if (i.length)
        for (let s = 0, a = r; ; s++) {
          let o = i.charCodeAt(s), l = this.match(o, a, this.bufferPos + this.bufferStart);
          if (s == i.length - 1) {
            if (l)
              return this.value = l, this;
            break;
          }
          a == r && s < n.length && n.charCodeAt(s) == o && a++;
        }
    }
  }
  match(e, n, r) {
    let i = null;
    for (let s = 0; s < this.matches.length; s += 2) {
      let a = this.matches[s], o = !1;
      this.query.charCodeAt(a) == e && (a == this.query.length - 1 ? i = { from: this.matches[s + 1], to: r } : (this.matches[s]++, o = !0)), o || (this.matches.splice(s, 2), s -= 2);
    }
    return this.query.charCodeAt(0) == e && (this.query.length == 1 ? i = { from: n, to: r } : this.matches.push(1, n)), i && this.test && !this.test(i.from, i.to, this.buffer, this.bufferStart) && (i = null), i;
  }
}
typeof Symbol < "u" && (_o.prototype[Symbol.iterator] = function() {
  return this;
});
const jA = { from: -1, to: -1, match: /* @__PURE__ */ /.*/.exec("") }, mm = "gm" + (/x/.unicode == null ? "" : "u");
class gm {
  /**
  Create a cursor that will search the given range in the given
  document. `query` should be the raw pattern (as you'd pass it to
  `new RegExp`).
  */
  constructor(e, n, r, i = 0, s = e.length) {
    if (this.text = e, this.to = s, this.curLine = "", this.done = !1, this.value = jA, /\\[sWDnr]|\n|\r|\[\^/.test(n))
      return new _A(e, n, r, i, s);
    this.re = new RegExp(n, mm + (r?.ignoreCase ? "i" : "")), this.test = r?.test, this.iter = e.iter();
    let a = e.lineAt(i);
    this.curLineStart = a.from, this.matchPos = uc(e, i), this.getLine(this.curLineStart);
  }
  getLine(e) {
    this.iter.next(e), this.iter.lineBreak ? this.curLine = "" : (this.curLine = this.iter.value, this.curLineStart + this.curLine.length > this.to && (this.curLine = this.curLine.slice(0, this.to - this.curLineStart)), this.iter.next());
  }
  nextLine() {
    this.curLineStart = this.curLineStart + this.curLine.length + 1, this.curLineStart > this.to ? this.curLine = "" : this.getLine(0);
  }
  /**
  Move to the next match, if there is one.
  */
  next() {
    for (let e = this.matchPos - this.curLineStart; ; ) {
      this.re.lastIndex = e;
      let n = this.matchPos <= this.to && this.re.exec(this.curLine);
      if (n) {
        let r = this.curLineStart + n.index, i = r + n[0].length;
        if (this.matchPos = uc(this.text, i + (r == i ? 1 : 0)), r == this.curLineStart + this.curLine.length && this.nextLine(), (r < i || r > this.value.to) && (!this.test || this.test(r, i, n)))
          return this.value = { from: r, to: i, match: n }, this;
        e = this.matchPos - this.curLineStart;
      } else if (this.curLineStart + this.curLine.length < this.to)
        this.nextLine(), e = 0;
      else
        return this.done = !0, this;
    }
  }
}
const ip = /* @__PURE__ */ new WeakMap();
class ha {
  constructor(e, n) {
    this.from = e, this.text = n;
  }
  get to() {
    return this.from + this.text.length;
  }
  static get(e, n, r) {
    let i = ip.get(e);
    if (!i || i.from >= r || i.to <= n) {
      let o = new ha(n, e.sliceString(n, r));
      return ip.set(e, o), o;
    }
    if (i.from == n && i.to == r)
      return i;
    let { text: s, from: a } = i;
    return a > n && (s = e.sliceString(n, a) + s, a = n), i.to < r && (s += e.sliceString(i.to, r)), ip.set(e, new ha(a, s)), new ha(n, s.slice(n - a, r - a));
  }
}
class _A {
  constructor(e, n, r, i, s) {
    this.text = e, this.to = s, this.done = !1, this.value = jA, this.matchPos = uc(e, i), this.re = new RegExp(n, mm + (r?.ignoreCase ? "i" : "")), this.test = r?.test, this.flat = ha.get(e, i, this.chunkEnd(
      i + 5e3
      /* Chunk.Base */
    ));
  }
  chunkEnd(e) {
    return e >= this.to ? this.to : this.text.lineAt(e).to;
  }
  next() {
    for (; ; ) {
      let e = this.re.lastIndex = this.matchPos - this.flat.from, n = this.re.exec(this.flat.text);
      if (n && !n[0] && n.index == e && (this.re.lastIndex = e + 1, n = this.re.exec(this.flat.text)), n) {
        let r = this.flat.from + n.index, i = r + n[0].length;
        if ((this.flat.to >= this.to || n.index + n[0].length <= this.flat.text.length - 10) && (!this.test || this.test(r, i, n)))
          return this.value = { from: r, to: i, match: n }, this.matchPos = uc(this.text, i + (r == i ? 1 : 0)), this;
      }
      if (this.flat.to == this.to)
        return this.done = !0, this;
      this.flat = ha.get(this.text, this.flat.from, this.chunkEnd(this.flat.from + this.flat.text.length * 2));
    }
  }
}
typeof Symbol < "u" && (gm.prototype[Symbol.iterator] = _A.prototype[Symbol.iterator] = function() {
  return this;
});
function GT(t) {
  try {
    return new RegExp(t, mm), !0;
  } catch {
    return !1;
  }
}
function uc(t, e) {
  if (e >= t.length)
    return e;
  let n = t.lineAt(e), r;
  for (; e < n.to && (r = n.text.charCodeAt(e - n.from)) >= 56320 && r < 57344; )
    e++;
  return e;
}
function Pf(t) {
  let e = String(t.state.doc.lineAt(t.state.selection.main.head).number), n = Mt("input", { class: "cm-textfield", name: "line", value: e }), r = Mt("form", {
    class: "cm-gotoLine",
    onkeydown: (s) => {
      s.keyCode == 27 ? (s.preventDefault(), t.dispatch({ effects: cc.of(!1) }), t.focus()) : s.keyCode == 13 && (s.preventDefault(), i());
    },
    onsubmit: (s) => {
      s.preventDefault(), i();
    }
  }, Mt("label", t.state.phrase("Go to line"), ": ", n), " ", Mt("button", { class: "cm-button", type: "submit" }, t.state.phrase("go")));
  function i() {
    let s = /^([+-])?(\d+)?(:\d+)?(%)?$/.exec(n.value);
    if (!s)
      return;
    let { state: a } = t, o = a.doc.lineAt(a.selection.main.head), [, l, c, h, f] = s, m = h ? +h.slice(1) : 0, y = c ? +c : o.number;
    if (c && f) {
      let S = y / 100;
      l && (S = S * (l == "-" ? -1 : 1) + o.number / a.doc.lines), y = Math.round(a.doc.lines * S);
    } else c && l && (y = y * (l == "-" ? -1 : 1) + o.number);
    let x = a.doc.line(Math.max(1, Math.min(a.doc.lines, y))), C = ne.cursor(x.from + Math.max(0, Math.min(m, x.length)));
    t.dispatch({
      effects: [cc.of(!1), be.scrollIntoView(C.from, { y: "center" })],
      selection: C
    }), t.focus();
  }
  return { dom: r };
}
const cc = /* @__PURE__ */ Ie.define(), z0 = /* @__PURE__ */ Vt.define({
  create() {
    return !0;
  },
  update(t, e) {
    for (let n of e.effects)
      n.is(cc) && (t = n.value);
    return t;
  },
  provide: (t) => ts.from(t, (e) => e ? Pf : null)
}), zT = (t) => {
  let e = Eo(t, Pf);
  if (!e) {
    let n = [cc.of(!0)];
    t.state.field(z0, !1) == null && n.push(Ie.appendConfig.of([z0, HT])), t.dispatch({ effects: n }), e = Eo(t, Pf);
  }
  return e && e.dom.querySelector("input").select(), !0;
}, HT = /* @__PURE__ */ be.baseTheme({
  ".cm-panel.cm-gotoLine": {
    padding: "2px 6px 4px",
    "& label": { fontSize: "80%" }
  }
}), YT = ({ state: t, dispatch: e }) => {
  let { selection: n } = t, r = ne.create(n.ranges.map((i) => t.wordAt(i.head) || ne.cursor(i.head)), n.mainIndex);
  return r.eq(n) ? !1 : (e(t.update({ selection: r })), !0);
};
function KT(t, e) {
  let { main: n, ranges: r } = t.selection, i = t.wordAt(n.head), s = i && i.from == n.from && i.to == n.to;
  for (let a = !1, o = new _o(t.doc, e, r[r.length - 1].to); ; )
    if (o.next(), o.done) {
      if (a)
        return null;
      o = new _o(t.doc, e, 0, Math.max(0, r[r.length - 1].from - 1)), a = !0;
    } else {
      if (a && r.some((l) => l.from == o.value.from))
        continue;
      if (s) {
        let l = t.wordAt(o.value.from);
        if (!l || l.from != o.value.from || l.to != o.value.to)
          continue;
      }
      return o.value;
    }
}
const JT = ({ state: t, dispatch: e }) => {
  let { ranges: n } = t.selection;
  if (n.some((s) => s.from === s.to))
    return YT({ state: t, dispatch: e });
  let r = t.sliceDoc(n[0].from, n[0].to);
  if (t.selection.ranges.some((s) => t.sliceDoc(s.from, s.to) != r))
    return !1;
  let i = KT(t, r);
  return i ? (e(t.update({
    selection: t.selection.addRange(ne.range(i.from, i.to), !1),
    effects: be.scrollIntoView(i.to)
  })), !0) : !1;
}, $a = /* @__PURE__ */ Ae.define({
  combine(t) {
    return os(t, {
      top: !1,
      caseSensitive: !1,
      literal: !1,
      regexp: !1,
      wholeWord: !1,
      createPanel: (e) => new lj(e),
      scrollToMatch: (e) => be.scrollIntoView(e)
    });
  }
});
class bm {
  /**
  Create a query object.
  */
  constructor(e) {
    this.search = e.search, this.caseSensitive = !!e.caseSensitive, this.literal = !!e.literal, this.regexp = !!e.regexp, this.replace = e.replace || "", this.valid = !!this.search && (!this.regexp || GT(this.search)), this.unquoted = this.unquote(this.search), this.wholeWord = !!e.wholeWord;
  }
  /**
  @internal
  */
  unquote(e) {
    return this.literal ? e : e.replace(/\\([nrt\\])/g, (n, r) => r == "n" ? `
` : r == "r" ? "\r" : r == "t" ? "	" : "\\");
  }
  /**
  Compare this query to another query.
  */
  eq(e) {
    return this.search == e.search && this.replace == e.replace && this.caseSensitive == e.caseSensitive && this.regexp == e.regexp && this.wholeWord == e.wholeWord;
  }
  /**
  @internal
  */
  create() {
    return this.regexp ? new rj(this) : new tj(this);
  }
  /**
  Get a search cursor for this query, searching through the given
  range in the given state.
  */
  getCursor(e, n = 0, r) {
    let i = e.doc ? e : dt.create({ doc: e });
    return r == null && (r = i.doc.length), this.regexp ? Gs(this, i, n, r) : Us(this, i, n, r);
  }
}
class RA {
  constructor(e) {
    this.spec = e;
  }
}
function Us(t, e, n, r) {
  return new _o(e.doc, t.unquoted, n, r, t.caseSensitive ? void 0 : (i) => i.toLowerCase(), t.wholeWord ? ej(e.doc, e.charCategorizer(e.selection.main.head)) : void 0);
}
function ej(t, e) {
  return (n, r, i, s) => ((s > n || s + i.length < r) && (s = Math.max(0, n - 2), i = t.sliceString(s, Math.min(t.length, r + 2))), (e(hc(i, n - s)) != an.Word || e(pc(i, n - s)) != an.Word) && (e(pc(i, r - s)) != an.Word || e(hc(i, r - s)) != an.Word));
}
class tj extends RA {
  constructor(e) {
    super(e);
  }
  nextMatch(e, n, r) {
    let i = Us(this.spec, e, r, e.doc.length).nextOverlapping();
    if (i.done) {
      let s = Math.min(e.doc.length, n + this.spec.unquoted.length);
      i = Us(this.spec, e, 0, s).nextOverlapping();
    }
    return i.done || i.value.from == n && i.value.to == r ? null : i.value;
  }
  // Searching in reverse is, rather than implementing an inverted search
  // cursor, done by scanning chunk after chunk forward.
  prevMatchInRange(e, n, r) {
    for (let i = r; ; ) {
      let s = Math.max(n, i - 1e4 - this.spec.unquoted.length), a = Us(this.spec, e, s, i), o = null;
      for (; !a.nextOverlapping().done; )
        o = a.value;
      if (o)
        return o;
      if (s == n)
        return null;
      i -= 1e4;
    }
  }
  prevMatch(e, n, r) {
    let i = this.prevMatchInRange(e, 0, n);
    return i || (i = this.prevMatchInRange(e, Math.max(0, r - this.spec.unquoted.length), e.doc.length)), i && (i.from != n || i.to != r) ? i : null;
  }
  getReplacement(e) {
    return this.spec.unquote(this.spec.replace);
  }
  matchAll(e, n) {
    let r = Us(this.spec, e, 0, e.doc.length), i = [];
    for (; !r.next().done; ) {
      if (i.length >= n)
        return null;
      i.push(r.value);
    }
    return i;
  }
  highlight(e, n, r, i) {
    let s = Us(this.spec, e, Math.max(0, n - this.spec.unquoted.length), Math.min(r + this.spec.unquoted.length, e.doc.length));
    for (; !s.next().done; )
      i(s.value.from, s.value.to);
  }
}
function Gs(t, e, n, r) {
  return new gm(e.doc, t.search, {
    ignoreCase: !t.caseSensitive,
    test: t.wholeWord ? nj(e.charCategorizer(e.selection.main.head)) : void 0
  }, n, r);
}
function hc(t, e) {
  return t.slice(Cn(t, e, !1), e);
}
function pc(t, e) {
  return t.slice(e, Cn(t, e));
}
function nj(t) {
  return (e, n, r) => !r[0].length || (t(hc(r.input, r.index)) != an.Word || t(pc(r.input, r.index)) != an.Word) && (t(pc(r.input, r.index + r[0].length)) != an.Word || t(hc(r.input, r.index + r[0].length)) != an.Word);
}
class rj extends RA {
  nextMatch(e, n, r) {
    let i = Gs(this.spec, e, r, e.doc.length).next();
    return i.done && (i = Gs(this.spec, e, 0, n).next()), i.done ? null : i.value;
  }
  prevMatchInRange(e, n, r) {
    for (let i = 1; ; i++) {
      let s = Math.max(
        n,
        r - i * 1e4
        /* FindPrev.ChunkSize */
      ), a = Gs(this.spec, e, s, r), o = null;
      for (; !a.next().done; )
        o = a.value;
      if (o && (s == n || o.from > s + 10))
        return o;
      if (s == n)
        return null;
    }
  }
  prevMatch(e, n, r) {
    return this.prevMatchInRange(e, 0, n) || this.prevMatchInRange(e, r, e.doc.length);
  }
  getReplacement(e) {
    return this.spec.unquote(this.spec.replace).replace(/\$([$&\d+])/g, (n, r) => r == "$" ? "$" : r == "&" ? e.match[0] : r != "0" && +r < e.match.length ? e.match[r] : n);
  }
  matchAll(e, n) {
    let r = Gs(this.spec, e, 0, e.doc.length), i = [];
    for (; !r.next().done; ) {
      if (i.length >= n)
        return null;
      i.push(r.value);
    }
    return i;
  }
  highlight(e, n, r, i) {
    let s = Gs(this.spec, e, Math.max(
      0,
      n - 250
      /* RegExp.HighlightMargin */
    ), Math.min(r + 250, e.doc.length));
    for (; !s.next().done; )
      i(s.value.from, s.value.to);
  }
}
const is = /* @__PURE__ */ Ie.define(), ym = /* @__PURE__ */ Ie.define(), Yi = /* @__PURE__ */ Vt.define({
  create(t) {
    return new sp(Ef(t).create(), null);
  },
  update(t, e) {
    for (let n of e.effects)
      n.is(is) ? t = new sp(n.value.create(), t.panel) : n.is(ym) && (t = new sp(t.query, n.value ? Om : null));
    return t;
  },
  provide: (t) => ts.from(t, (e) => e.panel)
});
class sp {
  constructor(e, n) {
    this.query = e, this.panel = n;
  }
}
const ij = /* @__PURE__ */ Te.mark({ class: "cm-searchMatch" }), sj = /* @__PURE__ */ Te.mark({ class: "cm-searchMatch cm-searchMatch-selected" }), aj = /* @__PURE__ */ fn.fromClass(class {
  constructor(t) {
    this.view = t, this.decorations = this.highlight(t.state.field(Yi));
  }
  update(t) {
    let e = t.state.field(Yi);
    (e != t.startState.field(Yi) || t.docChanged || t.selectionSet || t.viewportChanged) && (this.decorations = this.highlight(e));
  }
  highlight({ query: t, panel: e }) {
    if (!e || !t.spec.valid)
      return Te.none;
    let { view: n } = this, r = new Mi();
    for (let i = 0, s = n.visibleRanges, a = s.length; i < a; i++) {
      let { from: o, to: l } = s[i];
      for (; i < a - 1 && l > s[i + 1].from - 2 * 250; )
        l = s[++i].to;
      t.highlight(n.state, o, l, (c, h) => {
        let f = n.state.selection.ranges.some((m) => m.from == c && m.to == h);
        r.add(c, h, f ? sj : ij);
      });
    }
    return r.finish();
  }
}, {
  decorations: (t) => t.decorations
});
function tl(t) {
  return (e) => {
    let n = e.state.field(Yi, !1);
    return n && n.query.spec.valid ? t(e, n) : NA(e);
  };
}
const H0 = /* @__PURE__ */ tl((t, { query: e }) => {
  let { to: n } = t.state.selection.main, r = e.nextMatch(t.state, n, n);
  if (!r)
    return !1;
  let i = ne.single(r.from, r.to), s = t.state.facet($a);
  return t.dispatch({
    selection: i,
    effects: [vm(t, r), s.scrollToMatch(i.main, t)],
    userEvent: "select.search"
  }), IA(t), !0;
}), Y0 = /* @__PURE__ */ tl((t, { query: e }) => {
  let { state: n } = t, { from: r } = n.selection.main, i = e.prevMatch(n, r, r);
  if (!i)
    return !1;
  let s = ne.single(i.from, i.to), a = t.state.facet($a);
  return t.dispatch({
    selection: s,
    effects: [vm(t, i), a.scrollToMatch(s.main, t)],
    userEvent: "select.search"
  }), IA(t), !0;
}), $A = /* @__PURE__ */ tl((t, { query: e }) => {
  let n = e.matchAll(t.state, 1e3);
  return !n || !n.length ? !1 : (t.dispatch({
    selection: ne.create(n.map((r) => ne.range(r.from, r.to))),
    userEvent: "select.search.matches"
  }), !0);
}), oj = ({ state: t, dispatch: e }) => {
  let n = t.selection;
  if (n.ranges.length > 1 || n.main.empty)
    return !1;
  let { from: r, to: i } = n.main, s = [], a = 0;
  for (let o = new _o(t.doc, t.sliceDoc(r, i)); !o.next().done; ) {
    if (s.length > 1e3)
      return !1;
    o.value.from == r && (a = s.length), s.push(ne.range(o.value.from, o.value.to));
  }
  return e(t.update({
    selection: ne.create(s, a),
    userEvent: "select.search.matches"
  })), !0;
}, K0 = /* @__PURE__ */ tl((t, { query: e }) => {
  let { state: n } = t, { from: r, to: i } = n.selection.main;
  if (n.readOnly)
    return !1;
  let s = e.nextMatch(n, r, r);
  if (!s)
    return !1;
  let a = s, o = [], l, c, h = [];
  if (a.from == r && a.to == i && (c = n.toText(e.getReplacement(a)), o.push({ from: a.from, to: a.to, insert: c }), a = e.nextMatch(n, a.from, a.to), h.push(be.announce.of(n.phrase("replaced match on line $", n.doc.lineAt(r).number) + "."))), a) {
    let f = o.length == 0 || o[0].from >= s.to ? 0 : s.to - s.from - c.length;
    l = ne.single(a.from - f, a.to - f), h.push(vm(t, a)), h.push(n.facet($a).scrollToMatch(l.main, t));
  }
  return t.dispatch({
    changes: o,
    selection: l,
    effects: h,
    userEvent: "input.replace"
  }), !0;
}), ZA = /* @__PURE__ */ tl((t, { query: e }) => {
  if (t.state.readOnly)
    return !1;
  let n = e.matchAll(t.state, 1e9).map((i) => {
    let { from: s, to: a } = i;
    return { from: s, to: a, insert: e.getReplacement(i) };
  });
  if (!n.length)
    return !1;
  let r = t.state.phrase("replaced $ matches", n.length) + ".";
  return t.dispatch({
    changes: n,
    effects: be.announce.of(r),
    userEvent: "input.replace.all"
  }), !0;
});
function Om(t) {
  return t.state.facet($a).createPanel(t);
}
function Ef(t, e) {
  var n, r, i, s, a;
  let o = t.selection.main, l = o.empty || o.to > o.from + 100 ? "" : t.sliceDoc(o.from, o.to);
  if (e && !l)
    return e;
  let c = t.facet($a);
  return new bm({
    search: ((n = e?.literal) !== null && n !== void 0 ? n : c.literal) ? l : l.replace(/\n/g, "\\n"),
    caseSensitive: (r = e?.caseSensitive) !== null && r !== void 0 ? r : c.caseSensitive,
    literal: (i = e?.literal) !== null && i !== void 0 ? i : c.literal,
    regexp: (s = e?.regexp) !== null && s !== void 0 ? s : c.regexp,
    wholeWord: (a = e?.wholeWord) !== null && a !== void 0 ? a : c.wholeWord
  });
}
function LA(t) {
  let e = Eo(t, Om);
  return e && e.dom.querySelector("[main-field]");
}
function IA(t) {
  let e = LA(t);
  e && e == t.root.activeElement && e.select();
}
const NA = (t) => {
  let e = t.state.field(Yi, !1);
  if (e && e.panel) {
    let n = LA(t);
    if (n && n != t.root.activeElement) {
      let r = Ef(t.state, e.query.spec);
      r.valid && t.dispatch({ effects: is.of(r) }), n.focus(), n.select();
    }
  } else
    t.dispatch({ effects: [
      ym.of(!0),
      e ? is.of(Ef(t.state, e.query.spec)) : Ie.appendConfig.of(cj)
    ] });
  return !0;
}, VA = (t) => {
  let e = t.state.field(Yi, !1);
  if (!e || !e.panel)
    return !1;
  let n = Eo(t, Om);
  return n && n.dom.contains(t.root.activeElement) && t.focus(), t.dispatch({ effects: ym.of(!1) }), !0;
};
class lj {
  constructor(e) {
    this.view = e;
    let n = this.query = e.state.field(Yi).query.spec;
    this.commit = this.commit.bind(this), this.searchField = Mt("input", {
      value: n.search,
      placeholder: ir(e, "Find"),
      "aria-label": ir(e, "Find"),
      class: "cm-textfield",
      name: "search",
      form: "",
      "main-field": "true",
      onchange: this.commit,
      onkeyup: this.commit
    }), this.replaceField = Mt("input", {
      value: n.replace,
      placeholder: ir(e, "Replace"),
      "aria-label": ir(e, "Replace"),
      class: "cm-textfield",
      name: "replace",
      form: "",
      onchange: this.commit,
      onkeyup: this.commit
    }), this.caseField = Mt("input", {
      type: "checkbox",
      name: "case",
      form: "",
      checked: n.caseSensitive,
      onchange: this.commit
    }), this.reField = Mt("input", {
      type: "checkbox",
      name: "re",
      form: "",
      checked: n.regexp,
      onchange: this.commit
    }), this.wordField = Mt("input", {
      type: "checkbox",
      name: "word",
      form: "",
      checked: n.wholeWord,
      onchange: this.commit
    });
    function r(i, s, a) {
      return Mt("button", { class: "cm-button", name: i, onclick: s, type: "button" }, a);
    }
    this.dom = Mt("div", { onkeydown: (i) => this.keydown(i), class: "cm-search" }, [
      this.searchField,
      r("next", () => H0(e), [ir(e, "next")]),
      r("prev", () => Y0(e), [ir(e, "previous")]),
      r("select", () => $A(e), [ir(e, "all")]),
      Mt("label", null, [this.caseField, ir(e, "match case")]),
      Mt("label", null, [this.reField, ir(e, "regexp")]),
      Mt("label", null, [this.wordField, ir(e, "by word")]),
      ...e.state.readOnly ? [] : [
        Mt("br"),
        this.replaceField,
        r("replace", () => K0(e), [ir(e, "replace")]),
        r("replaceAll", () => ZA(e), [ir(e, "replace all")])
      ],
      Mt("button", {
        name: "close",
        onclick: () => VA(e),
        "aria-label": ir(e, "close"),
        type: "button"
      }, ["×"])
    ]);
  }
  commit() {
    let e = new bm({
      search: this.searchField.value,
      caseSensitive: this.caseField.checked,
      regexp: this.reField.checked,
      wholeWord: this.wordField.checked,
      replace: this.replaceField.value
    });
    e.eq(this.query) || (this.query = e, this.view.dispatch({ effects: is.of(e) }));
  }
  keydown(e) {
    k6(this.view, e, "search-panel") ? e.preventDefault() : e.keyCode == 13 && e.target == this.searchField ? (e.preventDefault(), (e.shiftKey ? Y0 : H0)(this.view)) : e.keyCode == 13 && e.target == this.replaceField && (e.preventDefault(), K0(this.view));
  }
  update(e) {
    for (let n of e.transactions)
      for (let r of n.effects)
        r.is(is) && !r.value.eq(this.query) && this.setQuery(r.value);
  }
  setQuery(e) {
    this.query = e, this.searchField.value = e.search, this.replaceField.value = e.replace, this.caseField.checked = e.caseSensitive, this.reField.checked = e.regexp, this.wordField.checked = e.wholeWord;
  }
  mount() {
    this.searchField.select();
  }
  get pos() {
    return 80;
  }
  get top() {
    return this.view.state.facet($a).top;
  }
}
function ir(t, e) {
  return t.state.phrase(e);
}
const Ul = 30, Gl = /[\s\.,:;?!]/;
function vm(t, { from: e, to: n }) {
  let r = t.state.doc.lineAt(e), i = t.state.doc.lineAt(n).to, s = Math.max(r.from, e - Ul), a = Math.min(i, n + Ul), o = t.state.sliceDoc(s, a);
  if (s != r.from) {
    for (let l = 0; l < Ul; l++)
      if (!Gl.test(o[l + 1]) && Gl.test(o[l])) {
        o = o.slice(l);
        break;
      }
  }
  if (a != i) {
    for (let l = o.length - 1; l > o.length - Ul; l--)
      if (!Gl.test(o[l - 1]) && Gl.test(o[l])) {
        o = o.slice(0, l);
        break;
      }
  }
  return be.announce.of(`${t.state.phrase("current match")}. ${o} ${t.state.phrase("on line")} ${r.number}.`);
}
const uj = /* @__PURE__ */ be.baseTheme({
  ".cm-panel.cm-search": {
    padding: "2px 6px 4px",
    position: "relative",
    "& [name=close]": {
      position: "absolute",
      top: "0",
      right: "4px",
      backgroundColor: "inherit",
      border: "none",
      font: "inherit",
      padding: 0,
      margin: 0
    },
    "& input, & button, & label": {
      margin: ".2em .6em .2em 0"
    },
    "& input[type=checkbox]": {
      marginRight: ".2em"
    },
    "& label": {
      fontSize: "80%",
      whiteSpace: "pre"
    }
  },
  "&light .cm-searchMatch": { backgroundColor: "#ffff0054" },
  "&dark .cm-searchMatch": { backgroundColor: "#00ffff8a" },
  "&light .cm-searchMatch-selected": { backgroundColor: "#ff6a0054" },
  "&dark .cm-searchMatch-selected": { backgroundColor: "#ff00ff8a" }
}), cj = [
  Yi,
  /* @__PURE__ */ Tr.low(aj),
  uj
];
let Ff = $C, hj = class {
  constructor(e, n, r, i, s, a, o, l, c, h) {
    this.left = e, this.top = n, this.height = r, this.fontFamily = i, this.fontSize = s, this.fontWeight = a, this.color = o, this.className = l, this.letter = c, this.partial = h;
  }
  draw() {
    let e = document.createElement("div");
    return e.className = this.className, this.adjust(e), e;
  }
  adjust(e) {
    e.style.left = this.left + "px", e.style.top = this.top + "px", e.style.height = this.height + "px", e.style.lineHeight = this.height + "px", e.style.fontFamily = this.fontFamily, e.style.fontSize = this.fontSize, e.style.fontWeight = this.fontWeight, e.style.color = this.partial ? "transparent" : this.color, e.className = this.className, e.textContent = this.letter;
  }
  eq(e) {
    return this.left == e.left && this.top == e.top && this.height == e.height && this.fontFamily == e.fontFamily && this.fontSize == e.fontSize && this.fontWeight == e.fontWeight && this.color == e.color && this.className == e.className && this.letter == e.letter;
  }
}, pj = class {
  constructor(e, n) {
    this.view = e, this.rangePieces = [], this.cursors = [], this.em = n, this.measureReq = { read: this.readPos.bind(this), write: this.drawSel.bind(this) }, this.cursorLayer = e.scrollDOM.appendChild(document.createElement("div")), this.cursorLayer.className = "cm-cursorLayer cm-vimCursorLayer", this.cursorLayer.setAttribute("aria-hidden", "true"), e.requestMeasure(this.measureReq), this.setBlinkRate();
  }
  setBlinkRate() {
    let n = Ff(this.view.state).cursorBlinkRate;
    this.cursorLayer.style.animationDuration = n + "ms";
  }
  update(e) {
    (e.selectionSet || e.geometryChanged || e.viewportChanged) && (this.view.requestMeasure(this.measureReq), this.cursorLayer.style.animationName = this.cursorLayer.style.animationName == "cm-blink" ? "cm-blink2" : "cm-blink"), fj(e) && this.setBlinkRate();
  }
  scheduleRedraw() {
    this.view.requestMeasure(this.measureReq);
  }
  readPos() {
    let { state: e } = this.view, n = [];
    for (let r of e.selection.ranges) {
      let i = r == e.selection.main, s = bj(this.em, this.view, r, i);
      s && n.push(s);
    }
    return { cursors: n };
  }
  drawSel({ cursors: e }) {
    if (e.length != this.cursors.length || e.some((n, r) => !n.eq(this.cursors[r]))) {
      let n = this.cursorLayer.children;
      if (n.length !== e.length) {
        this.cursorLayer.textContent = "";
        for (const r of e)
          this.cursorLayer.appendChild(r.draw());
      } else
        e.forEach((r, i) => r.adjust(n[i]));
      this.cursors = e;
    }
  }
  destroy() {
    this.cursorLayer.remove();
  }
};
function fj(t) {
  return Ff(t.startState) != Ff(t.state);
}
const dj = {
  ".cm-line": {
    "& ::selection": { backgroundColor: "transparent !important" },
    "&::selection": { backgroundColor: "transparent !important" },
    caretColor: "transparent !important"
  },
  ".cm-fat-cursor": {
    position: "absolute",
    background: "#ff9696",
    border: "none",
    whiteSpace: "pre"
  },
  "&:not(.cm-focused) .cm-fat-cursor": {
    background: "none",
    outline: "solid 1px #ff9696",
    color: "transparent !important"
  }
}, mj = /* @__PURE__ */ Tr.highest(/* @__PURE__ */ be.theme(dj));
function gj(t) {
  let e = t.scrollDOM.getBoundingClientRect();
  return { left: (t.textDirection == Dt.LTR ? e.left : e.right - t.scrollDOM.clientWidth) - t.scrollDOM.scrollLeft, top: e.top - t.scrollDOM.scrollTop };
}
function bj(t, e, n, r) {
  var i, s;
  let a = n.head, o = 1;
  (t.$data.count || t.$data.keyChain) && (o = 0.5);
  {
    let c = a < e.state.doc.length && e.state.sliceDoc(a, a + 1);
    c && /[\uDC00-\uDFFF]/.test(c) && a > 1 && (a--, c = e.state.sliceDoc(a, a + 1));
    let h = e.coordsAtPos(a, 1);
    if (!h)
      return null;
    let f = gj(e), m = e.domAtPos(a), y = m ? m.node : e.contentDOM;
    for (; m && m.node instanceof HTMLElement; )
      y = m.node, m = { node: m.node.childNodes[m.offset], offset: 0 };
    if (!(y instanceof HTMLElement)) {
      if (!y.parentNode)
        return null;
      y = y.parentNode;
    }
    let x = getComputedStyle(y), C = h.left, S = (s = (i = e).coordsForChar) === null || s === void 0 ? void 0 : s.call(i, a);
    if (S && (C = S.left), !c || c == `
` || c == "\r")
      c = " ";
    else if (c == "	") {
      c = " ";
      var l = e.coordsAtPos(a + 1, -1);
      l && (C = l.left - (l.left - h.left) / parseInt(x.tabSize));
    } else /[\uD800-\uDBFF]/.test(c) && a < e.state.doc.length - 1 && (c += e.state.sliceDoc(a + 1, a + 2));
    let M = h.bottom - h.top;
    return new hj(C - f.left, h.top - f.top + M * (1 - o), M * o, x.fontFamily, x.fontSize, x.fontWeight, x.color, r ? "cm-fat-cursor cm-cursor-primary" : "cm-fat-cursor cm-cursor-secondary", c, o != 1);
  }
}
const yj = /* @__PURE__ */ be.theme({
  ".cm-emacsMode .cm-cursorLayer:not(.cm-vimCursorLayer)": {
    display: "none"
  },
  ".cm-vim-panel": {
    padding: "5px 10px",
    backgroundColor: "#fffa8f",
    fontFamily: "monospace"
  },
  ".cm-vim-panel input": {
    border: "none",
    outline: "none",
    backgroundColor: "#fffa8f"
  }
}), Oj = /* @__PURE__ */ fn.fromClass(class {
  constructor(t) {
    this.status = "", this.view = t, this.em = new Cs(t), this.blockCursor = new pj(t, this.em), this.view.scrollDOM.classList.add("cm-emacsMode");
  }
  update(t) {
    t.docChanged && (this.em.$emacsMark = null, this.em.updateMarksOnChange(t.changes)), this.blockCursor.update(t);
  }
  destroy() {
    this.view.scrollDOM.classList.remove("cm-emacsMode"), this.blockCursor.destroy();
  }
}, {
  eventHandlers: {
    keydown: function(t, e) {
      var n = this.em.handleKeyboard(t);
      return n && this.blockCursor.scheduleRedraw(), !!n;
    },
    mousedown: function() {
      this.em.$emacsMark = null;
    }
  }
}), vj = /* @__PURE__ */ Ie.define(), xj = /* @__PURE__ */ Vt.define({
  create: () => !1,
  update(t, e) {
    for (let n of e.effects)
      n.is(vj) && (t = n.value);
    return t;
  },
  provide: (t) => ts.from(t, (e) => e ? kj : null)
});
function kj(t) {
  let e = document.createElement("div");
  return e.className = "cm-vim-panel", { top: !1, dom: e };
}
function wj(t = {}) {
  return [
    yj,
    Oj,
    mj,
    xj
  ];
}
var Cj = {
  Return: "Return",
  Escape: "Esc",
  Insert: "Ins",
  ArrowLeft: "Left",
  ArrowRight: "Right",
  ArrowUp: "Up",
  ArrowDown: "Down",
  Enter: "Return",
  Divide: "/",
  Slash: "/",
  Multiply: "*",
  Subtract: "-",
  Minus: "-",
  Equal: "="
}, Sj = { Shift: 1, Alt: 1, Command: 1, Control: 1, CapsLock: 1 };
const ap = {};
class Cs {
  constructor(e) {
    this.view = e, this.$data = {
      count: 0,
      keyChain: "",
      lastCommand: ""
    }, this.$emacsMarkRing = [], this.$emacsMark = null;
  }
  static bindKey(e, n) {
    e.split("|").forEach(function(r) {
      let i = "", s = r.split(/\s+/);
      s.forEach(function(a, o) {
        let l = a.split(/-(?=.)/), c = l.pop();
        l.length && (i += l.sort().join("-") + "-"), i += c, o === s.length - 1 ? ap[i] = n : (ap[i] = "null", i += " ");
      });
    });
  }
  static getKey(e) {
    var n = e.code, r = e.key;
    if (Sj[r])
      return ["", "", ""];
    n.length > 1 && (n[0] == "N" && (n = n.replace(/^Numpad/, "")), n[0] == "K" && (n = n.replace(/^Key/, ""))), n = Cj[n] || n, n.length == 1 && (n = n.toLowerCase());
    var i = "";
    return e.ctrlKey && (i += "C-"), e.metaKey && (i += "CMD-"), e.altKey && (i += "M-"), e.shiftKey && (i += "S-"), [n, i, r];
  }
  static addCommands(e) {
    Object.keys(e).forEach(function(n) {
      var r = e[n];
      typeof r == "function" && (r = { exec: r }), Cs.commands[n] = r;
    });
  }
  static execCommand(e, n, r, i = 1) {
    var s = void 0;
    if (i < 0 && (i = -i), typeof e == "function")
      for (var a = 0; a < i; a++)
        e(n.view);
    else if (e !== "null") if (e.exec) {
      i > 1 && e.handlesCount && (r || (r = {}), typeof r == "object" && (r.count = i), i = 1);
      for (var a = 0; a < i; a++)
        s = e.exec(n, r || {});
    } else
      throw new Error("missformed command");
    return s;
  }
  handleKeyboard(e) {
    var n = Cs.getKey(e), r = this.findCommand(n);
    if (!(/Up|Down/.test(n?.[0]) && J7(this.view.state))) {
      if (r && r.command) {
        var i = Cs.execCommand(r.command, this, r.args, r.count);
        if (i === !1)
          return;
      }
      return r;
    }
  }
  findCommand([e, n, r]) {
    if (e) {
      var i = this, s = this.$data;
      if (!n && e.length == 1 && (i.pushEmacsMark(), s.count)) {
        var a = new Array(s.count + 1).join(r);
        return s.count = null, { command: "insertstring", args: a };
      }
      if (n == "C-" || s.count) {
        var c = parseInt(e[e.length - 1]);
        if (typeof c == "number" && !isNaN(c))
          return s.count = Math.max(s.count || 0, 0), s.count = 10 * s.count + c, { command: "null" };
      }
      n && (e = n + e), s.keyChain && (e = s.keyChain += " " + e);
      var o = ap[e];
      if (s.keyChain = o == "null" ? e : "", !!o) {
        if (o === "null")
          return { command: "null" };
        if (o === "universalArgument")
          return s.count = -4, { command: "null" };
        var l;
        if (typeof o != "string" && (l = o.args, o.command && (o = o.command)), (o === "insertstring" || o === hm || o === _c) && i.pushEmacsMark(), !(typeof o == "string" && (o = Cs.commands[o], !o))) {
          !o.readOnly && !o.keepLastCommand && (s.lastCommand = null);
          var c = s.count || 1;
          return s.count && (s.count = 0), { command: o, args: l, count: c };
        }
      }
    }
  }
  showCommandLine(e) {
    console.error("TODO");
  }
  updateMarksOnChange(e) {
    this.$emacsMark && (this.$emacsMark = this.updateMark(this.$emacsMark, e)), this.$emacsMarkRing = this.$emacsMarkRing.map((n) => this.updateMark(n, e)).filter(Boolean);
  }
  updateMark(e, n) {
    if (e) {
      var r = e.map(function(i) {
        return n.mapPos(i, 1, rn.TrackDel);
      }).filter((i) => i != null);
      return r.length == 0 ? null : r;
    }
  }
  emacsMark() {
    return this.$emacsMark;
  }
  setEmacsMark(e) {
    this.$emacsMark = e;
  }
  pushEmacsMark(e, n) {
    var r = this.$emacsMark;
    r && J0(this.$emacsMarkRing, r), !e || n ? this.setEmacsMark(e) : J0(this.$emacsMarkRing, e);
  }
  popEmacsMark() {
    var e = this.emacsMark();
    return e ? (this.setEmacsMark(null), e) : this.$emacsMarkRing.pop();
  }
  getLastEmacsMark() {
    return this.$emacsMark || this.$emacsMarkRing.slice(-1)[0];
  }
  getCopyText() {
    var e = this.view.state;
    return e.selection.ranges.map((n) => e.sliceDoc(n.from, n.to)).join(`
`);
  }
  clearSelection() {
    var e = this.view, n = e.state.selection, r = !n.ranges.some((s) => s.from != s.to);
    if (r)
      return !1;
    var i = n.ranges.map((s) => ne.range(s.head, s.head));
    return e.dispatch({
      selection: ne.create(i, n.mainIndex)
    }), !0;
  }
  onPaste(e) {
    var n = this.view, r = n.state.selection, i;
    if (r.ranges.length > 1) {
      var s = e.split(`
`);
      s.length == r.ranges.length && (i = s);
    }
    var a = 0, o = n.state.changeByRange((l) => {
      var c = i ? i[a] : e;
      return a++, {
        changes: { from: l.from, to: l.to, insert: c },
        range: ne.cursor(l.from + c.length)
      };
    });
    n.dispatch(o);
  }
  selectionToEmacsMark() {
    var e = this.view.state.selection;
    return e.ranges.map((n) => n.head);
  }
}
Cs.commands = {};
function J0(t, e) {
  t.length && t[t.length - 1] + "" == e + "" || t.push(e);
}
function Aj(t) {
  var e = t.Pos;
  function n(p, d, g) {
    if (d.line === g.line && d.ch >= g.ch - 1) {
      var b = p.getLine(d.line), v = b.charCodeAt(d.ch);
      55296 <= v && v <= 55551 && (g.ch += 1);
    }
    return { start: d, end: g };
  }
  var r = [
    // Key to key mapping. This goes first to make it possible to override
    // existing mappings.
    { keys: "<Left>", type: "keyToKey", toKeys: "h" },
    { keys: "<Right>", type: "keyToKey", toKeys: "l" },
    { keys: "<Up>", type: "keyToKey", toKeys: "k" },
    { keys: "<Down>", type: "keyToKey", toKeys: "j" },
    { keys: "g<Up>", type: "keyToKey", toKeys: "gk" },
    { keys: "g<Down>", type: "keyToKey", toKeys: "gj" },
    { keys: "<Space>", type: "keyToKey", toKeys: "l" },
    { keys: "<BS>", type: "keyToKey", toKeys: "h" },
    { keys: "<Del>", type: "keyToKey", toKeys: "x" },
    { keys: "<C-Space>", type: "keyToKey", toKeys: "W" },
    { keys: "<C-BS>", type: "keyToKey", toKeys: "B" },
    { keys: "<S-Space>", type: "keyToKey", toKeys: "w" },
    { keys: "<S-BS>", type: "keyToKey", toKeys: "b" },
    { keys: "<C-n>", type: "keyToKey", toKeys: "j" },
    { keys: "<C-p>", type: "keyToKey", toKeys: "k" },
    { keys: "<C-[>", type: "keyToKey", toKeys: "<Esc>" },
    { keys: "<C-c>", type: "keyToKey", toKeys: "<Esc>" },
    { keys: "<C-[>", type: "keyToKey", toKeys: "<Esc>", context: "insert" },
    { keys: "<C-c>", type: "keyToKey", toKeys: "<Esc>", context: "insert" },
    { keys: "<C-Esc>", type: "keyToKey", toKeys: "<Esc>" },
    // ipad keyboard sends C-Esc instead of C-[
    { keys: "<C-Esc>", type: "keyToKey", toKeys: "<Esc>", context: "insert" },
    { keys: "s", type: "keyToKey", toKeys: "cl", context: "normal" },
    { keys: "s", type: "keyToKey", toKeys: "c", context: "visual" },
    { keys: "S", type: "keyToKey", toKeys: "cc", context: "normal" },
    { keys: "S", type: "keyToKey", toKeys: "VdO", context: "visual" },
    { keys: "<Home>", type: "keyToKey", toKeys: "0" },
    { keys: "<End>", type: "keyToKey", toKeys: "$" },
    { keys: "<PageUp>", type: "keyToKey", toKeys: "<C-b>" },
    { keys: "<PageDown>", type: "keyToKey", toKeys: "<C-f>" },
    { keys: "<CR>", type: "keyToKey", toKeys: "j^", context: "normal" },
    { keys: "<Ins>", type: "keyToKey", toKeys: "i", context: "normal" },
    { keys: "<Ins>", type: "action", action: "toggleOverwrite", context: "insert" },
    // Motions
    { keys: "H", type: "motion", motion: "moveToTopLine", motionArgs: { linewise: !0, toJumplist: !0 } },
    { keys: "M", type: "motion", motion: "moveToMiddleLine", motionArgs: { linewise: !0, toJumplist: !0 } },
    { keys: "L", type: "motion", motion: "moveToBottomLine", motionArgs: { linewise: !0, toJumplist: !0 } },
    { keys: "h", type: "motion", motion: "moveByCharacters", motionArgs: { forward: !1 } },
    { keys: "l", type: "motion", motion: "moveByCharacters", motionArgs: { forward: !0 } },
    { keys: "j", type: "motion", motion: "moveByLines", motionArgs: { forward: !0, linewise: !0 } },
    { keys: "k", type: "motion", motion: "moveByLines", motionArgs: { forward: !1, linewise: !0 } },
    { keys: "gj", type: "motion", motion: "moveByDisplayLines", motionArgs: { forward: !0 } },
    { keys: "gk", type: "motion", motion: "moveByDisplayLines", motionArgs: { forward: !1 } },
    { keys: "w", type: "motion", motion: "moveByWords", motionArgs: { forward: !0, wordEnd: !1 } },
    { keys: "W", type: "motion", motion: "moveByWords", motionArgs: { forward: !0, wordEnd: !1, bigWord: !0 } },
    { keys: "e", type: "motion", motion: "moveByWords", motionArgs: { forward: !0, wordEnd: !0, inclusive: !0 } },
    { keys: "E", type: "motion", motion: "moveByWords", motionArgs: { forward: !0, wordEnd: !0, bigWord: !0, inclusive: !0 } },
    { keys: "b", type: "motion", motion: "moveByWords", motionArgs: { forward: !1, wordEnd: !1 } },
    { keys: "B", type: "motion", motion: "moveByWords", motionArgs: { forward: !1, wordEnd: !1, bigWord: !0 } },
    { keys: "ge", type: "motion", motion: "moveByWords", motionArgs: { forward: !1, wordEnd: !0, inclusive: !0 } },
    { keys: "gE", type: "motion", motion: "moveByWords", motionArgs: { forward: !1, wordEnd: !0, bigWord: !0, inclusive: !0 } },
    { keys: "{", type: "motion", motion: "moveByParagraph", motionArgs: { forward: !1, toJumplist: !0 } },
    { keys: "}", type: "motion", motion: "moveByParagraph", motionArgs: { forward: !0, toJumplist: !0 } },
    { keys: "(", type: "motion", motion: "moveBySentence", motionArgs: { forward: !1 } },
    { keys: ")", type: "motion", motion: "moveBySentence", motionArgs: { forward: !0 } },
    { keys: "<C-f>", type: "motion", motion: "moveByPage", motionArgs: { forward: !0 } },
    { keys: "<C-b>", type: "motion", motion: "moveByPage", motionArgs: { forward: !1 } },
    { keys: "<C-d>", type: "motion", motion: "moveByScroll", motionArgs: { forward: !0, explicitRepeat: !0 } },
    { keys: "<C-u>", type: "motion", motion: "moveByScroll", motionArgs: { forward: !1, explicitRepeat: !0 } },
    { keys: "gg", type: "motion", motion: "moveToLineOrEdgeOfDocument", motionArgs: { forward: !1, explicitRepeat: !0, linewise: !0, toJumplist: !0 } },
    { keys: "G", type: "motion", motion: "moveToLineOrEdgeOfDocument", motionArgs: { forward: !0, explicitRepeat: !0, linewise: !0, toJumplist: !0 } },
    { keys: "g$", type: "motion", motion: "moveToEndOfDisplayLine" },
    { keys: "g^", type: "motion", motion: "moveToStartOfDisplayLine" },
    { keys: "g0", type: "motion", motion: "moveToStartOfDisplayLine" },
    { keys: "0", type: "motion", motion: "moveToStartOfLine" },
    { keys: "^", type: "motion", motion: "moveToFirstNonWhiteSpaceCharacter" },
    { keys: "+", type: "motion", motion: "moveByLines", motionArgs: { forward: !0, toFirstChar: !0 } },
    { keys: "-", type: "motion", motion: "moveByLines", motionArgs: { forward: !1, toFirstChar: !0 } },
    { keys: "_", type: "motion", motion: "moveByLines", motionArgs: { forward: !0, toFirstChar: !0, repeatOffset: -1 } },
    { keys: "$", type: "motion", motion: "moveToEol", motionArgs: { inclusive: !0 } },
    { keys: "%", type: "motion", motion: "moveToMatchedSymbol", motionArgs: { inclusive: !0, toJumplist: !0 } },
    { keys: "f<character>", type: "motion", motion: "moveToCharacter", motionArgs: { forward: !0, inclusive: !0 } },
    { keys: "F<character>", type: "motion", motion: "moveToCharacter", motionArgs: { forward: !1 } },
    { keys: "t<character>", type: "motion", motion: "moveTillCharacter", motionArgs: { forward: !0, inclusive: !0 } },
    { keys: "T<character>", type: "motion", motion: "moveTillCharacter", motionArgs: { forward: !1 } },
    { keys: ";", type: "motion", motion: "repeatLastCharacterSearch", motionArgs: { forward: !0 } },
    { keys: ",", type: "motion", motion: "repeatLastCharacterSearch", motionArgs: { forward: !1 } },
    { keys: "'<register>", type: "motion", motion: "goToMark", motionArgs: { toJumplist: !0, linewise: !0 } },
    { keys: "`<register>", type: "motion", motion: "goToMark", motionArgs: { toJumplist: !0 } },
    { keys: "]`", type: "motion", motion: "jumpToMark", motionArgs: { forward: !0 } },
    { keys: "[`", type: "motion", motion: "jumpToMark", motionArgs: { forward: !1 } },
    { keys: "]'", type: "motion", motion: "jumpToMark", motionArgs: { forward: !0, linewise: !0 } },
    { keys: "['", type: "motion", motion: "jumpToMark", motionArgs: { forward: !1, linewise: !0 } },
    // the next two aren't motions but must come before more general motion declarations
    { keys: "]p", type: "action", action: "paste", isEdit: !0, actionArgs: { after: !0, isEdit: !0, matchIndent: !0 } },
    { keys: "[p", type: "action", action: "paste", isEdit: !0, actionArgs: { after: !1, isEdit: !0, matchIndent: !0 } },
    { keys: "]<character>", type: "motion", motion: "moveToSymbol", motionArgs: { forward: !0, toJumplist: !0 } },
    { keys: "[<character>", type: "motion", motion: "moveToSymbol", motionArgs: { forward: !1, toJumplist: !0 } },
    { keys: "|", type: "motion", motion: "moveToColumn" },
    { keys: "o", type: "motion", motion: "moveToOtherHighlightedEnd", context: "visual" },
    { keys: "O", type: "motion", motion: "moveToOtherHighlightedEnd", motionArgs: { sameLine: !0 }, context: "visual" },
    // Operators
    { keys: "d", type: "operator", operator: "delete" },
    { keys: "y", type: "operator", operator: "yank" },
    { keys: "c", type: "operator", operator: "change" },
    { keys: "=", type: "operator", operator: "indentAuto" },
    { keys: ">", type: "operator", operator: "indent", operatorArgs: { indentRight: !0 } },
    { keys: "<", type: "operator", operator: "indent", operatorArgs: { indentRight: !1 } },
    { keys: "g~", type: "operator", operator: "changeCase" },
    { keys: "gu", type: "operator", operator: "changeCase", operatorArgs: { toLower: !0 }, isEdit: !0 },
    { keys: "gU", type: "operator", operator: "changeCase", operatorArgs: { toLower: !1 }, isEdit: !0 },
    { keys: "n", type: "motion", motion: "findNext", motionArgs: { forward: !0, toJumplist: !0 } },
    { keys: "N", type: "motion", motion: "findNext", motionArgs: { forward: !1, toJumplist: !0 } },
    { keys: "gn", type: "motion", motion: "findAndSelectNextInclusive", motionArgs: { forward: !0 } },
    { keys: "gN", type: "motion", motion: "findAndSelectNextInclusive", motionArgs: { forward: !1 } },
    { keys: "gq", type: "operator", operator: "hardWrap" },
    { keys: "gw", type: "operator", operator: "hardWrap", operatorArgs: { keepCursor: !0 } },
    // Operator-Motion dual commands
    { keys: "x", type: "operatorMotion", operator: "delete", motion: "moveByCharacters", motionArgs: { forward: !0 }, operatorMotionArgs: { visualLine: !1 } },
    { keys: "X", type: "operatorMotion", operator: "delete", motion: "moveByCharacters", motionArgs: { forward: !1 }, operatorMotionArgs: { visualLine: !0 } },
    { keys: "D", type: "operatorMotion", operator: "delete", motion: "moveToEol", motionArgs: { inclusive: !0 }, context: "normal" },
    { keys: "D", type: "operator", operator: "delete", operatorArgs: { linewise: !0 }, context: "visual" },
    { keys: "Y", type: "operatorMotion", operator: "yank", motion: "expandToLine", motionArgs: { linewise: !0 }, context: "normal" },
    { keys: "Y", type: "operator", operator: "yank", operatorArgs: { linewise: !0 }, context: "visual" },
    { keys: "C", type: "operatorMotion", operator: "change", motion: "moveToEol", motionArgs: { inclusive: !0 }, context: "normal" },
    { keys: "C", type: "operator", operator: "change", operatorArgs: { linewise: !0 }, context: "visual" },
    { keys: "~", type: "operatorMotion", operator: "changeCase", motion: "moveByCharacters", motionArgs: { forward: !0 }, operatorArgs: { shouldMoveCursor: !0 }, context: "normal" },
    { keys: "~", type: "operator", operator: "changeCase", context: "visual" },
    { keys: "<C-u>", type: "operatorMotion", operator: "delete", motion: "moveToStartOfLine", context: "insert" },
    { keys: "<C-w>", type: "operatorMotion", operator: "delete", motion: "moveByWords", motionArgs: { forward: !1, wordEnd: !1 }, context: "insert" },
    //ignore C-w in normal mode
    { keys: "<C-w>", type: "idle", context: "normal" },
    // Actions
    { keys: "<C-i>", type: "action", action: "jumpListWalk", actionArgs: { forward: !0 } },
    { keys: "<C-o>", type: "action", action: "jumpListWalk", actionArgs: { forward: !1 } },
    { keys: "<C-e>", type: "action", action: "scroll", actionArgs: { forward: !0, linewise: !0 } },
    { keys: "<C-y>", type: "action", action: "scroll", actionArgs: { forward: !1, linewise: !0 } },
    { keys: "a", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { insertAt: "charAfter" }, context: "normal" },
    { keys: "A", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { insertAt: "eol" }, context: "normal" },
    { keys: "A", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { insertAt: "endOfSelectedArea" }, context: "visual" },
    { keys: "i", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { insertAt: "inplace" }, context: "normal" },
    { keys: "gi", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { insertAt: "lastEdit" }, context: "normal" },
    { keys: "I", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { insertAt: "firstNonBlank" }, context: "normal" },
    { keys: "gI", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { insertAt: "bol" }, context: "normal" },
    { keys: "I", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { insertAt: "startOfSelectedArea" }, context: "visual" },
    { keys: "o", type: "action", action: "newLineAndEnterInsertMode", isEdit: !0, interlaceInsertRepeat: !0, actionArgs: { after: !0 }, context: "normal" },
    { keys: "O", type: "action", action: "newLineAndEnterInsertMode", isEdit: !0, interlaceInsertRepeat: !0, actionArgs: { after: !1 }, context: "normal" },
    { keys: "v", type: "action", action: "toggleVisualMode" },
    { keys: "V", type: "action", action: "toggleVisualMode", actionArgs: { linewise: !0 } },
    { keys: "<C-v>", type: "action", action: "toggleVisualMode", actionArgs: { blockwise: !0 } },
    { keys: "<C-q>", type: "action", action: "toggleVisualMode", actionArgs: { blockwise: !0 } },
    { keys: "gv", type: "action", action: "reselectLastSelection" },
    { keys: "J", type: "action", action: "joinLines", isEdit: !0 },
    { keys: "gJ", type: "action", action: "joinLines", actionArgs: { keepSpaces: !0 }, isEdit: !0 },
    { keys: "p", type: "action", action: "paste", isEdit: !0, actionArgs: { after: !0, isEdit: !0 } },
    { keys: "P", type: "action", action: "paste", isEdit: !0, actionArgs: { after: !1, isEdit: !0 } },
    { keys: "r<character>", type: "action", action: "replace", isEdit: !0 },
    { keys: "@<register>", type: "action", action: "replayMacro" },
    { keys: "q<register>", type: "action", action: "enterMacroRecordMode" },
    // Handle Replace-mode as a special case of insert mode.
    { keys: "R", type: "action", action: "enterInsertMode", isEdit: !0, actionArgs: { replace: !0 }, context: "normal" },
    { keys: "R", type: "operator", operator: "change", operatorArgs: { linewise: !0, fullLine: !0 }, context: "visual", exitVisualBlock: !0 },
    { keys: "u", type: "action", action: "undo", context: "normal" },
    { keys: "u", type: "operator", operator: "changeCase", operatorArgs: { toLower: !0 }, context: "visual", isEdit: !0 },
    { keys: "U", type: "operator", operator: "changeCase", operatorArgs: { toLower: !1 }, context: "visual", isEdit: !0 },
    { keys: "<C-r>", type: "action", action: "redo" },
    { keys: "m<register>", type: "action", action: "setMark" },
    { keys: '"<register>', type: "action", action: "setRegister" },
    { keys: "<C-r><register>", type: "action", action: "insertRegister", context: "insert", isEdit: !0 },
    { keys: "<C-o>", type: "action", action: "oneNormalCommand", context: "insert" },
    { keys: "zz", type: "action", action: "scrollToCursor", actionArgs: { position: "center" } },
    { keys: "z.", type: "action", action: "scrollToCursor", actionArgs: { position: "center" }, motion: "moveToFirstNonWhiteSpaceCharacter" },
    { keys: "zt", type: "action", action: "scrollToCursor", actionArgs: { position: "top" } },
    { keys: "z<CR>", type: "action", action: "scrollToCursor", actionArgs: { position: "top" }, motion: "moveToFirstNonWhiteSpaceCharacter" },
    { keys: "zb", type: "action", action: "scrollToCursor", actionArgs: { position: "bottom" } },
    { keys: "z-", type: "action", action: "scrollToCursor", actionArgs: { position: "bottom" }, motion: "moveToFirstNonWhiteSpaceCharacter" },
    { keys: ".", type: "action", action: "repeatLastEdit" },
    { keys: "<C-a>", type: "action", action: "incrementNumberToken", isEdit: !0, actionArgs: { increase: !0, backtrack: !1 } },
    { keys: "<C-x>", type: "action", action: "incrementNumberToken", isEdit: !0, actionArgs: { increase: !1, backtrack: !1 } },
    { keys: "<C-t>", type: "action", action: "indent", actionArgs: { indentRight: !0 }, context: "insert" },
    { keys: "<C-d>", type: "action", action: "indent", actionArgs: { indentRight: !1 }, context: "insert" },
    // Text object motions
    { keys: "a<register>", type: "motion", motion: "textObjectManipulation" },
    { keys: "i<register>", type: "motion", motion: "textObjectManipulation", motionArgs: { textObjectInner: !0 } },
    // Search
    { keys: "/", type: "search", searchArgs: { forward: !0, querySrc: "prompt", toJumplist: !0 } },
    { keys: "?", type: "search", searchArgs: { forward: !1, querySrc: "prompt", toJumplist: !0 } },
    { keys: "*", type: "search", searchArgs: { forward: !0, querySrc: "wordUnderCursor", wholeWordOnly: !0, toJumplist: !0 } },
    { keys: "#", type: "search", searchArgs: { forward: !1, querySrc: "wordUnderCursor", wholeWordOnly: !0, toJumplist: !0 } },
    { keys: "g*", type: "search", searchArgs: { forward: !0, querySrc: "wordUnderCursor", toJumplist: !0 } },
    { keys: "g#", type: "search", searchArgs: { forward: !1, querySrc: "wordUnderCursor", toJumplist: !0 } },
    // Ex command
    { keys: ":", type: "ex" }
  ], i = r.length, s = [
    { name: "colorscheme", shortName: "colo" },
    { name: "map" },
    { name: "imap", shortName: "im" },
    { name: "nmap", shortName: "nm" },
    { name: "vmap", shortName: "vm" },
    { name: "omap", shortName: "om" },
    { name: "noremap", shortName: "no" },
    { name: "nnoremap", shortName: "nn" },
    { name: "vnoremap", shortName: "vn" },
    { name: "inoremap", shortName: "ino" },
    { name: "onoremap", shortName: "ono" },
    { name: "unmap" },
    { name: "mapclear", shortName: "mapc" },
    { name: "nmapclear", shortName: "nmapc" },
    { name: "vmapclear", shortName: "vmapc" },
    { name: "imapclear", shortName: "imapc" },
    { name: "omapclear", shortName: "omapc" },
    { name: "write", shortName: "w" },
    { name: "undo", shortName: "u" },
    { name: "redo", shortName: "red" },
    { name: "set", shortName: "se" },
    { name: "setlocal", shortName: "setl" },
    { name: "setglobal", shortName: "setg" },
    { name: "sort", shortName: "sor" },
    { name: "substitute", shortName: "s", possiblyAsync: !0 },
    { name: "startinsert", shortName: "start" },
    { name: "nohlsearch", shortName: "noh" },
    { name: "yank", shortName: "y" },
    { name: "delmarks", shortName: "delm" },
    { name: "registers", shortName: "reg", excludeFromCommandHistory: !0 },
    { name: "vglobal", shortName: "v" },
    { name: "delete", shortName: "d" },
    { name: "join", shortName: "j" },
    { name: "normal", shortName: "norm" },
    { name: "global", shortName: "g" }
  ], a = dn("");
  function o(p) {
    p.setOption("disableInput", !0), p.setOption("showCursorWhenSelecting", !1), t.signal(p, "vim-mode-change", { mode: "normal" }), p.on("cursorActivity", _e), Ee(p), t.on(p.getInputField(), "paste", c(p));
  }
  function l(p) {
    p.setOption("disableInput", !1), p.off("cursorActivity", _e), t.off(p.getInputField(), "paste", c(p)), p.state.vim = null, ps && clearTimeout(ps);
  }
  function c(p) {
    var d = p.state.vim;
    return d.onPasteFn || (d.onPasteFn = function() {
      d.insertMode || (p.setCursor(Xe(p.getCursor(), 0, 1)), Ue.enterInsertMode(p, {}, d));
    }), d.onPasteFn;
  }
  var h = /[\d]/, f = [t.isWordChar, function(p) {
    return p && !t.isWordChar(p) && !/\s/.test(p);
  }], m = [function(p) {
    return /\S/.test(p);
  }], y = ["<", ">"], x = ["-", '"', ".", ":", "_", "/", "+"], C = /^\w$/, S;
  try {
    S = new RegExp("^[\\p{Lu}]$", "u");
  } catch {
    S = /^[A-Z]$/;
  }
  function M(p, d) {
    return d >= p.firstLine() && d <= p.lastLine();
  }
  function Z(p) {
    return /^[a-z]$/.test(p);
  }
  function q(p) {
    return "()[]{}".indexOf(p) != -1;
  }
  function _(p) {
    return h.test(p);
  }
  function B(p) {
    return S.test(p);
  }
  function $(p) {
    return /^\s*$/.test(p);
  }
  function N(p) {
    return ".?!".indexOf(p) != -1;
  }
  function U(p, d) {
    for (var g = 0; g < d.length; g++)
      if (d[g] == p)
        return !0;
    return !1;
  }
  var se = {};
  function K(p, d, g, b, v) {
    if (d === void 0 && !v)
      throw Error("defaultValue is required unless callback is provided");
    if (g || (g = "string"), se[p] = {
      type: g,
      defaultValue: d,
      callback: v
    }, b)
      for (var w = 0; w < b.length; w++)
        se[b[w]] = se[p];
    d && ce(p, d);
  }
  function ce(p, d, g, b) {
    var v = se[p];
    b = b || {};
    var w = b.scope;
    if (!v)
      return new Error("Unknown option: " + p);
    if (v.type == "boolean") {
      if (d && d !== !0)
        return new Error("Invalid argument: " + p + "=" + d);
      d !== !1 && (d = !0);
    }
    v.callback ? (w !== "local" && v.callback(d, void 0), w !== "global" && g && v.callback(d, g)) : (w !== "local" && (v.value = v.type == "boolean" ? !!d : d), w !== "global" && g && (g.state.vim.options[p] = { value: d }));
  }
  function H(p, d, g) {
    var b = se[p];
    g = g || {};
    var v = g.scope;
    if (!b)
      return new Error("Unknown option: " + p);
    if (b.callback) {
      let w = d && b.callback(void 0, d);
      return v !== "global" && w !== void 0 ? w : v !== "local" ? b.callback() : void 0;
    } else
      return (v !== "global" && d && d.state.vim.options[p] || v !== "local" && b || {}).value;
  }
  K("filetype", void 0, "string", ["ft"], function(p, d) {
    if (d !== void 0)
      if (p === void 0) {
        let g = d.getOption("mode");
        return g == "null" ? "" : g;
      } else {
        let g = p == "" ? "null" : p;
        d.setOption("mode", g);
      }
  }), K("textwidth", 80, "number", ["tw"], function(p, d) {
    if (d !== void 0)
      if (p === void 0) {
        var g = d.getOption("textwidth");
        return g;
      } else {
        var b = Math.round(
          /**@type {any}*/
          p
        );
        b > 1 && d.setOption("textwidth", b);
      }
  });
  var ie = function() {
    var p = 100, d = -1, g = 0, b = 0, v = new Array(p);
    function w(j, V, X) {
      var Y = d % p, ee = v[Y];
      function z(te) {
        var ue = ++d % p, $e = v[ue];
        $e && $e.clear(), v[ue] = j.setBookmark(te);
      }
      if (ee) {
        var G = ee.find();
        G && !Ye(G, V) && z(V);
      } else
        z(V);
      z(X), g = d, b = d - p + 1, b < 0 && (b = 0);
    }
    function E(j, V) {
      d += V, d > g ? d = g : d < b && (d = b);
      var X = v[(p + d) % p];
      if (X && !X.find()) {
        var Y = V > 0 ? 1 : -1, ee, z = j.getCursor();
        do
          if (d += Y, X = v[(p + d) % p], X && (ee = X.find()) && !Ye(z, ee))
            break;
        while (d < g && d > b);
      }
      return X;
    }
    function Q(j, V) {
      var X = d, Y = E(j, V);
      return d = X, Y && Y.find();
    }
    return {
      cachedCursor: void 0,
      //used for # and * jumps
      add: w,
      find: Q,
      move: E
    };
  }, fe = function(p) {
    return p ? {
      changes: p.changes,
      expectCursorActivityForChange: p.expectCursorActivityForChange
    } : {
      // Change list
      changes: [],
      // Set to true on change, false on cursorActivity.
      expectCursorActivityForChange: !1
    };
  };
  class De {
    constructor() {
      this.latestRegister = void 0, this.isPlaying = !1, this.isRecording = !1, this.replaySearchQueries = [], this.onRecordingDone = void 0, this.lastInsertModeChanges = fe();
    }
    exitMacroRecordMode() {
      var d = re.macroModeState;
      d.onRecordingDone && d.onRecordingDone(), d.onRecordingDone = void 0, d.isRecording = !1;
    }
    enterMacroRecordMode(d, g) {
      var b = re.registerController.getRegister(g);
      if (b) {
        if (b.clear(), this.latestRegister = g, d.openDialog) {
          var v = Hr("span", { class: "cm-vim-message" }, "recording @" + g);
          this.onRecordingDone = d.openDialog(v, null, { bottom: !0 });
        }
        this.isRecording = !0;
      }
    }
  }
  function Ee(p) {
    return p.state.vim || (p.state.vim = {
      inputState: new Ot(),
      // Vim's input state that triggered the last edit, used to repeat
      // motions and operators with '.'.
      lastEditInputState: void 0,
      // Vim's action command before the last edit, used to repeat actions
      // with '.' and insert mode repeat.
      lastEditActionCommand: void 0,
      // When using jk for navigation, if you move from a longer line to a
      // shorter line, the cursor may clip to the end of the shorter line.
      // If j is pressed again and cursor goes to the next line, the
      // cursor should go back to its horizontal position on the longer
      // line if it can. This is to keep track of the horizontal position.
      lastHPos: -1,
      // Doing the same with screen-position for gj/gk
      lastHSPos: -1,
      // The last motion command run. Cleared if a non-motion command gets
      // executed in between.
      lastMotion: null,
      marks: {},
      insertMode: !1,
      insertModeReturn: !1,
      // Repeat count for changes made in insert mode, triggered by key
      // sequences like 3,i. Only exists when insertMode is true.
      insertModeRepeat: void 0,
      visualMode: !1,
      // If we are in visual line mode. No effect if visualMode is false.
      visualLine: !1,
      visualBlock: !1,
      lastSelection: null,
      lastPastedText: null,
      sel: {},
      // Buffer-local/window-local values of vim options.
      options: {},
      // Whether the next character should be interpreted literally
      // Necassary for correct implementation of f<character>, r<character> etc.
      // in terms of langmaps.
      expectLiteralNext: !1
    }), p.state.vim;
  }
  var re;
  function ke() {
    re = {
      // The current search query.
      searchQuery: null,
      // Whether we are searching backwards.
      searchIsReversed: !1,
      // Replace part of the last substituted pattern
      lastSubstituteReplacePart: void 0,
      jumpList: ie(),
      macroModeState: new De(),
      // Recording latest f, t, F or T motion command.
      lastCharacterSearch: { increment: 0, forward: !0, selectedCharacter: "" },
      registerController: new Jn({}),
      // search history buffer
      searchHistoryController: new pr(),
      // ex Command history buffer
      exCommandHistoryController: new pr()
    };
    for (var p in se) {
      var d = se[p];
      d.value = d.defaultValue;
    }
  }
  var Le, xe = {
    enterVimMode: o,
    leaveVimMode: l,
    buildKeyMap: function() {
    },
    // Testing hook, though it might be useful to expose the register
    // controller anyway.
    getRegisterController: function() {
      return re.registerController;
    },
    // Testing hook.
    resetVimGlobalState_: ke,
    // Testing hook.
    getVimGlobalState_: function() {
      return re;
    },
    // Testing hook.
    maybeInitVimState_: Ee,
    suppressErrorLogging: !1,
    InsertModeKey: Is,
    /**@type {(lhs: string, rhs: string, ctx: string) => void} */
    map: function(p, d, g) {
      Ce.map(p, d, g);
    },
    /**@type {(lhs: string, ctx: string) => any} */
    unmap: function(p, d) {
      return Ce.unmap(p, d);
    },
    // Non-recursive map function.
    // NOTE: This will not create mappings to key maps that aren't present
    // in the default key map. See TODO at bottom of function.
    /**@type {(lhs: string, rhs: string, ctx: string) => void} */
    noremap: function(p, d, g) {
      Ce.map(p, d, g, !0);
    },
    // Remove all user-defined mappings for the provided context.
    /**@arg {string} [ctx]} */
    mapclear: function(p) {
      var d = r.length, g = i, b = r.slice(0, d - g);
      if (r = r.slice(d - g), p)
        for (var v = b.length - 1; v >= 0; v--) {
          var w = b[v];
          if (p !== w.context)
            if (w.context)
              this._mapCommand(w);
            else {
              var E = ["normal", "insert", "visual"];
              for (var Q in E)
                if (E[Q] !== p) {
                  var j = Object.assign({}, w);
                  j.context = E[Q], this._mapCommand(j);
                }
            }
        }
    },
    langmap: Bn,
    vimKeyFromEvent: xt,
    // TODO: Expose setOption and getOption as instance methods. Need to decide how to namespace
    // them, or somehow make them work with the existing CodeMirror setOption/getOption API.
    setOption: ce,
    getOption: H,
    defineOption: K,
    /**@type {(name: string, prefix: string|undefined, func: ExFn) => void} */
    defineEx: function(p, d, g) {
      if (!d)
        d = p;
      else if (p.indexOf(d) !== 0)
        throw new Error('(Vim.defineEx) "' + d + '" is not a prefix of "' + p + '", command not registered');
      fs[p] = g, Ce.commandMap_[d] = { name: p, shortName: d, type: "api" };
    },
    /**@type {(cm: CodeMirror, key: string, origin: string) => undefined | boolean} */
    handleKey: function(p, d, g) {
      var b = this.findKey(p, d, g);
      if (typeof b == "function")
        return b();
    },
    multiSelectHandleKey: oh,
    /**
     * This is the outermost function called by CodeMirror, after keys have
     * been mapped to their Vim equivalents.
     *
     * Finds a command based on the key (and cached keys if there is a
     * multi-key sequence). Returns `undefined` if no key is matched, a noop
     * function if a partial match is found (multi-key), and a function to
     * execute the bound command if a a key is matched. The function always
     * returns true.
     */
    /**@type {(cm_: CodeMirror, key: string, origin?: string| undefined) => (() => boolean) | undefined} */
    findKey: function(p, d, g) {
      var b = Ee(p), v = (
        /**@type {CodeMirrorV}*/
        p
      );
      function w() {
        var X = re.macroModeState;
        if (X.isRecording) {
          if (d == "q")
            return X.exitMacroRecordMode(), kt(v), !0;
          g != "mapping" && ah(X, d);
        }
      }
      function E() {
        if (d == "<Esc>") {
          if (b.visualMode)
            ge(v);
          else if (b.insertMode)
            Yr(v);
          else
            return;
          return kt(v), !0;
        }
      }
      function Q() {
        if (E())
          return !0;
        b.inputState.keyBuffer.push(d);
        var X = b.inputState.keyBuffer.join(""), Y = d.length == 1, ee = Mn.matchCommand(X, r, b.inputState, "insert"), z = b.inputState.changeQueue;
        if (ee.type == "none")
          return kt(v), !1;
        if (ee.type == "partial") {
          if (ee.expectLiteralNext && (b.expectLiteralNext = !0), Le && window.clearTimeout(Le), Le = Y && window.setTimeout(
            function() {
              b.insertMode && b.inputState.keyBuffer.length && kt(v);
            },
            H("insertModeEscKeysTimeout")
          ), Y) {
            var G = v.listSelections();
            (!z || z.removed.length != G.length) && (z = b.inputState.changeQueue = new Et()), z.inserted += d;
            for (var te = 0; te < G.length; te++) {
              var ue = Ht(G[te].anchor, G[te].head), $e = ut(G[te].anchor, G[te].head), Be = v.getRange(ue, v.state.overwrite ? Xe($e, 0, 1) : $e);
              z.removed[te] = (z.removed[te] || "") + Be;
            }
          }
          return !Y;
        }
        if (b.expectLiteralNext = !1, Le && window.clearTimeout(Le), ee.command && z) {
          for (var G = v.listSelections(), te = 0; te < G.length; te++) {
            var Ve = G[te].head;
            v.replaceRange(
              z.removed[te] || "",
              Xe(Ve, 0, -z.inserted.length),
              Ve,
              "+input"
            );
          }
          re.macroModeState.lastInsertModeChanges.changes.pop();
        }
        return ee.command || kt(v), ee.command;
      }
      function j() {
        if (w() || E())
          return !0;
        b.inputState.keyBuffer.push(d);
        var X = b.inputState.keyBuffer.join("");
        if (/^[1-9]\d*$/.test(X))
          return !0;
        var Y = /^(\d*)(.*)$/.exec(X);
        if (!Y)
          return kt(v), !1;
        var ee = b.visualMode ? "visual" : "normal", z = Y[2] || Y[1];
        b.inputState.operatorShortcut && b.inputState.operatorShortcut.slice(-1) == z && (z = b.inputState.operatorShortcut);
        var G = Mn.matchCommand(z, r, b.inputState, ee);
        return G.type == "none" ? (kt(v), !1) : G.type == "partial" ? (G.expectLiteralNext && (b.expectLiteralNext = !0), !0) : G.type == "clear" ? (kt(v), !0) : (b.expectLiteralNext = !1, b.inputState.keyBuffer.length = 0, Y = /^(\d*)(.*)$/.exec(X), Y && Y[1] && Y[1] != "0" && b.inputState.pushRepeatDigit(Y[1]), G.command);
      }
      var V;
      return b.insertMode ? V = Q() : V = j(), V === !1 ? !b.insertMode && d.length === 1 ? function() {
        return !0;
      } : void 0 : V === !0 ? function() {
        return !0;
      } : function() {
        return v.operation(function() {
          v.curOp.isVimOp = !0;
          try {
            V.type == "keyToKey" ? lt(v, V.toKeys, V) : Mn.processCommand(v, b, V);
          } catch (X) {
            throw v.state.vim = void 0, Ee(v), xe.suppressErrorLogging || console.log(X), X;
          }
          return !0;
        });
      };
    },
    handleEx: function(p, d) {
      Ce.processCommand(p, d);
    },
    defineMotion: _r,
    defineAction: Tt,
    defineOperator: zr,
    mapCommand: rt,
    _mapCommand: Na,
    defineRegister: Kn,
    exitVisualMode: ge,
    exitInsertMode: Yr
  }, je = [], he = !1, Pe;
  function Pt(p) {
    if (p[0] == "<") {
      var d = p.toLowerCase().slice(1, -1), g = d.split("-");
      if (d = g.pop() || "", d == "lt") p = "<";
      else if (d == "space") p = " ";
      else if (d == "cr") p = `
`;
      else if (ze[d]) {
        var b = Pe.value, v = {
          key: ze[d],
          target: {
            value: b,
            selectionEnd: b.length,
            selectionStart: b.length
          }
        };
        Pe.onKeyDown && Pe.onKeyDown(v, Pe.value, E), Pe && Pe.onKeyUp && Pe.onKeyUp(v, Pe.value, E);
        return;
      }
    }
    if (p == `
`) {
      var w = Pe;
      Pe = null, w.onClose && w.onClose(w.value);
    } else
      Pe.value = (Pe.value || "") + p;
    function E(Q) {
      typeof Q == "string" ? Pe.value = Q : Pe = null;
    }
  }
  function lt(p, d, g) {
    var b = he;
    if (g) {
      if (je.indexOf(g) != -1) return;
      je.push(g), he = g.noremap != !1;
    }
    try {
      for (var v = Ee(p), w = /<(?:[CSMA]-)*\w+>|./gi, E; E = w.exec(d); ) {
        var Q = E[0], j = v.insertMode;
        if (Pe) {
          Pt(Q);
          continue;
        }
        var V = xe.handleKey(p, Q, "mapping");
        if (!V && j && v.insertMode) {
          if (Q[0] == "<") {
            var X = Q.toLowerCase().slice(1, -1), Y = X.split("-");
            if (X = Y.pop() || "", X == "lt") Q = "<";
            else if (X == "space") Q = " ";
            else if (X == "cr") Q = `
`;
            else if (ze.hasOwnProperty(X)) {
              Q = ze[X], yl(p, Q);
              continue;
            } else
              Q = Q[0], w.lastIndex = E.index + 1;
          }
          p.replaceSelection(Q);
        }
      }
    } finally {
      if (je.pop(), he = je.length ? b : !1, !je.length && Pe) {
        var ee = Pe;
        Pe = null, cs(p, ee);
      }
    }
  }
  var We = {
    Return: "CR",
    Backspace: "BS",
    Delete: "Del",
    Escape: "Esc",
    Insert: "Ins",
    ArrowLeft: "Left",
    ArrowRight: "Right",
    ArrowUp: "Up",
    ArrowDown: "Down",
    Enter: "CR",
    " ": "Space"
  }, Qt = {
    Shift: 1,
    Alt: 1,
    Command: 1,
    Control: 1,
    CapsLock: 1,
    AltGraph: 1,
    Dead: 1,
    Unidentified: 1
  }, ze = {};
  "Left|Right|Up|Down|End|Home".split("|").concat(Object.keys(We)).forEach(function(p) {
    ze[(We[p] || "").toLowerCase()] = ze[p.toLowerCase()] = p;
  });
  function xt(p, d) {
    var g = p.key;
    if (!Qt[g]) {
      g.length > 1 && g[0] == "n" && (g = g.replace("Numpad", "")), g = We[g] || g;
      var b = "";
      if (p.ctrlKey && (b += "C-"), p.altKey && (b += "A-"), p.metaKey && (b += "M-"), t.isMac && p.altKey && !p.metaKey && !p.ctrlKey && (b = b.slice(2)), (b || g.length > 1) && p.shiftKey && (b += "S-"), d && !d.expectLiteralNext && g.length == 1) {
        if (a.keymap && g in a.keymap)
          (a.remapCtrl != !1 || !b) && (g = a.keymap[g]);
        else if (g.charCodeAt(0) > 255) {
          var v = p.code?.slice(-1) || "";
          p.shiftKey || (v = v.toLowerCase()), v && (g = v);
        }
      }
      return b += g, b.length > 1 && (b = "<" + b + ">"), b;
    }
  }
  function Bn(p, d) {
    a.string !== p && (a = dn(p)), a.remapCtrl = d;
  }
  function dn(p) {
    let d = {};
    if (!p) return { keymap: d, string: "" };
    function g(b) {
      return b.split(/\\?(.)/).filter(Boolean);
    }
    return p.split(/((?:[^\\,]|\\.)+),/).map((b) => {
      if (!b) return;
      const v = b.split(/((?:[^\\;]|\\.)+);/);
      if (v.length == 3) {
        const w = g(v[1]), E = g(v[2]);
        if (w.length !== E.length) return;
        for (let Q = 0; Q < w.length; ++Q) d[w[Q]] = E[Q];
      } else if (v.length == 1) {
        const w = g(b);
        if (w.length % 2 !== 0) return;
        for (let E = 0; E < w.length; E += 2) d[w[E]] = w[E + 1];
      }
    }), { keymap: d, string: p };
  }
  K("langmap", void 0, "string", ["lmap"], function(p, d) {
    if (p === void 0)
      return a.string;
    Bn(p);
  });
  class Ot {
    constructor() {
      this.prefixRepeat = [], this.motionRepeat = [], this.operator = null, this.operatorArgs = null, this.motion = null, this.motionArgs = null, this.keyBuffer = [], this.registerName = null, this.changeQueue = null;
    }
    pushRepeatDigit(d) {
      this.operator ? this.motionRepeat = this.motionRepeat.concat(d) : this.prefixRepeat = this.prefixRepeat.concat(d);
    }
    getRepeat() {
      var d = 0;
      return (this.prefixRepeat.length > 0 || this.motionRepeat.length > 0) && (d = 1, this.prefixRepeat.length > 0 && (d *= parseInt(this.prefixRepeat.join(""), 10)), this.motionRepeat.length > 0 && (d *= parseInt(this.motionRepeat.join(""), 10))), d;
    }
  }
  function kt(p, d) {
    p.state.vim.inputState = new Ot(), p.state.vim.expectLiteralNext = !1, t.signal(p, "vim-command-done", d);
  }
  function Et() {
    this.removed = [], this.inserted = "";
  }
  class Xt {
    constructor(d, g, b) {
      this.clear(), this.keyBuffer = [d || ""], this.insertModeChanges = [], this.searchQueries = [], this.linewise = !!g, this.blockwise = !!b;
    }
    setText(d, g, b) {
      this.keyBuffer = [d || ""], this.linewise = !!g, this.blockwise = !!b;
    }
    pushText(d, g) {
      g && (this.linewise || this.keyBuffer.push(`
`), this.linewise = !0), this.keyBuffer.push(d);
    }
    pushInsertModeChanges(d) {
      this.insertModeChanges.push(fe(d));
    }
    pushSearchQuery(d) {
      this.searchQueries.push(d);
    }
    clear() {
      this.keyBuffer = [], this.insertModeChanges = [], this.searchQueries = [], this.linewise = !1;
    }
    toString() {
      return this.keyBuffer.join("");
    }
  }
  function Kn(p, d) {
    var g = re.registerController.registers;
    if (!p || p.length != 1)
      throw Error("Register name must be 1 character");
    if (g[p])
      throw Error("Register already defined " + p);
    g[p] = d, x.push(p);
  }
  class Jn {
    /** @arg {Object<string, Register>} registers */
    constructor(d) {
      this.registers = d, this.unnamedRegister = d['"'] = new Xt(), d["."] = new Xt(), d[":"] = new Xt(), d["/"] = new Xt(), d["+"] = new Xt();
    }
    pushText(d, g, b, v, w) {
      if (d !== "_") {
        v && b.charAt(b.length - 1) !== `
` && (b += `
`);
        var E = this.isValidRegister(d) ? this.getRegister(d) : null;
        if (!E) {
          switch (g) {
            case "yank":
              this.registers[0] = new Xt(b, v, w);
              break;
            case "delete":
            case "change":
              b.indexOf(`
`) == -1 ? this.registers["-"] = new Xt(b, v) : (this.shiftNumericRegisters_(), this.registers[1] = new Xt(b, v));
              break;
          }
          this.unnamedRegister.setText(b, v, w);
          return;
        }
        var Q = B(d);
        Q ? E.pushText(b, v) : E.setText(b, v, w), d === "+" && navigator.clipboard.writeText(b), this.unnamedRegister.setText(E.toString(), v);
      }
    }
    /**
     * Gets the register named @name.  If one of @name doesn't already exist,
     * create it.  If @name is invalid, return the unnamedRegister.
     * @arg {string} [name]
     */
    getRegister(d) {
      return this.isValidRegister(d) ? (d = d.toLowerCase(), this.registers[d] || (this.registers[d] = new Xt()), this.registers[d]) : this.unnamedRegister;
    }
    /**@type {{(name: any): name is string}} */
    isValidRegister(d) {
      return d && (U(d, x) || C.test(d));
    }
    shiftNumericRegisters_() {
      for (var d = 9; d >= 2; d--)
        this.registers[d] = this.getRegister("" + (d - 1));
    }
  }
  class pr {
    constructor() {
      this.historyBuffer = [], this.iterator = 0, this.initialPrefix = null;
    }
    // the input argument here acts a user entered prefix for a small time
    // until we start autocompletion in which case it is the autocompleted.
    nextMatch(d, g) {
      var b = this.historyBuffer, v = g ? -1 : 1;
      this.initialPrefix === null && (this.initialPrefix = d);
      for (var w = this.iterator + v; g ? w >= 0 : w < b.length; w += v)
        for (var E = b[w], Q = 0; Q <= E.length; Q++)
          if (this.initialPrefix == E.substring(0, Q))
            return this.iterator = w, E;
      if (w >= b.length)
        return this.iterator = b.length, this.initialPrefix;
      if (w < 0) return d;
    }
    pushInput(d) {
      var g = this.historyBuffer.indexOf(d);
      g > -1 && this.historyBuffer.splice(g, 1), d.length && this.historyBuffer.push(d);
    }
    reset() {
      this.initialPrefix = null, this.iterator = this.historyBuffer.length;
    }
  }
  var Mn = {
    matchCommand: function(p, d, g, b) {
      var v = gi(p, d, b, g);
      if (!v.full && !v.partial)
        return { type: "none" };
      if (!v.full && v.partial)
        return {
          type: "partial",
          expectLiteralNext: v.partial.length == 1 && v.partial[0].keys.slice(-11) == "<character>"
          // langmap literal logic
        };
      for (var w, E = 0; E < v.full.length; E++) {
        var Q = v.full[E];
        w || (w = Q);
      }
      if (w.keys.slice(-11) == "<character>" || w.keys.slice(-10) == "<register>") {
        var j = mn(p);
        if (!j || j.length > 1) return { type: "clear" };
        g.selectedCharacter = j;
      }
      return { type: "full", command: w };
    },
    /**
     * @arg {CodeMirrorV} cm
     * @arg {vimState} vim
     * @arg {vimKey} command
     */
    processCommand: function(p, d, g) {
      switch (d.inputState.repeatOverride = g.repeatOverride, g.type) {
        case "motion":
          this.processMotion(p, d, g);
          break;
        case "operator":
          this.processOperator(p, d, g);
          break;
        case "operatorMotion":
          this.processOperatorMotion(p, d, g);
          break;
        case "action":
          this.processAction(p, d, g);
          break;
        case "search":
          this.processSearch(p, d, g);
          break;
        case "ex":
        case "keyToEx":
          this.processEx(p, d, g);
          break;
      }
    },
    /**
     * @arg {CodeMirrorV} cm
     * @arg {vimState} vim
     * @arg {import("./types").motionCommand|import("./types").operatorMotionCommand} command
     */
    processMotion: function(p, d, g) {
      d.inputState.motion = g.motion, d.inputState.motionArgs = /**@type {MotionArgs}*/
      wt(g.motionArgs), this.evalInput(p, d);
    },
    /**
     * @arg {CodeMirrorV} cm
     * @arg {vimState} vim
     * @arg {import("./types").operatorCommand|import("./types").operatorMotionCommand} command
     */
    processOperator: function(p, d, g) {
      var b = d.inputState;
      if (b.operator)
        if (b.operator == g.operator) {
          b.motion = "expandToLine", b.motionArgs = { linewise: !0, repeat: 1 }, this.evalInput(p, d);
          return;
        } else
          kt(p);
      b.operator = g.operator, b.operatorArgs = wt(g.operatorArgs), g.keys.length > 1 && (b.operatorShortcut = g.keys), g.exitVisualBlock && (d.visualBlock = !1, J(p)), d.visualMode && this.evalInput(p, d);
    },
    /**
     * @arg {CodeMirrorV} cm
     * @arg {vimState} vim
     * @arg {import("./types").operatorMotionCommand} command
     */
    processOperatorMotion: function(p, d, g) {
      var b = d.visualMode, v = wt(g.operatorMotionArgs);
      v && b && v.visualLine && (d.visualLine = !0), this.processOperator(p, d, g), b || this.processMotion(p, d, g);
    },
    /**
     * @arg {CodeMirrorV} cm
     * @arg {vimState} vim
     * @arg {import("./types").actionCommand} command
     */
    processAction: function(p, d, g) {
      var b = d.inputState, v = b.getRepeat(), w = !!v, E = (
        /**@type {ActionArgs}*/
        wt(g.actionArgs) || { repeat: 1 }
      );
      b.selectedCharacter && (E.selectedCharacter = b.selectedCharacter), g.operator && this.processOperator(p, d, g), g.motion && this.processMotion(p, d, g), (g.motion || g.operator) && this.evalInput(p, d), E.repeat = v || 1, E.repeatIsExplicit = w, E.registerName = b.registerName, kt(p), d.lastMotion = null, g.isEdit && this.recordLastEdit(d, b, g), Ue[g.action](p, E, d);
    },
    /** @arg {CodeMirrorV} cm @arg {vimState} vim @arg {import("./types").searchCommand} command*/
    processSearch: function(p, d, g) {
      if (!p.getSearchCursor)
        return;
      var b = g.searchArgs.forward, v = g.searchArgs.wholeWordOnly;
      tr(p).setReversed(!b);
      var w = b ? "/" : "?", E = tr(p).getQuery(), Q = p.getScrollInfo();
      function j(te, ue, $e) {
        re.searchHistoryController.pushInput(te), re.searchHistoryController.reset();
        try {
          hs(p, te, ue, $e);
        } catch {
          bt(p, "Invalid regex: " + te), kt(p);
          return;
        }
        Mn.processMotion(p, d, {
          keys: "",
          type: "motion",
          motion: "findNext",
          motionArgs: { forward: !0, toJumplist: g.searchArgs.toJumplist }
        });
      }
      function V(te) {
        p.scrollTo(Q.left, Q.top), j(
          te,
          !0,
          !0
          /** smartCase */
        );
        var ue = re.macroModeState;
        ue.isRecording && ml(ue, te);
      }
      function X(te, ue, $e) {
        var Be = xt(te), Ve, yt;
        Be == "<Up>" || Be == "<Down>" ? (Ve = Be == "<Up>", yt = te.target ? te.target.selectionEnd : 0, ue = re.searchHistoryController.nextMatch(ue, Ve) || "", $e(ue), yt && te.target && (te.target.selectionEnd = te.target.selectionStart = Math.min(yt, te.target.value.length))) : Be && Be != "<Left>" && Be != "<Right>" && re.searchHistoryController.reset();
        var gn;
        try {
          gn = hs(
            p,
            ue,
            !0,
            !0
            /** smartCase */
          );
        } catch {
        }
        gn ? p.scrollIntoView(dl(p, !b, gn), 30) : (Ia(p), p.scrollTo(Q.left, Q.top));
      }
      function Y(te, ue, $e) {
        var Be = xt(te);
        Be == "<Esc>" || Be == "<C-c>" || Be == "<C-[>" || Be == "<BS>" && ue == "" ? (re.searchHistoryController.pushInput(ue), re.searchHistoryController.reset(), hs(p, E), Ia(p), p.scrollTo(Q.left, Q.top), t.e_stop(te), kt(p), $e(), p.focus()) : Be == "<Up>" || Be == "<Down>" ? t.e_stop(te) : Be == "<C-u>" && (t.e_stop(te), $e(""));
      }
      switch (g.searchArgs.querySrc) {
        case "prompt":
          var ee = re.macroModeState;
          if (ee.isPlaying) {
            let ue = ee.replaySearchQueries.shift();
            j(
              ue,
              !0,
              !1
              /** smartCase */
            );
          } else
            cs(p, {
              onClose: V,
              prefix: w,
              desc: "(JavaScript regexp)",
              onKeyUp: X,
              onKeyDown: Y
            });
          break;
        case "wordUnderCursor":
          var z = dr(p, { noSymbol: !0 }), G = !0;
          if (z || (z = dr(p, { noSymbol: !1 }), G = !1), !z) {
            bt(p, "No word under cursor"), kt(p);
            return;
          }
          let te = p.getLine(z.start.line).substring(
            z.start.ch,
            z.end.ch
          );
          G && v ? te = "\\b" + te + "\\b" : te = vn(te), re.jumpList.cachedCursor = p.getCursor(), p.setCursor(z.start), j(
            te,
            !0,
            !1
            /** smartCase */
          );
          break;
      }
    },
    /**
     * @arg {CodeMirrorV} cm
     * @arg {vimState} vim
     * @arg {import("./types").exCommand | import("./types").keyToExCommand} command
     */
    processEx: function(p, d, g) {
      function b(w) {
        re.exCommandHistoryController.pushInput(w), re.exCommandHistoryController.reset(), Ce.processCommand(p, w), p.state.vim && kt(p);
      }
      function v(w, E, Q) {
        var j = xt(w), V, X;
        (j == "<Esc>" || j == "<C-c>" || j == "<C-[>" || j == "<BS>" && E == "") && (re.exCommandHistoryController.pushInput(E), re.exCommandHistoryController.reset(), t.e_stop(w), kt(p), Q(), p.focus()), j == "<Up>" || j == "<Down>" ? (t.e_stop(w), V = j == "<Up>", X = w.target ? w.target.selectionEnd : 0, E = re.exCommandHistoryController.nextMatch(E, V) || "", Q(E), X && w.target && (w.target.selectionEnd = w.target.selectionStart = Math.min(X, w.target.value.length))) : j == "<C-u>" ? (t.e_stop(w), Q("")) : j && j != "<Left>" && j != "<Right>" && re.exCommandHistoryController.reset();
      }
      g.type == "keyToEx" ? Ce.processCommand(p, g.exArgs.input) : d.visualMode ? cs(p, {
        onClose: b,
        prefix: ":",
        value: "'<,'>",
        onKeyDown: v,
        selectValueOnOpen: !1
      }) : cs(p, {
        onClose: b,
        prefix: ":",
        onKeyDown: v
      });
    },
    /**@arg {CodeMirrorV} cm   @arg {vimState} vim */
    evalInput: function(p, d) {
      var g = d.inputState, b = g.motion, v = g.motionArgs || { repeat: 1 }, w = g.operator, E = g.operatorArgs || {}, Q = g.registerName, j = d.sel, V = He(d.visualMode ? Se(p, j.head) : p.getCursor("head")), X = He(d.visualMode ? Se(p, j.anchor) : p.getCursor("anchor")), Y = He(V), ee = He(X), z, G, te;
      if (w && this.recordLastEdit(d, g), g.repeatOverride !== void 0 ? te = g.repeatOverride : te = g.getRepeat(), te > 0 && v.explicitRepeat ? v.repeatIsExplicit = !0 : (v.noRepeat || !v.explicitRepeat && te === 0) && (te = 1, v.repeatIsExplicit = !1), g.selectedCharacter && (v.selectedCharacter = E.selectedCharacter = g.selectedCharacter), v.repeat = te, kt(p), b) {
        var ue = zt[b](p, V, v, d, g);
        if (d.lastMotion = zt[b], !ue)
          return;
        if (v.toJumplist) {
          var $e = re.jumpList, Be = $e.cachedCursor;
          Be ? (us(p, Be, ue), delete $e.cachedCursor) : us(p, V, ue);
        }
        ue instanceof Array ? (G = ue[0], z = ue[1]) : z = ue, z || (z = He(V)), d.visualMode ? (d.visualBlock && z.ch === 1 / 0 || (z = Se(p, z, Y)), G && (G = Se(p, G)), G = G || ee, j.anchor = G, j.head = z, J(p), Rr(
          p,
          d,
          "<",
          gt(G, z) ? G : z
        ), Rr(
          p,
          d,
          ">",
          gt(G, z) ? z : G
        )) : w || (z = Se(p, z, Y), p.setCursor(z.line, z.ch));
      }
      if (w) {
        if (E.lastSel) {
          G = ee;
          var Ve = E.lastSel, yt = Math.abs(Ve.head.line - Ve.anchor.line), gn = Math.abs(Ve.head.ch - Ve.anchor.ch);
          Ve.visualLine ? z = new e(ee.line + yt, ee.ch) : Ve.visualBlock ? z = new e(ee.line + yt, ee.ch + gn) : Ve.head.line == Ve.anchor.line ? z = new e(ee.line, ee.ch + gn) : z = new e(ee.line + yt, ee.ch), d.visualMode = !0, d.visualLine = Ve.visualLine, d.visualBlock = Ve.visualBlock, j = d.sel = {
            anchor: G,
            head: z
          }, J(p);
        } else d.visualMode && (E.lastSel = {
          anchor: He(j.anchor),
          head: He(j.head),
          visualBlock: d.visualBlock,
          visualLine: d.visualLine
        });
        var qt, ln, it, et, $t;
        if (d.visualMode) {
          qt = Ht(j.head, j.anchor), ln = ut(j.head, j.anchor), it = d.visualLine || E.linewise, et = d.visualBlock ? "block" : it ? "line" : "char";
          var Kt = n(p, qt, ln);
          if ($t = ae(p, {
            anchor: Kt.start,
            head: Kt.end
          }, et), it) {
            var Jt = $t.ranges;
            if (et == "block")
              for (var gr = 0; gr < Jt.length; gr++)
                Jt[gr].head.ch = pt(p, Jt[gr].head.line);
            else et == "line" && (Jt[0].head = new e(Jt[0].head.line + 1, 0));
          }
        } else {
          if (qt = He(G || ee), ln = He(z || Y), gt(ln, qt)) {
            var Ns = qt;
            qt = ln, ln = Ns;
          }
          it = v.linewise || E.linewise, it ? Rt(p, qt, ln) : v.forward && Je(p, qt, ln), et = "char";
          var vl = !v.inclusive || it, Kt = n(p, qt, ln);
          $t = ae(p, {
            anchor: Kt.start,
            head: Kt.end
          }, et, vl);
        }
        p.setSelections($t.ranges, $t.primary), d.lastMotion = null, E.repeat = te, E.registerName = Q, E.linewise = it;
        var Wa = On[w](
          p,
          E,
          $t.ranges,
          ee,
          z
        );
        d.visualMode && ge(p, Wa != null), Wa && p.setCursor(Wa);
      }
    },
    /**@arg {vimState} vim  @arg {InputStateInterface} inputState, @arg {import("./types").actionCommand} [actionCommand] */
    recordLastEdit: function(p, d, g) {
      var b = re.macroModeState;
      b.isPlaying || (p.lastEditInputState = d, p.lastEditActionCommand = g, b.lastInsertModeChanges.changes = [], b.lastInsertModeChanges.expectCursorActivityForChange = !1, b.lastInsertModeChanges.visualBlock = p.visualBlock ? p.sel.head.line - p.sel.anchor.line : 0);
    }
  }, zt = {
    moveToTopLine: function(p, d, g) {
      var b = L(p).top + g.repeat - 1;
      return new e(b, Yt(p.getLine(b)));
    },
    moveToMiddleLine: function(p) {
      var d = L(p), g = Math.floor((d.top + d.bottom) * 0.5);
      return new e(g, Yt(p.getLine(g)));
    },
    moveToBottomLine: function(p, d, g) {
      var b = L(p).bottom - g.repeat + 1;
      return new e(b, Yt(p.getLine(b)));
    },
    expandToLine: function(p, d, g) {
      var b = d;
      return new e(b.line + g.repeat - 1, 1 / 0);
    },
    findNext: function(p, d, g) {
      var b = tr(p), v = b.getQuery();
      if (v) {
        var w = !g.forward;
        return w = b.isReversed() ? !w : w, fl(p, v), dl(p, w, v, g.repeat);
      }
    },
    /**
     * Find and select the next occurrence of the search query. If the cursor is currently
     * within a match, then find and select the current match. Otherwise, find the next occurrence in the
     * appropriate direction.
     *
     * This differs from `findNext` in the following ways:
     *
     * 1. Instead of only returning the "from", this returns a "from", "to" range.
     * 2. If the cursor is currently inside a search match, this selects the current match
     *    instead of the next match.
     * 3. If there is no associated operator, this will turn on visual mode.
     */
    findAndSelectNextInclusive: function(p, d, g, b, v) {
      var w = tr(p), E = w.getQuery();
      if (E) {
        var Q = !g.forward;
        Q = w.isReversed() ? !Q : Q;
        var j = ih(p, Q, E, g.repeat, b);
        if (j) {
          if (v.operator)
            return j;
          var V = j[0], X = new e(j[1].line, j[1].ch - 1);
          if (b.visualMode) {
            (b.visualLine || b.visualBlock) && (b.visualLine = !1, b.visualBlock = !1, t.signal(p, "vim-mode-change", { mode: "visual", subMode: "" }));
            var Y = b.sel.anchor;
            if (Y)
              return w.isReversed() ? g.forward ? [Y, V] : [Y, X] : g.forward ? [Y, X] : [Y, V];
          } else
            b.visualMode = !0, b.visualLine = !1, b.visualBlock = !1, t.signal(p, "vim-mode-change", { mode: "visual", subMode: "" });
          return Q ? [X, V] : [V, X];
        }
      }
    },
    goToMark: function(p, d, g, b) {
      var v = Ne(p, b, g.selectedCharacter || "");
      return v ? g.linewise ? { line: v.line, ch: Yt(p.getLine(v.line)) } : v : null;
    },
    moveToOtherHighlightedEnd: function(p, d, g, b) {
      if (b.visualBlock && g.sameLine) {
        var v = b.sel;
        return [
          Se(p, new e(v.anchor.line, v.head.ch)),
          Se(p, new e(v.head.line, v.anchor.ch))
        ];
      } else
        return [b.sel.head, b.sel.anchor];
    },
    jumpToMark: function(p, d, g, b) {
      for (var v = d, w = 0; w < g.repeat; w++) {
        var E = v;
        for (var Q in b.marks)
          if (Z(Q)) {
            var j = b.marks[Q].find(), V = g.forward ? (
              // @ts-ignore
              gt(j, E)
            ) : gt(E, j);
            if (!V && !(g.linewise && j.line == E.line)) {
              var X = Ye(E, v), Y = g.forward ? (
                // @ts-ignore
                Ze(E, j, v)
              ) : (
                // @ts-ignore
                Ze(v, j, E)
              );
              (X || Y) && (v = j);
            }
          }
      }
      return g.linewise && (v = new e(v.line, Yt(p.getLine(v.line)))), v;
    },
    moveByCharacters: function(p, d, g) {
      var b = d, v = g.repeat, w = g.forward ? b.ch + v : b.ch - v;
      return new e(b.line, w);
    },
    moveByLines: function(p, d, g, b) {
      var v = d, w = v.ch;
      switch (b.lastMotion) {
        case this.moveByLines:
        case this.moveByDisplayLines:
        case this.moveByScroll:
        case this.moveToColumn:
        case this.moveToEol:
          w = b.lastHPos;
          break;
        default:
          b.lastHPos = w;
      }
      var E = g.repeat + (g.repeatOffset || 0), Q = g.forward ? v.line + E : v.line - E, j = p.firstLine(), V = p.lastLine(), X = p.findPosV(v, g.forward ? E : -E, "line", b.lastHSPos), Y = g.forward ? X.line > Q : X.line < Q;
      return Y && (Q = X.line, w = X.ch), Q < j && v.line == j ? this.moveToStartOfLine(p, d, g, b) : Q > V && v.line == V ? il(p, d, g, b, !0) : (g.toFirstChar && (w = Yt(p.getLine(Q)), b.lastHPos = w), b.lastHSPos = p.charCoords(new e(Q, w), "div").left, new e(Q, w));
    },
    moveByDisplayLines: function(p, d, g, b) {
      var v = d;
      switch (b.lastMotion) {
        case this.moveByDisplayLines:
        case this.moveByScroll:
        case this.moveByLines:
        case this.moveToColumn:
        case this.moveToEol:
          break;
        default:
          b.lastHSPos = p.charCoords(v, "div").left;
      }
      var w = g.repeat, E = p.findPosV(v, g.forward ? w : -w, "line", b.lastHSPos);
      if (E.hitSide)
        if (g.forward) {
          var Q = p.charCoords(E, "div"), j = { top: Q.top + 8, left: b.lastHSPos };
          E = p.coordsChar(j, "div");
        } else {
          var V = p.charCoords(new e(p.firstLine(), 0), "div");
          V.left = b.lastHSPos, E = p.coordsChar(V, "div");
        }
      return b.lastHPos = E.ch, E;
    },
    moveByPage: function(p, d, g) {
      var b = d, v = g.repeat;
      return p.findPosV(b, g.forward ? v : -v, "page");
    },
    moveByParagraph: function(p, d, g) {
      var b = g.forward ? 1 : -1;
      return sl(p, d, g.repeat, b).start;
    },
    moveBySentence: function(p, d, g) {
      var b = g.forward ? 1 : -1;
      return Uc(p, d, g.repeat, b);
    },
    moveByScroll: function(p, d, g, b) {
      var v = p.getScrollInfo(), w = null, E = g.repeat;
      E || (E = v.clientHeight / (2 * p.defaultTextHeight()));
      var Q = p.charCoords(d, "local");
      if (g.repeat = E, w = zt.moveByDisplayLines(p, d, g, b), !w)
        return null;
      var j = p.charCoords(w, "local");
      return p.scrollTo(null, v.top + j.top - Q.top), w;
    },
    moveByWords: function(p, d, g) {
      return Xc(
        p,
        d,
        g.repeat,
        !!g.forward,
        !!g.wordEnd,
        !!g.bigWord
      );
    },
    moveTillCharacter: function(p, d, g) {
      var b = g.repeat, v = La(
        p,
        b,
        g.forward,
        g.selectedCharacter,
        d
      ), w = g.forward ? -1 : 1;
      return Qn(w, g), v ? (v.ch += w, v) : null;
    },
    moveToCharacter: function(p, d, g) {
      var b = g.repeat;
      return Qn(0, g), La(
        p,
        b,
        g.forward,
        g.selectedCharacter,
        d
      ) || d;
    },
    moveToSymbol: function(p, d, g) {
      var b = g.repeat;
      return g.selectedCharacter && Vc(
        p,
        b,
        g.forward,
        g.selectedCharacter
      ) || d;
    },
    moveToColumn: function(p, d, g, b) {
      var v = g.repeat;
      return b.lastHPos = v - 1, b.lastHSPos = p.charCoords(d, "div").left, Wc(p, v);
    },
    moveToEol: function(p, d, g, b) {
      return il(p, d, g, b, !1);
    },
    moveToFirstNonWhiteSpaceCharacter: function(p, d) {
      var g = d;
      return new e(
        g.line,
        Yt(p.getLine(g.line))
      );
    },
    moveToMatchedSymbol: function(p, d) {
      for (var g = d, b = g.line, v = g.ch, w = p.getLine(b), E; v < w.length; v++)
        if (E = w.charAt(v), E && q(E)) {
          var Q = p.getTokenTypeAt(new e(b, v + 1));
          if (Q !== "string" && Q !== "comment")
            break;
        }
      if (v < w.length) {
        var j = E === "<" || E === ">" ? /[(){}[\]<>]/ : /[(){}[\]]/, V = p.findMatchingBracket(new e(b, v), { bracketRegex: j });
        return V.to;
      } else
        return g;
    },
    moveToStartOfLine: function(p, d) {
      return new e(d.line, 0);
    },
    moveToLineOrEdgeOfDocument: function(p, d, g) {
      var b = g.forward ? p.lastLine() : p.firstLine();
      return g.repeatIsExplicit && (b = g.repeat - p.getOption("firstLineNumber")), new e(
        b,
        Yt(p.getLine(b))
      );
    },
    moveToStartOfDisplayLine: function(p) {
      return p.execCommand("goLineLeft"), p.getCursor();
    },
    moveToEndOfDisplayLine: function(p) {
      p.execCommand("goLineRight");
      var d = p.getCursor();
      return d.sticky == "before" && d.ch--, d;
    },
    textObjectManipulation: function(p, d, g, b) {
      var v = {
        "(": ")",
        ")": "(",
        "{": "}",
        "}": "{",
        "[": "]",
        "]": "[",
        "<": ">",
        ">": "<"
      }, w = { "'": !0, '"': !0, "`": !0 }, E = g.selectedCharacter || "";
      E == "b" ? E = "(" : E == "B" && (E = "{");
      var Q = !g.textObjectInner, j, V;
      if (v[E]) {
        if (V = !0, j = ol(p, d, E, Q), !j) {
          var X = p.getSearchCursor(new RegExp("\\" + E, "g"), d);
          X.find() && (j = ol(p, X.from(), E, Q));
        }
      } else if (w[E])
        V = !0, j = Gc(p, d, E, Q);
      else if (E === "W" || E === "w")
        for (var Y = g.repeat || 1; Y-- > 0; ) {
          var ee = dr(p, {
            inclusive: Q,
            innerWord: !Q,
            bigWord: E === "W",
            noSymbol: E === "W",
            multiline: !0
          }, j && j.end);
          ee && (j || (j = ee), j.end = ee.end);
        }
      else if (E === "p")
        if (j = sl(p, d, g.repeat, 0, Q), g.linewise = !0, b.visualMode)
          b.visualLine || (b.visualLine = !0);
        else {
          var z = b.inputState.operatorArgs;
          z && (z.linewise = !0), j.end.line--;
        }
      else if (E === "t")
        j = Zs(p, d, Q);
      else if (E === "s") {
        var G = p.getLine(d.line);
        d.ch > 0 && N(G[d.ch]) && (d.ch -= 1);
        var te = al(p, d, g.repeat, 1, Q), ue = al(p, d, g.repeat, -1, Q);
        $(p.getLine(ue.line)[ue.ch]) && $(p.getLine(te.line)[te.ch - 1]) && (ue = { line: ue.line, ch: ue.ch + 1 }), j = { start: ue, end: te };
      }
      return j ? p.state.vim.visualMode ? R(p, j.start, j.end, V) : [j.start, j.end] : null;
    },
    repeatLastCharacterSearch: function(p, d, g) {
      var b = re.lastCharacterSearch, v = g.repeat, w = g.forward === b.forward, E = (b.increment ? 1 : 0) * (w ? -1 : 1);
      p.moveH(-E, "char"), g.inclusive = !!w;
      var Q = La(p, v, w, b.selectedCharacter);
      return Q ? (Q.ch += E, Q) : (p.moveH(E, "char"), d);
    }
  };
  function _r(p, d) {
    zt[p] = d;
  }
  function er(p, d) {
    for (var g = [], b = 0; b < d; b++)
      g.push(p);
    return g;
  }
  var On = {
    change: function(p, d, g) {
      var b, v, w = p.state.vim, E = g[0].anchor, Q = g[0].head;
      if (w.visualMode)
        if (d.fullLine)
          Q.ch = Number.MAX_VALUE, Q.line--, p.setSelection(E, Q), v = p.getSelection(), p.replaceSelection(""), b = E;
        else {
          v = p.getSelection();
          var X = er("", g.length);
          p.replaceSelections(X), b = Ht(g[0].head, g[0].anchor);
        }
      else {
        v = p.getRange(E, Q);
        var j = w.lastEditInputState;
        if (j?.motion == "moveByWords" && !$(v)) {
          var V = /\s+$/.exec(v);
          V && j.motionArgs && j.motionArgs.forward && (Q = Xe(Q, 0, -V[0].length), v = v.slice(0, -V[0].length));
        }
        d.linewise && (E = new e(E.line, Yt(p.getLine(E.line))), Q.line > E.line && (Q = new e(Q.line - 1, Number.MAX_VALUE))), p.replaceRange("", E, Q), b = E;
      }
      re.registerController.pushText(
        d.registerName,
        "change",
        v,
        d.linewise,
        g.length > 1
      ), Ue.enterInsertMode(p, { head: b }, p.state.vim);
    },
    delete: function(p, d, g) {
      var b, v, w = p.state.vim;
      if (w.visualBlock) {
        v = p.getSelection();
        var j = er("", g.length);
        p.replaceSelections(j), b = Ht(g[0].head, g[0].anchor);
      } else {
        var E = g[0].anchor, Q = g[0].head;
        d.linewise && Q.line != p.firstLine() && E.line == p.lastLine() && E.line == Q.line - 1 && (E.line == p.firstLine() ? E.ch = 0 : E = new e(E.line - 1, pt(p, E.line - 1))), v = p.getRange(E, Q), p.replaceRange("", E, Q), b = E, d.linewise && (b = zt.moveToFirstNonWhiteSpaceCharacter(p, E));
      }
      return re.registerController.pushText(
        d.registerName,
        "delete",
        v,
        d.linewise,
        w.visualBlock
      ), Se(p, b);
    },
    indent: function(p, d, g) {
      var b = p.state.vim, v = b.visualMode ? d.repeat || 0 : 1;
      if (p.indentMore)
        for (var w = 0; w < v; w++)
          d.indentRight ? p.indentMore() : p.indentLess();
      else {
        var E = g[0].anchor.line, Q = b.visualBlock ? g[g.length - 1].anchor.line : g[0].head.line;
        d.linewise && Q--;
        for (var j = E; j <= Q; j++)
          for (var w = 0; w < v; w++)
            p.indentLine(j, d.indentRight);
      }
      return zt.moveToFirstNonWhiteSpaceCharacter(p, g[0].anchor);
    },
    indentAuto: function(p, d, g) {
      return p.execCommand("indentAuto"), zt.moveToFirstNonWhiteSpaceCharacter(p, g[0].anchor);
    },
    hardWrap: function(p, d, g, b) {
      if (p.hardWrap) {
        var v = g[0].anchor.line, w = g[0].head.line;
        d.linewise && w--;
        var E = p.hardWrap({ from: v, to: w });
        return E > v && d.linewise && E--, d.keepCursor ? b : new e(E, 0);
      }
    },
    changeCase: function(p, d, g, b, v) {
      for (var w = p.getSelections(), E = [], Q = d.toLower, j = 0; j < w.length; j++) {
        var V = w[j], X = "";
        if (Q === !0)
          X = V.toLowerCase();
        else if (Q === !1)
          X = V.toUpperCase();
        else
          for (var Y = 0; Y < V.length; Y++) {
            var ee = V.charAt(Y);
            X += B(ee) ? ee.toLowerCase() : ee.toUpperCase();
          }
        E.push(X);
      }
      return p.replaceSelections(E), d.shouldMoveCursor ? v : !p.state.vim.visualMode && d.linewise && g[0].anchor.line + 1 == g[0].head.line ? zt.moveToFirstNonWhiteSpaceCharacter(p, b) : d.linewise ? b : Ht(g[0].anchor, g[0].head);
    },
    yank: function(p, d, g, b) {
      var v = p.state.vim, w = p.getSelection(), E = v.visualMode ? Ht(v.sel.anchor, v.sel.head, g[0].head, g[0].anchor) : b;
      return re.registerController.pushText(
        d.registerName,
        "yank",
        w,
        d.linewise,
        v.visualBlock
      ), E;
    }
  };
  function zr(p, d) {
    On[p] = d;
  }
  var Ue = {
    jumpListWalk: function(p, d, g) {
      if (!g.visualMode) {
        var b = d.repeat || 1, v = d.forward, w = re.jumpList, E = w.move(p, v ? b : -b), Q = E ? E.find() : void 0;
        Q = Q || p.getCursor(), p.setCursor(Q);
      }
    },
    scroll: function(p, d, g) {
      if (!g.visualMode) {
        var b = d.repeat || 1, v = p.defaultTextHeight(), w = p.getScrollInfo().top, E = v * b, Q = d.forward ? w + E : w - E, j = He(p.getCursor()), V = p.charCoords(j, "local");
        if (d.forward)
          Q > V.top ? (j.line += (Q - V.top) / v, j.line = Math.ceil(j.line), p.setCursor(j), V = p.charCoords(j, "local"), p.scrollTo(null, V.top)) : p.scrollTo(null, Q);
        else {
          var X = Q + p.getScrollInfo().clientHeight;
          X < V.bottom ? (j.line -= (V.bottom - X) / v, j.line = Math.floor(j.line), p.setCursor(j), V = p.charCoords(j, "local"), p.scrollTo(
            null,
            V.bottom - p.getScrollInfo().clientHeight
          )) : p.scrollTo(null, Q);
        }
      }
    },
    scrollToCursor: function(p, d) {
      var g = p.getCursor().line, b = p.charCoords(new e(g, 0), "local"), v = p.getScrollInfo().clientHeight, w = b.top;
      switch (d.position) {
        case "center":
          w = b.bottom - v / 2;
          break;
        case "bottom":
          var E = new e(g, p.getLine(g).length - 1), Q = p.charCoords(E, "local"), j = Q.bottom - w;
          w = w - v + j;
          break;
      }
      p.scrollTo(null, w);
    },
    replayMacro: function(p, d, g) {
      var b = d.selectedCharacter || "", v = d.repeat || 1, w = re.macroModeState;
      for (b == "@" ? b = w.latestRegister : w.latestRegister = b; v--; )
        $r(p, g, w, b);
    },
    enterMacroRecordMode: function(p, d) {
      var g = re.macroModeState, b = d.selectedCharacter;
      re.registerController.isValidRegister(b) && g.enterMacroRecordMode(p, b);
    },
    toggleOverwrite: function(p) {
      p.state.overwrite ? (p.toggleOverwrite(!1), p.setOption("keyMap", "vim-insert"), t.signal(p, "vim-mode-change", { mode: "insert" })) : (p.toggleOverwrite(!0), p.setOption("keyMap", "vim-replace"), t.signal(p, "vim-mode-change", { mode: "replace" }));
    },
    enterInsertMode: function(p, d, g) {
      if (!p.getOption("readOnly")) {
        g.insertMode = !0, g.insertModeRepeat = d && d.repeat || 1;
        var b = d ? d.insertAt : null, v = g.sel, w = d.head || p.getCursor("head"), E = p.listSelections().length;
        if (b == "eol")
          w = new e(w.line, pt(p, w.line));
        else if (b == "bol")
          w = new e(w.line, 0);
        else if (b == "charAfter") {
          var Q = n(p, w, Xe(w, 0, 1));
          w = Q.end;
        } else if (b == "firstNonBlank") {
          var Q = n(p, w, zt.moveToFirstNonWhiteSpaceCharacter(p, w));
          w = Q.end;
        } else if (b == "startOfSelectedArea") {
          if (!g.visualMode)
            return;
          g.visualBlock ? (w = new e(
            Math.min(v.head.line, v.anchor.line),
            Math.min(v.head.ch, v.anchor.ch)
          ), E = Math.abs(v.head.line - v.anchor.line) + 1) : v.head.line < v.anchor.line ? w = v.head : w = new e(v.anchor.line, 0);
        } else if (b == "endOfSelectedArea") {
          if (!g.visualMode)
            return;
          g.visualBlock ? (w = new e(
            Math.min(v.head.line, v.anchor.line),
            Math.max(v.head.ch, v.anchor.ch) + 1
          ), E = Math.abs(v.head.line - v.anchor.line) + 1) : v.head.line >= v.anchor.line ? w = Xe(v.head, 0, 1) : w = new e(v.anchor.line, 0);
        } else if (b == "inplace") {
          if (g.visualMode)
            return;
        } else b == "lastEdit" && (w = bi(p) || w);
        p.setOption("disableInput", !1), d && d.replace ? (p.toggleOverwrite(!0), p.setOption("keyMap", "vim-replace"), t.signal(p, "vim-mode-change", { mode: "replace" })) : (p.toggleOverwrite(!1), p.setOption("keyMap", "vim-insert"), t.signal(p, "vim-mode-change", { mode: "insert" })), re.macroModeState.isPlaying || (p.on("change", Ls), g.insertEnd && g.insertEnd.clear(), g.insertEnd = p.setBookmark(w, { insertLeft: !0 }), t.on(p.getInputField(), "keydown", mr)), g.visualMode && ge(p), O(p, w, E);
      }
    },
    toggleVisualMode: function(p, d, g) {
      var b = d.repeat, v = p.getCursor(), w;
      if (g.visualMode)
        g.visualLine != !!d.linewise || g.visualBlock != !!d.blockwise ? (g.visualLine = !!d.linewise, g.visualBlock = !!d.blockwise, t.signal(p, "vim-mode-change", { mode: "visual", subMode: g.visualLine ? "linewise" : g.visualBlock ? "blockwise" : "" }), J(p)) : ge(p);
      else {
        g.visualMode = !0, g.visualLine = !!d.linewise, g.visualBlock = !!d.blockwise, w = Se(
          p,
          new e(v.line, v.ch + b - 1)
        );
        var E = n(p, v, w);
        g.sel = {
          anchor: E.start,
          head: E.end
        }, t.signal(p, "vim-mode-change", { mode: "visual", subMode: g.visualLine ? "linewise" : g.visualBlock ? "blockwise" : "" }), J(p), Rr(p, g, "<", Ht(v, w)), Rr(p, g, ">", ut(v, w));
      }
    },
    reselectLastSelection: function(p, d, g) {
      var b = g.lastSelection;
      if (g.visualMode && P(p, g), b) {
        var v = b.anchorMark.find(), w = b.headMark.find();
        if (!v || !w)
          return;
        g.sel = {
          anchor: v,
          head: w
        }, g.visualMode = !0, g.visualLine = b.visualLine, g.visualBlock = b.visualBlock, J(p), Rr(p, g, "<", Ht(v, w)), Rr(p, g, ">", ut(v, w)), t.signal(p, "vim-mode-change", {
          mode: "visual",
          subMode: g.visualLine ? "linewise" : g.visualBlock ? "blockwise" : ""
        });
      }
    },
    joinLines: function(p, d, g) {
      var b, v;
      if (g.visualMode) {
        if (b = p.getCursor("anchor"), v = p.getCursor("head"), gt(v, b)) {
          var w = v;
          v = b, b = w;
        }
        v.ch = pt(p, v.line) - 1;
      } else {
        var E = Math.max(d.repeat, 2);
        b = p.getCursor(), v = Se(p, new e(
          b.line + E - 1,
          1 / 0
        ));
      }
      for (var Q = 0, j = b.line; j < v.line; j++) {
        Q = pt(p, b.line);
        var V = "", X = 0;
        if (!d.keepSpaces) {
          var Y = p.getLine(b.line + 1);
          X = Y.search(/\S/), X == -1 ? X = Y.length : V = " ";
        }
        p.replaceRange(
          V,
          new e(b.line, Q),
          new e(b.line + 1, X)
        );
      }
      var ee = Se(p, new e(b.line, Q));
      g.visualMode && ge(p, !1), p.setCursor(ee);
    },
    newLineAndEnterInsertMode: function(p, d, g) {
      g.insertMode = !0;
      var b = He(p.getCursor());
      if (b.line === p.firstLine() && !d.after)
        p.replaceRange(`
`, new e(p.firstLine(), 0)), p.setCursor(p.firstLine(), 0);
      else {
        b.line = d.after ? b.line : b.line - 1, b.ch = pt(p, b.line), p.setCursor(b);
        var v = t.commands.newlineAndIndentContinueComment || t.commands.newlineAndIndent;
        v(p);
      }
      this.enterInsertMode(p, { repeat: d.repeat }, g);
    },
    paste: function(p, d, g) {
      var b = re.registerController.getRegister(
        d.registerName
      );
      if (d.registerName === "+")
        navigator.clipboard.readText().then((w) => {
          this.continuePaste(p, d, g, w, b);
        });
      else {
        var v = b.toString();
        this.continuePaste(p, d, g, v, b);
      }
    },
    continuePaste: function(p, d, g, b, v) {
      var w = He(p.getCursor());
      if (b) {
        if (d.matchIndent) {
          var E = p.getOption("tabSize"), Q = function(Kt) {
            var Jt = Kt.split("	").length - 1, gr = Kt.split(" ").length - 1;
            return Jt * E + gr * 1;
          }, j = p.getLine(p.getCursor().line), V = Q(j.match(/^\s*/)[0]), X = b.replace(/\n$/, ""), Y = b !== X, ee = Q(b.match(/^\s*/)[0]), b = X.replace(/^\s*/gm, function(Kt) {
            var Jt = V + (Q(Kt) - ee);
            if (Jt < 0)
              return "";
            if (p.getOption("indentWithTabs")) {
              var gr = Math.floor(Jt / E);
              return Array(gr + 1).join("	");
            } else
              return Array(Jt + 1).join(" ");
          });
          b += Y ? `
` : "";
        }
        if (d.repeat > 1)
          var b = Array(d.repeat + 1).join(b);
        var z = v.linewise, G = v.blockwise;
        if (G) {
          b = b.split(`
`), z && b.pop();
          for (var te = 0; te < b.length; te++)
            b[te] = b[te] == "" ? " " : b[te];
          w.ch += d.after ? 1 : 0, w.ch = Math.min(pt(p, w.line), w.ch);
        } else z ? g.visualMode ? b = g.visualLine ? b.slice(0, -1) : `
` + b.slice(0, b.length - 1) + `
` : d.after ? (b = `
` + b.slice(0, b.length - 1), w.ch = pt(p, w.line)) : w.ch = 0 : w.ch += d.after ? 1 : 0;
        var ue;
        if (g.visualMode) {
          g.lastPastedText = b;
          var $e, Be = A(p, g), Ve = Be[0], yt = Be[1], gn = p.getSelection(), qt = p.listSelections(), ln = new Array(qt.length).join("1").split("1");
          g.lastSelection && ($e = g.lastSelection.headMark.find()), re.registerController.unnamedRegister.setText(gn), G ? (p.replaceSelections(ln), yt = new e(Ve.line + b.length - 1, Ve.ch), p.setCursor(Ve), $s(p, yt), p.replaceSelections(b), ue = Ve) : g.visualBlock ? (p.replaceSelections(ln), p.setCursor(Ve), p.replaceRange(b, Ve, Ve), ue = Ve) : (p.replaceRange(b, Ve, yt), ue = p.posFromIndex(p.indexFromPos(Ve) + b.length - 1)), $e && (g.lastSelection.headMark = p.setBookmark($e)), z && (ue.ch = 0);
        } else if (G) {
          p.setCursor(w);
          for (var te = 0; te < b.length; te++) {
            var it = w.line + te;
            it > p.lastLine() && p.replaceRange(`
`, new e(it, 0));
            var et = pt(p, it);
            et < w.ch && $i(p, it, w.ch);
          }
          p.setCursor(w), $s(p, new e(w.line + b.length - 1, w.ch)), p.replaceSelections(b), ue = w;
        } else if (p.replaceRange(b, w), z) {
          var it = d.after ? w.line + 1 : w.line;
          ue = new e(it, Yt(p.getLine(it)));
        } else
          ue = He(w), /\n/.test(b) || (ue.ch += b.length - (d.after ? 1 : 0));
        g.visualMode && ge(p, !1), p.setCursor(ue);
      }
    },
    undo: function(p, d) {
      p.operation(function() {
        vt(p, t.commands.undo, d.repeat)(), p.setCursor(Se(p, p.getCursor("start")));
      });
    },
    redo: function(p, d) {
      vt(p, t.commands.redo, d.repeat)();
    },
    setRegister: function(p, d, g) {
      g.inputState.registerName = d.selectedCharacter;
    },
    insertRegister: function(p, d, g) {
      var b = d.selectedCharacter, v = re.registerController.getRegister(b), w = v && v.toString();
      w && p.replaceSelection(w);
    },
    oneNormalCommand: function(p, d, g) {
      Yr(p, !0), g.insertModeReturn = !0, t.on(p, "vim-command-done", function b() {
        g.visualMode || (g.insertModeReturn && (g.insertModeReturn = !1, g.insertMode || Ue.enterInsertMode(p, {}, g)), t.off(p, "vim-command-done", b));
      });
    },
    setMark: function(p, d, g) {
      var b = d.selectedCharacter;
      b && Rr(p, g, b, p.getCursor());
    },
    replace: function(p, d, g) {
      var b = d.selectedCharacter || "", v = p.getCursor(), w, E, Q = p.listSelections();
      if (g.visualMode)
        v = p.getCursor("start"), E = p.getCursor("end");
      else {
        var j = p.getLine(v.line);
        w = v.ch + d.repeat, w > j.length && (w = j.length), E = new e(v.line, w);
      }
      var V = n(p, v, E);
      if (v = V.start, E = V.end, b == `
`)
        g.visualMode || p.replaceRange("", v, E), (t.commands.newlineAndIndentContinueComment || t.commands.newlineAndIndent)(p);
      else {
        var X = p.getRange(v, E);
        if (X = X.replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g, b), X = X.replace(/[^\n]/g, b), g.visualBlock) {
          var Y = new Array(p.getOption("tabSize") + 1).join(" ");
          X = p.getSelection(), X = X.replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g, b);
          var ee = X.replace(/\t/g, Y).replace(/[^\n]/g, b).split(`
`);
          p.replaceSelections(ee);
        } else
          p.replaceRange(X, v, E);
        g.visualMode ? (v = gt(Q[0].anchor, Q[0].head) ? Q[0].anchor : Q[0].head, p.setCursor(v), ge(p, !1)) : p.setCursor(Xe(E, 0, -1));
      }
    },
    incrementNumberToken: function(p, d) {
      for (var g = p.getCursor(), b = p.getLine(g.line), v = /(-?)(?:(0x)([\da-f]+)|(0b|0|)(\d+))/gi, w, E, Q, j; (w = v.exec(b)) !== null && (E = w.index, Q = E + w[0].length, !(g.ch < Q)); )
        ;
      if (!(!d.backtrack && Q <= g.ch)) {
        if (w) {
          var V = w[2] || w[4], X = w[3] || w[5], Y = d.increase ? 1 : -1, ee = { "0b": 2, 0: 8, "": 10, "0x": 16 }[V.toLowerCase()], z = parseInt(w[1] + X, ee) + Y * d.repeat;
          j = z.toString(ee);
          var G = V ? new Array(X.length - j.length + 1 + w[1].length).join("0") : "";
          j.charAt(0) === "-" ? j = "-" + V + G + j.substr(1) : j = V + G + j;
          var te = new e(g.line, E), ue = new e(g.line, Q);
          p.replaceRange(j, te, ue);
        } else
          return;
        p.setCursor(new e(g.line, E + j.length - 1));
      }
    },
    repeatLastEdit: function(p, d, g) {
      var b = g.lastEditInputState;
      if (b) {
        var v = d.repeat;
        v && d.repeatIsExplicit ? b.repeatOverride = v : v = b.repeatOverride || v, bl(
          p,
          g,
          v,
          !1
          /** repeatForInsert */
        );
      }
    },
    indent: function(p, d) {
      p.indentLine(p.getCursor().line, d.indentRight);
    },
    exitInsertMode: function(p, d) {
      Yr(p);
    }
  };
  function Tt(p, d) {
    Ue[p] = d;
  }
  function Se(p, d, g) {
    var b = p.state.vim, v = b.insertMode || b.visualMode, w = Math.min(Math.max(p.firstLine(), d.line), p.lastLine()), E = p.getLine(w), Q = E.length - 1 + +!!v, j = Math.min(Math.max(0, d.ch), Q), V = E.charCodeAt(j);
    if (56320 <= V && V <= 57343) {
      var X = 1;
      g && g.line == w && g.ch > j && (X = -1), j += X, j > Q && (j -= 2);
    }
    return new e(w, j);
  }
  function wt(p) {
    var d = {};
    for (var g in p)
      p.hasOwnProperty(g) && (d[g] = p[g]);
    return d;
  }
  function Xe(p, d, g) {
    return typeof d == "object" && (g = d.ch, d = d.line), new e(p.line + d, p.ch + g);
  }
  function gi(p, d, g, b) {
    b.operator && (g = "operatorPending");
    for (var v, w = [], E = [], Q = he ? d.length - i : 0, j = Q; j < d.length; j++) {
      var V = d[j];
      g == "insert" && V.context != "insert" || V.context && V.context != g || b.operator && V.type == "action" || !(v = fr(p, V.keys)) || (v == "partial" && w.push(V), v == "full" && E.push(V));
    }
    return {
      partial: w.length && w,
      full: E.length && E
    };
  }
  function fr(p, d) {
    const g = d.slice(-11) == "<character>", b = d.slice(-10) == "<register>";
    if (g || b) {
      var v = d.length - (g ? 11 : 10), w = p.slice(0, v), E = d.slice(0, v);
      return w == E && p.length > v ? "full" : E.indexOf(w) == 0 ? "partial" : !1;
    } else
      return p == d ? "full" : d.indexOf(p) == 0 ? "partial" : !1;
  }
  function mn(p) {
    var d = /^.*(<[^>]+>)$/.exec(p), g = d ? d[1] : p.slice(-1);
    if (g.length > 1)
      switch (g) {
        case "<CR>":
        case "<S-CR>":
          g = `
`;
          break;
        case "<Space>":
        case "<S-Space>":
          g = " ";
          break;
        default:
          g = "";
          break;
      }
    return g;
  }
  function vt(p, d, g) {
    return function() {
      for (var b = 0; b < g; b++)
        d(p);
    };
  }
  function He(p) {
    return new e(p.line, p.ch);
  }
  function Ye(p, d) {
    return p.ch == d.ch && p.line == d.line;
  }
  function gt(p, d) {
    return p.line < d.line || p.line == d.line && p.ch < d.ch;
  }
  function Ht(p, d) {
    return arguments.length > 2 && (d = Ht.apply(void 0, Array.prototype.slice.call(arguments, 1))), gt(p, d) ? p : d;
  }
  function ut(p, d) {
    return arguments.length > 2 && (d = ut.apply(void 0, Array.prototype.slice.call(arguments, 1))), gt(p, d) ? d : p;
  }
  function Ze(p, d, g) {
    var b = gt(p, d), v = gt(d, g);
    return b && v;
  }
  function pt(p, d) {
    return p.getLine(d).length;
  }
  function Wt(p) {
    return p.trim ? p.trim() : p.replace(/^\s+|\s+$/g, "");
  }
  function vn(p) {
    return p.replace(/([.?*+$\[\]\/\\(){}|\-])/g, "\\$1");
  }
  function $i(p, d, g) {
    var b = pt(p, d), v = new Array(g - b + 1).join(" ");
    p.setCursor(new e(d, b)), p.replaceRange(v, p.getCursor());
  }
  function $s(p, d) {
    var g = [], b = p.listSelections(), v = He(p.clipPos(d)), w = !Ye(d, v), E = p.getCursor("head"), Q = D(b, E), j = Ye(b[Q].head, b[Q].anchor), V = b.length - 1, X = V - Q > Q ? V : 0, Y = b[X].anchor, ee = Math.min(Y.line, v.line), z = Math.max(Y.line, v.line), G = Y.ch, te = v.ch, ue = b[X].head.ch - G, $e = te - G;
    ue > 0 && $e <= 0 ? (G++, w || te--) : ue < 0 && $e >= 0 ? (G--, j || te++) : ue < 0 && $e == -1 && (G--, te++);
    for (var Be = ee; Be <= z; Be++) {
      var Ve = { anchor: new e(Be, G), head: new e(Be, te) };
      g.push(Ve);
    }
    return p.setSelections(g), d.ch = te, Y.ch = G, Y;
  }
  function O(p, d, g) {
    for (var b = [], v = 0; v < g; v++) {
      var w = Xe(d, v, 0);
      b.push({ anchor: w, head: w });
    }
    p.setSelections(b, 0);
  }
  function D(p, d, g) {
    for (var b = 0; b < p.length; b++) {
      var v = Ye(p[b].anchor, d), w = Ye(p[b].head, d);
      if (v || w)
        return b;
    }
    return -1;
  }
  function A(p, d) {
    var g = d.lastSelection, b = function() {
      var w = p.listSelections(), E = w[0], Q = w[w.length - 1], j = gt(E.anchor, E.head) ? E.anchor : E.head, V = gt(Q.anchor, Q.head) ? Q.head : Q.anchor;
      return [j, V];
    }, v = function() {
      var w = p.getCursor(), E = p.getCursor(), Q = g.visualBlock;
      if (Q) {
        var j = Q.width, V = Q.height;
        E = new e(w.line + V, w.ch + j);
        for (var X = [], Y = w.line; Y < E.line; Y++) {
          var ee = new e(Y, w.ch), z = new e(Y, E.ch), G = { anchor: ee, head: z };
          X.push(G);
        }
        p.setSelections(X);
      } else {
        var te = g.anchorMark.find(), ue = g.headMark.find(), $e = ue.line - te.line, Be = ue.ch - te.ch;
        E = { line: E.line + $e, ch: $e ? E.ch : Be + E.ch }, g.visualLine && (w = new e(w.line, 0), E = new e(E.line, pt(p, E.line))), p.setSelection(w, E);
      }
      return [w, E];
    };
    return d.visualMode ? b() : v();
  }
  function P(p, d) {
    var g = d.sel.anchor, b = d.sel.head;
    d.lastPastedText && (b = p.posFromIndex(p.indexFromPos(g) + d.lastPastedText.length), d.lastPastedText = null), d.lastSelection = {
      anchorMark: p.setBookmark(g),
      headMark: p.setBookmark(b),
      anchor: He(g),
      head: He(b),
      visualMode: d.visualMode,
      visualLine: d.visualLine,
      visualBlock: d.visualBlock
    };
  }
  function R(p, d, g, b) {
    var v = p.state.vim.sel, w = b ? d : v.head, E = b ? d : v.anchor, Q;
    return gt(g, d) && (Q = g, g = d, d = Q), gt(w, E) ? (w = Ht(d, w), E = ut(E, g)) : (E = Ht(d, E), w = ut(w, g), w = Xe(w, 0, -1), w.ch == -1 && w.line != p.firstLine() && (w = new e(w.line - 1, pt(p, w.line - 1)))), [E, w];
  }
  function J(p, d, g) {
    var b = p.state.vim;
    d = d || b.sel, g || (g = b.visualLine ? "line" : b.visualBlock ? "block" : "char");
    var v = ae(p, d, g);
    p.setSelections(v.ranges, v.primary);
  }
  function ae(p, d, g, b) {
    var v = He(d.head), w = He(d.anchor);
    if (g == "char") {
      var E = !b && !gt(d.head, d.anchor) ? 1 : 0, Q = gt(d.head, d.anchor) ? 1 : 0;
      return v = Xe(d.head, 0, E), w = Xe(d.anchor, 0, Q), {
        ranges: [{ anchor: w, head: v }],
        primary: 0
      };
    } else if (g == "line") {
      if (gt(d.head, d.anchor))
        v.ch = 0, w.ch = pt(p, w.line);
      else {
        w.ch = 0;
        var j = p.lastLine();
        v.line > j && (v.line = j), v.ch = pt(p, v.line);
      }
      return {
        ranges: [{ anchor: w, head: v }],
        primary: 0
      };
    } else if (g == "block") {
      var V = Math.min(w.line, v.line), X = w.ch, Y = Math.max(w.line, v.line), ee = v.ch;
      X < ee ? ee += 1 : X += 1;
      for (var z = Y - V + 1, G = v.line == V ? 0 : z - 1, te = [], ue = 0; ue < z; ue++)
        te.push({
          anchor: new e(V + ue, X),
          head: new e(V + ue, ee)
        });
      return {
        ranges: te,
        primary: G
      };
    }
    throw "never happens";
  }
  function pe(p) {
    var d = p.getCursor("head");
    return p.getSelection().length == 1 && (d = Ht(d, p.getCursor("anchor"))), d;
  }
  function ge(p, d) {
    var g = p.state.vim;
    d !== !1 && p.setCursor(Se(p, g.sel.head)), P(p, g), g.visualMode = !1, g.visualLine = !1, g.visualBlock = !1, g.insertMode || t.signal(p, "vim-mode-change", { mode: "normal" });
  }
  function Je(p, d, g) {
    var b = p.getRange(d, g);
    if (/\n\s*$/.test(b)) {
      var v = b.split(`
`);
      v.pop();
      for (var w = v.pop(); v.length > 0 && w && $(w); w = v.pop())
        g.line--, g.ch = 0;
      w ? (g.line--, g.ch = pt(p, g.line)) : g.ch = 0;
    }
  }
  function Rt(p, d, g) {
    d.ch = 0, g.ch = 0, g.line++;
  }
  function Yt(p) {
    if (!p)
      return 0;
    var d = p.search(/\S/);
    return d == -1 ? p.length : d;
  }
  function dr(p, { inclusive: d, innerWord: g, bigWord: b, noSymbol: v, multiline: w }, E) {
    var Q = E || pe(p), j = p.getLine(Q.line), V = j, X = Q.line, Y = X, ee = Q.ch, z, G = v ? f[0] : m[0];
    if (g && /\s/.test(j.charAt(ee)))
      G = function(yt) {
        return /\s/.test(yt);
      };
    else {
      for (; !G(j.charAt(ee)); )
        if (ee++, ee >= j.length) {
          if (!w) return null;
          ee--, z = rl(p, Q, !0, b, !0);
          break;
        }
      b ? G = m[0] : (G = f[0], G(j.charAt(ee)) || (G = f[1]));
    }
    for (var te = ee, ue = ee; G(j.charAt(ue)) && ue >= 0; )
      ue--;
    if (ue++, z)
      te = z.to, Y = z.line, V = p.getLine(Y), !V && te == 0 && te++;
    else
      for (; G(j.charAt(te)) && te < j.length; )
        te++;
    if (d) {
      var $e = te, Be = Q.ch <= ue && /\s/.test(j.charAt(Q.ch));
      if (!Be)
        for (; /\s/.test(V.charAt(te)) && te < V.length; )
          te++;
      if ($e == te || Be) {
        for (var Ve = ue; /\s/.test(j.charAt(ue - 1)) && ue > 0; )
          ue--;
        !ue && !Be && (ue = Ve);
      }
    }
    return { start: new e(X, ue), end: new e(Y, te) };
  }
  function Zs(p, d, g) {
    var b = d;
    if (!t.findMatchingTag || !t.findEnclosingTag)
      return { start: b, end: b };
    var v = t.findMatchingTag(p, d) || t.findEnclosingTag(p, d);
    return !v || !v.open || !v.close ? { start: b, end: b } : g ? { start: v.open.from, end: v.close.to } : { start: v.open.to, end: v.close.from };
  }
  function us(p, d, g) {
    Ye(d, g) || re.jumpList.add(p, d, g);
  }
  function Qn(p, d) {
    re.lastCharacterSearch.increment = p, re.lastCharacterSearch.forward = d.forward, re.lastCharacterSearch.selectedCharacter = d.selectedCharacter;
  }
  var Nc = {
    "(": "bracket",
    ")": "bracket",
    "{": "bracket",
    "}": "bracket",
    "[": "section",
    "]": "section",
    "*": "comment",
    "/": "comment",
    m: "method",
    M: "method",
    "#": "preprocess"
  }, nl = {
    bracket: {
      isComplete: function(p) {
        if (p.nextCh === p.symb) {
          if (p.depth++, p.depth >= 1) return !0;
        } else p.nextCh === p.reverseSymb && p.depth--;
        return !1;
      }
    },
    section: {
      init: function(p) {
        p.curMoveThrough = !0, p.symb = (p.forward ? "]" : "[") === p.symb ? "{" : "}";
      },
      isComplete: function(p) {
        return p.index === 0 && p.nextCh === p.symb;
      }
    },
    comment: {
      isComplete: function(p) {
        var d = p.lastCh === "*" && p.nextCh === "/";
        return p.lastCh = p.nextCh, d;
      }
    },
    // TODO: The original Vim implementation only operates on level 1 and 2.
    // The current implementation doesn't check for code block level and
    // therefore it operates on any levels.
    method: {
      init: function(p) {
        p.symb = p.symb === "m" ? "{" : "}", p.reverseSymb = p.symb === "{" ? "}" : "{";
      },
      isComplete: function(p) {
        return p.nextCh === p.symb;
      }
    },
    preprocess: {
      init: function(p) {
        p.index = 0;
      },
      isComplete: function(p) {
        if (p.nextCh === "#") {
          var d = p.lineText.match(/^#(\w+)/)[1];
          if (d === "endif") {
            if (p.forward && p.depth === 0)
              return !0;
            p.depth++;
          } else if (d === "if") {
            if (!p.forward && p.depth === 0)
              return !0;
            p.depth--;
          }
          if (d === "else" && p.depth === 0) return !0;
        }
        return !1;
      }
    }
  };
  function Vc(p, d, g, b) {
    var v = He(p.getCursor()), w = g ? 1 : -1, E = g ? p.lineCount() : -1, Q = v.ch, j = v.line, V = p.getLine(j), X = {
      lineText: V,
      nextCh: V.charAt(Q),
      lastCh: null,
      index: Q,
      symb: b,
      reverseSymb: (g ? { ")": "(", "}": "{" } : { "(": ")", "{": "}" })[b],
      forward: g,
      depth: 0,
      curMoveThrough: !1
    }, Y = Nc[b];
    if (!Y) return v;
    var ee = nl[Y].init, z = nl[Y].isComplete;
    for (ee && ee(X); j !== E && d; ) {
      if (X.index += w, X.nextCh = X.lineText.charAt(X.index), !X.nextCh) {
        if (j += w, X.lineText = p.getLine(j) || "", w > 0)
          X.index = 0;
        else {
          var G = X.lineText.length;
          X.index = G > 0 ? G - 1 : 0;
        }
        X.nextCh = X.lineText.charAt(X.index);
      }
      z(X) && (v.line = j, v.ch = X.index, d--);
    }
    return X.nextCh || X.curMoveThrough ? new e(j, X.index) : v;
  }
  function rl(p, d, g, b, v) {
    var w = d.line, E = d.ch, Q = p.getLine(w), j = g ? 1 : -1, V = b ? m : f;
    if (v && Q == "") {
      if (w += j, Q = p.getLine(w), !M(p, w))
        return null;
      E = g ? 0 : Q.length;
    }
    for (; ; ) {
      if (v && Q == "")
        return { from: 0, to: 0, line: w };
      for (var X = j > 0 ? Q.length : -1, Y = X, ee = X; E != X; ) {
        for (var z = !1, G = 0; G < V.length && !z; ++G)
          if (V[G](Q.charAt(E))) {
            for (Y = E; E != X && V[G](Q.charAt(E)); )
              E += j;
            if (ee = E, z = Y != ee, Y == d.ch && w == d.line && ee == Y + j)
              continue;
            return {
              from: Math.min(Y, ee + 1),
              to: Math.max(Y, ee),
              line: w
            };
          }
        z || (E += j);
      }
      if (w += j, !M(p, w))
        return null;
      Q = p.getLine(w), E = j > 0 ? 0 : Q.length;
    }
  }
  function Xc(p, d, g, b, v, w) {
    var E = He(d), Q = [];
    (b && !v || !b && v) && g++;
    for (var j = !(b && v), V = 0; V < g; V++) {
      var X = rl(p, d, b, w, j);
      if (!X) {
        var Y = pt(p, p.lastLine());
        Q.push(b ? { line: p.lastLine(), from: Y, to: Y } : { line: 0, from: 0, to: 0 });
        break;
      }
      Q.push(X), d = new e(X.line, b ? X.to - 1 : X.from);
    }
    var ee = Q.length != g, z = Q[0], G = Q.pop();
    return b && !v ? (!ee && (z.from != E.ch || z.line != E.line) && (G = Q.pop()), G && new e(G.line, G.from)) : b && v ? G && new e(G.line, G.to - 1) : !b && v ? (!ee && (z.to != E.ch || z.line != E.line) && (G = Q.pop()), G && new e(G.line, G.to)) : G && new e(G.line, G.from);
  }
  function il(p, d, g, b, v) {
    var w = d, E = new e(w.line + g.repeat - 1, 1 / 0), Q = p.clipPos(E);
    return Q.ch--, v || (b.lastHPos = 1 / 0, b.lastHSPos = p.charCoords(Q, "div").left), E;
  }
  function La(p, d, g, b, v) {
    if (b) {
      for (var w = v || p.getCursor(), E = w.ch, Q, j = 0; j < d; j++) {
        var V = p.getLine(w.line);
        if (Q = qc(E, V, b, g), Q == -1)
          return;
        E = Q;
      }
      if (Q != null)
        return new e(p.getCursor().line, Q);
    }
  }
  function Wc(p, d) {
    var g = p.getCursor().line;
    return Se(p, new e(g, d - 1));
  }
  function Rr(p, d, g, b) {
    !U(g, y) && !C.test(g) || (d.marks[g] && d.marks[g].clear(), d.marks[g] = p.setBookmark(b));
  }
  function qc(p, d, g, b, v) {
    var w;
    return b ? w = d.indexOf(g, p + 1) : w = d.lastIndexOf(g, p - 1), w;
  }
  function sl(p, d, g, b, v) {
    var w = d.line, E = p.firstLine(), Q = p.lastLine(), j, V, X = w;
    function Y(ue) {
      return !p.getLine(ue);
    }
    function ee(ue, $e, Be) {
      return Be ? Y(ue) != Y(ue + $e) : !Y(ue) && Y(ue + $e);
    }
    if (b) {
      for (; E <= X && X <= Q && g > 0; )
        ee(X, b) && g--, X += b;
      return { start: new e(X, 0), end: d };
    }
    var z = p.state.vim;
    if (z.visualLine && ee(w, 1, !0)) {
      var G = z.sel.anchor;
      ee(G.line, -1, !0) && (!v || G.line != w) && (w += 1);
    }
    var te = Y(w);
    for (X = w; X <= Q && g; X++)
      ee(X, 1, !0) && (!v || Y(X) != te) && g--;
    for (V = new e(X, 0), X > Q && !te ? te = !0 : v = !1, X = w; X > E && !((!v || Y(X) == te || X == w) && ee(X, -1, !0)); X--)
      ;
    return j = new e(X, 0), { start: j, end: V };
  }
  function al(p, d, g, b, v) {
    function w(V) {
      V.pos + V.dir < 0 || V.pos + V.dir >= V.line.length ? V.line = null : V.pos += V.dir;
    }
    function E(V, X, Y, ee) {
      var z = V.getLine(X), G = {
        line: z,
        ln: X,
        pos: Y,
        dir: ee
      };
      if (G.line === "")
        return { ln: G.ln, pos: G.pos };
      var te = G.pos;
      for (w(G); G.line !== null; ) {
        if (te = G.pos, N(G.line[G.pos]))
          if (v) {
            for (w(G); G.line !== null && $(G.line[G.pos]); )
              te = G.pos, w(G);
            return { ln: G.ln, pos: te + 1 };
          } else
            return { ln: G.ln, pos: G.pos + 1 };
        w(G);
      }
      return { ln: G.ln, pos: te + 1 };
    }
    function Q(V, X, Y, ee) {
      var z = V.getLine(X), G = {
        line: z,
        ln: X,
        pos: Y,
        dir: ee
      };
      if (G.line === "")
        return { ln: G.ln, pos: G.pos };
      var te = G.pos;
      for (w(G); G.line !== null; ) {
        if (!$(G.line[G.pos]) && !N(G.line[G.pos]))
          te = G.pos;
        else if (N(G.line[G.pos]))
          return v ? $(G.line[G.pos + 1]) ? { ln: G.ln, pos: G.pos + 1 } : { ln: G.ln, pos: te } : { ln: G.ln, pos: te };
        w(G);
      }
      return G.line = z, v && $(G.line[G.pos]) ? { ln: G.ln, pos: G.pos } : { ln: G.ln, pos: te };
    }
    for (var j = {
      ln: d.line,
      pos: d.ch
    }; g > 0; )
      b < 0 ? j = Q(p, j.ln, j.pos, b) : j = E(p, j.ln, j.pos, b), g--;
    return new e(j.ln, j.pos);
  }
  function Uc(p, d, g, b) {
    function v(j, V) {
      if (V.pos + V.dir < 0 || V.pos + V.dir >= V.line.length) {
        if (V.ln += V.dir, !M(j, V.ln)) {
          V.line = null, V.ln = null, V.pos = null;
          return;
        }
        V.line = j.getLine(V.ln), V.pos = V.dir > 0 ? 0 : V.line.length - 1;
      } else
        V.pos += V.dir;
    }
    function w(j, V, X, Y) {
      var ue = j.getLine(V), ee = ue === "", z = {
        line: ue,
        ln: V,
        pos: X,
        dir: Y
      }, G = {
        ln: z.ln,
        pos: z.pos
      }, te = z.line === "";
      for (v(j, z); z.line !== null; ) {
        if (G.ln = z.ln, G.pos = z.pos, z.line === "" && !te)
          return { ln: z.ln, pos: z.pos };
        if (ee && z.line !== "" && !$(z.line[z.pos]))
          return { ln: z.ln, pos: z.pos };
        N(z.line[z.pos]) && !ee && (z.pos === z.line.length - 1 || $(z.line[z.pos + 1])) && (ee = !0), v(j, z);
      }
      var ue = j.getLine(G.ln);
      G.pos = 0;
      for (var $e = ue.length - 1; $e >= 0; --$e)
        if (!$(ue[$e])) {
          G.pos = $e;
          break;
        }
      return G;
    }
    function E(j, V, X, Y) {
      var te = j.getLine(V), ee = {
        line: te,
        ln: V,
        pos: X,
        dir: Y
      }, z = {
        ln: ee.ln,
        pos: null
      }, G = ee.line === "";
      for (v(j, ee); ee.line !== null; ) {
        if (ee.line === "" && !G)
          return z.pos !== null ? z : { ln: ee.ln, pos: ee.pos };
        if (N(ee.line[ee.pos]) && z.pos !== null && !(ee.ln === z.ln && ee.pos + 1 === z.pos))
          return z;
        ee.line !== "" && !$(ee.line[ee.pos]) && (G = !1, z = { ln: ee.ln, pos: ee.pos }), v(j, ee);
      }
      var te = j.getLine(z.ln);
      z.pos = 0;
      for (var ue = 0; ue < te.length; ++ue)
        if (!$(te[ue])) {
          z.pos = ue;
          break;
        }
      return z;
    }
    for (var Q = {
      ln: d.line,
      pos: d.ch
    }; g > 0; )
      b < 0 ? Q = E(p, Q.ln, Q.pos, b) : Q = w(p, Q.ln, Q.pos, b), g--;
    return new e(Q.ln, Q.pos);
  }
  function ol(p, d, g, b) {
    var v = d, w = {
      "(": /[()]/,
      ")": /[()]/,
      "[": /[[\]]/,
      "]": /[[\]]/,
      "{": /[{}]/,
      "}": /[{}]/,
      "<": /[<>]/,
      ">": /[<>]/
    }[g], E = {
      "(": "(",
      ")": "(",
      "[": "[",
      "]": "[",
      "{": "{",
      "}": "{",
      "<": "<",
      ">": "<"
    }[g], Q = p.getLine(v.line).charAt(v.ch), j = Q === E ? 1 : 0, V = p.scanForBracket(new e(v.line, v.ch + j), -1, void 0, { bracketRegex: w }), X = p.scanForBracket(new e(v.line, v.ch + j), 1, void 0, { bracketRegex: w });
    if (!V || !X) return null;
    var Y = V.pos, ee = X.pos;
    if (Y.line == ee.line && Y.ch > ee.ch || Y.line > ee.line) {
      var z = Y;
      Y = ee, ee = z;
    }
    return b ? ee.ch += 1 : Y.ch += 1, { start: Y, end: ee };
  }
  function Gc(p, d, g, b) {
    var v = He(d), w = p.getLine(v.line), E = w.split(""), Q, j, V, X, Y = E.indexOf(g);
    if (v.ch < Y)
      v.ch = Y;
    else if (Y < v.ch && E[v.ch] == g) {
      var ee = /string/.test(p.getTokenTypeAt(Xe(d, 0, 1))), z = /string/.test(p.getTokenTypeAt(d)), G = ee && !z;
      G || (j = v.ch, --v.ch);
    }
    if (E[v.ch] == g && !j)
      Q = v.ch + 1;
    else
      for (V = v.ch; V > -1 && !Q; V--)
        E[V] == g && (Q = V + 1);
    if (Q && !j)
      for (V = Q, X = E.length; V < X && !j; V++)
        E[V] == g && (j = V);
    return !Q || !j ? { start: v, end: v } : (b && (--Q, ++j), {
      start: new e(v.line, Q),
      end: new e(v.line, j)
    });
  }
  K("pcre", !0, "boolean");
  class zc {
    getQuery() {
      return re.query;
    }
    setQuery(d) {
      re.query = d;
    }
    getOverlay() {
      return this.searchOverlay;
    }
    setOverlay(d) {
      this.searchOverlay = d;
    }
    isReversed() {
      return re.isReversed;
    }
    setReversed(d) {
      re.isReversed = d;
    }
    getScrollbarAnnotate() {
      return this.annotate;
    }
    setScrollbarAnnotate(d) {
      this.annotate = d;
    }
  }
  function tr(p) {
    var d = p.state.vim;
    return d.searchState_ || (d.searchState_ = new zc());
  }
  function Hc(p) {
    return ll(p, "/");
  }
  function Yc(p) {
    return ul(p, "/");
  }
  function ll(p, d) {
    var g = ul(p, d);
    if (!g.length) return [];
    var b = [];
    if (g[0] === 0) {
      for (var v = 0; v < g.length; v++)
        typeof g[v] == "number" && b.push(p.substring(g[v] + 1, g[v + 1]));
      return b;
    }
  }
  function ul(p, d) {
    d || (d = "/");
    for (var g = !1, b = [], v = 0; v < p.length; v++) {
      var w = p.charAt(v);
      !g && w == d && b.push(v), g = !g && w == "\\";
    }
    return b;
  }
  function Kc(p) {
    for (var d = "|(){", g = "}", b = !1, v = [], w = -1; w < p.length; w++) {
      var E = p.charAt(w) || "", Q = p.charAt(w + 1) || "", j = Q && d.indexOf(Q) != -1;
      b ? ((E !== "\\" || !j) && v.push(E), b = !1) : E === "\\" ? (b = !0, Q && g.indexOf(Q) != -1 && (j = !0), (!j || Q === "\\") && v.push(E)) : (v.push(E), j && Q !== "\\" && v.push("\\"));
    }
    return v.join("");
  }
  var cl = { "\\n": `
`, "\\r": "\r", "\\t": "	" };
  function Jc(p) {
    for (var d = !1, g = [], b = -1; b < p.length; b++) {
      var v = p.charAt(b) || "", w = p.charAt(b + 1) || "";
      cl[v + w] ? (g.push(cl[v + w]), b++) : d ? (g.push(v), d = !1) : v === "\\" ? (d = !0, _(w) || w === "$" ? g.push("$") : w !== "/" && w !== "\\" && g.push("\\")) : (v === "$" && g.push("$"), g.push(v), w === "/" && g.push("\\"));
    }
    return g.join("");
  }
  var hl = { "\\/": "/", "\\\\": "\\", "\\n": `
`, "\\r": "\r", "\\t": "	", "\\&": "&" };
  function eh(p) {
    for (var d = new t.StringStream(p), g = []; !d.eol(); ) {
      for (; d.peek() && d.peek() != "\\"; )
        g.push(d.next());
      var b = !1;
      for (var v in hl)
        if (d.match(v, !0)) {
          b = !0, g.push(hl[v]);
          break;
        }
      b || g.push(d.next());
    }
    return g.join("");
  }
  function th(p, d, g) {
    var b = re.registerController.getRegister("/");
    if (b.setText(p), p instanceof RegExp)
      return p;
    var v = Yc(p), w, E;
    if (!v.length)
      w = p;
    else {
      w = p.substring(0, v[0]);
      var Q = p.substring(v[0]);
      E = Q.indexOf("i") != -1;
    }
    if (!w)
      return null;
    H("pcre") || (w = Kc(w)), g && (d = /^[^A-Z]*$/.test(w));
    var j = new RegExp(
      w,
      d || E ? "im" : "m"
    );
    return j;
  }
  function Hr(p) {
    typeof p == "string" && (p = document.createElement(p));
    for (var d, g = 1; g < arguments.length; g++)
      if (d = arguments[g])
        if (typeof d != "object" && (d = document.createTextNode(d)), d.nodeType) p.appendChild(d);
        else for (var b in d)
          Object.prototype.hasOwnProperty.call(d, b) && (b[0] === "$" ? p.style[b.slice(1)] = d[b] : p.setAttribute(b, d[b]));
    return p;
  }
  function bt(p, d) {
    var g = Hr("div", { $color: "red", $whiteSpace: "pre", class: "cm-vim-message" }, d);
    p.openNotification ? p.openNotification(g, { bottom: !0, duration: 5e3 }) : alert(g.innerText);
  }
  function nh(p, d) {
    return Hr(
      "div",
      { $display: "flex" },
      Hr(
        "span",
        { $fontFamily: "monospace", $whiteSpace: "pre", $flex: 1 },
        p,
        Hr("input", {
          type: "text",
          autocorrect: "off",
          autocapitalize: "off",
          spellcheck: "false",
          $width: "100%"
        })
      ),
      d && Hr("span", { $color: "#888" }, d)
    );
  }
  function cs(p, d) {
    if (je.length) {
      d.value || (d.value = ""), Pe = d;
      return;
    }
    var g = nh(d.prefix, d.desc);
    if (p.openDialog)
      p.openDialog(g, d.onClose, {
        onKeyDown: d.onKeyDown,
        onKeyUp: d.onKeyUp,
        bottom: !0,
        selectValueOnOpen: !1,
        value: d.value
      });
    else {
      var b = "";
      typeof d.prefix != "string" && d.prefix && (b += d.prefix.textContent), d.desc && (b += " " + d.desc), d.onClose(prompt(b, ""));
    }
  }
  function pl(p, d) {
    if (p instanceof RegExp && d instanceof RegExp) {
      for (var g = ["global", "multiline", "ignoreCase", "source"], b = 0; b < g.length; b++) {
        var v = g[b];
        if (p[v] !== d[v])
          return !1;
      }
      return !0;
    }
    return !1;
  }
  function hs(p, d, g, b) {
    if (d) {
      var v = tr(p), w = th(d, !!g, !!b);
      if (w)
        return fl(p, w), pl(w, v.getQuery()) || v.setQuery(w), w;
    }
  }
  function rh(p) {
    if (p.source.charAt(0) == "^")
      var d = !0;
    return {
      token: function(g) {
        if (d && !g.sol()) {
          g.skipToEnd();
          return;
        }
        var b = g.match(p, !1);
        if (b)
          return b[0].length == 0 ? (g.next(), "searching") : !g.sol() && (g.backUp(1), !p.exec(g.next() + b[0])) ? (g.next(), null) : (g.match(p), "searching");
        for (; !g.eol() && (g.next(), !g.match(p, !1)); )
          ;
      },
      query: p
    };
  }
  var ps = 0;
  function fl(p, d) {
    clearTimeout(ps);
    var g = tr(p);
    g.highlightTimeout = ps, ps = setTimeout(function() {
      if (p.state.vim) {
        var b = tr(p);
        b.highlightTimeout = null;
        var v = b.getOverlay();
        (!v || d != v.query) && (v && p.removeOverlay(v), v = rh(d), p.addOverlay(v), p.showMatchesOnScrollbar && (b.getScrollbarAnnotate() && b.getScrollbarAnnotate().clear(), b.setScrollbarAnnotate(p.showMatchesOnScrollbar(d))), b.setOverlay(v));
      }
    }, 50);
  }
  function dl(p, d, g, b) {
    return p.operation(function() {
      b === void 0 && (b = 1);
      for (var v = p.getCursor(), w = p.getSearchCursor(g, v), E = 0; E < b; E++) {
        var Q = w.find(d);
        if (E == 0 && Q && Ye(w.from(), v)) {
          var j = d ? w.from() : w.to();
          Q = w.find(d), Q && !Q[0] && Ye(w.from(), j) && p.getLine(j.line).length == j.ch && (Q = w.find(d));
        }
        if (!Q && (w = p.getSearchCursor(
          g,
          // @ts-ignore
          d ? new e(p.lastLine()) : new e(p.firstLine(), 0)
        ), !w.find(d)))
          return;
      }
      return w.from();
    });
  }
  function ih(p, d, g, b, v) {
    return p.operation(function() {
      b === void 0 && (b = 1);
      var w = p.getCursor(), E = p.getSearchCursor(g, w), Q = E.find(!d);
      !v.visualMode && Q && Ye(E.from(), w) && E.find(!d);
      for (var j = 0; j < b; j++)
        if (Q = E.find(d), !Q && (E = p.getSearchCursor(
          g,
          // @ts-ignore
          d ? new e(p.lastLine()) : new e(p.firstLine(), 0)
        ), !E.find(d)))
          return;
      return [E.from(), E.to()];
    });
  }
  function Ia(p) {
    var d = tr(p);
    d.highlightTimeout && (clearTimeout(d.highlightTimeout), d.highlightTimeout = null), p.removeOverlay(tr(p).getOverlay()), d.setOverlay(null), d.getScrollbarAnnotate() && (d.getScrollbarAnnotate().clear(), d.setScrollbarAnnotate(null));
  }
  function sh(p, d, g) {
    return typeof p != "number" && (p = p.line), d instanceof Array ? U(p, d) : typeof g == "number" ? p >= d && p <= g : p == d;
  }
  function L(p) {
    var d = p.getScrollInfo(), g = 6, b = 10, v = p.coordsChar({ left: 0, top: g + d.top }, "local"), w = d.clientHeight - b + d.top, E = p.coordsChar({ left: 0, top: w }, "local");
    return { top: v.line, bottom: E.line };
  }
  function Ne(p, d, g) {
    if (g == "'" || g == "`")
      return re.jumpList.find(p, -1) || new e(0, 0);
    if (g == ".")
      return bi(p);
    var b = d.marks[g];
    return b && b.find();
  }
  function bi(p) {
    if (p.getLastEditEnd)
      return p.getLastEditEnd();
    for (var d = (
      /**@type{any}*/
      p.doc.history.done
    ), g = d.length; g--; )
      if (d[g].changes)
        return He(d[g].changes[0].to);
  }
  class nr {
    constructor() {
      this.commandMap_, this.buildCommandMap_();
    }
    processCommand(d, g, b) {
      var v = this;
      d.operation(function() {
        d.curOp.isVimOp = !0, v._processCommand(d, g, b);
      });
    }
    _processCommand(d, g, b) {
      var v = d.state.vim, w = re.registerController.getRegister(":"), E = w.toString(), Q = new t.StringStream(g);
      w.setText(g);
      var j = b || {};
      j.input = g;
      try {
        this.parseInput_(d, Q, j);
      } catch (Y) {
        throw bt(d, Y + ""), Y;
      }
      v.visualMode && ge(d);
      var V, X;
      if (!j.commandName)
        j.line !== void 0 && (X = "move");
      else if (V = this.matchCommand_(j.commandName), V) {
        if (X = V.name, V.excludeFromCommandHistory && w.setText(E), this.parseCommandArgs_(Q, j, V), V.type == "exToKey") {
          lt(d, V.toKeys, V);
          return;
        } else if (V.type == "exToEx") {
          this.processCommand(d, V.toInput);
          return;
        }
      }
      if (!X) {
        bt(d, 'Not an editor command ":' + g + '"');
        return;
      }
      try {
        fs[X](d, j), (!V || !V.possiblyAsync) && j.callback && j.callback();
      } catch (Y) {
        throw bt(d, Y + ""), Y;
      }
    }
    parseInput_(d, g, b) {
      g.eatWhile(":"), g.eat("%") ? (b.line = d.firstLine(), b.lineEnd = d.lastLine()) : (b.line = this.parseLineSpec_(d, g), b.line !== void 0 && g.eat(",") && (b.lineEnd = this.parseLineSpec_(d, g))), b.line == null ? d.state.vim.visualMode ? (b.selectionLine = Ne(d, d.state.vim, "<")?.line, b.selectionLineEnd = Ne(d, d.state.vim, ">")?.line) : b.selectionLine = d.getCursor().line : (b.selectionLine = b.line, b.selectionLineEnd = b.lineEnd);
      var v = g.match(/^(\w+|!!|@@|[!#&*<=>@~])/);
      return v ? b.commandName = v[1] : b.commandName = g.match(/.*/)[0], b;
    }
    parseLineSpec_(d, g) {
      var b = g.match(/^(\d+)/);
      if (b)
        return parseInt(b[1], 10) - 1;
      switch (g.next()) {
        case ".":
          return this.parseLineSpecOffset_(g, d.getCursor().line);
        case "$":
          return this.parseLineSpecOffset_(g, d.lastLine());
        case "'":
          var v = g.next(), w = Ne(d, d.state.vim, v);
          if (!w) throw new Error("Mark not set");
          return this.parseLineSpecOffset_(g, w.line);
        case "-":
        case "+":
          return g.backUp(1), this.parseLineSpecOffset_(g, d.getCursor().line);
        default:
          g.backUp(1);
          return;
      }
    }
    parseLineSpecOffset_(d, g) {
      var b = d.match(/^([+-])?(\d+)/);
      if (b) {
        var v = parseInt(b[2], 10);
        b[1] == "-" ? g -= v : g += v;
      }
      return g;
    }
    parseCommandArgs_(d, g, b) {
      if (!d.eol()) {
        g.argString = d.match(/.*/)[0];
        var v = b.argDelimiter || /\s+/, w = Wt(g.argString).split(v);
        w.length && w[0] && (g.args = w);
      }
    }
    matchCommand_(d) {
      for (var g = d.length; g > 0; g--) {
        var b = d.substring(0, g);
        if (this.commandMap_[b]) {
          var v = this.commandMap_[b];
          if (v.name.indexOf(d) === 0)
            return v;
        }
      }
      return null;
    }
    buildCommandMap_() {
      this.commandMap_ = {};
      for (var d = 0; d < s.length; d++) {
        var g = s[d], b = g.shortName || g.name;
        this.commandMap_[b] = g;
      }
    }
    /**@type {(lhs: string, rhs: string, ctx: string, noremap?: boolean) => void} */
    map(d, g, b, v) {
      if (d != ":" && d.charAt(0) == ":") {
        if (b)
          throw Error("Mode not supported for ex mappings");
        var w = d.substring(1);
        g != ":" && g.charAt(0) == ":" ? this.commandMap_[w] = {
          name: w,
          type: "exToEx",
          toInput: g.substring(1),
          user: !0
        } : this.commandMap_[w] = {
          name: w,
          type: "exToKey",
          toKeys: g,
          user: !0
        };
      } else {
        var E = {
          keys: d,
          type: "keyToKey",
          toKeys: g,
          noremap: !!v
        };
        b && (E.context = b), r.unshift(E);
      }
    }
    /**@type {(lhs: string, ctx: string) => boolean|void} */
    unmap(d, g) {
      if (d != ":" && d.charAt(0) == ":") {
        if (g)
          throw Error("Mode not supported for ex mappings");
        var b = d.substring(1);
        if (this.commandMap_[b] && this.commandMap_[b].user)
          return delete this.commandMap_[b], !0;
      } else
        for (var v = d, w = 0; w < r.length; w++)
          if (v == r[w].keys && r[w].context === g)
            return r.splice(w, 1), !0;
    }
  }
  var fs = {
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    colorscheme: function(p, d) {
      if (!d.args || d.args.length < 1) {
        bt(p, p.getOption("theme"));
        return;
      }
      p.setOption("theme", d.args[0]);
    },
    map: function(p, d, g, b) {
      var v = d.args;
      if (!v || v.length < 2) {
        p && bt(p, "Invalid mapping: " + d.input);
        return;
      }
      Ce.map(v[0], v[1], g, b);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    imap: function(p, d) {
      this.map(p, d, "insert");
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    nmap: function(p, d) {
      this.map(p, d, "normal");
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    vmap: function(p, d) {
      this.map(p, d, "visual");
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    omap: function(p, d) {
      this.map(p, d, "operatorPending");
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    noremap: function(p, d) {
      this.map(p, d, void 0, !0);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    inoremap: function(p, d) {
      this.map(p, d, "insert", !0);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    nnoremap: function(p, d) {
      this.map(p, d, "normal", !0);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    vnoremap: function(p, d) {
      this.map(p, d, "visual", !0);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    onoremap: function(p, d) {
      this.map(p, d, "operatorPending", !0);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params @arg {string} ctx*/
    unmap: function(p, d, g) {
      var b = d.args;
      (!b || b.length < 1 || !Ce.unmap(b[0], g)) && p && bt(p, "No such mapping: " + d.input);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    mapclear: function(p, d) {
      xe.mapclear();
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    imapclear: function(p, d) {
      xe.mapclear("insert");
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    nmapclear: function(p, d) {
      xe.mapclear("normal");
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    vmapclear: function(p, d) {
      xe.mapclear("visual");
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    omapclear: function(p, d) {
      xe.mapclear("operatorPending");
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    move: function(p, d) {
      Mn.processCommand(p, p.state.vim, {
        keys: "",
        type: "motion",
        motion: "moveToLineOrEdgeOfDocument",
        motionArgs: { forward: !1, explicitRepeat: !0, linewise: !0 },
        repeatOverride: d.line + 1
      });
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    set: function(p, d) {
      var g = d.args, b = d.setCfg || {};
      if (!g || g.length < 1) {
        p && bt(p, "Invalid mapping: " + d.input);
        return;
      }
      var v = g[0].split("="), w = v.shift() || "", E = v.length > 0 ? v.join("=") : void 0, Q = !1, j = !1;
      if (w.charAt(w.length - 1) == "?") {
        if (E)
          throw Error("Trailing characters: " + d.argString);
        w = w.substring(0, w.length - 1), Q = !0;
      } else w.charAt(w.length - 1) == "!" && (w = w.substring(0, w.length - 1), j = !0);
      E === void 0 && w.substring(0, 2) == "no" && (w = w.substring(2), E = !1);
      var V = se[w] && se[w].type == "boolean";
      if (V && (j ? E = !H(w, p, b) : E == null && (E = !0)), !V && E === void 0 || Q) {
        var X = H(w, p, b);
        X instanceof Error ? bt(p, X.message) : X === !0 || X === !1 ? bt(p, " " + (X ? "" : "no") + w) : bt(p, "  " + w + "=" + X);
      } else {
        var Y = ce(w, E, p, b);
        Y instanceof Error && bt(p, Y.message);
      }
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    setlocal: function(p, d) {
      d.setCfg = { scope: "local" }, this.set(p, d);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    setglobal: function(p, d) {
      d.setCfg = { scope: "global" }, this.set(p, d);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    registers: function(p, d) {
      var g = d.args, b = re.registerController.registers, v = `----------Registers----------

`;
      if (g)
        for (var Q = g.join(""), j = 0; j < Q.length; j++) {
          var w = Q.charAt(j);
          if (re.registerController.isValidRegister(w)) {
            var V = b[w] || new Xt();
            v += '"' + w + "    " + V.toString() + `
`;
          }
        }
      else
        for (var w in b) {
          var E = b[w].toString();
          E.length && (v += '"' + w + "    " + E + `
`);
        }
      bt(p, v);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    sort: function(p, d) {
      var g, b, v, w, E;
      function Q() {
        if (d.argString) {
          var it = new t.StringStream(d.argString);
          if (it.eat("!") && (g = !0), it.eol())
            return;
          if (!it.eatSpace())
            return "Invalid arguments";
          var et = it.match(/([dinuox]+)?\s*(\/.+\/)?\s*/);
          if (!et || !it.eol())
            return "Invalid arguments";
          if (et[1]) {
            b = et[1].indexOf("i") != -1, v = et[1].indexOf("u") != -1;
            var $t = et[1].indexOf("d") != -1 || et[1].indexOf("n") != -1, Kt = et[1].indexOf("x") != -1, Jt = et[1].indexOf("o") != -1;
            if (Number($t) + Number(Kt) + Number(Jt) > 1)
              return "Invalid arguments";
            w = $t && "decimal" || Kt && "hex" || Jt && "octal";
          }
          et[2] && (E = new RegExp(et[2].substr(1, et[2].length - 2), b ? "i" : ""));
        }
      }
      var j = Q();
      if (j) {
        bt(p, j + ": " + d.argString);
        return;
      }
      var V = d.line || p.firstLine(), X = d.lineEnd || d.line || p.lastLine();
      if (V == X)
        return;
      var Y = new e(V, 0), ee = new e(X, pt(p, X)), z = p.getRange(Y, ee).split(`
`), G = w == "decimal" ? /(-?)([\d]+)/ : w == "hex" ? /(-?)(?:0x)?([0-9a-f]+)/i : w == "octal" ? /([0-7]+)/ : null, te = w == "decimal" ? 10 : w == "hex" ? 16 : w == "octal" ? 8 : void 0, ue = [], $e = [];
      if (w || E)
        for (var Be = 0; Be < z.length; Be++) {
          var Ve = E ? z[Be].match(E) : null;
          Ve && Ve[0] != "" ? ue.push(Ve) : G && G.exec(z[Be]) ? ue.push(z[Be]) : $e.push(z[Be]);
        }
      else
        $e = z;
      function yt(it, et) {
        if (g) {
          var $t;
          $t = it, it = et, et = $t;
        }
        b && (it = it.toLowerCase(), et = et.toLowerCase());
        var Kt = G && G.exec(it), Jt = G && G.exec(et);
        if (!Kt || !Jt)
          return it < et ? -1 : 1;
        var gr = parseInt((Kt[1] + Kt[2]).toLowerCase(), te), Ns = parseInt((Jt[1] + Jt[2]).toLowerCase(), te);
        return gr - Ns;
      }
      function gn(it, et) {
        if (g) {
          var $t;
          $t = it, it = et, et = $t;
        }
        return b && (it[0] = it[0].toLowerCase(), et[0] = et[0].toLowerCase()), it[0] < et[0] ? -1 : 1;
      }
      if (ue.sort(E ? gn : yt), E)
        for (var Be = 0; Be < ue.length; Be++)
          ue[Be] = ue[Be].input;
      else w || $e.sort(yt);
      if (z = g ? ue.concat($e) : $e.concat(ue), v) {
        var qt = z, ln;
        z = [];
        for (var Be = 0; Be < qt.length; Be++)
          qt[Be] != ln && z.push(qt[Be]), ln = qt[Be];
      }
      p.replaceRange(z.join(`
`), Y, ee);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    vglobal: function(p, d) {
      this.global(p, d);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    normal: function(p, d) {
      var g = d.argString;
      if (g && g[0] == "!" && (g = g.slice(1), he = !0), g = g.trimStart(), !g) {
        bt(p, "Argument is required.");
        return;
      }
      var b = d.line;
      if (typeof b == "number")
        for (var v = isNaN(d.lineEnd) ? b : d.lineEnd, w = b; w <= v; w++)
          p.setCursor(w, 0), lt(p, d.argString.trimStart()), p.state.vim.insertMode && Yr(p, !0);
      else
        lt(p, d.argString.trimStart()), p.state.vim.insertMode && Yr(p, !0);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    global: function(p, d) {
      var g = d.argString;
      if (!g) {
        bt(p, "Regular Expression missing from global");
        return;
      }
      var b = d.commandName[0] === "v";
      g[0] === "!" && d.commandName[0] === "g" && (b = !0, g = g.slice(1));
      var v = d.line !== void 0 ? d.line : p.firstLine(), w = d.lineEnd || d.line || p.lastLine(), E = Hc(g), Q = g, j = "";
      if (E && E.length && (Q = E[0], j = E.slice(1, E.length).join("/")), Q)
        try {
          hs(
            p,
            Q,
            !0,
            !0
            /** smartCase */
          );
        } catch {
          bt(p, "Invalid regex: " + Q);
          return;
        }
      for (var V = tr(p).getQuery(), X = [], Y = v; Y <= w; Y++) {
        var ee = p.getLine(Y), z = V.test(ee);
        z !== b && X.push(j ? p.getLineHandle(Y) : ee);
      }
      if (!j) {
        bt(p, X.join(`
`));
        return;
      }
      var G = 0, te = function() {
        if (G < X.length) {
          var ue = X[G++], $e = p.getLineNumber(ue);
          if ($e == null) {
            te();
            return;
          }
          var Be = $e + 1 + j;
          Ce.processCommand(p, Be, {
            callback: te
          });
        } else p.releaseLineHandles && p.releaseLineHandles();
      };
      te();
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    substitute: function(p, d) {
      if (!p.getSearchCursor)
        throw new Error("Search feature not available. Requires searchcursor.js or any other getSearchCursor implementation.");
      var g = d.argString, b = g ? ll(g, g[0]) : [], v = "", w = "", E, Q, j, V = !1, X = !1;
      if (b && b.length)
        v = b[0], H("pcre") && v !== "" && (v = new RegExp(v).source), w = b[1], w !== void 0 && (H("pcre") ? w = eh(w.replace(/([^\\])&/g, "$1$$&")) : w = Jc(w), re.lastSubstituteReplacePart = w), E = b[2] ? b[2].split(" ") : [];
      else if (g && g.length) {
        bt(p, "Substitutions should be of the form :s/pattern/replace/");
        return;
      }
      if (E && (Q = E[0], j = parseInt(E[1]), Q && (Q.indexOf("c") != -1 && (V = !0), Q.indexOf("g") != -1 && (X = !0), H("pcre") ? v = v + "/" + Q : v = v.replace(/\//g, "\\/") + "/" + Q)), v)
        try {
          hs(
            p,
            v,
            !0,
            !0
            /** smartCase */
          );
        } catch {
          bt(p, "Invalid regex: " + v);
          return;
        }
      if (w = w || re.lastSubstituteReplacePart, w === void 0) {
        bt(p, "No previous substitute regular expression");
        return;
      }
      var Y = tr(p), ee = Y.getQuery(), z = d.line !== void 0 ? d.line : p.getCursor().line, G = d.lineEnd || z;
      z == p.firstLine() && G == p.lastLine() && (G = 1 / 0), j && (z = G, G = z + j - 1);
      var te = Se(p, new e(z, 0)), ue = p.getSearchCursor(ee, te);
      ds(p, V, X, z, G, ue, ee, w, d.callback);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    startinsert: function(p, d) {
      lt(p, d.argString == "!" ? "A" : "i", {});
    },
    redo: t.commands.redo,
    undo: t.commands.undo,
    /** @arg {CodeMirrorV} cm */
    write: function(p) {
      t.commands.save ? t.commands.save(p) : p.save && p.save();
    },
    /** @arg {CodeMirrorV} cm */
    nohlsearch: function(p) {
      Ia(p);
    },
    /** @arg {CodeMirrorV} cm */
    yank: function(p) {
      var d = He(p.getCursor()), g = d.line, b = p.getLine(g);
      re.registerController.pushText(
        "0",
        "yank",
        b,
        !0,
        !0
      );
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    delete: function(p, d) {
      var g = d.selectionLine, b = isNaN(d.selectionLineEnd) ? g : d.selectionLineEnd;
      On.delete(p, { linewise: !0 }, [
        {
          anchor: new e(g, 0),
          head: new e(b + 1, 0)
        }
      ]);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    join: function(p, d) {
      var g = d.selectionLine, b = isNaN(d.selectionLineEnd) ? g : d.selectionLineEnd;
      p.setCursor(new e(g, 0)), Ue.joinLines(p, { repeat: b - g }, p.state.vim);
    },
    /** @arg {CodeMirrorV} cm @arg {ExParams} params*/
    delmarks: function(p, d) {
      if (!d.argString || !Wt(d.argString)) {
        bt(p, "Argument required");
        return;
      }
      for (var g = p.state.vim, b = new t.StringStream(Wt(d.argString)); !b.eol(); ) {
        b.eatSpace();
        var v = b.pos;
        if (!b.match(/[a-zA-Z]/, !1)) {
          bt(p, "Invalid argument: " + d.argString.substring(v));
          return;
        }
        var w = b.next();
        if (b.match("-", !0)) {
          if (!b.match(/[a-zA-Z]/, !1)) {
            bt(p, "Invalid argument: " + d.argString.substring(v));
            return;
          }
          var E = w, Q = b.next();
          if (E && Q && Z(E) == Z(Q)) {
            var j = E.charCodeAt(0), V = Q.charCodeAt(0);
            if (j >= V) {
              bt(p, "Invalid argument: " + d.argString.substring(v));
              return;
            }
            for (var X = 0; X <= V - j; X++) {
              var Y = String.fromCharCode(j + X);
              delete g.marks[Y];
            }
          } else {
            bt(p, "Invalid argument: " + E + "-");
            return;
          }
        } else w && delete g.marks[w];
      }
    }
  }, Ce = new nr();
  function ds(p, d, g, b, v, w, E, Q, j) {
    p.state.vim.exMode = !0;
    var V = !1, X, Y, ee;
    function z() {
      p.operation(function() {
        for (; !V; )
          G(), ue();
        $e();
      });
    }
    function G() {
      var Ve = p.getRange(w.from(), w.to()), yt = Ve.replace(E, Q), gn = w.to().line;
      w.replace(yt), Y = w.to().line, v += Y - gn, ee = Y < gn;
    }
    function te() {
      var Ve = X && He(w.to()), yt = w.findNext();
      return yt && !yt[0] && Ve && Ye(w.from(), Ve) && (yt = w.findNext()), yt;
    }
    function ue() {
      for (; te() && sh(w.from(), b, v); )
        if (!(!g && w.from().line == Y && !ee)) {
          p.scrollIntoView(w.from(), 30), p.setSelection(w.from(), w.to()), X = w.from(), V = !1;
          return;
        }
      V = !0;
    }
    function $e(Ve) {
      if (Ve && Ve(), p.focus(), X) {
        p.setCursor(X);
        var yt = p.state.vim;
        yt.exMode = !1, yt.lastHPos = yt.lastHSPos = X.ch;
      }
      j && j();
    }
    function Be(Ve, yt, gn) {
      t.e_stop(Ve);
      var qt = xt(Ve);
      switch (qt) {
        case "y":
          G(), ue();
          break;
        case "n":
          ue();
          break;
        case "a":
          var ln = j;
          j = void 0, p.operation(z), j = ln;
          break;
        case "l":
          G();
        // fall through and exit.
        case "q":
        case "<Esc>":
        case "<C-c>":
        case "<C-[>":
          $e(gn);
          break;
      }
      return V && $e(gn), !0;
    }
    if (ue(), V) {
      bt(p, "No matches for " + E.source);
      return;
    }
    if (!d) {
      z(), j && j();
      return;
    }
    cs(p, {
      prefix: Hr("span", "replace with ", Hr("strong", Q), " (y/n/a/q/l)"),
      onKeyDown: Be
    });
  }
  function Yr(p, d) {
    var g = p.state.vim, b = re.macroModeState, v = re.registerController.getRegister("."), w = b.isPlaying, E = b.lastInsertModeChanges;
    w || (p.off("change", Ls), g.insertEnd && g.insertEnd.clear(), g.insertEnd = void 0, t.off(p.getInputField(), "keydown", mr)), !w && g.insertModeRepeat > 1 && (bl(
      p,
      g,
      g.insertModeRepeat - 1,
      !0
      /** repeatForInsert */
    ), g.lastEditInputState.repeatOverride = g.insertModeRepeat), delete g.insertModeRepeat, g.insertMode = !1, d || p.setCursor(p.getCursor().line, p.getCursor().ch - 1), p.setOption("keyMap", "vim"), p.setOption("disableInput", !0), p.toggleOverwrite(!1), v.setText(E.changes.join("")), t.signal(p, "vim-mode-change", { mode: "normal" }), b.isRecording && Va(b);
  }
  function Na(p) {
    r.unshift(p);
  }
  function rt(p, d, g, b, v) {
    var w = { keys: p, type: d };
    w[d] = g, w[d + "Args"] = b;
    for (var E in v)
      w[E] = v[E];
    Na(w);
  }
  K("insertModeEscKeysTimeout", 200, "number");
  function $r(p, d, g, b) {
    var v = re.registerController.getRegister(b);
    if (b == ":") {
      v.keyBuffer[0] && Ce.processCommand(p, v.keyBuffer[0]), g.isPlaying = !1;
      return;
    }
    var w = v.keyBuffer, E = 0;
    g.isPlaying = !0, g.replaySearchQueries = v.searchQueries.slice(0);
    for (var Q = 0; Q < w.length; Q++)
      for (var j = w[Q], V, X, Y = /<(?:[CSMA]-)*\w+>|./gi; V = Y.exec(j); )
        if (X = V[0], xe.handleKey(p, X, "macro"), d.insertMode) {
          var ee = v.insertModeChanges[E++].changes;
          re.macroModeState.lastInsertModeChanges.changes = ee, Ol(p, ee, 1), Yr(p);
        }
    g.isPlaying = !1;
  }
  function ah(p, d) {
    if (!p.isPlaying) {
      var g = p.latestRegister, b = re.registerController.getRegister(g);
      b && b.pushText(d);
    }
  }
  function Va(p) {
    if (!p.isPlaying) {
      var d = p.latestRegister, g = re.registerController.getRegister(d);
      g && g.pushInsertModeChanges && g.pushInsertModeChanges(p.lastInsertModeChanges);
    }
  }
  function ml(p, d) {
    if (!p.isPlaying) {
      var g = p.latestRegister, b = re.registerController.getRegister(g);
      b && b.pushSearchQuery && b.pushSearchQuery(d);
    }
  }
  function Ls(p, d) {
    var g = re.macroModeState, b = g.lastInsertModeChanges;
    if (!g.isPlaying)
      for (var v = p.state.vim; d; ) {
        if (b.expectCursorActivityForChange = !0, b.ignoreCount > 1)
          b.ignoreCount--;
        else if (d.origin == "+input" || d.origin == "paste" || d.origin === void 0) {
          var w = p.listSelections().length;
          w > 1 && (b.ignoreCount = w);
          var E = d.text.join(`
`);
          if (b.maybeReset && (b.changes = [], b.maybeReset = !1), E)
            if (p.state.overwrite && !/\n/.test(E))
              b.changes.push([E]);
            else {
              if (E.length > 1) {
                var Q = v && v.insertEnd && v.insertEnd.find(), j = p.getCursor();
                if (Q && Q.line == j.line) {
                  var V = Q.ch - j.ch;
                  V > 0 && V < E.length && (b.changes.push([E, V]), E = "");
                }
              }
              E && b.changes.push(E);
            }
        }
        d = d.next;
      }
  }
  function _e(p) {
    var d = p.state.vim;
    if (d.insertMode) {
      var g = re.macroModeState;
      if (g.isPlaying)
        return;
      var b = g.lastInsertModeChanges;
      b.expectCursorActivityForChange ? b.expectCursorActivityForChange = !1 : (b.maybeReset = !0, d.insertEnd && d.insertEnd.clear(), d.insertEnd = p.setBookmark(p.getCursor(), { insertLeft: !0 }));
    } else p.curOp?.isVimOp || gl(p, d);
  }
  function gl(p, d) {
    var g = p.getCursor("anchor"), b = p.getCursor("head");
    if (d.visualMode && !p.somethingSelected() ? ge(p, !1) : !d.visualMode && !d.insertMode && p.somethingSelected() && (d.visualMode = !0, d.visualLine = !1, t.signal(p, "vim-mode-change", { mode: "visual" })), d.visualMode) {
      var v = gt(b, g) ? 0 : -1, w = gt(b, g) ? -1 : 0;
      b = Xe(b, 0, v), g = Xe(g, 0, w), d.sel = {
        anchor: g,
        head: b
      }, Rr(p, d, "<", Ht(b, g)), Rr(p, d, ">", ut(b, g));
    } else d.insertMode || (d.lastHPos = p.getCursor().ch);
  }
  function Is(p, d) {
    this.keyName = p, this.key = d.key, this.ctrlKey = d.ctrlKey, this.altKey = d.altKey, this.metaKey = d.metaKey, this.shiftKey = d.shiftKey;
  }
  function mr(p) {
    var d = re.macroModeState, g = d.lastInsertModeChanges, b = t.keyName ? t.keyName(p) : p.key;
    b && (b.indexOf("Delete") != -1 || b.indexOf("Backspace") != -1) && (g.maybeReset && (g.changes = [], g.maybeReset = !1), g.changes.push(new Is(b, p)));
  }
  function bl(p, d, g, b) {
    var v = re.macroModeState;
    v.isPlaying = !0;
    var w = d.lastEditActionCommand, E = d.inputState;
    function Q() {
      w ? Mn.processAction(p, d, w) : Mn.evalInput(p, d);
    }
    function j(X) {
      if (v.lastInsertModeChanges.changes.length > 0) {
        X = d.lastEditActionCommand ? X : 1;
        var Y = v.lastInsertModeChanges;
        Ol(p, Y.changes, X);
      }
    }
    if (d.inputState = d.lastEditInputState, w && w.interlaceInsertRepeat)
      for (var V = 0; V < g; V++)
        Q(), j(1);
    else
      b || Q(), j(g);
    d.inputState = E, d.insertMode && !b && Yr(p), v.isPlaying = !1;
  }
  function yl(p, d) {
    t.lookupKey(d, "vim-insert", function(b) {
      return typeof b == "string" ? t.commands[b](p) : b(p), !0;
    });
  }
  function Ol(p, d, g) {
    var b = p.getCursor("head"), v = re.macroModeState.lastInsertModeChanges.visualBlock;
    v && (O(p, b, v + 1), g = p.listSelections().length, p.setCursor(b));
    for (var w = 0; w < g; w++) {
      v && p.setCursor(Xe(b, w, 0));
      for (var E = 0; E < d.length; E++) {
        var Q = d[E];
        if (Q instanceof Is)
          yl(p, Q.keyName);
        else if (typeof Q == "string")
          p.replaceSelection(Q);
        else {
          var j = p.getCursor(), V = Xe(j, 0, Q[0].length - (Q[1] || 0));
          p.replaceRange(Q[0], j, Q[1] ? j : V), p.setCursor(V);
        }
      }
    }
    v && p.setCursor(Xe(b, 0, 1));
  }
  function Xa(p) {
    var d = new p.constructor();
    return Object.keys(p).forEach(function(g) {
      if (g != "insertEnd") {
        var b = p[g];
        Array.isArray(b) ? b = b.slice() : b && typeof b == "object" && b.constructor != Object && (b = Xa(b)), d[g] = b;
      }
    }), p.sel && (d.sel = {
      head: p.sel.head && He(p.sel.head),
      anchor: p.sel.anchor && He(p.sel.anchor)
    }), d;
  }
  function oh(p, d, g) {
    var w = Ee(p), b = (
      /**@type {CodeMirrorV}*/
      p
    ), v = !1, w = xe.maybeInitVimState_(b), E = w.visualBlock || w.wasInVisualBlock, Q = b.isInMultiSelectMode();
    if (w.wasInVisualBlock && !Q ? w.wasInVisualBlock = !1 : Q && w.visualBlock && (w.wasInVisualBlock = !0), d == "<Esc>" && !w.insertMode && !w.visualMode && Q && w.status == "<Esc>")
      kt(b);
    else if (E || !Q || b.inVirtualSelectionMode)
      v = xe.handleKey(b, d, g);
    else {
      var j = Xa(w), V = w.inputState.changeQueueList || [];
      b.operation(function() {
        b.curOp && (b.curOp.isVimOp = !0);
        var X = 0;
        b.forEachSelection(function() {
          b.state.vim.inputState.changeQueue = V[X];
          var Y = b.getCursor("head"), ee = b.getCursor("anchor"), z = gt(Y, ee) ? 0 : -1, G = gt(Y, ee) ? -1 : 0;
          Y = Xe(Y, 0, z), ee = Xe(ee, 0, G), b.state.vim.sel.head = Y, b.state.vim.sel.anchor = ee, v = xe.handleKey(b, d, g), b.virtualSelection && (V[X] = b.state.vim.inputState.changeQueue, b.state.vim = Xa(j)), X++;
        }), b.curOp?.cursorActivity && !v && (b.curOp.cursorActivity = !1), b.state.vim = w, w.inputState.changeQueueList = V, w.inputState.changeQueue = null;
      }, !0);
    }
    return v && !w.visualMode && !w.insert && w.visualMode != b.somethingSelected() && gl(b, w), v;
  }
  return ke(), xe;
}
function sr(t, e) {
  var n = e.ch, r = e.line + 1;
  r < 1 && (r = 1, n = 0), r > t.lines && (r = t.lines, n = Number.MAX_VALUE);
  var i = t.line(r);
  return Math.min(i.from + Math.max(0, n), i.to);
}
function Or(t, e) {
  let n = t.lineAt(e);
  return { line: n.number - 1, ch: e - n.from };
}
class ri {
  constructor(e, n) {
    this.line = e, this.ch = n;
  }
}
function XA(t, e, n) {
  if (t.addEventListener)
    t.addEventListener(e, n, !1);
  else {
    var r = t._handlers || (t._handlers = {});
    r[e] = (r[e] || []).concat(n);
  }
}
function WA(t, e, n) {
  if (t.removeEventListener)
    t.removeEventListener(e, n, !1);
  else {
    var r = t._handlers, i = r && r[e];
    if (i) {
      var s = i.indexOf(n);
      s > -1 && (r[e] = i.slice(0, s).concat(i.slice(s + 1)));
    }
  }
}
function qA(t, e, ...n) {
  var r, i = (r = t._handlers) === null || r === void 0 ? void 0 : r[e];
  if (i)
    for (var s = 0; s < i.length; ++s)
      i[s](...n);
}
function eb(t, ...e) {
  if (t)
    for (var n = 0; n < t.length; ++n)
      t[n](...e);
}
let Bf;
try {
  Bf = /* @__PURE__ */ new RegExp("[\\w\\p{Alphabetic}\\p{Number}_]", "u");
} catch {
  Bf = /[\w]/;
}
function co(t, e) {
  var n = t.cm6;
  if (!n.state.readOnly) {
    var r = "input.type.compose";
    if (t.curOp && (t.curOp.lastChange || (r = "input.type.compose.start")), e.annotations)
      try {
        e.annotations.some(function(i) {
          i.value == "input" && (i.value = r);
        });
      } catch (i) {
        console.error(i);
      }
    else
      e.userEvent = r;
    return n.dispatch(e);
  }
}
function tb(t, e) {
  var n;
  t.curOp && (t.curOp.$changeStart = void 0), (e ? $c : Aa)(t.cm6);
  let r = (n = t.curOp) === null || n === void 0 ? void 0 : n.$changeStart;
  r != null && t.cm6.dispatch({ selection: { anchor: r } });
}
var Dj = {};
class tt {
  constructor(e) {
    this.state = {}, this.marks = /* @__PURE__ */ Object.create(null), this.$mid = 0, this.options = {}, this._handlers = {}, this.$lastChangeEndOffset = 0, this.virtualSelection = null, this.cm6 = e, this.onChange = this.onChange.bind(this), this.onSelectionChange = this.onSelectionChange.bind(this);
  }
  // --------------------------
  openDialog(e, n, r) {
    return Ej(this, e, n, r);
  }
  openNotification(e, n) {
    return Pj(this, e, n);
  }
  on(e, n) {
    XA(this, e, n);
  }
  off(e, n) {
    WA(this, e, n);
  }
  signal(e, n, r) {
    qA(this, e, n, r);
  }
  indexFromPos(e) {
    return sr(this.cm6.state.doc, e);
  }
  posFromIndex(e) {
    return Or(this.cm6.state.doc, e);
  }
  foldCode(e) {
    let n = this.cm6, r = n.state.selection.ranges, i = this.cm6.state.doc, s = sr(i, e), a = ne.create([ne.range(s, s)], 0).ranges;
    n.state.selection.ranges = a, pS(n), n.state.selection.ranges = r;
  }
  firstLine() {
    return 0;
  }
  lastLine() {
    return this.cm6.state.doc.lines - 1;
  }
  lineCount() {
    return this.cm6.state.doc.lines;
  }
  setCursor(e, n) {
    typeof e == "object" && (n = e.ch, e = e.line);
    var r = sr(this.cm6.state.doc, { line: e, ch: n || 0 });
    this.cm6.dispatch({ selection: { anchor: r } }, { scrollIntoView: !this.curOp }), this.curOp && !this.curOp.isVimOp && this.onBeforeEndOperation();
  }
  getCursor(e) {
    var n = this.cm6.state.selection.main, r = e == "head" || !e ? n.head : e == "anchor" ? n.anchor : e == "start" ? n.from : e == "end" ? n.to : null;
    if (r == null)
      throw new Error("Invalid cursor type");
    return this.posFromIndex(r);
  }
  listSelections() {
    var e = this.cm6.state.doc;
    return this.cm6.state.selection.ranges.map((n) => ({
      anchor: Or(e, n.anchor),
      head: Or(e, n.head)
    }));
  }
  setSelections(e, n) {
    var r = this.cm6.state.doc, i = e.map((s) => {
      var a = sr(r, s.head), o = sr(r, s.anchor);
      return a == o ? ne.cursor(a, 1) : ne.range(o, a);
    });
    this.cm6.dispatch({
      selection: ne.create(i, n)
    });
  }
  setSelection(e, n, r) {
    this.setSelections([{ anchor: e, head: n }], 0), r && r.origin == "*mouse" && this.onBeforeEndOperation();
  }
  getLine(e) {
    var n = this.cm6.state.doc;
    return e < 0 || e >= n.lines ? "" : this.cm6.state.doc.line(e + 1).text;
  }
  getLineHandle(e) {
    return this.$lineHandleChanges || (this.$lineHandleChanges = []), { row: e, index: this.indexFromPos(new ri(e, 0)) };
  }
  getLineNumber(e) {
    var n = this.$lineHandleChanges;
    if (!n)
      return null;
    for (var r = e.index, i = 0; i < n.length; i++)
      if (r = n[i].changes.mapPos(r, 1, rn.TrackAfter), r == null)
        return null;
    var s = this.posFromIndex(r);
    return s.ch == 0 ? s.line : null;
  }
  releaseLineHandles() {
    this.$lineHandleChanges = void 0;
  }
  getRange(e, n) {
    var r = this.cm6.state.doc;
    return this.cm6.state.sliceDoc(sr(r, e), sr(r, n));
  }
  replaceRange(e, n, r, i) {
    r || (r = n);
    var s = this.cm6.state.doc, a = sr(s, n), o = sr(s, r);
    co(this, { changes: { from: a, to: o, insert: e } });
  }
  replaceSelection(e) {
    co(this, this.cm6.state.replaceSelection(e));
  }
  replaceSelections(e) {
    var n = this.cm6.state.selection.ranges, r = n.map((i, s) => ({ from: i.from, to: i.to, insert: e[s] || "" }));
    co(this, { changes: r });
  }
  getSelection() {
    return this.getSelections().join(`
`);
  }
  getSelections() {
    var e = this.cm6;
    return e.state.selection.ranges.map((n) => e.state.sliceDoc(n.from, n.to));
  }
  somethingSelected() {
    return this.cm6.state.selection.ranges.some((e) => !e.empty);
  }
  getInputField() {
    return this.cm6.contentDOM;
  }
  clipPos(e) {
    var n = this.cm6.state.doc, r = e.ch, i = e.line + 1;
    i < 1 && (i = 1, r = 0), i > n.lines && (i = n.lines, r = Number.MAX_VALUE);
    var s = n.line(i);
    return r = Math.min(Math.max(0, r), s.to - s.from), new ri(i - 1, r);
  }
  getValue() {
    return this.cm6.state.doc.toString();
  }
  setValue(e) {
    var n = this.cm6;
    return n.dispatch({
      changes: { from: 0, to: n.state.doc.length, insert: e },
      selection: ne.range(0, 0)
    });
  }
  focus() {
    return this.cm6.focus();
  }
  blur() {
    return this.cm6.contentDOM.blur();
  }
  defaultTextHeight() {
    return this.cm6.defaultLineHeight;
  }
  findMatchingBracket(e, n) {
    var r = this.cm6.state, i = sr(r.doc, e), s = Sr(r, i + 1, -1);
    return s && s.end ? { to: Or(r.doc, s.end.from) } : (s = Sr(r, i, 1), s && s.end ? { to: Or(r.doc, s.end.from) } : { to: void 0 });
  }
  scanForBracket(e, n, r, i) {
    return Mj(this, e, n, r, i);
  }
  indentLine(e, n) {
    n ? this.indentMore() : this.indentLess();
  }
  indentMore() {
    nc(this.cm6);
  }
  indentLess() {
    rc(this.cm6);
  }
  execCommand(e) {
    if (e == "indentAuto")
      tt.commands.indentAuto(this);
    else if (e == "goLineLeft")
      Vu(this.cm6);
    else if (e == "goLineRight") {
      Nu(this.cm6);
      let n = this.cm6.state, r = n.selection.main.head;
      r < n.doc.length && n.sliceDoc(r, r + 1) !== `
` && mQ(this.cm6);
    } else
      console.log(e + " is not implemented");
  }
  setBookmark(e, n) {
    var r = n?.insertLeft ? 1 : -1, i = this.indexFromPos(e), s = new jj(this, i, r);
    return s;
  }
  addOverlay({ query: e }) {
    let n = new bm({
      regexp: !0,
      search: e.source,
      caseSensitive: !/i/.test(e.flags)
    });
    if (n.valid) {
      n.forVim = !0, this.cm6Query = n;
      let r = is.of(n);
      return this.cm6.dispatch({ effects: r }), n;
    }
  }
  removeOverlay(e) {
    if (!this.cm6Query)
      return;
    this.cm6Query.forVim = !1;
    let n = is.of(this.cm6Query);
    this.cm6.dispatch({ effects: n });
  }
  getSearchCursor(e, n) {
    var r = this, i = null, s = null;
    n.ch == null && (n.ch = Number.MAX_VALUE);
    var a = sr(r.cm6.state.doc, n), o = e.source.replace(/(\\.|{(?:\d+(?:,\d*)?|,\d+)})|[{}]/g, function(m, y) {
      return y || "\\" + m;
    });
    function l(m, y = 0, x = m.length) {
      return new gm(m, o, { ignoreCase: e.ignoreCase }, y, x);
    }
    function c(m) {
      var y = r.cm6.state.doc;
      if (m > y.length)
        return null;
      let x = l(y, m).next();
      return x.done ? null : x.value;
    }
    var h = 1e4;
    function f(m, y) {
      var x = r.cm6.state.doc;
      for (let C = 1; ; C++) {
        let S = Math.max(m, y - C * h), M = l(x, S, y), Z = null;
        for (; !M.next().done; )
          Z = M.value;
        if (Z && (S == m || Z.from > S + 10))
          return Z;
        if (S == m)
          return null;
      }
    }
    return {
      findNext: function() {
        return this.find(!1);
      },
      findPrevious: function() {
        return this.find(!0);
      },
      find: function(m) {
        var y = r.cm6.state.doc;
        if (m) {
          let x = i ? i.from == i.to ? i.to - 1 : i.from : a;
          i = f(0, x);
        } else {
          let x = i ? i.from == i.to ? i.to + 1 : i.to : a;
          i = c(x);
        }
        return s = i && {
          from: Or(y, i.from),
          to: Or(y, i.to),
          match: i.match
        }, i && i.match;
      },
      from: function() {
        return s?.from;
      },
      to: function() {
        return s?.to;
      },
      replace: function(m) {
        i && (co(r, {
          changes: { from: i.from, to: i.to, insert: m }
        }), i.to = i.from + m.length, s && (s.to = Or(r.cm6.state.doc, i.to)));
      }
    };
  }
  findPosV(e, n, r, i) {
    let { cm6: s } = this;
    const a = s.state.doc;
    let o = r == "page" ? s.dom.clientHeight : 0;
    const l = sr(a, e);
    let c = ne.cursor(l, 1, void 0, i), h = Math.round(Math.abs(n));
    for (let m = 0; m < h; m++)
      r == "page" ? c = s.moveVertically(c, n > 0, o) : r == "line" && (c = s.moveVertically(c, n > 0));
    let f = Or(a, c.head);
    return (n < 0 && c.head == 0 && i != 0 && e.line == 0 && e.ch != 0 || n > 0 && c.head == a.length && f.ch != i && e.line == f.line) && (f.hitSide = !0), f;
  }
  charCoords(e, n) {
    var r = this.cm6.contentDOM.getBoundingClientRect(), i = sr(this.cm6.state.doc, e), s = this.cm6.coordsAtPos(i), a = -r.top;
    return { left: (s?.left || 0) - r.left, top: (s?.top || 0) + a, bottom: (s?.bottom || 0) + a };
  }
  coordsChar(e, n) {
    var r = this.cm6.contentDOM.getBoundingClientRect(), i = this.cm6.posAtCoords({ x: e.left + r.left, y: e.top + r.top }) || 0;
    return Or(this.cm6.state.doc, i);
  }
  getScrollInfo() {
    var e = this.cm6.scrollDOM;
    return {
      left: e.scrollLeft,
      top: e.scrollTop,
      height: e.scrollHeight,
      width: e.scrollWidth,
      clientHeight: e.clientHeight,
      clientWidth: e.clientWidth
    };
  }
  scrollTo(e, n) {
    e != null && (this.cm6.scrollDOM.scrollLeft = e), n != null && (this.cm6.scrollDOM.scrollTop = n);
  }
  scrollIntoView(e, n) {
    if (e) {
      var r = this.indexFromPos(e);
      this.cm6.dispatch({
        effects: be.scrollIntoView(r)
      });
    } else
      this.cm6.dispatch({ scrollIntoView: !0, userEvent: "scroll" });
  }
  getWrapperElement() {
    return this.cm6.dom;
  }
  // for tests
  getMode() {
    return { name: this.getOption("mode") };
  }
  setSize(e, n) {
    this.cm6.dom.style.width = e + 4 + "px", this.cm6.dom.style.height = n + "px", this.refresh();
  }
  refresh() {
    this.cm6.measure();
  }
  // event listeners
  destroy() {
    this.removeOverlay();
  }
  getLastEditEnd() {
    return this.posFromIndex(this.$lastChangeEndOffset);
  }
  onChange(e) {
    this.$lineHandleChanges && this.$lineHandleChanges.push(e);
    for (let r in this.marks)
      this.marks[r].update(e.changes);
    this.virtualSelection && (this.virtualSelection.ranges = this.virtualSelection.ranges.map((r) => r.map(e.changes)));
    var n = this.curOp = this.curOp || {};
    e.changes.iterChanges((r, i, s, a, o) => {
      (n.$changeStart == null || n.$changeStart > s) && (n.$changeStart = s), this.$lastChangeEndOffset = a;
      var l = { text: o.toJSON() };
      n.lastChange ? n.lastChange.next = n.lastChange = l : n.lastChange = n.change = l;
    }, !0), n.changeHandlers || (n.changeHandlers = this._handlers.change && this._handlers.change.slice());
  }
  onSelectionChange() {
    var e = this.curOp = this.curOp || {};
    e.cursorActivityHandlers || (e.cursorActivityHandlers = this._handlers.cursorActivity && this._handlers.cursorActivity.slice()), this.curOp.cursorActivity = !0;
  }
  operation(e, n) {
    this.curOp || (this.curOp = { $d: 0 }), this.curOp.$d++;
    try {
      var r = e();
    } finally {
      this.curOp && (this.curOp.$d--, this.curOp.$d || this.onBeforeEndOperation());
    }
    return r;
  }
  onBeforeEndOperation() {
    var e = this.curOp, n = !1;
    e && (e.change && eb(e.changeHandlers, this, e.change), e && e.cursorActivity && (eb(e.cursorActivityHandlers, this, null), e.isVimOp && (n = !0)), this.curOp = null), n && this.scrollIntoView();
  }
  moveH(e, n) {
    if (n == "char") {
      var r = this.getCursor();
      this.setCursor(r.line, r.ch + e);
    }
  }
  setOption(e, n) {
    switch (e) {
      case "keyMap":
        this.state.keyMap = n;
        break;
      case "textwidth":
        this.state.textwidth = n;
        break;
    }
  }
  getOption(e) {
    switch (e) {
      case "firstLineNumber":
        return 1;
      case "tabSize":
        return this.cm6.state.tabSize || 4;
      case "readOnly":
        return this.cm6.state.readOnly;
      case "indentWithTabs":
        return this.cm6.state.facet(Sa) == "	";
      // TODO
      case "indentUnit":
        return this.cm6.state.facet(Sa).length || 2;
      case "textwidth":
        return this.state.textwidth;
      // for tests
      case "keyMap":
        return this.state.keyMap || "vim";
    }
  }
  toggleOverwrite(e) {
    this.state.overwrite = e;
  }
  getTokenTypeAt(e) {
    var n, r = this.indexFromPos(e), i = eS(this.cm6.state, r), s = i?.resolve(r), a = ((n = s?.type) === null || n === void 0 ? void 0 : n.name) || "";
    return /comment/i.test(a) ? "comment" : /string/i.test(a) ? "string" : "";
  }
  overWriteSelection(e) {
    var n = this.cm6.state.doc, r = this.cm6.state.selection, i = r.ranges.map((s) => {
      if (s.empty) {
        var a = s.to < n.length ? n.sliceString(s.from, s.to + 1) : "";
        if (a && !/\n/.test(a))
          return ne.range(s.from, s.to + 1);
      }
      return s;
    });
    this.cm6.dispatch({
      selection: ne.create(i, r.mainIndex)
    }), this.replaceSelection(e);
  }
  /*** multiselect ****/
  isInMultiSelectMode() {
    return this.cm6.state.selection.ranges.length > 1;
  }
  virtualSelectionMode() {
    return !!this.virtualSelection;
  }
  forEachSelection(e) {
    var n = this.cm6.state.selection;
    this.virtualSelection = ne.create(n.ranges, n.mainIndex);
    for (var r = 0; r < this.virtualSelection.ranges.length; r++) {
      var i = this.virtualSelection.ranges[r];
      i && (this.cm6.dispatch({ selection: ne.create([i]) }), e(), this.virtualSelection.ranges[r] = this.cm6.state.selection.ranges[0]);
    }
    this.cm6.dispatch({ selection: this.virtualSelection }), this.virtualSelection = null;
  }
  hardWrap(e) {
    return _j(this, e);
  }
}
tt.isMac = typeof navigator < "u" && /* @__PURE__ */ /Mac/.test(navigator.platform);
tt.Pos = ri;
tt.StringStream = t7;
tt.commands = {
  cursorCharLeft: function(t) {
    To(t.cm6);
  },
  redo: function(t) {
    tb(t, !1);
  },
  undo: function(t) {
    tb(t, !0);
  },
  newlineAndIndent: function(t) {
    jo({
      state: t.cm6.state,
      dispatch: (e) => co(t, e)
    });
  },
  indentAuto: function(t) {
    bA(t.cm6);
  },
  newlineAndIndentContinueComment: void 0,
  save: void 0
};
tt.isWordChar = function(t) {
  return Bf.test(t);
};
tt.keys = Dj;
tt.addClass = function(t, e) {
};
tt.rmClass = function(t, e) {
};
tt.e_preventDefault = function(t) {
  t.preventDefault();
};
tt.e_stop = function(t) {
  var e, n;
  (e = t?.stopPropagation) === null || e === void 0 || e.call(t), (n = t?.preventDefault) === null || n === void 0 || n.call(t);
};
tt.lookupKey = function(e, n, r) {
  var i = tt.keys[e];
  i && r(i);
};
tt.on = XA;
tt.off = WA;
tt.signal = qA;
tt.findMatchingTag = Qj;
tt.findEnclosingTag = Tj;
tt.keyName = void 0;
function UA(t, e, n) {
  var r = document.createElement("div");
  return r.appendChild(e), r;
}
function GA(t, e) {
  t.state.currentNotificationClose && t.state.currentNotificationClose(), t.state.currentNotificationClose = e;
}
function Pj(t, e, n) {
  GA(t, o);
  var r = UA(t, e, n && n.bottom), i = !1, s, a = n && typeof n.duration < "u" ? n.duration : 5e3;
  function o() {
    i || (i = !0, clearTimeout(s), r.remove(), HA(t, r));
  }
  return r.onclick = function(l) {
    l.preventDefault(), o();
  }, zA(t, r), a && (s = setTimeout(o, a)), o;
}
function zA(t, e) {
  var n = t.state.dialog;
  t.state.dialog = e, e && n !== e && (n && n.contains(document.activeElement) && t.focus(), n && n.parentElement ? n.parentElement.replaceChild(e, n) : n && n.remove(), tt.signal(t, "dialog"));
}
function HA(t, e) {
  t.state.dialog == e && (t.state.dialog = null, tt.signal(t, "dialog"));
}
function Ej(t, e, n, r) {
  r || (r = {}), GA(t, void 0);
  var i = UA(t, e, r.bottom), s = !1;
  zA(t, i);
  function a(l) {
    if (typeof l == "string")
      o.value = l;
    else {
      if (s)
        return;
      s = !0, HA(t, i), t.state.dialog || t.focus(), r.onClose && r.onClose(i);
    }
  }
  var o = i.getElementsByTagName("input")[0];
  return o && (r.value && (o.value = r.value, r.selectValueOnOpen !== !1 && o.select()), r.onInput && tt.on(o, "input", function(l) {
    r.onInput(l, o.value, a);
  }), r.onKeyUp && tt.on(o, "keyup", function(l) {
    r.onKeyUp(l, o.value, a);
  }), tt.on(o, "keydown", function(l) {
    r && r.onKeyDown && r.onKeyDown(l, o.value, a) || (l.keyCode == 13 && n(o.value), (l.keyCode == 27 || r.closeOnEnter !== !1 && l.keyCode == 13) && (o.blur(), tt.e_stop(l), a()));
  }), r.closeOnBlur !== !1 && tt.on(o, "blur", function() {
    setTimeout(function() {
      document.activeElement !== o && a();
    });
  }), o.focus()), a;
}
var Fj = { "(": ")>", ")": "(<", "[": "]>", "]": "[<", "{": "}>", "}": "{<", "<": ">>", ">": "<<" };
function Bj(t) {
  return t && t.bracketRegex || /[(){}[\]]/;
}
function Mj(t, e, n, r, i) {
  for (var s = i && i.maxScanLineLength || 1e4, a = i && i.maxScanLines || 1e3, o = [], l = Bj(i), c = n > 0 ? Math.min(e.line + a, t.lastLine() + 1) : Math.max(t.firstLine() - 1, e.line - a), h = e.line; h != c; h += n) {
    var f = t.getLine(h);
    if (f) {
      var m = n > 0 ? 0 : f.length - 1, y = n > 0 ? f.length : -1;
      if (!(f.length > s))
        for (h == e.line && (m = e.ch - (n < 0 ? 1 : 0)); m != y; m += n) {
          var x = f.charAt(m);
          if (l.test(x)) {
            var C = Fj[x];
            if (C && C.charAt(1) == ">" == n > 0)
              o.push(x);
            else if (o.length)
              o.pop();
            else
              return { pos: new ri(h, m), ch: x };
          }
        }
    }
  }
  return h - n == (n > 0 ? t.lastLine() : t.firstLine()) ? !1 : null;
}
function Qj(t, e) {
}
function Tj(t, e) {
  var n, r, i = t.cm6.state, s = t.indexFromPos(e);
  if (s < i.doc.length) {
    var a = i.sliceDoc(s, s + 1);
    a == "<" && s++;
  }
  for (var o = eS(i, s), l = o?.resolve(s) || null; l; ) {
    if (((n = l.firstChild) === null || n === void 0 ? void 0 : n.type.name) == "OpenTag" && ((r = l.lastChild) === null || r === void 0 ? void 0 : r.type.name) == "CloseTag")
      return {
        open: nb(i.doc, l.firstChild),
        close: nb(i.doc, l.lastChild)
      };
    l = l.parent;
  }
}
function nb(t, e) {
  return {
    from: Or(t, e.from),
    to: Or(t, e.to)
  };
}
class jj {
  constructor(e, n, r) {
    this.cm = e, this.id = e.$mid++, this.offset = n, this.assoc = r, e.marks[this.id] = this;
  }
  clear() {
    delete this.cm.marks[this.id];
  }
  find() {
    return this.offset == null ? null : this.cm.posFromIndex(this.offset);
  }
  update(e) {
    this.offset != null && (this.offset = e.mapPos(this.offset, this.assoc, rn.TrackDel));
  }
}
function _j(t, e) {
  for (var n, r = e.column || t.getOption("textwidth") || 80, i = e.allowMerge != !1, s = Math.min(e.from, e.to), a = Math.max(e.from, e.to); s <= a; ) {
    var o = t.getLine(s);
    if (o.length > r) {
      var l = x(o, r, 5);
      if (l) {
        var c = (n = /^\s*/.exec(o)) === null || n === void 0 ? void 0 : n[0];
        t.replaceRange(`
` + c, new ri(s, l.start), new ri(s, l.end));
      }
      a++;
    } else if (i && /\S/.test(o) && s != a) {
      var h = t.getLine(s + 1);
      if (h && /\S/.test(h)) {
        var f = o.replace(/\s+$/, ""), m = h.replace(/^\s+/, ""), y = f + " " + m, l = x(y, r, 5);
        l && l.start > f.length || y.length < r ? (t.replaceRange(" ", new ri(s, f.length), new ri(s + 1, h.length - m.length)), s--, a--) : f.length < o.length && t.replaceRange("", new ri(s, f.length), new ri(s, o.length));
      }
    }
    s++;
  }
  return s;
  function x(C, S, M) {
    if (!(C.length < S)) {
      var Z = C.slice(0, S), q = C.slice(S), _ = /^(?:(\s+)|(\S+)(\s+))/.exec(q), B = /(?:(\s+)|(\s+)(\S+))$/.exec(Z), $ = 0, N = 0;
      if (B && !B[2] && ($ = S - B[1].length, N = S), _ && !_[2] && ($ || ($ = S), N = S + _[1].length), $)
        return {
          start: $,
          end: N
        };
      if (B && B[2] && B.index > M)
        return {
          start: B.index,
          end: B.index + B[2].length
        };
      if (_ && _[2])
        return $ = S + _[2].length, {
          start: $,
          end: $ + _[3].length
        };
    }
  }
}
let Mf = $C;
class Rj {
  constructor(e, n, r, i, s, a, o, l, c, h) {
    this.left = e, this.top = n, this.height = r, this.fontFamily = i, this.fontSize = s, this.fontWeight = a, this.color = o, this.className = l, this.letter = c, this.partial = h;
  }
  draw() {
    let e = document.createElement("div");
    return e.className = this.className, this.adjust(e), e;
  }
  adjust(e) {
    e.style.left = this.left + "px", e.style.top = this.top + "px", e.style.height = this.height + "px", e.style.lineHeight = this.height + "px", e.style.fontFamily = this.fontFamily, e.style.fontSize = this.fontSize, e.style.fontWeight = this.fontWeight, e.style.color = this.partial ? "transparent" : this.color, e.className = this.className, e.textContent = this.letter;
  }
  eq(e) {
    return this.left == e.left && this.top == e.top && this.height == e.height && this.fontFamily == e.fontFamily && this.fontSize == e.fontSize && this.fontWeight == e.fontWeight && this.color == e.color && this.className == e.className && this.letter == e.letter;
  }
}
class $j {
  constructor(e, n) {
    this.view = e, this.rangePieces = [], this.cursors = [], this.cm = n, this.measureReq = { read: this.readPos.bind(this), write: this.drawSel.bind(this) }, this.cursorLayer = e.scrollDOM.appendChild(document.createElement("div")), this.cursorLayer.className = "cm-cursorLayer cm-vimCursorLayer", this.cursorLayer.setAttribute("aria-hidden", "true"), e.requestMeasure(this.measureReq), this.setBlinkRate();
  }
  setBlinkRate() {
    let n = Mf(this.cm.cm6.state).cursorBlinkRate;
    this.cursorLayer.style.animationDuration = n + "ms";
  }
  update(e) {
    (e.selectionSet || e.geometryChanged || e.viewportChanged) && (this.view.requestMeasure(this.measureReq), this.cursorLayer.style.animationName = this.cursorLayer.style.animationName == "cm-blink" ? "cm-blink2" : "cm-blink"), Zj(e) && this.setBlinkRate();
  }
  scheduleRedraw() {
    this.view.requestMeasure(this.measureReq);
  }
  readPos() {
    let { state: e } = this.view, n = [];
    for (let r of e.selection.ranges) {
      let i = r == e.selection.main, s = Vj(this.cm, this.view, r, i);
      s && n.push(s);
    }
    return { cursors: n };
  }
  drawSel({ cursors: e }) {
    if (e.length != this.cursors.length || e.some((n, r) => !n.eq(this.cursors[r]))) {
      let n = this.cursorLayer.children;
      if (n.length !== e.length) {
        this.cursorLayer.textContent = "";
        for (const r of e)
          this.cursorLayer.appendChild(r.draw());
      } else
        e.forEach((r, i) => r.adjust(n[i]));
      this.cursors = e;
    }
  }
  destroy() {
    this.cursorLayer.remove();
  }
}
function Zj(t) {
  return Mf(t.startState) != Mf(t.state);
}
const Lj = {
  ".cm-vimMode .cm-line": {
    "& ::selection": { backgroundColor: "transparent !important" },
    "&::selection": { backgroundColor: "transparent !important" },
    caretColor: "transparent !important"
  },
  ".cm-fat-cursor": {
    position: "absolute",
    background: "#ff9696",
    border: "none",
    whiteSpace: "pre"
  },
  "&:not(.cm-focused) .cm-fat-cursor": {
    background: "none",
    outline: "solid 1px #ff9696",
    color: "transparent !important"
  }
}, Ij = /* @__PURE__ */ Tr.highest(/* @__PURE__ */ be.theme(Lj));
function Nj(t) {
  let e = t.scrollDOM.getBoundingClientRect();
  return { left: (t.textDirection == Dt.LTR ? e.left : e.right - t.scrollDOM.clientWidth) - t.scrollDOM.scrollLeft, top: e.top - t.scrollDOM.scrollTop };
}
function Vj(t, e, n, r) {
  var i, s;
  let a = n.head, o = !1, l = 1, c = t.state.vim;
  if (c && (!c.insertMode || t.state.overwrite)) {
    if (o = !0, c.visualBlock && !r)
      return null;
    n.anchor < n.head && a--, t.state.overwrite ? l = 0.2 : c.status && (l = 0.5);
  }
  if (o) {
    let f = a < e.state.doc.length && e.state.sliceDoc(a, a + 1);
    f && /[\uDC00-\uDFFF]/.test(f) && a > 1 && (a--, f = e.state.sliceDoc(a, a + 1));
    let m = e.coordsAtPos(a, 1);
    if (!m)
      return null;
    let y = Nj(e), x = e.domAtPos(a), C = x ? x.node : e.contentDOM;
    for (; x && x.node instanceof HTMLElement; )
      C = x.node, x = { node: x.node.childNodes[x.offset], offset: 0 };
    if (!(C instanceof HTMLElement)) {
      if (!C.parentNode)
        return null;
      C = C.parentNode;
    }
    let S = getComputedStyle(C), M = m.left, Z = (s = (i = e).coordsForChar) === null || s === void 0 ? void 0 : s.call(i, a);
    if (Z && (M = Z.left), !f || f == `
` || f == "\r")
      f = " ";
    else if (f == "	") {
      f = " ";
      var h = e.coordsAtPos(a + 1, -1);
      h && (M = h.left - (h.left - m.left) / parseInt(S.tabSize));
    } else /[\uD800-\uDBFF]/.test(f) && a < e.state.doc.length - 1 && (f += e.state.sliceDoc(a + 1, a + 2));
    let q = m.bottom - m.top;
    return new Rj(M - y.left, m.top - y.top + q * (1 - l), q * l, S.fontFamily, S.fontSize, S.fontWeight, S.color, r ? "cm-fat-cursor cm-cursor-primary" : "cm-fat-cursor cm-cursor-secondary", f, l != 1);
  } else
    return null;
}
var Xj = typeof navigator < "u" && /* @__PURE__ */ /linux/i.test(navigator.platform) && /* @__PURE__ */ / Gecko\/\d+/.exec(navigator.userAgent);
const gs = /* @__PURE__ */ Aj(tt), Wj = 250, qj = /* @__PURE__ */ be.baseTheme({
  ".cm-vimMode .cm-cursorLayer:not(.cm-vimCursorLayer)": {
    display: "none"
  },
  ".cm-vim-panel": {
    padding: "0px 10px",
    fontFamily: "monospace",
    minHeight: "1.3em"
  },
  ".cm-vim-panel input": {
    border: "none",
    outline: "none",
    backgroundColor: "inherit"
  },
  "&light .cm-searchMatch": { backgroundColor: "#ffff0054" },
  "&dark .cm-searchMatch": { backgroundColor: "#00ffff8a" }
}), Uj = /* @__PURE__ */ fn.fromClass(class {
  constructor(t) {
    this.status = "", this.query = null, this.decorations = Te.none, this.waitForCopy = !1, this.lastKeydown = "", this.useNextTextInput = !1, this.compositionText = "", this.view = t;
    const e = this.cm = new tt(t);
    gs.enterVimMode(this.cm), this.view.cm = this.cm, this.cm.state.vimPlugin = this, this.blockCursor = new $j(t, e), this.updateClass(), this.cm.on("vim-command-done", () => {
      e.state.vim && (e.state.vim.status = ""), this.blockCursor.scheduleRedraw(), this.updateStatus();
    }), this.cm.on("vim-mode-change", (n) => {
      e.state.vim && (e.state.vim.mode = n.mode, n.subMode && (e.state.vim.mode += " block"), e.state.vim.status = "", this.blockCursor.scheduleRedraw(), this.updateClass(), this.updateStatus());
    }), this.cm.on("dialog", () => {
      this.cm.state.statusbar ? this.updateStatus() : t.dispatch({
        effects: YA.of(!!this.cm.state.dialog)
      });
    }), this.dom = document.createElement("span"), this.dom.style.cssText = "position: absolute; right: 10px; top: 1px", this.statusButton = document.createElement("span"), this.statusButton.onclick = (n) => {
      gs.handleKey(this.cm, "<Esc>", "user"), this.cm.focus();
    }, this.statusButton.style.cssText = "cursor: pointer";
  }
  update(t) {
    var e;
    if ((t.viewportChanged || t.docChanged) && this.query && this.highlight(this.query), t.docChanged && this.cm.onChange(t), t.selectionSet && this.cm.onSelectionChange(), t.viewportChanged, this.cm.curOp && !this.cm.curOp.isVimOp && this.cm.onBeforeEndOperation(), t.transactions) {
      for (let n of t.transactions)
        for (let r of n.effects)
          if (r.is(is))
            if (!((e = r.value) === null || e === void 0 ? void 0 : e.forVim))
              this.highlight(null);
            else {
              let s = r.value.create();
              this.highlight(s);
            }
    }
    this.blockCursor.update(t);
  }
  updateClass() {
    const t = this.cm.state;
    !t.vim || t.vim.insertMode && !t.overwrite ? this.view.scrollDOM.classList.remove("cm-vimMode") : this.view.scrollDOM.classList.add("cm-vimMode");
  }
  updateStatus() {
    let t = this.cm.state.statusbar, e = this.cm.state.vim;
    if (!t || !e)
      return;
    let n = this.cm.state.dialog;
    if (n)
      n.parentElement != t && (t.textContent = "", t.appendChild(n));
    else {
      t.textContent = "";
      var r = (e.mode || "normal").toUpperCase();
      e.insertModeReturn && (r += "(C-O)"), this.statusButton.textContent = `--${r}--`, t.appendChild(this.statusButton);
    }
    this.dom.textContent = e.status, t.appendChild(this.dom);
  }
  destroy() {
    gs.leaveVimMode(this.cm), this.updateClass(), this.blockCursor.destroy(), delete this.view.cm;
  }
  highlight(t) {
    if (this.query = t, !t)
      return this.decorations = Te.none;
    let { view: e } = this, n = new Mi();
    for (let r = 0, i = e.visibleRanges, s = i.length; r < s; r++) {
      let { from: a, to: o } = i[r];
      for (; r < s - 1 && o > i[r + 1].from - 2 * Wj; )
        o = i[++r].to;
      t.highlight(e.state, a, o, (l, c) => {
        n.add(l, c, zj);
      });
    }
    return this.decorations = n.finish();
  }
  handleKey(t, e) {
    const n = this.cm;
    let r = n.state.vim;
    if (!r)
      return;
    const i = gs.vimKeyFromEvent(t, r);
    if (tt.signal(this.cm, "inputEvent", { type: "handleKey", key: i }), !i)
      return;
    if (i == "<Esc>" && !r.insertMode && !r.visualMode && this.query) {
      const o = r.searchState_;
      o && (n.removeOverlay(o.getOverlay()), o.setOverlay(null));
    }
    if (i === "<C-c>" && !tt.isMac && n.somethingSelected())
      return this.waitForCopy = !0, !0;
    r.status = (r.status || "") + i;
    let a = gs.multiSelectHandleKey(n, i, "user");
    return r = gs.maybeInitVimState_(n), !a && r.insertMode && n.state.overwrite && (t.key && t.key.length == 1 && !/\n/.test(t.key) ? (a = !0, n.overWriteSelection(t.key)) : t.key == "Backspace" && (a = !0, tt.commands.cursorCharLeft(n))), a && (tt.signal(this.cm, "vim-keypress", i), t.preventDefault(), t.stopPropagation(), this.blockCursor.scheduleRedraw()), this.updateStatus(), !!a;
  }
}, {
  eventHandlers: {
    copy: function(t, e) {
      this.waitForCopy && (this.waitForCopy = !1, Promise.resolve().then(() => {
        var n = this.cm, r = n.state.vim;
        r && (r.insertMode ? n.setSelection(n.getCursor(), n.getCursor()) : n.operation(() => {
          n.curOp && (n.curOp.isVimOp = !0), gs.handleKey(n, "<Esc>", "user");
        }));
      }));
    },
    compositionstart: function(t, e) {
      this.useNextTextInput = !0, tt.signal(this.cm, "inputEvent", t);
    },
    compositionupdate: function(t, e) {
      tt.signal(this.cm, "inputEvent", t);
    },
    compositionend: function(t, e) {
      tt.signal(this.cm, "inputEvent", t);
    },
    keypress: function(t, e) {
      tt.signal(this.cm, "inputEvent", t), this.lastKeydown == "Dead" && this.handleKey(t, e);
    },
    keydown: function(t, e) {
      tt.signal(this.cm, "inputEvent", t), this.lastKeydown = t.key, this.lastKeydown == "Unidentified" || this.lastKeydown == "Process" || this.lastKeydown == "Dead" ? this.useNextTextInput = !0 : (this.useNextTextInput = !1, this.handleKey(t, e));
    }
  },
  provide: () => [
    be.inputHandler.of((t, e, n, r) => {
      var i, s, a = e_(t);
      if (!a)
        return !1;
      var o = (i = a.state) === null || i === void 0 ? void 0 : i.vim, l = a.state.vimPlugin;
      if (o && !o.insertMode && !(!((s = a.curOp) === null || s === void 0) && s.isVimOp)) {
        if (r === "\0\0")
          return !0;
        if (tt.signal(a, "inputEvent", {
          type: "text",
          text: r,
          from: e,
          to: n
        }), r.length == 1 && l.useNextTextInput) {
          if (o.expectLiteralNext && t.composing)
            return l.compositionText = r, !1;
          if (l.compositionText) {
            var c = l.compositionText;
            l.compositionText = "";
            var h = t.state.selection.main.head, f = t.state.sliceDoc(h - c.length, h);
            if (c === f) {
              var m = a.getCursor();
              a.replaceRange("", a.posFromIndex(h - c.length), m);
            }
          }
          return l.handleKey({
            key: r,
            preventDefault: () => {
            },
            stopPropagation: () => {
            }
          }), Gj(t), !0;
        }
      }
      return !1;
    })
  ],
  decorations: (t) => t.decorations
});
function Gj(t) {
  var e = t.scrollDOM.parentElement;
  if (e) {
    if (Xj) {
      t.contentDOM.textContent = "\0\0", t.contentDOM.dispatchEvent(new CustomEvent("compositionend"));
      return;
    }
    var n = t.scrollDOM.nextSibling, r = window.getSelection(), i = r && {
      anchorNode: r.anchorNode,
      anchorOffset: r.anchorOffset,
      focusNode: r.focusNode,
      focusOffset: r.focusOffset
    };
    t.scrollDOM.remove(), e.insertBefore(t.scrollDOM, n);
    try {
      i && r && (r.setPosition(i.anchorNode, i.anchorOffset), i.focusNode && r.extend(i.focusNode, i.focusOffset));
    } catch (s) {
      console.error(s);
    }
    t.focus(), t.contentDOM.dispatchEvent(new CustomEvent("compositionend"));
  }
}
const zj = /* @__PURE__ */ Te.mark({ class: "cm-searchMatch" }), YA = /* @__PURE__ */ Ie.define(), Hj = /* @__PURE__ */ Vt.define({
  create: () => !1,
  update(t, e) {
    for (let n of e.effects)
      n.is(YA) && (t = n.value);
    return t;
  },
  provide: (t) => ts.from(t, (e) => e ? Yj : null)
});
function Yj(t) {
  let e = document.createElement("div");
  e.className = "cm-vim-panel";
  let n = t.cm;
  return n.state.dialog && e.appendChild(n.state.dialog), { top: !1, dom: e };
}
function Kj(t) {
  let e = document.createElement("div");
  e.className = "cm-vim-panel";
  let n = t.cm;
  return n.state.statusbar = e, n.state.vimPlugin.updateStatus(), { dom: e };
}
function Jj(t = {}) {
  return [
    qj,
    Uj,
    Ij,
    t.status ? ts.of(Kj) : Hj
  ];
}
function e_(t) {
  return t.cm || null;
}
class rb {
  constructor(e, n, r) {
    this.from = e, this.to = n, this.diagnostic = r;
  }
}
class vs {
  constructor(e, n, r) {
    this.diagnostics = e, this.panel = n, this.selected = r;
  }
  static init(e, n, r) {
    let i = e, s = r.facet(Ro).markerFilter;
    s && (i = s(i, r));
    let a = e.slice().sort((f, m) => f.from - m.from || f.to - m.to), o = new Mi(), l = [], c = 0;
    for (let f = 0; ; ) {
      let m = f == a.length ? null : a[f];
      if (!m && !l.length)
        break;
      let y, x;
      for (l.length ? (y = c, x = l.reduce((S, M) => Math.min(S, M.to), m && m.from > y ? m.from : 1e8)) : (y = m.from, x = m.to, l.push(m), f++); f < a.length; ) {
        let S = a[f];
        if (S.from == y && (S.to > S.from || S.to == y))
          l.push(S), f++, x = Math.min(S.to, x);
        else {
          x = Math.min(S.from, x);
          break;
        }
      }
      let C = p_(l);
      if (l.some((S) => S.from == S.to || S.from == S.to - 1 && r.doc.lineAt(S.from).to == S.from))
        o.add(y, y, Te.widget({
          widget: new l_(C),
          diagnostics: l.slice()
        }));
      else {
        let S = l.reduce((M, Z) => Z.markClass ? M + " " + Z.markClass : M, "");
        o.add(y, x, Te.mark({
          class: "cm-lintRange cm-lintRange-" + C + S,
          diagnostics: l.slice(),
          inclusiveEnd: l.some((M) => M.to > x)
        }));
      }
      c = x;
      for (let S = 0; S < l.length; S++)
        l[S].to <= c && l.splice(S--, 1);
    }
    let h = o.finish();
    return new vs(h, n, Da(h));
  }
}
function Da(t, e = null, n = 0) {
  let r = null;
  return t.between(n, 1e9, (i, s, { spec: a }) => {
    if (!(e && a.diagnostics.indexOf(e) < 0))
      if (!r)
        r = new rb(i, s, e || a.diagnostics[0]);
      else {
        if (a.diagnostics.indexOf(r.diagnostic) < 0)
          return !1;
        r = new rb(r.from, s, r.diagnostic);
      }
  }), r;
}
function t_(t, e) {
  let n = e.pos, r = e.end || n, i = t.state.facet(Ro).hideOn(t, n, r);
  if (i != null)
    return i;
  let s = t.startState.doc.lineAt(e.pos);
  return !!(t.effects.some((a) => a.is(KA)) || t.changes.touchesRange(s.from, Math.max(s.to, r)));
}
function n_(t, e) {
  return t.field(hr, !1) ? e : e.concat(Ie.appendConfig.of(f_));
}
const KA = /* @__PURE__ */ Ie.define(), xm = /* @__PURE__ */ Ie.define(), JA = /* @__PURE__ */ Ie.define(), hr = /* @__PURE__ */ Vt.define({
  create() {
    return new vs(Te.none, null, null);
  },
  update(t, e) {
    if (e.docChanged && t.diagnostics.size) {
      let n = t.diagnostics.map(e.changes), r = null, i = t.panel;
      if (t.selected) {
        let s = e.changes.mapPos(t.selected.from, 1);
        r = Da(n, t.selected.diagnostic, s) || Da(n, null, s);
      }
      !n.size && i && e.state.facet(Ro).autoPanel && (i = null), t = new vs(n, i, r);
    }
    for (let n of e.effects)
      if (n.is(KA)) {
        let r = e.state.facet(Ro).autoPanel ? n.value.length ? $o.open : null : t.panel;
        t = vs.init(n.value, r, e.state);
      } else n.is(xm) ? t = new vs(t.diagnostics, n.value ? $o.open : null, t.selected) : n.is(JA) && (t = new vs(t.diagnostics, t.panel, n.value));
    return t;
  },
  provide: (t) => [
    ts.from(t, (e) => e.panel),
    be.decorations.from(t, (e) => e.diagnostics)
  ]
}), r_ = /* @__PURE__ */ Te.mark({ class: "cm-lintRange cm-lintRange-active" });
function i_(t, e, n) {
  let { diagnostics: r } = t.state.field(hr), i, s = -1, a = -1;
  r.between(e - (n < 0 ? 1 : 0), e + (n > 0 ? 1 : 0), (l, c, { spec: h }) => {
    if (e >= l && e <= c && (l == c || (e > l || n > 0) && (e < c || n < 0)))
      return i = h.diagnostics, s = l, a = c, !1;
  });
  let o = t.state.facet(Ro).tooltipFilter;
  return i && o && (i = o(i, t.state)), i ? {
    pos: s,
    end: a,
    above: t.state.doc.lineAt(s).to < a,
    create() {
      return { dom: s_(t, i) };
    }
  } : null;
}
function s_(t, e) {
  return Mt("ul", { class: "cm-tooltip-lint" }, e.map((n) => tD(t, n, !1)));
}
const a_ = (t) => {
  let e = t.state.field(hr, !1);
  (!e || !e.panel) && t.dispatch({ effects: n_(t.state, [xm.of(!0)]) });
  let n = Eo(t, $o.open);
  return n && n.dom.querySelector(".cm-panel-lint ul").focus(), !0;
}, ib = (t) => {
  let e = t.state.field(hr, !1);
  return !e || !e.panel ? !1 : (t.dispatch({ effects: xm.of(!1) }), !0);
}, o_ = (t) => {
  let e = t.state.field(hr, !1);
  if (!e)
    return !1;
  let n = t.state.selection.main, r = e.diagnostics.iter(n.to + 1);
  return !r.value && (r = e.diagnostics.iter(0), !r.value || r.from == n.from && r.to == n.to) ? !1 : (t.dispatch({ selection: { anchor: r.from, head: r.to }, scrollIntoView: !0 }), !0);
}, Ro = /* @__PURE__ */ Ae.define({
  combine(t) {
    return Object.assign({ sources: t.map((e) => e.source).filter((e) => e != null) }, os(t.map((e) => e.config), {
      delay: 750,
      markerFilter: null,
      tooltipFilter: null,
      needsRefresh: null,
      hideOn: () => null
    }, {
      needsRefresh: (e, n) => e ? n ? (r) => e(r) || n(r) : e : n
    }));
  }
});
function eD(t) {
  let e = [];
  if (t)
    e: for (let { name: n } of t) {
      for (let r = 0; r < n.length; r++) {
        let i = n[r];
        if (/[a-zA-Z]/.test(i) && !e.some((s) => s.toLowerCase() == i.toLowerCase())) {
          e.push(i);
          continue e;
        }
      }
      e.push("");
    }
  return e;
}
function tD(t, e, n) {
  var r;
  let i = n ? eD(e.actions) : [];
  return Mt("li", { class: "cm-diagnostic cm-diagnostic-" + e.severity }, Mt("span", { class: "cm-diagnosticText" }, e.renderMessage ? e.renderMessage(t) : e.message), (r = e.actions) === null || r === void 0 ? void 0 : r.map((s, a) => {
    let o = !1, l = (m) => {
      if (m.preventDefault(), o)
        return;
      o = !0;
      let y = Da(t.state.field(hr).diagnostics, e);
      y && s.apply(t, y.from, y.to);
    }, { name: c } = s, h = i[a] ? c.indexOf(i[a]) : -1, f = h < 0 ? c : [
      c.slice(0, h),
      Mt("u", c.slice(h, h + 1)),
      c.slice(h + 1)
    ];
    return Mt("button", {
      type: "button",
      class: "cm-diagnosticAction",
      onclick: l,
      onmousedown: l,
      "aria-label": ` Action: ${c}${h < 0 ? "" : ` (access key "${i[a]})"`}.`
    }, f);
  }), e.source && Mt("div", { class: "cm-diagnosticSource" }, e.source));
}
class l_ extends Ri {
  constructor(e) {
    super(), this.sev = e;
  }
  eq(e) {
    return e.sev == this.sev;
  }
  toDOM() {
    return Mt("span", { class: "cm-lintPoint cm-lintPoint-" + this.sev });
  }
}
class sb {
  constructor(e, n) {
    this.diagnostic = n, this.id = "item_" + Math.floor(Math.random() * 4294967295).toString(16), this.dom = tD(e, n, !0), this.dom.id = this.id, this.dom.setAttribute("role", "option");
  }
}
class $o {
  constructor(e) {
    this.view = e, this.items = [];
    let n = (i) => {
      if (i.keyCode == 27)
        ib(this.view), this.view.focus();
      else if (i.keyCode == 38 || i.keyCode == 33)
        this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);
      else if (i.keyCode == 40 || i.keyCode == 34)
        this.moveSelection((this.selectedIndex + 1) % this.items.length);
      else if (i.keyCode == 36)
        this.moveSelection(0);
      else if (i.keyCode == 35)
        this.moveSelection(this.items.length - 1);
      else if (i.keyCode == 13)
        this.view.focus();
      else if (i.keyCode >= 65 && i.keyCode <= 90 && this.selectedIndex >= 0) {
        let { diagnostic: s } = this.items[this.selectedIndex], a = eD(s.actions);
        for (let o = 0; o < a.length; o++)
          if (a[o].toUpperCase().charCodeAt(0) == i.keyCode) {
            let l = Da(this.view.state.field(hr).diagnostics, s);
            l && s.actions[o].apply(e, l.from, l.to);
          }
      } else
        return;
      i.preventDefault();
    }, r = (i) => {
      for (let s = 0; s < this.items.length; s++)
        this.items[s].dom.contains(i.target) && this.moveSelection(s);
    };
    this.list = Mt("ul", {
      tabIndex: 0,
      role: "listbox",
      "aria-label": this.view.state.phrase("Diagnostics"),
      onkeydown: n,
      onclick: r
    }), this.dom = Mt("div", { class: "cm-panel-lint" }, this.list, Mt("button", {
      type: "button",
      name: "close",
      "aria-label": this.view.state.phrase("close"),
      onclick: () => ib(this.view)
    }, "×")), this.update();
  }
  get selectedIndex() {
    let e = this.view.state.field(hr).selected;
    if (!e)
      return -1;
    for (let n = 0; n < this.items.length; n++)
      if (this.items[n].diagnostic == e.diagnostic)
        return n;
    return -1;
  }
  update() {
    let { diagnostics: e, selected: n } = this.view.state.field(hr), r = 0, i = !1, s = null, a = /* @__PURE__ */ new Set();
    for (e.between(0, this.view.state.doc.length, (o, l, { spec: c }) => {
      for (let h of c.diagnostics) {
        if (a.has(h))
          continue;
        a.add(h);
        let f = -1, m;
        for (let y = r; y < this.items.length; y++)
          if (this.items[y].diagnostic == h) {
            f = y;
            break;
          }
        f < 0 ? (m = new sb(this.view, h), this.items.splice(r, 0, m), i = !0) : (m = this.items[f], f > r && (this.items.splice(r, f - r), i = !0)), n && m.diagnostic == n.diagnostic ? m.dom.hasAttribute("aria-selected") || (m.dom.setAttribute("aria-selected", "true"), s = m) : m.dom.hasAttribute("aria-selected") && m.dom.removeAttribute("aria-selected"), r++;
      }
    }); r < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0); )
      i = !0, this.items.pop();
    this.items.length == 0 && (this.items.push(new sb(this.view, {
      from: -1,
      to: -1,
      severity: "info",
      message: this.view.state.phrase("No diagnostics")
    })), i = !0), s ? (this.list.setAttribute("aria-activedescendant", s.id), this.view.requestMeasure({
      key: this,
      read: () => ({ sel: s.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),
      write: ({ sel: o, panel: l }) => {
        let c = l.height / this.list.offsetHeight;
        o.top < l.top ? this.list.scrollTop -= (l.top - o.top) / c : o.bottom > l.bottom && (this.list.scrollTop += (o.bottom - l.bottom) / c);
      }
    })) : this.selectedIndex < 0 && this.list.removeAttribute("aria-activedescendant"), i && this.sync();
  }
  sync() {
    let e = this.list.firstChild;
    function n() {
      let r = e;
      e = r.nextSibling, r.remove();
    }
    for (let r of this.items)
      if (r.dom.parentNode == this.list) {
        for (; e != r.dom; )
          n();
        e = r.dom.nextSibling;
      } else
        this.list.insertBefore(r.dom, e);
    for (; e; )
      n();
  }
  moveSelection(e) {
    if (this.selectedIndex < 0)
      return;
    let n = this.view.state.field(hr), r = Da(n.diagnostics, this.items[e].diagnostic);
    r && this.view.dispatch({
      selection: { anchor: r.from, head: r.to },
      scrollIntoView: !0,
      effects: JA.of(r)
    });
  }
  static open(e) {
    return new $o(e);
  }
}
function u_(t, e = 'viewBox="0 0 40 40"') {
  return `url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" ${e}>${encodeURIComponent(t)}</svg>')`;
}
function zl(t) {
  return u_(`<path d="m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0" stroke="${t}" fill="none" stroke-width=".7"/>`, 'width="6" height="3"');
}
const c_ = /* @__PURE__ */ be.baseTheme({
  ".cm-diagnostic": {
    padding: "3px 6px 3px 8px",
    marginLeft: "-1px",
    display: "block",
    whiteSpace: "pre-wrap"
  },
  ".cm-diagnostic-error": { borderLeft: "5px solid #d11" },
  ".cm-diagnostic-warning": { borderLeft: "5px solid orange" },
  ".cm-diagnostic-info": { borderLeft: "5px solid #999" },
  ".cm-diagnostic-hint": { borderLeft: "5px solid #66d" },
  ".cm-diagnosticAction": {
    font: "inherit",
    border: "none",
    padding: "2px 4px",
    backgroundColor: "#444",
    color: "white",
    borderRadius: "3px",
    marginLeft: "8px",
    cursor: "pointer"
  },
  ".cm-diagnosticSource": {
    fontSize: "70%",
    opacity: 0.7
  },
  ".cm-lintRange": {
    backgroundPosition: "left bottom",
    backgroundRepeat: "repeat-x",
    paddingBottom: "0.7px"
  },
  ".cm-lintRange-error": { backgroundImage: /* @__PURE__ */ zl("#d11") },
  ".cm-lintRange-warning": { backgroundImage: /* @__PURE__ */ zl("orange") },
  ".cm-lintRange-info": { backgroundImage: /* @__PURE__ */ zl("#999") },
  ".cm-lintRange-hint": { backgroundImage: /* @__PURE__ */ zl("#66d") },
  ".cm-lintRange-active": { backgroundColor: "#ffdd9980" },
  ".cm-tooltip-lint": {
    padding: 0,
    margin: 0
  },
  ".cm-lintPoint": {
    position: "relative",
    "&:after": {
      content: '""',
      position: "absolute",
      bottom: 0,
      left: "-2px",
      borderLeft: "3px solid transparent",
      borderRight: "3px solid transparent",
      borderBottom: "4px solid #d11"
    }
  },
  ".cm-lintPoint-warning": {
    "&:after": { borderBottomColor: "orange" }
  },
  ".cm-lintPoint-info": {
    "&:after": { borderBottomColor: "#999" }
  },
  ".cm-lintPoint-hint": {
    "&:after": { borderBottomColor: "#66d" }
  },
  ".cm-panel.cm-panel-lint": {
    position: "relative",
    "& ul": {
      maxHeight: "100px",
      overflowY: "auto",
      "& [aria-selected]": {
        backgroundColor: "#ddd",
        "& u": { textDecoration: "underline" }
      },
      "&:focus [aria-selected]": {
        background_fallback: "#bdf",
        backgroundColor: "Highlight",
        color_fallback: "white",
        color: "HighlightText"
      },
      "& u": { textDecoration: "none" },
      padding: 0,
      margin: 0
    },
    "& [name=close]": {
      position: "absolute",
      top: "0",
      right: "2px",
      background: "inherit",
      border: "none",
      font: "inherit",
      padding: 0,
      margin: 0
    }
  }
});
function h_(t) {
  return t == "error" ? 4 : t == "warning" ? 3 : t == "info" ? 2 : 1;
}
function p_(t) {
  let e = "hint", n = 1;
  for (let r of t) {
    let i = h_(r.severity);
    i > n && (n = i, e = r.severity);
  }
  return e;
}
const f_ = [
  hr,
  /* @__PURE__ */ be.decorations.compute([hr], (t) => {
    let { selected: e, panel: n } = t.field(hr);
    return !e || !n || e.from == e.to ? Te.none : Te.set([
      r_.range(e.from, e.to)
    ]);
  }),
  /* @__PURE__ */ IC(i_, { hideOn: t_ }),
  c_
], nD = (t) => (e) => {
  const n = t === "down";
  let r = e.state.selection;
  for (const i of r.ranges)
    r = r.addRange(e.moveVertically(i, n));
  return e.dispatch({ selection: r }), !0;
}, d_ = /* @__PURE__ */ nD("up"), m_ = /* @__PURE__ */ nD("down"), g_ = (t) => {
  let e = null;
  for (const n of t.state.selection.ranges)
    if (!n.empty)
      for (let r = n.from; r <= n.to; ) {
        const i = t.state.doc.lineAt(r), s = Math.min(i.to, n.to);
        e ? e = e.addRange(ne.range(s, s)) : e = ne.single(s), r = i.to + 1;
      }
  return e ? (t.dispatch({ selection: e }), !0) : !1;
}, b_ = [
  { key: "Ctrl-Space", run: gf },
  { key: "Escape", run: SS },
  { key: "ArrowDown", run: /* @__PURE__ */ Hi(!0) },
  { key: "ArrowUp", run: /* @__PURE__ */ Hi(!1) },
  { key: "PageDown", run: /* @__PURE__ */ Hi(!0, "page") },
  { key: "PageUp", run: /* @__PURE__ */ Hi(!1, "page") },
  { key: "Enter", run: mf },
  { key: "Tab", run: mf },
  { key: "Mod-f", run: NA, scope: "editor search-panel" },
  { key: "Escape", run: VA, scope: "editor search-panel" },
  { key: "Alt-Enter", run: $A, scope: "editor search-panel" },
  { key: "Mod-Alt-Enter", run: ZA, scope: "editor search-panel" },
  { key: "Ctrl-g", run: zT },
  { key: "Mod-d", run: JT, preventDefault: !0 },
  { key: "Shift-Mod-l", run: oj },
  // Enter and shift enter handled within the search panel plugin
  { key: "Enter", run: jo, shift: jo },
  {
    key: "ArrowLeft",
    run: To,
    shift: Xu,
    preventDefault: !0
  },
  {
    key: "Mod-ArrowLeft",
    mac: "Alt-ArrowLeft",
    run: IS,
    shift: YS
  },
  {
    key: "ArrowRight",
    run: Zu,
    shift: Wu,
    preventDefault: !0
  },
  {
    key: "Mod-ArrowRight",
    mac: "Alt-ArrowRight",
    run: NS,
    shift: KS
  },
  {
    key: "ArrowUp",
    run: Lu,
    shift: qu,
    preventDefault: !0
  },
  {
    key: "ArrowDown",
    run: Iu,
    shift: Uu,
    preventDefault: !0
  },
  {
    key: "Home",
    run: Vu,
    shift: Of
  },
  {
    mac: "Cmd-ArrowLeft",
    run: Vu,
    shift: Of
  },
  { key: "Mod-Home", run: Hu, shift: Ku },
  { mac: "Cmd-ArrowUp", run: Hu, shift: Ku },
  { key: "PageUp", run: bo, shift: Gu },
  { mac: "Ctrl-ArrowUp", run: bo, shift: Gu },
  { key: "PageDown", run: la, shift: zu },
  { mac: "Ctrl-ArrowDown", run: la, shift: zu },
  {
    key: "End",
    run: Nu,
    shift: yf
  },
  {
    mac: "Cmd-ArrowRight",
    run: Nu,
    shift: yf
  },
  {
    key: "Mod-Alt-ArrowUp",
    linux: "Shift-Alt-ArrowUp",
    run: d_,
    preventDefault: !0
  },
  {
    key: "Mod-Alt-ArrowDown",
    linux: "Shift-Alt-ArrowDown",
    run: m_,
    preventDefault: !0
  },
  {
    key: "Shift-Alt-i",
    run: g_
  },
  { key: "Mod-End", run: Yu, shift: Ju },
  { mac: "Cmd-ArrowDown", run: Yu, shift: Ju },
  { key: "Mod-a", run: rA },
  { key: "Backspace", run: V7 },
  { key: "Backspace", run: ua, shift: ua },
  { key: "Delete", run: ec },
  { key: "Mod-Backspace", mac: "Alt-Backspace", run: tc },
  { key: "Mod-Delete", mac: "Alt-Delete", run: oA },
  { mac: "Mod-Backspace", run: PQ },
  { mac: "Mod-Delete", run: vf },
  {
    mac: "Ctrl-b",
    run: To,
    shift: Xu,
    preventDefault: !0
  },
  { mac: "Ctrl-f", run: Zu, shift: Wu },
  { mac: "Ctrl-p", run: Lu, shift: qu },
  { mac: "Ctrl-n", run: Iu, shift: Uu },
  { mac: "Ctrl-a", run: qS, shift: tA },
  { mac: "Ctrl-e", run: US, shift: nA },
  { mac: "Ctrl-d", run: ec },
  { mac: "Ctrl-h", run: ua },
  { mac: "Ctrl-k", run: vf },
  { mac: "Ctrl-Alt-h", run: tc },
  { mac: "Ctrl-o", run: hm },
  { mac: "Ctrl-t", run: lA },
  { mac: "Ctrl-v", run: la },
  { mac: "Alt-v", run: bo },
  { key: "Shift-Mod-k", run: mA },
  { key: "Alt-ArrowDown", run: hA },
  { key: "Alt-ArrowUp", run: cA },
  { win: "Shift-Alt-ArrowDown", mac: "Shift-Alt-ArrowDown", run: dA },
  { win: "Shift-Alt-ArrowUp", mac: "Shift-Alt-ArrowUp", run: fA },
  { key: "Mod-l", run: iA, preventDefault: !0 },
  { key: "Shift-Mod-\\", run: GS },
  { key: "Tab", run: nc, shift: rc, preventDefault: !0 },
  { key: "Mod-[", run: rc },
  { key: "Mod-]", run: nc },
  { key: "Ctrl-Shift-[", mac: "Cmd-Alt-[", run: pS },
  { key: "Ctrl-Shift-]", mac: "Cmd-Alt-]", run: TM },
  { key: "Mod-k Mod-0", run: jM },
  { key: "Mod-k Mod-j", run: _M },
  { key: "Mod-k Mod-c", run: eQ },
  { key: "Mod-k Mod-u", run: tQ },
  { key: "Mod-/", run: _c },
  { key: "Shift-Alt-a", run: om },
  { key: "Mod-z", run: $c, preventDefault: !0 },
  { key: "Mod-y", run: Aa, preventDefault: !0 },
  { key: "Mod-Shift-z", run: Aa, preventDefault: !0 },
  { key: "Mod-u", run: RS, preventDefault: !0 },
  { key: "Mod-Shift-m", run: a_ },
  { key: "F8", run: o_ }
  // Shift should go back, but previousDiagnostic is not implemented
], y_ = fn.fromClass(
  class {
    constructor() {
    }
  },
  {
    provide: () => Tr.highest(js.of([...b_]))
  }
), O_ = (t) => [y_].concat(t ?? []), v_ = {
  vim: Jj,
  emacs: wj,
  vscode: O_
};
function x_(t) {
  const e = v_[t];
  return [js.of(_Q), js.of(dQ), e ? e() : []];
}
const at = ({ theme: t, settings: e, styles: n }) => {
  const r = be.theme(
    {
      "&": {
        color: e.foreground,
        backgroundColor: e.background
      },
      ".cm-gutters": {
        backgroundColor: e.gutterBackground,
        color: e.gutterForeground
        //borderRightColor: settings.gutterBorder
      },
      ".cm-content": {
        caretColor: e.caret
      },
      ".cm-cursor, .cm-dropCursor": {
        borderLeftColor: e.caret
      },
      ".cm-activeLineGutter": {
        // color: settings.gutterActiveForeground
        backgroundColor: e.lineHighlight
      },
      ".cm-activeLine": {
        backgroundColor: e.lineHighlight
      },
      "&.cm-focused .cm-selectionBackground, & .cm-line::selection, & .cm-selectionLayer .cm-selectionBackground, .cm-content ::selection": {
        background: e.selection + " !important"
      },
      "& .cm-selectionMatch": {
        backgroundColor: e.selectionMatch
      }
    },
    { dark: t === "dark" }
  ), i = Yo.define(n);
  return [r, gS(i)];
}, rD = {
  background: "#222",
  lineBackground: "#22222299",
  foreground: "#fff",
  caret: "#ffcc00",
  selection: "rgba(128, 203, 196, 0.5)",
  selectionMatch: "#036dd626",
  lineHighlight: "#00000050",
  gutterBackground: "transparent",
  gutterForeground: "#8a919966"
}, k_ = at({
  theme: "dark",
  settings: rD,
  styles: [
    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#89ddff" },
    { tag: u.labelName, color: "#89ddff" },
    { tag: u.keyword, color: "#c792ea" },
    { tag: u.operator, color: "#89ddff" },
    { tag: u.special(u.variableName), color: "#eeffff" },
    // { tag: t.typeName, color: '#f07178' }, // original
    { tag: u.typeName, color: "#c3e88d" },
    { tag: u.atom, color: "#f78c6c" },
    // { tag: t.number, color: '#ff5370' }, // original
    { tag: u.number, color: "#c3e88d" },
    { tag: u.definition(u.variableName), color: "#82aaff" },
    { tag: u.string, color: "#c3e88d" },
    //     { tag: t.special(t.string), color: '#f07178' }, // original
    { tag: u.special(u.string), color: "#c3e88d" },
    { tag: u.comment, color: "#7d8799" },
    // { tag: t.variableName, color: '#f07178' }, // original
    { tag: u.variableName, color: "#c792ea" },
    // { tag: t.tagName, color: '#ff5370' }, // original
    { tag: u.tagName, color: "#c3e88d" },
    { tag: u.bracket, color: "#525154" },
    // { tag: t.bracket, color: '#a2a1a4' }, // original
    { tag: u.meta, color: "#ffcb6b" },
    { tag: u.attributeName, color: "#c792ea" },
    { tag: u.propertyName, color: "#c792ea" },
    { tag: u.className, color: "#decb6b" },
    { tag: u.invalid, color: "#ffffff" },
    { tag: [u.unit, u.punctuation], color: "#82aaff" }
  ]
}), iD = {
  background: "#051DB5",
  lineBackground: "#051DB550",
  foreground: "white",
  // whats that?
  caret: "white",
  selection: "rgba(128, 203, 196, 0.5)",
  selectionMatch: "#036dd626",
  // lineHighlight: '#8a91991a', // original
  lineHighlight: "#00000050",
  gutterBackground: "transparent",
  // gutterForeground: '#8a919966',
  gutterForeground: "#8a919966"
}, w_ = at({
  theme: "dark",
  settings: iD,
  styles: [
    { tag: u.labelName, color: "inherit" },
    { tag: u.keyword, color: "inherit" },
    { tag: u.operator, color: "inherit" },
    { tag: u.special(u.variableName), color: "inherit" },
    { tag: u.typeName, color: "inherit" },
    { tag: u.atom, color: "inherit" },
    { tag: u.number, color: "inherit" },
    { tag: u.definition(u.variableName), color: "inherit" },
    { tag: u.string, color: "inherit" },
    { tag: u.special(u.string), color: "inherit" },
    { tag: u.comment, color: "inherit" },
    { tag: u.variableName, color: "inherit" },
    { tag: u.tagName, color: "inherit" },
    { tag: u.bracket, color: "inherit" },
    { tag: u.meta, color: "inherit" },
    { tag: u.attributeName, color: "inherit" },
    { tag: u.propertyName, color: "inherit" },
    { tag: u.className, color: "inherit" },
    { tag: u.invalid, color: "inherit" },
    { tag: [u.unit, u.punctuation], color: "inherit" }
  ]
}), sD = {
  background: "black",
  foreground: "white",
  // whats that?
  caret: "white",
  selection: "#ffffff20",
  selectionMatch: "#036dd626",
  lineHighlight: "#ffffff10",
  lineBackground: "#00000050",
  gutterBackground: "transparent",
  gutterForeground: "#8a919966"
}, C_ = at({
  theme: "dark",
  settings: sD,
  styles: [
    { tag: u.labelName, color: "inherit" },
    { tag: u.keyword, color: "inherit" },
    { tag: u.operator, color: "inherit" },
    { tag: u.special(u.variableName), color: "inherit" },
    { tag: u.typeName, color: "inherit" },
    { tag: u.atom, color: "inherit" },
    { tag: u.number, color: "inherit" },
    { tag: u.definition(u.variableName), color: "inherit" },
    { tag: u.string, color: "inherit" },
    { tag: u.special(u.string), color: "inherit" },
    { tag: u.comment, color: "inherit" },
    { tag: u.variableName, color: "inherit" },
    { tag: u.tagName, color: "inherit" },
    { tag: u.bracket, color: "inherit" },
    { tag: u.meta, color: "inherit" },
    { tag: u.attributeName, color: "inherit" },
    { tag: u.propertyName, color: "inherit" },
    { tag: u.className, color: "inherit" },
    { tag: u.invalid, color: "inherit" },
    { tag: [u.unit, u.punctuation], color: "inherit" }
  ]
}), aD = {
  background: "white",
  foreground: "black",
  // whats that?
  caret: "black",
  selection: "rgba(128, 203, 196, 0.5)",
  selectionMatch: "#ffffff26",
  lineHighlight: "#cccccc50",
  lineBackground: "#ffffff50",
  gutterBackground: "transparent",
  gutterForeground: "black",
  light: !0
}, S_ = at({
  theme: "light",
  settings: aD,
  styles: [
    { tag: u.labelName, color: "inherit" },
    { tag: u.keyword, color: "inherit" },
    { tag: u.operator, color: "inherit" },
    { tag: u.special(u.variableName), color: "inherit" },
    { tag: u.typeName, color: "inherit" },
    { tag: u.atom, color: "inherit" },
    { tag: u.number, color: "inherit" },
    { tag: u.definition(u.variableName), color: "inherit" },
    { tag: u.string, color: "inherit" },
    { tag: u.special(u.string), color: "inherit" },
    { tag: u.comment, color: "inherit" },
    { tag: u.variableName, color: "inherit" },
    { tag: u.tagName, color: "inherit" },
    { tag: u.bracket, color: "inherit" },
    { tag: u.meta, color: "inherit" },
    { tag: u.attributeName, color: "inherit" },
    { tag: u.propertyName, color: "inherit" },
    { tag: u.className, color: "inherit" },
    { tag: u.invalid, color: "inherit" }
  ]
});
let or = "#6edee4", oD = "white", lD = "red", uD = "#f8fc55";
const cD = {
  background: "#000000",
  foreground: or,
  // whats that?
  caret: lD,
  selection: uD,
  selectionMatch: or,
  lineHighlight: "#6edee440",
  // panel bg
  lineBackground: "#00000040",
  gutterBackground: "transparent",
  gutterForeground: "#8a919966"
  // customStyle: '.cm-line { line-height: 1 }',
};
let op = uD, Hl = oD;
const A_ = at({
  theme: "dark",
  settings: cD,
  styles: [
    { tag: u.labelName, color: oD },
    { tag: u.keyword, color: or },
    { tag: u.operator, color: Hl },
    { tag: u.special(u.variableName), color: or },
    { tag: u.typeName, color: or },
    { tag: u.atom, color: or },
    { tag: u.number, color: Hl },
    { tag: u.definition(u.variableName), color: or },
    { tag: u.string, color: Hl },
    { tag: u.special(u.string), color: Hl },
    { tag: u.comment, color: op },
    { tag: u.variableName, color: or },
    { tag: u.tagName, color: or },
    { tag: u.bracket, color: op },
    { tag: u.meta, color: or },
    { tag: u.attributeName, color: or },
    { tag: u.propertyName, color: or },
    // methods
    { tag: u.className, color: or },
    { tag: u.invalid, color: lD },
    { tag: [u.unit, u.punctuation], color: op }
  ]
}), D_ = {
  // https://www.deviantart.com/advancedfan2020/art/Game-Boy-Palette-Set-Color-HEX-Part-09-920495662
  "Central Florida A": ["#FFF630", "#B3AC22", "#666213", "#191905"],
  "Central Florida B": ["#38CEBA", "#279082", "#16524A", "#061513"],
  "Central Florida C": ["#FF8836", "#B35F26", "#663616", "#190E05"],
  "Central Florida D": ["#E07070", "#9D4E4E", "#5A2D2D", "#160B0B"],
  "Central Florida E": ["#7AA4CB", "#55738E", "#314251", "#0C1014"],
  "Feminine Energy A": ["#DC5686", "#9A415E", "#582536", "#16090D"],
  "Feminine Energy B": ["#D0463C", "#92312A", "#531c18", "#150706"],
  "Feminine Energy C": ["#D86918", "#974A11", "#562A0A", "#160A02"],
  "Feminine Energy D": ["#EFC54F", "#A78A36", "#604F20", "#181408"],
  "Feminine Energy E": ["#866399", "#5e456b", "#36283d", "#0d0a0f"],
  "Sour Watermelon A": ["#993366", "#6B2447", "#3D1429", "#0F050A"],
  "Sour Watermelon B": ["#996666", "#6B4747", "#3D2929", "#0F0A0A"],
  "Sour Watermelon C": ["#999966", "#686B47", "#3d3d29", "#0f0f0A"],
  "Sour Watermelon D": ["#99cc66", "#6b8f47", "#3d5229", "#0f140a"],
  "Sour Watermelon E": ["#99ff66", "#6bb347", "#3d6629", "#0f190a"],
  //https://www.deviantart.com/advancedfan2020/art/Game-Boy-Palette-Set-Color-HEX-Part-02-920073260
  "Peri Peaceful A": ["#909BE9", "#656DA3", "#3A3E5D", "#0e0f17"],
  "Peri Peaceful B": ["#68628d", "#494563", "#2a2738", "#0a0a0e"],
  // pretty dim
  "Peri Peaceful E": ["#b5a0a9", "#7f7076", "#484044", "#121011"],
  "Hichem Palette B": ["#4fa3a5", "#377273", "#204142", "#081010"],
  "Hichem Palette C": ["#Fe6f9b", "#b24e6d", "#662c3e", "#190b0f"],
  "Hichem Palette D": ["#ffbb5a", "#b3833f", "#664b24", "#191309"],
  "JSR2 A": ["#E0EFC0", "#9da786", "#5a604d", "#161813"]
}, An = D_["Sour Watermelon B"], hD = {
  background: An[3],
  foreground: An[1],
  caret: An[0],
  selection: An[0],
  selectionMatch: An[1],
  lineHighlight: An[3],
  lineBackground: An[3] + "90",
  //lineBackground: 'transparent',
  gutterBackground: "transparent",
  gutterForeground: An[0],
  light: !1
  // customStyle: '.cm-line { line-height: 1 }',
}, P_ = at({
  theme: "dark",
  settings: hD,
  styles: [
    { tag: u.comment, color: An[2] },
    { tag: u.string, color: An[1] },
    { tag: [u.atom, u.number], color: An[1] },
    { tag: [u.meta, u.labelName, u.variableName], color: An[0] },
    {
      tag: [u.keyword, u.tagName, u.arithmeticOperator],
      color: An[1]
    },
    { tag: [u.atom, u.bool, u.special(u.variableName)], color: An[0] },
    { tag: [u.function(u.variableName), u.propertyName], color: An[0] },
    { tag: u.atom, color: An[1] }
  ]
}), Qf = "#5c019a", E_ = "#fbeffc", pD = "#272C35", F_ = "#fee1ff", B_ = "#465063", M_ = "#9acd3f", Q_ = "#97a1b7", T_ = "#f6a6fd", Tf = {
  background: "white",
  lineBackground: "transparent",
  foreground: Qf,
  caret: "#797977",
  selection: E_,
  selectionMatch: "#2B323D",
  gutterBackground: pD,
  gutterForeground: B_,
  gutterBorder: "transparent",
  lineHighlight: F_
}, j_ = at({
  theme: "light",
  settings: Tf,
  styles: [
    {
      tag: [u.function(u.variableName), u.function(u.propertyName), u.url, u.processingInstruction],
      color: Qf
    },
    { tag: [u.tagName, u.heading], color: Tf.foreground },
    { tag: u.comment, color: Q_ },
    { tag: [u.variableName, u.propertyName, u.labelName], color: T_ },
    { tag: [u.attributeName, u.number], color: "#d19a66" },
    { tag: u.className, color: pD },
    { tag: u.keyword, color: Qf },
    { tag: [u.string, u.regexp, u.special(u.propertyName)], color: M_ }
  ]
}), Vr = ["#1e1e1e", "#fbde2d", "#ff1493", "#4c83ff", "#ededed", "#cccccc", "#ffffff30", "#dc2f8c"], fD = {
  background: "#000000",
  lineBackground: "transparent",
  foreground: Vr[4],
  selection: Vr[6],
  gutterBackground: Vr[0],
  gutterForeground: Vr[5],
  gutterBorder: "transparent",
  lineHighlight: Vr[0]
}, __ = at({
  theme: "dark",
  settings: fD,
  styles: [
    {
      tag: [u.function(u.variableName), u.function(u.propertyName), u.url, u.processingInstruction],
      color: Vr[4]
    },
    { tag: [u.atom, u.bool, u.special(u.variableName)], color: Vr[3] },
    { tag: u.comment, color: "#54636D" },
    { tag: [u.variableName, u.propertyName, u.labelName], color: Vr[4] },
    { tag: [u.attributeName, u.number], color: Vr[3] },
    { tag: u.keyword, color: Vr[1] },
    { tag: [u.string, u.regexp, u.special(u.propertyName)], color: Vr[2] }
  ]
}), Nn = ["#000000", "#ff5356", "#bd312a", "#54636D", "#171717"], dD = {
  background: Nn[0],
  lineBackground: "transparent",
  foreground: Nn[2],
  selection: Nn[4],
  selectionMatch: Nn[0],
  gutterBackground: Nn[0],
  gutterForeground: Nn[3],
  gutterBorder: "transparent",
  lineHighlight: Nn[0]
}, R_ = at({
  theme: "dark",
  settings: dD,
  styles: [
    {
      tag: [u.function(u.variableName), u.function(u.propertyName), u.url, u.processingInstruction],
      color: Nn[2]
    },
    { tag: [u.atom, u.bool, u.special(u.variableName)], color: Nn[1] },
    { tag: u.comment, color: Nn[3] },
    { tag: [u.variableName, u.propertyName, u.labelName], color: Nn[2] },
    { tag: [u.attributeName, u.number], color: Nn[1] },
    { tag: u.keyword, color: Nn[2] },
    { tag: [u.string, u.regexp, u.special(u.propertyName)], color: Nn[1] }
  ]
}), Vn = ["#000000", "#8ed675", "#56bd2a", "#54636D", "#171717"], mD = {
  background: Vn[0],
  lineBackground: "transparent",
  foreground: Vn[2],
  selection: Vn[4],
  selectionMatch: Vn[0],
  gutterBackground: Vn[0],
  gutterForeground: Vn[3],
  gutterBorder: "transparent",
  lineHighlight: Vn[0]
}, $_ = at({
  theme: "dark",
  settings: mD,
  styles: [
    {
      tag: [u.function(u.variableName), u.function(u.propertyName), u.url, u.processingInstruction],
      color: Vn[2]
    },
    { tag: [u.atom, u.bool, u.special(u.variableName)], color: Vn[1] },
    { tag: u.comment, color: Vn[3] },
    { tag: [u.variableName, u.propertyName, u.labelName], color: Vn[2] },
    { tag: [u.attributeName, u.number], color: Vn[1] },
    { tag: u.keyword, color: Vn[2] },
    { tag: [u.string, u.regexp, u.special(u.propertyName)], color: Vn[1] }
  ]
}), Z_ = {
  background: "#282b2e",
  lineBackground: "#282b2e99",
  foreground: "#a9b7c6",
  caret: "#00FF00",
  selection: "#343739",
  selectionMatch: "#343739",
  lineHighlight: "#343739"
}, L_ = at({
  theme: "dark",
  settings: {
    background: "#282b2e",
    foreground: "#a9b7c6",
    caret: "#00FF00",
    selection: "#4e5254",
    selectionMatch: "#4e5254",
    gutterForeground: "#cccccc50",
    lineHighlight: "#7f85891f"
  },
  styles: [
    { tag: u.labelName, color: "inherit" },
    { tag: [u.keyword, u.deleted, u.className], color: "#a9b7c6" },
    { tag: [u.number, u.literal], color: "#6897bb" },
    //{ tag: [t.link, t.variableName], color: '#629755' },
    { tag: [u.link, u.variableName], color: "#a9b7c6" },
    { tag: [u.comment, u.quote], color: "grey" },
    { tag: [u.meta, u.documentMeta], color: "#bbb529" },
    //{ tag: [t.string, t.propertyName, t.attributeValue], color: '#6a8759' },
    { tag: [u.propertyName, u.attributeValue], color: "#a9b7c6" },
    { tag: [u.string], color: "#6a8759" },
    { tag: [u.heading, u.typeName], color: "#ffc66d" },
    { tag: [u.attributeName], color: "#a9b7c6" },
    { tag: [u.emphasis], fontStyle: "italic" }
  ]
}), I_ = {
  background: "#272C35",
  lineBackground: "#272C3599",
  foreground: "hsl(220, 14%, 71%)",
  caret: "#797977",
  selection: "#ffffff30",
  selectionMatch: "#2B323D",
  gutterBackground: "#272C35",
  gutterForeground: "#465063",
  gutterBorder: "transparent",
  lineHighlight: "#2B323D"
}, N_ = at({
  theme: "dark",
  settings: {
    background: "#272C35",
    foreground: "#9d9b97",
    caret: "#797977",
    selection: "#3d4c64",
    selectionMatch: "#3d4c64",
    gutterBackground: "#272C35",
    gutterForeground: "#465063",
    gutterBorder: "transparent",
    lineHighlight: "#2e3f5940"
  },
  styles: [
    {
      tag: [u.function(u.variableName), u.function(u.propertyName), u.url, u.processingInstruction],
      color: "hsl(207, 82%, 66%)"
    },
    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "hsl( 29, 54%, 61%)" },
    { tag: [u.tagName, u.heading], color: "#e06c75" },
    { tag: u.comment, color: "#54636D" },
    { tag: [u.variableName, u.propertyName, u.labelName], color: "hsl(220, 14%, 71%)" },
    { tag: [u.attributeName, u.number], color: "hsl( 29, 54%, 61%)" },
    { tag: u.className, color: "hsl( 39, 67%, 69%)" },
    { tag: u.keyword, color: "hsl(286, 60%, 67%)" },
    { tag: [u.string, u.regexp, u.special(u.propertyName)], color: "#98c379" }
  ]
}), V_ = {
  background: "#21202e",
  lineBackground: "#21202e99",
  foreground: "#edecee",
  caret: "#a277ff",
  selection: "#3d375e7f",
  selectionMatch: "#3d375e7f",
  gutterBackground: "#21202e",
  gutterForeground: "#edecee",
  gutterBorder: "transparent",
  lineHighlight: "#a394f033"
}, X_ = at({
  theme: "dark",
  settings: {
    background: "#21202e",
    foreground: "#edecee",
    caret: "#a277ff",
    selection: "#5a51898f",
    selectionMatch: "#5a51898f",
    gutterBackground: "#21202e",
    gutterForeground: "#edecee",
    gutterBorder: "transparent",
    lineHighlight: "#a394f033"
  },
  styles: [
    { tag: u.keyword, color: "#a277ff" },
    { tag: [u.name, u.deleted, u.character, u.macroName], color: "#edecee" },
    { tag: [u.propertyName], color: "#ffca85" },
    { tag: [u.processingInstruction, u.string, u.inserted, u.special(u.string)], color: "#61ffca" },
    { tag: [u.function(u.variableName), u.labelName], color: "#ffca85" },
    { tag: [u.color, u.constant(u.name), u.standard(u.name)], color: "#61ffca" },
    { tag: [u.definition(u.name), u.separator], color: "#edecee" },
    { tag: [u.className], color: "#82e2ff" },
    { tag: [u.number, u.changed, u.annotation, u.modifier, u.self, u.namespace], color: "#61ffca" },
    { tag: [u.typeName], color: "#82e2ff" },
    { tag: [u.operator, u.operatorKeyword], color: "#a277ff" },
    { tag: [u.url, u.escape, u.regexp, u.link], color: "#61ffca" },
    { tag: [u.meta, u.comment], color: "#6d6d6d" },
    { tag: u.strong, fontWeight: "bold" },
    { tag: u.emphasis, fontStyle: "italic" },
    { tag: u.link, textDecoration: "underline" },
    { tag: u.heading, fontWeight: "bold", color: "#a277ff" },
    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#edecee" },
    { tag: u.invalid, color: "#ff6767" },
    { tag: u.strikethrough, textDecoration: "line-through" }
  ]
}), W_ = {
  background: "#242424",
  lineBackground: "#24242499",
  foreground: "#f8f8f2",
  caret: "#FFFFFF",
  selection: "rgba(255, 255, 255, 0.1)",
  selectionMatch: "rgba(255, 255, 255, 0.2)",
  gutterBackground: "rgba(255, 255, 255, 0.1)",
  gutterForeground: "#999",
  gutterBorder: "transparent",
  lineHighlight: "rgba(255, 255, 255, 0.1)"
}, q_ = at({
  theme: "dark",
  settings: {
    background: "#242424",
    foreground: "#f8f8f2",
    caret: "#FFFFFF",
    selection: "rgba(255, 255, 255, 0.1)",
    selectionMatch: "rgba(255, 255, 255, 0.2)",
    gutterBackground: "transparent",
    gutterForeground: "#999",
    gutterBorder: "transparent",
    lineHighlight: "rgba(255, 255, 255, 0.1)"
  },
  styles: [
    { tag: u.labelName, color: "#CCCCCC" },
    { tag: [u.atom, u.number], color: "#7A9EC2" },
    { tag: [u.comment], color: "#707070" },
    { tag: [u.string], color: "#6A8759" },
    { tag: [u.variableName, u.operator], color: "#CCCCCC" },
    { tag: [u.function(u.variableName), u.propertyName], color: "#FFC66D" },
    { tag: [u.meta, u.className], color: "#FFC66D" },
    { tag: [u.propertyName], color: "#FFC66D" },
    { tag: [u.keyword], color: "#CC7832" },
    { tag: [u.tagName], color: "#ff79c6" },
    { tag: [u.typeName], color: "#ffb86c" }
  ]
}), U_ = {
  background: "#282a36",
  lineBackground: "#282a3699",
  foreground: "#f8f8f2",
  caret: "#f8f8f0",
  selection: "rgba(255, 255, 255, 0.1)",
  selectionMatch: "rgba(255, 255, 255, 0.2)",
  gutterBackground: "#282a36",
  gutterForeground: "#6272a4",
  gutterBorder: "transparent",
  lineHighlight: "rgba(255, 255, 255, 0.1)"
}, G_ = "#BD93F9", z_ = at({
  theme: "dark",
  settings: {
    background: "#282a36",
    foreground: "#f8f8f2",
    caret: "#f8f8f0",
    selection: "rgba(255, 255, 255, 0.1)",
    selectionMatch: "rgba(255, 255, 255, 0.2)",
    gutterBackground: "#282a36",
    gutterForeground: "#6272a4",
    gutterBorder: "transparent",
    lineHighlight: "rgba(255, 255, 255, 0.1)"
  },
  styles: [
    { tag: u.comment, color: "#6272a4" },
    { tag: u.string, color: "#f1fa8c" },
    { tag: [u.atom, u.number], color: G_ },
    { tag: [u.meta, u.labelName, u.variableName], color: "#f8f8f2" },
    {
      tag: [u.keyword, u.tagName, u.arithmeticOperator],
      color: "#ff79c6"
    },
    { tag: [u.function(u.variableName), u.propertyName], color: "#50fa7b" },
    { tag: u.atom, color: "#bd93f9" }
  ]
}), H_ = {
  background: "#2a2734",
  lineBackground: "#2a273499",
  foreground: "#eeebff",
  caret: "#ffad5c",
  selection: "rgba(255, 255, 255, 0.1)",
  gutterBackground: "#2a2734",
  gutterForeground: "#545167",
  lineHighlight: "#36334280"
}, Y_ = at({
  theme: "dark",
  settings: {
    background: "#2a2734",
    foreground: "#6c6783",
    caret: "#ffad5c",
    selection: "#9a86fd",
    selectionMatch: "#9a86fd",
    gutterBackground: "#2a2734",
    gutterForeground: "#545167",
    lineHighlight: "#36334280"
  },
  styles: [
    { tag: [u.comment, u.bracket, u.operator], color: "#6c6783" },
    { tag: [u.atom, u.number, u.keyword, u.link, u.attributeName, u.quote], color: "#ffcc99" },
    { tag: [u.emphasis, u.heading, u.tagName, u.propertyName, u.className, u.variableName], color: "#eeebff" },
    { tag: [u.typeName, u.url], color: "#eeebff" },
    { tag: u.string, color: "#ffb870" },
    /* { tag: [t.propertyName], color: '#9a86fd' }, */
    { tag: [u.propertyName], color: "#eeebff" },
    { tag: u.labelName, color: "#eeebff" }
  ]
}), K_ = {
  light: !0,
  background: "#fff",
  lineBackground: "#ffffff99",
  foreground: "#000",
  caret: "#FFFFFF",
  selection: "#d7d4f0",
  selectionMatch: "#d7d4f0",
  gutterBackground: "#f7f7f7",
  gutterForeground: "#999",
  lineHighlight: "#e8f2ff",
  gutterBorder: "transparent"
}, J_ = at({
  theme: "light",
  settings: {
    background: "#fff",
    foreground: "#000",
    caret: "#FFFFFF",
    selection: "#d7d4f0",
    selectionMatch: "#d7d4f0",
    gutterBackground: "#f7f7f7",
    gutterForeground: "#999",
    lineHighlight: "#006fff1c",
    gutterBorder: "transparent"
  },
  styles: [
    { tag: [u.comment], color: "#3F7F5F" },
    { tag: [u.documentMeta], color: "#FF1717" },
    { tag: u.keyword, color: "#7F0055", fontWeight: "bold" },
    { tag: u.atom, color: "#00f" },
    { tag: u.number, color: "#164" },
    { tag: u.propertyName, color: "#164" },
    { tag: [u.variableName, u.definition(u.variableName)], color: "#0000C0" },
    { tag: u.function(u.variableName), color: "#0000C0" },
    { tag: u.string, color: "#2A00FF" },
    { tag: u.operator, color: "black" },
    { tag: u.tagName, color: "#170" },
    { tag: u.attributeName, color: "#00c" },
    { tag: u.link, color: "#219" }
  ]
}), eR = {
  background: "#0d1117",
  lineBackground: "#0d111799",
  foreground: "#c9d1d9",
  caret: "#c9d1d9",
  selection: "#003d73",
  selectionMatch: "#003d73",
  lineHighlight: "#36334280"
}, tR = at({
  theme: "dark",
  settings: {
    background: "#0d1117",
    foreground: "#c9d1d9",
    caret: "#c9d1d9",
    selection: "#003d73",
    selectionMatch: "#003d73",
    lineHighlight: "#36334280"
  },
  styles: [
    { tag: u.labelName, color: "#d2a8ff" },
    { tag: [u.standard(u.tagName), u.tagName], color: "#7ee787" },
    { tag: [u.comment, u.bracket], color: "#8b949e" },
    { tag: [u.className, u.propertyName], color: "#d2a8ff" },
    { tag: [u.variableName, u.attributeName], color: "#d2a8ff" },
    { tag: [u.number, u.operator], color: "#79c0ff" },
    { tag: [u.keyword, u.typeName, u.typeOperator, u.typeName], color: "#ff7b72" },
    { tag: [u.string, u.meta, u.regexp], color: "#a5d6ff" },
    { tag: [u.name, u.quote], color: "#7ee787" },
    { tag: [u.heading, u.strong], color: "#d2a8ff", fontWeight: "bold" },
    { tag: [u.emphasis], color: "#d2a8ff", fontStyle: "italic" },
    { tag: [u.deleted], color: "#ffdcd7", backgroundColor: "ffeef0" },
    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#ffab70" },
    { tag: u.link, textDecoration: "underline" },
    { tag: u.strikethrough, textDecoration: "line-through" },
    { tag: u.invalid, color: "#f97583" }
  ]
}), nR = {
  light: !0,
  background: "#fff",
  lineBackground: "#ffffff99",
  foreground: "#24292e",
  selection: "#BBDFFF",
  selectionMatch: "#BBDFFF",
  gutterBackground: "#fff",
  gutterForeground: "#6e7781"
}, rR = at({
  theme: "light",
  settings: {
    background: "#fff",
    foreground: "#24292e",
    selection: "#BBDFFF",
    selectionMatch: "#BBDFFF",
    gutterBackground: "#fff",
    gutterForeground: "#6e7781"
  },
  styles: [
    { tag: [u.standard(u.tagName), u.tagName], color: "#116329" },
    { tag: [u.comment, u.bracket], color: "#6a737d" },
    { tag: [u.className, u.propertyName], color: "#6f42c1" },
    { tag: [u.variableName, u.attributeName, u.number, u.operator], color: "#005cc5" },
    { tag: [u.keyword, u.typeName, u.typeOperator, u.typeName], color: "#d73a49" },
    { tag: [u.string, u.meta, u.regexp], color: "#032f62" },
    { tag: [u.name, u.quote], color: "#22863a" },
    { tag: [u.heading, u.strong], color: "#24292e", fontWeight: "bold" },
    { tag: [u.emphasis], color: "#24292e", fontStyle: "italic" },
    { tag: [u.deleted], color: "#b31d28", backgroundColor: "ffeef0" },
    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#e36209" },
    { tag: [u.url, u.escape, u.regexp, u.link], color: "#032f62" },
    { tag: u.link, textDecoration: "underline" },
    { tag: u.strikethrough, textDecoration: "line-through" },
    { tag: u.invalid, color: "#cb2431" }
  ]
}), iR = {
  background: "#282828",
  lineBackground: "#28282899",
  foreground: "#ebdbb2",
  caret: "#ebdbb2",
  selection: "#bdae93",
  selectionMatch: "#bdae93",
  lineHighlight: "#3c3836",
  gutterBackground: "#282828",
  gutterForeground: "#7c6f64"
}, sR = at({
  theme: "dark",
  settings: {
    background: "#282828",
    foreground: "#ebdbb2",
    caret: "#ebdbb2",
    selection: "#b99d555c",
    selectionMatch: "#b99d555c",
    lineHighlight: "#baa1602b",
    gutterBackground: "#282828",
    gutterForeground: "#7c6f64"
  },
  styles: [
    { tag: u.keyword, color: "#fb4934" },
    { tag: [u.name, u.deleted, u.character, u.propertyName, u.macroName], color: "#8ec07c" },
    { tag: [u.variableName], color: "#83a598" },
    { tag: [u.function(u.variableName)], color: "#8ec07c", fontStyle: "bold" },
    { tag: [u.labelName], color: "#ebdbb2" },
    { tag: [u.color, u.constant(u.name), u.standard(u.name)], color: "#d3869b" },
    { tag: [u.definition(u.name), u.separator], color: "#ebdbb2" },
    { tag: [u.brace], color: "#ebdbb2" },
    { tag: [u.annotation], color: "#fb4934d" },
    { tag: [u.number, u.changed, u.annotation, u.modifier, u.self, u.namespace], color: "#d3869b" },
    { tag: [u.typeName, u.className], color: "#fabd2f" },
    { tag: [u.operatorKeyword], color: "#fb4934" },
    {
      tag: [u.tagName],
      color: "#8ec07c",
      fontStyle: "bold"
    },
    { tag: [u.squareBracket], color: "#fe8019" },
    { tag: [u.angleBracket], color: "#83a598" },
    { tag: [u.attributeName], color: "#8ec07c" },
    { tag: [u.regexp], color: "#8ec07c" },
    { tag: [u.quote], color: "#928374" },
    { tag: [u.string], color: "#ebdbb2" },
    {
      tag: u.link,
      color: "#a89984",
      textDecoration: "underline",
      textUnderlinePosition: "under"
    },
    { tag: [u.url, u.escape, u.special(u.string)], color: "#d3869b" },
    { tag: [u.meta], color: "#fabd2f" },
    { tag: [u.comment], color: "#928374", fontStyle: "italic" },
    { tag: u.strong, fontWeight: "bold", color: "#fe8019" },
    { tag: u.emphasis, fontStyle: "italic", color: "#b8bb26" },
    { tag: u.strikethrough, textDecoration: "line-through" },
    { tag: u.heading, fontWeight: "bold", color: "#b8bb26" },
    { tag: [u.heading1, u.heading2], fontWeight: "bold", color: "#b8bb26" },
    {
      tag: [u.heading3, u.heading4],
      fontWeight: "bold",
      color: "#fabd2f"
    },
    { tag: [u.heading5, u.heading6], color: "#fabd2f" },
    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#d3869b" },
    { tag: [u.processingInstruction, u.inserted], color: "#83a598" },
    { tag: [u.contentSeparator], color: "#fb4934" },
    { tag: u.invalid, color: "#fe8019", borderBottom: "1px dotted #fb4934d" }
  ]
}), aR = {
  light: !0,
  background: "#fbf1c7",
  lineBackground: "#fbf1c799",
  foreground: "#3c3836",
  caret: "#af3a03",
  selection: "#ebdbb2",
  selectionMatch: "#bdae93",
  lineHighlight: "#ebdbb2",
  gutterBackground: "#ebdbb2",
  gutterForeground: "#665c54",
  gutterBorder: "transparent"
}, oR = at({
  theme: "light",
  settings: {
    background: "#fbf1c7",
    foreground: "#3c3836",
    caret: "#af3a03",
    selection: "#bdae9391",
    selectionMatch: "#bdae9391",
    lineHighlight: "#a37f2238",
    gutterBackground: "#ebdbb2",
    gutterForeground: "#665c54",
    gutterBorder: "transparent"
  },
  styles: [
    { tag: u.keyword, color: "#9d0006" },
    {
      tag: [u.name, u.deleted, u.character, u.propertyName, u.macroName],
      color: "#427b58"
    },
    { tag: [u.variableName], color: "#076678" },
    { tag: [u.function(u.variableName)], color: "#79740e", fontStyle: "bold" },
    { tag: [u.labelName], color: "#3c3836" },
    {
      tag: [u.color, u.constant(u.name), u.standard(u.name)],
      color: "#8f3f71"
    },
    { tag: [u.definition(u.name), u.separator], color: "#3c3836" },
    { tag: [u.brace], color: "#3c3836" },
    {
      tag: [u.annotation],
      color: "#9d0006"
    },
    {
      tag: [u.number, u.changed, u.annotation, u.modifier, u.self, u.namespace],
      color: "#8f3f71"
    },
    {
      tag: [u.typeName, u.className],
      color: "#b57614"
    },
    {
      tag: [u.operator, u.operatorKeyword],
      color: "#9d0006"
    },
    {
      tag: [u.tagName],
      color: "#427b58",
      fontStyle: "bold"
    },
    {
      tag: [u.squareBracket],
      color: "#af3a03"
    },
    {
      tag: [u.angleBracket],
      color: "#076678"
    },
    {
      tag: [u.attributeName],
      color: "#427b58"
    },
    {
      tag: [u.regexp],
      color: "#427b58"
    },
    {
      tag: [u.quote],
      color: "#928374"
    },
    { tag: [u.string], color: "#3c3836" },
    {
      tag: u.link,
      color: "#7c6f64",
      textDecoration: "underline",
      textUnderlinePosition: "under"
    },
    {
      tag: [u.url, u.escape, u.special(u.string)],
      color: "#8f3f71"
    },
    { tag: [u.meta], color: "#b57614" },
    { tag: [u.comment], color: "#928374", fontStyle: "italic" },
    { tag: u.strong, fontWeight: "bold", color: "#af3a03" },
    { tag: u.emphasis, fontStyle: "italic", color: "#79740e" },
    { tag: u.strikethrough, textDecoration: "line-through" },
    { tag: u.heading, fontWeight: "bold", color: "#79740e" },
    { tag: [u.heading1, u.heading2], fontWeight: "bold", color: "#79740e" },
    {
      tag: [u.heading3, u.heading4],
      fontWeight: "bold",
      color: "#b57614"
    },
    {
      tag: [u.heading5, u.heading6],
      color: "#b57614"
    },
    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#8f3f71" },
    {
      tag: [u.processingInstruction, u.inserted],
      color: "#076678"
    },
    {
      tag: [u.contentSeparator],
      color: "#9d0006"
    },
    { tag: u.invalid, color: "#af3a03", borderBottom: "1px dotted #9d0006" }
  ]
}), lR = {
  background: "#212121",
  lineBackground: "#21212199",
  foreground: "#bdbdbd",
  caret: "#a0a4ae",
  selection: "#d7d4f0",
  selectionMatch: "#d7d4f0",
  gutterBackground: "#212121",
  gutterForeground: "#999",
  gutterActiveForeground: "#4f5b66",
  lineHighlight: "#111111"
}, uR = at({
  theme: "dark",
  settings: {
    background: "#212121",
    foreground: "#bdbdbd",
    caret: "#a0a4ae",
    selection: "#d7d4f063",
    selectionMatch: "#d7d4f063",
    gutterBackground: "#212121",
    gutterForeground: "#999",
    gutterActiveForeground: "#4f5b66",
    lineHighlight: "#333333"
  },
  styles: [
    { tag: u.keyword, color: "#cf6edf" },
    { tag: [u.name, u.deleted, u.character, u.macroName], color: "#56c8d8" },
    { tag: [u.propertyName], color: "#82AAFF" },
    { tag: [u.variableName], color: "#bdbdbd" },
    { tag: [u.function(u.variableName)], color: "#82AAFF" },
    { tag: [u.labelName], color: "#cf6edf" },
    { tag: [u.color, u.constant(u.name), u.standard(u.name)], color: "#facf4e" },
    { tag: [u.definition(u.name), u.separator], color: "#56c8d8" },
    { tag: [u.brace], color: "#cf6edf" },
    { tag: [u.annotation], color: "#f07178" },
    { tag: [u.number, u.changed, u.annotation, u.modifier, u.self, u.namespace], color: "#f07178" },
    { tag: [u.typeName, u.className], color: "#f07178" },
    { tag: [u.operator, u.operatorKeyword], color: "#82AAFF" },
    { tag: [u.tagName], color: "#99d066" },
    { tag: [u.squareBracket], color: "#f07178" },
    { tag: [u.angleBracket], color: "#606f7a" },
    { tag: [u.attributeName], color: "#bdbdbd" },
    { tag: [u.regexp], color: "#f07178" },
    { tag: [u.quote], color: "#6abf69" },
    { tag: [u.string], color: "#99d066" },
    {
      tag: u.link,
      color: "#56c8d8",
      textDecoration: "underline",
      textUnderlinePosition: "under"
    },
    { tag: [u.url, u.escape, u.special(u.string)], color: "#facf4e" },
    { tag: [u.meta], color: "#707d8b" },
    { tag: [u.comment], color: "#707d8b", fontStyle: "italic" },
    { tag: u.monospace, color: "#bdbdbd" },
    { tag: u.strong, fontWeight: "bold", color: "#f07178" },
    { tag: u.emphasis, fontStyle: "italic", color: "#99d066" },
    { tag: u.strikethrough, textDecoration: "line-through" },
    { tag: u.heading, fontWeight: "bold", color: "#facf4e" },
    { tag: u.heading1, fontWeight: "bold", color: "#facf4e" },
    {
      tag: [u.heading2, u.heading3, u.heading4],
      fontWeight: "bold",
      color: "#facf4e"
    },
    { tag: [u.heading5, u.heading6], color: "#facf4e" },
    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#56c8d8" },
    { tag: [u.processingInstruction, u.inserted], color: "#f07178" },
    { tag: [u.contentSeparator], color: "#56c8d8" },
    { tag: u.invalid, color: "#606f7a", borderBottom: "1px dotted #f07178" }
  ]
}), cR = {
  light: !0,
  background: "#FAFAFA",
  lineBackground: "#FAFAFA99",
  foreground: "#90A4AE",
  caret: "#272727",
  selection: "#80CBC440",
  selectionMatch: "#FAFAFA",
  gutterBackground: "#FAFAFA",
  gutterForeground: "#90A4AE",
  gutterBorder: "transparent",
  lineHighlight: "#CCD7DA50"
}, hR = at({
  theme: "light",
  settings: {
    background: "#FAFAFA",
    foreground: "#90A4AE",
    caret: "#272727",
    selection: "#80CBC440",
    selectionMatch: "#80CBC440",
    gutterBackground: "#FAFAFA",
    gutterForeground: "#90A4AE",
    gutterBorder: "transparent",
    lineHighlight: "#CCD7DA50"
  },
  styles: [
    { tag: u.keyword, color: "#39ADB5" },
    { tag: [u.name, u.deleted, u.character, u.macroName], color: "#90A4AE" },
    { tag: [u.propertyName], color: "#6182B8" },
    { tag: [u.processingInstruction, u.string, u.inserted, u.special(u.string)], color: "#91B859" },
    { tag: [u.function(u.variableName), u.labelName], color: "#6182B8" },
    { tag: [u.color, u.constant(u.name), u.standard(u.name)], color: "#39ADB5" },
    { tag: [u.definition(u.name), u.separator], color: "#90A4AE" },
    { tag: [u.className], color: "#E2931D" },
    { tag: [u.number, u.changed, u.annotation, u.modifier, u.self, u.namespace], color: "#F76D47" },
    { tag: [u.typeName], color: "#E2931D", fontStyle: "#E2931D" },
    { tag: [u.operator, u.operatorKeyword], color: "#39ADB5" },
    { tag: [u.url, u.escape, u.regexp, u.link], color: "#91B859" },
    { tag: [u.meta, u.comment], color: "#90A4AE" },
    { tag: u.strong, fontWeight: "bold" },
    { tag: u.emphasis, fontStyle: "italic" },
    { tag: u.link, textDecoration: "underline" },
    { tag: u.heading, fontWeight: "bold", color: "#39ADB5" },
    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#90A4AE" },
    { tag: u.invalid, color: "#E5393570" },
    { tag: u.strikethrough, textDecoration: "line-through" }
  ]
}), pR = {
  background: "#2e3440",
  lineBackground: "#2e344099",
  foreground: "#FFFFFF",
  caret: "#FFFFFF",
  selection: "#3b4252",
  selectionMatch: "#e5e9f0",
  gutterBackground: "#2e3440",
  gutterForeground: "#4c566a",
  gutterActiveForeground: "#d8dee9",
  lineHighlight: "#4c566a"
}, fR = at({
  theme: "dark",
  settings: {
    background: "#2e3440",
    foreground: "#FFFFFF",
    caret: "#FFFFFF",
    selection: "#00000073",
    selectionMatch: "#00000073",
    gutterBackground: "#2e3440",
    gutterForeground: "#4c566a",
    gutterActiveForeground: "#d8dee9",
    lineHighlight: "#4c566a29"
  },
  styles: [
    { tag: u.keyword, color: "#5e81ac" },
    { tag: [u.name, u.deleted, u.character, u.propertyName, u.macroName], color: "#88c0d0" },
    { tag: [u.variableName], color: "#8fbcbb" },
    { tag: [u.function(u.variableName)], color: "#8fbcbb" },
    { tag: [u.labelName], color: "#81a1c1" },
    { tag: [u.color, u.constant(u.name), u.standard(u.name)], color: "#5e81ac" },
    { tag: [u.definition(u.name), u.separator], color: "#a3be8c" },
    { tag: [u.brace], color: "#8fbcbb" },
    { tag: [u.annotation], color: "#d30102" },
    { tag: [u.number, u.changed, u.annotation, u.modifier, u.self, u.namespace], color: "#b48ead" },
    { tag: [u.typeName, u.className], color: "#ebcb8b" },
    { tag: [u.operator, u.operatorKeyword], color: "#a3be8c" },
    { tag: [u.tagName], color: "#b48ead" },
    { tag: [u.squareBracket], color: "#bf616a" },
    { tag: [u.angleBracket], color: "#d08770" },
    { tag: [u.attributeName], color: "#ebcb8b" },
    { tag: [u.regexp], color: "#5e81ac" },
    { tag: [u.quote], color: "#b48ead" },
    { tag: [u.string], color: "#a3be8c" },
    {
      tag: u.link,
      color: "#a3be8c",
      textDecoration: "underline",
      textUnderlinePosition: "under"
    },
    { tag: [u.url, u.escape, u.special(u.string)], color: "#8fbcbb" },
    { tag: [u.meta], color: "#88c0d0" },
    { tag: [u.monospace], color: "#d8dee9", fontStyle: "italic" },
    { tag: [u.comment], color: "#4c566a", fontStyle: "italic" },
    { tag: u.strong, fontWeight: "bold", color: "#5e81ac" },
    { tag: u.emphasis, fontStyle: "italic", color: "#5e81ac" },
    { tag: u.strikethrough, textDecoration: "line-through" },
    { tag: u.heading, fontWeight: "bold", color: "#5e81ac" },
    { tag: u.special(u.heading1), fontWeight: "bold", color: "#5e81ac" },
    { tag: u.heading1, fontWeight: "bold", color: "#5e81ac" },
    {
      tag: [u.heading2, u.heading3, u.heading4],
      fontWeight: "bold",
      color: "#5e81ac"
    },
    { tag: [u.heading5, u.heading6], color: "#5e81ac" },
    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#d08770" },
    { tag: [u.processingInstruction, u.inserted], color: "#8fbcbb" },
    { tag: [u.contentSeparator], color: "#ebcb8b" },
    { tag: u.invalid, color: "#434c5e", borderBottom: "1px dotted #d30102" }
  ]
}), dR = {
  background: "#272822",
  lineBackground: "#27282299",
  foreground: "#FFFFFF",
  caret: "#FFFFFF",
  selection: "#49483E",
  selectionMatch: "#49483E",
  gutterBackground: "#272822",
  gutterForeground: "#FFFFFF70",
  lineHighlight: "#00000059"
}, mR = at({
  theme: "dark",
  settings: {
    background: "#272822",
    foreground: "#FFFFFF",
    caret: "#FFFFFF",
    selection: "#49483E",
    selectionMatch: "#49483E",
    gutterBackground: "#272822",
    gutterForeground: "#FFFFFF70",
    lineHighlight: "#0000003b"
  },
  styles: [
    { tag: u.labelName, color: "#bababa" },
    { tag: [u.comment, u.documentMeta], color: "#8292a2" },
    { tag: [u.number, u.bool, u.null, u.atom], color: "#ae81ff" },
    { tag: [u.attributeValue, u.className, u.name], color: "#e6db74" },
    { tag: [u.propertyName, u.attributeName], color: "#a6e22e" },
    { tag: [u.variableName], color: "#9effff" },
    { tag: [u.squareBracket], color: "#bababa" },
    { tag: [u.string, u.special(u.brace)], color: "#e6db74" },
    { tag: [u.regexp, u.className, u.typeName, u.definition(u.typeName)], color: "#66d9ef" },
    {
      tag: [u.definition(u.variableName), u.definition(u.propertyName), u.function(u.variableName)],
      color: "#a6e22e"
    },
    // { tag: t.keyword, color: '#f92672' },
    { tag: [u.keyword, u.definitionKeyword, u.modifier, u.tagName, u.angleBracket], color: "#f92672" }
  ]
}), gR = {
  background: "#002b36",
  lineBackground: "#002b3699",
  foreground: "#93a1a1",
  caret: "#839496",
  selection: "#173541",
  selectionMatch: "#aafe661a",
  gutterBackground: "#00252f",
  gutterForeground: "#839496",
  lineHighlight: "#173541"
}, Ft = {
  background: "#002B36",
  foreground: "#839496",
  selection: "#004454AA",
  selectionMatch: "#005A6FAA",
  cursor: "#D30102",
  dropdownBackground: "#00212B",
  dropdownBorder: "#2AA19899",
  activeLine: "#00cafe11",
  matchingBracket: "#073642",
  keyword: "#859900",
  storage: "#93A1A1",
  variable: "#268BD2",
  parameter: "#268BD2",
  function: "#268BD2",
  string: "#2AA198",
  constant: "#CB4B16",
  type: "#859900",
  class: "#268BD2",
  number: "#D33682",
  comment: "#586E75",
  heading: "#268BD2",
  invalid: "#DC322F",
  regexp: "#DC322F",
  tag: "#268BD2"
}, bR = at({
  theme: "dark",
  settings: {
    background: Ft.background,
    foreground: Ft.foreground,
    caret: Ft.cursor,
    selection: Ft.selection,
    selectionMatch: Ft.selection,
    gutterBackground: Ft.background,
    gutterForeground: Ft.foreground,
    gutterBorder: "transparent",
    lineHighlight: Ft.activeLine
  },
  styles: [
    { tag: u.keyword, color: Ft.keyword },
    { tag: [u.name, u.deleted, u.character, u.macroName], color: Ft.variable },
    { tag: [u.propertyName], color: Ft.function },
    { tag: [u.processingInstruction, u.string, u.inserted, u.special(u.string)], color: Ft.string },
    { tag: [u.function(u.variableName), u.labelName], color: Ft.function },
    { tag: [u.color, u.constant(u.name), u.standard(u.name)], color: Ft.constant },
    { tag: [u.definition(u.name), u.separator], color: Ft.variable },
    { tag: [u.className], color: Ft.class },
    { tag: [u.number, u.changed, u.annotation, u.modifier, u.self, u.namespace], color: Ft.number },
    { tag: [u.typeName], color: Ft.type, fontStyle: Ft.type },
    { tag: [u.operator, u.operatorKeyword], color: Ft.keyword },
    { tag: [u.url, u.escape, u.regexp, u.link], color: Ft.regexp },
    { tag: [u.meta, u.comment], color: Ft.comment },
    { tag: u.tagName, color: Ft.tag },
    { tag: u.strong, fontWeight: "bold" },
    { tag: u.emphasis, fontStyle: "italic" },
    { tag: u.link, textDecoration: "underline" },
    { tag: u.heading, fontWeight: "bold", color: Ft.heading },
    { tag: [u.atom, u.bool, u.special(u.variableName)], color: Ft.variable },
    { tag: u.invalid, color: Ft.invalid },
    { tag: u.strikethrough, textDecoration: "line-through" }
  ]
}), yR = {
  light: !0,
  background: "#fdf6e3",
  lineBackground: "#fdf6e399",
  foreground: "#657b83",
  caret: "#586e75",
  selection: "#dfd9c8",
  selectionMatch: "#dfd9c8",
  gutterBackground: "#00000010",
  gutterForeground: "#657b83",
  lineHighlight: "#dfd9c8"
}, Bt = {
  background: "#FDF6E3",
  foreground: "#657B83",
  selection: "#EEE8D5",
  selectionMatch: "#EEE8D5",
  cursor: "#657B83",
  dropdownBackground: "#EEE8D5",
  dropdownBorder: "#D3AF86",
  activeLine: "#3d392d11",
  matchingBracket: "#EEE8D5",
  keyword: "#859900",
  storage: "#586E75",
  variable: "#268BD2",
  parameter: "#268BD2",
  function: "#268BD2",
  string: "#2AA198",
  constant: "#CB4B16",
  type: "#859900",
  class: "#268BD2",
  number: "#D33682",
  comment: "#93A1A1",
  heading: "#268BD2",
  invalid: "#DC322F",
  regexp: "#DC322F",
  tag: "#268BD2"
}, OR = at({
  theme: "light",
  settings: {
    background: Bt.background,
    foreground: Bt.foreground,
    caret: Bt.cursor,
    selection: Bt.selection,
    selectionMatch: Bt.selectionMatch,
    gutterBackground: Bt.background,
    gutterForeground: Bt.foreground,
    gutterBorder: "transparent",
    lineHighlight: Bt.activeLine
  },
  styles: [
    { tag: u.keyword, color: Bt.keyword },
    { tag: [u.name, u.deleted, u.character, u.macroName], color: Bt.variable },
    { tag: [u.propertyName], color: Bt.function },
    { tag: [u.processingInstruction, u.string, u.inserted, u.special(u.string)], color: Bt.string },
    { tag: [u.function(u.variableName), u.labelName], color: Bt.function },
    { tag: [u.color, u.constant(u.name), u.standard(u.name)], color: Bt.constant },
    { tag: [u.definition(u.name), u.separator], color: Bt.variable },
    { tag: [u.className], color: Bt.class },
    { tag: [u.number, u.changed, u.annotation, u.modifier, u.self, u.namespace], color: Bt.number },
    { tag: [u.typeName], color: Bt.type, fontStyle: Bt.type },
    { tag: [u.operator, u.operatorKeyword], color: Bt.keyword },
    { tag: [u.url, u.escape, u.regexp, u.link], color: Bt.regexp },
    { tag: [u.meta, u.comment], color: Bt.comment },
    { tag: u.tagName, color: Bt.tag },
    { tag: u.strong, fontWeight: "bold" },
    { tag: u.emphasis, fontStyle: "italic" },
    { tag: u.link, textDecoration: "underline" },
    { tag: u.heading, fontWeight: "bold", color: Bt.heading },
    { tag: [u.atom, u.bool, u.special(u.variableName)], color: Bt.variable },
    { tag: u.invalid, color: Bt.invalid },
    { tag: u.strikethrough, textDecoration: "line-through" }
  ]
}), vR = {
  background: "#303841",
  lineBackground: "#30384199",
  foreground: "#FFFFFF",
  caret: "#FBAC52",
  selection: "#4C5964",
  selectionMatch: "#3A546E",
  gutterBackground: "#303841",
  gutterForeground: "#FFFFFF70",
  lineHighlight: "#00000059"
}, xR = at({
  theme: "dark",
  settings: {
    background: "#303841",
    foreground: "#FFFFFF",
    caret: "#FBAC52",
    selection: "#4C5964",
    selectionMatch: "#3A546E",
    gutterBackground: "#303841",
    gutterForeground: "#FFFFFF70",
    lineHighlight: "#00000059"
  },
  styles: [
    { tag: u.labelName, color: "#A2A9B5" },
    { tag: [u.meta, u.comment], color: "#A2A9B5" },
    { tag: [u.attributeName, u.keyword], color: "#B78FBA" },
    { tag: u.function(u.variableName), color: "#5AB0B0" },
    { tag: [u.string, u.regexp, u.attributeValue], color: "#99C592" },
    { tag: u.operator, color: "#f47954" },
    // { tag: t.moduleKeyword, color: 'red' },
    { tag: [u.tagName, u.modifier], color: "#E35F63" },
    { tag: [u.number, u.definition(u.tagName), u.className, u.definition(u.variableName)], color: "#fbac52" },
    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#E35F63" },
    { tag: u.variableName, color: "#539ac4" },
    { tag: [u.propertyName, u.typeName], color: "#629ccd" },
    { tag: u.propertyName, color: "#36b7b5" }
  ]
}), kR = {
  background: "#1a1b26",
  lineBackground: "#1a1b2699",
  foreground: "#787c99",
  caret: "#c0caf5",
  selection: "#515c7e40",
  selectionMatch: "#16161e",
  gutterBackground: "#1a1b26",
  gutterForeground: "#787c99",
  gutterBorder: "transparent",
  lineHighlight: "#1e202e"
}, wR = at({
  theme: "dark",
  settings: {
    background: "#1a1b26",
    foreground: "#787c99",
    caret: "#c0caf5",
    selection: "#515c7e40",
    selectionMatch: "#16161e",
    gutterBackground: "#1a1b26",
    gutterForeground: "#787c99",
    gutterBorder: "transparent",
    lineHighlight: "#474b6611"
  },
  styles: [
    { tag: u.keyword, color: "#bb9af7" },
    { tag: [u.name, u.deleted, u.character, u.macroName], color: "#c0caf5" },
    { tag: [u.propertyName], color: "#7aa2f7" },
    { tag: [u.processingInstruction, u.string, u.inserted, u.special(u.string)], color: "#9ece6a" },
    { tag: [u.function(u.variableName), u.labelName], color: "#7aa2f7" },
    { tag: [u.color, u.constant(u.name), u.standard(u.name)], color: "#bb9af7" },
    { tag: [u.definition(u.name), u.separator], color: "#c0caf5" },
    { tag: [u.className], color: "#c0caf5" },
    { tag: [u.number, u.changed, u.annotation, u.modifier, u.self, u.namespace], color: "#ff9e64" },
    { tag: [u.typeName], color: "#0db9d7" },
    { tag: [u.operator, u.operatorKeyword], color: "#bb9af7" },
    { tag: [u.url, u.escape, u.regexp, u.link], color: "#b4f9f8" },
    { tag: [u.meta, u.comment], color: "#444b6a" },
    { tag: u.strong, fontWeight: "bold" },
    { tag: u.emphasis, fontStyle: "italic" },
    { tag: u.link, textDecoration: "underline" },
    { tag: u.heading, fontWeight: "bold", color: "#89ddff" },
    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#c0caf5" },
    { tag: u.invalid, color: "#ff5370" },
    { tag: u.strikethrough, textDecoration: "line-through" }
  ]
}), CR = {
  background: "#24283b",
  lineBackground: "#24283b99",
  foreground: "#7982a9",
  caret: "#c0caf5",
  selection: "#6f7bb630",
  selectionMatch: "#1f2335",
  gutterBackground: "#24283b",
  gutterForeground: "#7982a9",
  gutterBorder: "transparent",
  lineHighlight: "#292e42"
}, SR = at({
  theme: "dark",
  settings: {
    background: "#24283b",
    foreground: "#7982a9",
    caret: "#c0caf5",
    selection: "#6f7bb630",
    selectionMatch: "#343b5f",
    gutterBackground: "#24283b",
    gutterForeground: "#7982a9",
    gutterBorder: "transparent",
    lineHighlight: "#292e427a"
  },
  styles: [
    { tag: u.keyword, color: "#bb9af7" },
    { tag: [u.name, u.deleted, u.character, u.macroName], color: "#c0caf5" },
    { tag: [u.propertyName], color: "#7aa2f7" },
    { tag: [u.processingInstruction, u.string, u.inserted, u.special(u.string)], color: "#9ece6a" },
    { tag: [u.function(u.variableName), u.labelName], color: "#7aa2f7" },
    { tag: [u.color, u.constant(u.name), u.standard(u.name)], color: "#bb9af7" },
    { tag: [u.definition(u.name), u.separator], color: "#c0caf5" },
    { tag: [u.className], color: "#c0caf5" },
    { tag: [u.number, u.changed, u.annotation, u.modifier, u.self, u.namespace], color: "#ff9e64" },
    { tag: [u.typeName], color: "#2ac3de", fontStyle: "#2ac3de" },
    { tag: [u.operator, u.operatorKeyword], color: "#bb9af7" },
    { tag: [u.url, u.escape, u.regexp, u.link], color: "#b4f9f8" },
    { tag: [u.meta, u.comment], color: "#565f89" },
    { tag: u.strong, fontWeight: "bold" },
    { tag: u.emphasis, fontStyle: "italic" },
    { tag: u.link, textDecoration: "underline" },
    { tag: u.heading, fontWeight: "bold", color: "#89ddff" },
    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#c0caf5" },
    { tag: u.invalid, color: "#ff5370" },
    { tag: u.strikethrough, textDecoration: "line-through" }
  ]
}), AR = {
  light: !0,
  background: "#e1e2e7",
  lineBackground: "#e1e2e799",
  foreground: "#3760bf",
  caret: "#3760bf",
  selection: "#99a7df",
  selectionMatch: "#99a7df",
  gutterBackground: "#e1e2e7",
  gutterForeground: "#3760bf",
  gutterBorder: "transparent",
  lineHighlight: "#5f5faf11"
}, DR = at({
  theme: "light",
  settings: {
    background: "#e1e2e7",
    foreground: "#3760bf",
    caret: "#3760bf",
    selection: "#99a7df",
    selectionMatch: "#99a7df",
    gutterBackground: "#e1e2e7",
    gutterForeground: "#3760bf",
    gutterBorder: "transparent",
    lineHighlight: "#5f5faf11"
  },
  styles: [
    { tag: u.keyword, color: "#007197" },
    { tag: [u.name, u.deleted, u.character, u.macroName], color: "#3760bf" },
    { tag: [u.propertyName], color: "#3760bf" },
    { tag: [u.processingInstruction, u.string, u.inserted, u.special(u.string)], color: "#587539" },
    { tag: [u.function(u.variableName), u.labelName], color: "#3760bf" },
    { tag: [u.color, u.constant(u.name), u.standard(u.name)], color: "#3760bf" },
    { tag: [u.definition(u.name), u.separator], color: "#3760bf" },
    { tag: [u.className], color: "#3760bf" },
    { tag: [u.number, u.changed, u.annotation, u.modifier, u.self, u.namespace], color: "#b15c00" },
    { tag: [u.typeName], color: "#007197", fontStyle: "#007197" },
    { tag: [u.operator, u.operatorKeyword], color: "#007197" },
    { tag: [u.url, u.escape, u.regexp, u.link], color: "#587539" },
    { tag: [u.meta, u.comment], color: "#848cb5" },
    { tag: u.strong, fontWeight: "bold" },
    { tag: u.emphasis, fontStyle: "italic" },
    { tag: u.link, textDecoration: "underline" },
    { tag: u.heading, fontWeight: "bold", color: "#b15c00" },
    { tag: [u.atom, u.bool, u.special(u.variableName)], color: "#3760bf" },
    { tag: u.invalid, color: "#f52a65" },
    { tag: u.strikethrough, textDecoration: "line-through" }
  ]
}), PR = {
  background: "#1e1e1e",
  lineBackground: "#1e1e1e99",
  foreground: "#fff",
  caret: "#c6c6c6",
  selection: "#6199ff2f",
  selectionMatch: "#72a1ff59",
  lineHighlight: "#ffffff0f",
  gutterBackground: "#1e1e1e",
  gutterForeground: "#838383",
  gutterActiveForeground: "#fff"
}, ER = at({
  theme: "dark",
  settings: {
    background: "#1e1e1e",
    foreground: "#fff",
    caret: "#c6c6c6",
    selection: "#6199ff2f",
    selectionMatch: "#72a1ff59",
    lineHighlight: "#ffffff0f",
    gutterBackground: "#1e1e1e",
    gutterForeground: "#838383",
    gutterActiveForeground: "#fff",
    fontFamily: 'Menlo, Monaco, Consolas, "Andale Mono", "Ubuntu Mono", "Courier New", monospace'
  },
  styles: [
    {
      tag: [
        u.keyword,
        u.operatorKeyword,
        u.modifier,
        u.color,
        u.constant(u.name),
        u.standard(u.name),
        u.standard(u.tagName),
        u.special(u.brace),
        u.atom,
        u.bool,
        u.special(u.variableName)
      ],
      color: "#569cd6"
    },
    { tag: [u.controlKeyword, u.moduleKeyword], color: "#c586c0" },
    {
      tag: [
        u.name,
        u.deleted,
        u.character,
        u.macroName,
        u.propertyName,
        u.variableName,
        u.labelName,
        u.definition(u.name)
      ],
      color: "#9cdcfe"
    },
    { tag: u.heading, fontWeight: "bold", color: "#9cdcfe" },
    {
      tag: [u.typeName, u.className, u.tagName, u.number, u.changed, u.annotation, u.self, u.namespace],
      color: "#4ec9b0"
    },
    { tag: [u.function(u.variableName), u.function(u.propertyName)], color: "#dcdcaa" },
    { tag: [u.number], color: "#b5cea8" },
    { tag: [u.operator, u.punctuation, u.separator, u.url, u.escape, u.regexp], color: "#d4d4d4" },
    { tag: [u.regexp], color: "#d16969" },
    { tag: [u.special(u.string), u.processingInstruction, u.string, u.inserted], color: "#ce9178" },
    { tag: [u.angleBracket], color: "#808080" },
    { tag: u.strong, fontWeight: "bold" },
    { tag: u.emphasis, fontStyle: "italic" },
    { tag: u.strikethrough, textDecoration: "line-through" },
    { tag: [u.meta, u.comment], color: "#6a9955" },
    { tag: u.link, color: "#6a9955", textDecoration: "underline" },
    { tag: u.invalid, color: "#ff0000" }
  ]
}), FR = {
  background: "#ffffff",
  lineBackground: "#ffffff50",
  foreground: "#383a42",
  caret: "#000",
  selection: "#add6ff",
  selectionMatch: "#a8ac94",
  lineHighlight: "#99999926",
  gutterBackground: "#fff",
  gutterForeground: "#237893",
  gutterActiveForeground: "#0b216f",
  fontFamily: 'Menlo, Monaco, Consolas, "Andale Mono", "Ubuntu Mono", "Courier New", monospace'
}, BR = at({
  theme: "light",
  settings: {
    background: "#ffffff",
    foreground: "#383a42",
    caret: "#000",
    selection: "#add6ff",
    selectionMatch: "#a8ac94",
    lineHighlight: "#99999926",
    gutterBackground: "#fff",
    gutterForeground: "#237893",
    gutterActiveForeground: "#0b216f",
    fontFamily: 'Menlo, Monaco, Consolas, "Andale Mono", "Ubuntu Mono", "Courier New", monospace'
  },
  styles: [
    {
      tag: [
        u.keyword,
        u.operatorKeyword,
        u.modifier,
        u.color,
        u.constant(u.name),
        u.standard(u.name),
        u.standard(u.tagName),
        u.special(u.brace),
        u.atom,
        u.bool,
        u.special(u.variableName)
      ],
      color: "#0000ff"
    },
    { tag: [u.moduleKeyword, u.controlKeyword], color: "#af00db" },
    {
      tag: [
        u.name,
        u.deleted,
        u.character,
        u.macroName,
        u.propertyName,
        u.variableName,
        u.labelName,
        u.definition(u.name)
      ],
      color: "#0070c1"
    },
    { tag: u.heading, fontWeight: "bold", color: "#0070c1" },
    {
      tag: [u.typeName, u.className, u.tagName, u.number, u.changed, u.annotation, u.self, u.namespace],
      color: "#267f99"
    },
    { tag: [u.function(u.variableName), u.function(u.propertyName)], color: "#795e26" },
    { tag: [u.number], color: "#098658" },
    { tag: [u.operator, u.punctuation, u.separator, u.url, u.escape, u.regexp], color: "#383a42" },
    { tag: [u.regexp], color: "#af00db" },
    { tag: [u.special(u.string), u.processingInstruction, u.string, u.inserted], color: "#a31515" },
    { tag: [u.angleBracket], color: "#383a42" },
    { tag: u.strong, fontWeight: "bold" },
    { tag: u.emphasis, fontStyle: "italic" },
    { tag: u.strikethrough, textDecoration: "line-through" },
    { tag: [u.meta, u.comment], color: "#008000" },
    { tag: u.link, color: "#4078f2", textDecoration: "underline" },
    { tag: u.invalid, color: "#e45649" }
  ]
}), MR = {
  light: !0,
  background: "#fff",
  lineBackground: "#ffffff99",
  foreground: "#3D3D3D",
  selection: "#BBDFFF",
  selectionMatch: "#BBDFFF",
  gutterBackground: "#fff",
  gutterForeground: "#AFAFAF",
  lineHighlight: "#EDF4FF"
}, QR = at({
  theme: "light",
  settings: {
    background: "#fff",
    foreground: "#3D3D3D",
    selection: "#BBDFFF",
    selectionMatch: "#BBDFFF",
    gutterBackground: "#fff",
    gutterForeground: "#AFAFAF",
    lineHighlight: "#d5e6ff69"
  },
  styles: [
    { tag: [u.comment, u.quote], color: "#707F8D" },
    { tag: [u.typeName, u.typeOperator], color: "#aa0d91" },
    { tag: [u.keyword], color: "#aa0d91", fontWeight: "bold" },
    { tag: [u.string, u.meta], color: "#D23423" },
    { tag: [u.name], color: "#032f62" },
    { tag: [u.typeName], color: "#522BB2" },
    { tag: [u.variableName], color: "#23575C" },
    { tag: [u.definition(u.variableName)], color: "#327A9E" },
    { tag: [u.regexp, u.link], color: "#0e0eff" }
  ]
}), TR = {
  light: !0,
  background: "#FFFFFF",
  lineBackground: "#FFFFFF99",
  foreground: "#000000",
  caret: "#FBAC52",
  selection: "#FFD420",
  selectionMatch: "#FFD420",
  gutterBackground: "#f5f5f5",
  gutterForeground: "#4D4D4C",
  gutterBorder: "transparent",
  lineHighlight: "#00000012"
}, jR = at({
  theme: "light",
  settings: {
    background: "#FFFFFF",
    foreground: "#000000",
    caret: "#FBAC52",
    selection: "#FFD420",
    selectionMatch: "#FFD420",
    gutterBackground: "#f5f5f5",
    gutterForeground: "#4D4D4C",
    gutterBorder: "transparent",
    lineHighlight: "#00000012"
  },
  styles: [
    { tag: [u.meta, u.comment], color: "#804000" },
    { tag: [u.keyword, u.strong], color: "#0000FF" },
    { tag: [u.number], color: "#FF0080" },
    { tag: [u.string], color: "#FF0080" },
    { tag: [u.variableName], color: "#006600" },
    { tag: [u.escape], color: "#33CC33" },
    { tag: [u.tagName], color: "#1C02FF" },
    { tag: [u.heading], color: "#0C07FF" },
    { tag: [u.quote], color: "#000000" },
    { tag: [u.list], color: "#B90690" },
    { tag: [u.documentMeta], color: "#888888" },
    { tag: [u.function(u.variableName)], color: "#0000A2" },
    { tag: [u.definition(u.typeName), u.typeName], color: "#6D79DE" }
  ]
}), _R = {
  light: !0,
  background: "#f2f1f8",
  lineBackground: "#f2f1f899",
  foreground: "#0c006b",
  caret: "#5c49e9",
  selection: "#d5d1f2",
  selectionMatch: "#d5d1f2",
  gutterBackground: "#f2f1f8",
  gutterForeground: "#0c006b70",
  lineHighlight: "#e1def3"
}, RR = at({
  theme: "light",
  settings: {
    background: "#f2f1f8",
    foreground: "#0c006b",
    caret: "#5c49e9",
    selection: "#d5d1f2",
    selectionMatch: "#d5d1f2",
    gutterBackground: "#f2f1f8",
    gutterForeground: "#0c006b70",
    lineHighlight: "#16067911"
  },
  styles: [
    { tag: u.comment, color: "#9995b7" },
    {
      tag: u.keyword,
      color: "#ff5792",
      fontWeight: "bold"
    },
    { tag: [u.definitionKeyword, u.modifier], color: "#ff5792" },
    { tag: [u.className, u.tagName, u.definition(u.typeName)], color: "#0094f0" },
    { tag: [u.number, u.bool, u.null, u.special(u.brace)], color: "#5842ff" },
    { tag: [u.definition(u.propertyName), u.function(u.variableName)], color: "#0095a8" },
    { tag: u.typeName, color: "#b3694d" },
    { tag: [u.propertyName, u.variableName], color: "#fa8900" },
    { tag: u.operator, color: "#ff5792" },
    { tag: u.self, color: "#e64100" },
    { tag: [u.string, u.regexp], color: "#00b368" },
    { tag: [u.paren, u.bracket], color: "#0431fa" },
    { tag: u.labelName, color: "#00bdd6" },
    { tag: u.attributeName, color: "#e64100" },
    { tag: u.angleBracket, color: "#9995b7" }
  ]
}), jf = {
  strudelTheme: k_,
  algoboy: P_,
  androidstudio: L_,
  atomone: N_,
  aura: X_,
  bbedit: jR,
  blackscreen: C_,
  bluescreen: w_,
  CutiePi: j_,
  darcula: q_,
  dracula: z_,
  duotoneDark: Y_,
  eclipse: J_,
  githubDark: tR,
  githubLight: rR,
  greenText: $_,
  gruvboxDark: sR,
  gruvboxLight: oR,
  sonicPink: __,
  materialDark: uR,
  materialLight: hR,
  monokai: mR,
  noctisLilac: RR,
  nord: fR,
  redText: R_,
  solarizedDark: bR,
  solarizedLight: OR,
  sublime: xR,
  teletext: A_,
  tokyoNight: wR,
  tokyoNightDay: DR,
  tokyoNightStorm: SR,
  vscodeDark: ER,
  vscodeLight: BR,
  whitescreen: S_,
  xcodeLight: QR
}, hu = {
  strudelTheme: rD,
  bluescreen: iD,
  blackscreen: sD,
  whitescreen: aD,
  teletext: cD,
  algoboy: hD,
  androidstudio: Z_,
  atomone: I_,
  aura: V_,
  bbedit: TR,
  darcula: W_,
  dracula: U_,
  duotoneDark: H_,
  eclipse: K_,
  CutiePi: Tf,
  sonicPink: fD,
  githubLight: nR,
  githubDark: eR,
  greenText: mD,
  gruvboxDark: iR,
  gruvboxLight: aR,
  materialDark: lR,
  materialLight: cR,
  noctisLilac: _R,
  nord: pR,
  monokai: dR,
  redText: dD,
  solarizedLight: yR,
  solarizedDark: gR,
  sublime: vR,
  tokyoNight: kR,
  tokyoNightStorm: CR,
  vscodeDark: PR,
  vscodeLight: FR,
  xcodeLight: MR,
  tokyoNightDay: AR
};
function $R(t) {
  const e = /#([0-9A-Fa-f]{6}|[0-9A-Fa-f]{3})/g, n = [];
  let r;
  for (; (r = e.exec(t)) !== null; ) {
    const i = r[0];
    n.includes(i) || n.push(i);
  }
  return n;
}
function ZR(t) {
  return $R(IR(t));
}
function LR() {
  const t = /* @__PURE__ */ new WeakSet();
  return (e, n) => {
    if (typeof n == "object" && n !== null) {
      if (t.has(n))
        return;
      t.add(n);
    }
    return n;
  };
}
function IR(t) {
  return JSON.stringify(t, LR());
}
const gD = (t) => jf[t] || jf.strudelTheme;
function bD(t) {
  const e = document.createElement("style");
  document.head.appendChild(e);
  const n = e.sheet, r = n.insertRule(t, 0);
  return () => n.deleteRule(r);
}
let ab, lp, pu, ob = "strudel-theme-vars";
function yD(t) {
  document.getElementById(ob) || (pu = document.createElement("style"), pu.id = ob, document.head.append(pu)), km(t);
}
function km(t) {
  if (ab === t)
    return;
  ab = t, hu[t] || console.warn("theme", t, "has no settings.. defaulting to strudelTheme settings");
  const e = hu[t] || hu.strudelTheme;
  pu.innerHTML = `:root {
      ${Object.entries(e).map(([n, r]) => `--${n}: ${r} !important;`).join(`
`)}
    }`, jF(e), e.light ? document.documentElement.classList.remove("dark") : document.documentElement.classList.add("dark"), lp?.(), lp = void 0, e.customStyle && (lp = bD(e.customStyle));
}
let pa = {};
const NR = (t) => `slider_${t}`;
class OD extends Ri {
  constructor(e, n, r, i, s, a, o) {
    super(), this.value = e, this.min = n, this.max = r, this.from = i, this.originalFrom = i, this.to = s, this.step = a, this.view = o;
  }
  eq() {
    return !1;
  }
  toDOM() {
    let e = document.createElement("span");
    e.setAttribute("aria-hidden", "true"), e.className = "cm-slider";
    let n = e.appendChild(document.createElement("input"));
    return n.type = "range", n.min = this.min, n.max = this.max, n.step = this.step ?? (this.max - this.min) / 1e3, n.originalValue = this.value, n.value = n.originalValue, n.from = this.from, n.originalFrom = this.originalFrom, n.to = this.to, n.style = "width:64px;margin-right:4px;transform:translateY(4px)", this.slider = n, n.addEventListener("input", (r) => {
      const i = r.target.value;
      let s = i;
      const a = n.from + n.originalValue.length;
      let o = { from: n.from, to: a, insert: s };
      n.originalValue = s, n.value = s, this.view.dispatch({ changes: o });
      const l = NR(n.originalFrom);
      window.postMessage({ type: "cm-slider", value: Number(i), id: l });
    }), e;
  }
  ignoreEvent(e) {
    return !0;
  }
}
const wm = Ie.define(), vD = (t, e) => {
  t.dispatch({ effects: wm.of(e) });
};
function VR(t, e) {
  return t.filter((n) => n.type === "slider").map(({ from: n, to: r, value: i, min: s, max: a, step: o }) => Te.widget({
    widget: new OD(i, s, a, n, r, o, e),
    side: 0
  }).range(
    n
    /* , to */
  ));
}
const xD = fn.fromClass(
  class {
    decorations;
    //: DecorationSet
    constructor(t) {
      this.decorations = Te.set([]);
    }
    update(t) {
      t.transactions.forEach((e) => {
        if (e.docChanged) {
          this.decorations = this.decorations.map(e.changes);
          const n = this.decorations.iter();
          for (; n.value; )
            n.value?.widget?.slider && (n.value.widget.slider.from = n.from, n.value.widget.slider.to = n.to), n.next();
        }
        for (let n of e.effects)
          n.is(wm) && (this.decorations = Te.set(VR(n.value, t.view)));
      });
    }
  },
  {
    decorations: (t) => t.decorations
  }
);
let XR = (t) => (console.warn("slider will only work when the transpiler is used... passing value as is"), hn(t)), WR = (t, e, n, r) => (pa[t] = e, Kb(() => pa[t]));
typeof window < "u" && window.addEventListener("message", (t) => {
  t.data.type === "cm-slider" && (pa[t.data.id] !== void 0 ? pa[t.data.id] = t.data.value : console.warn(`slider with id "${t.data.id}" is not registered. Only ${Object.keys(pa)}`));
});
const Cm = Ie.define({
  map: ({ from: t, to: e }, n) => ({ from: n.mapPos(t), to: n.mapPos(e) })
}), kD = (t, e) => {
  t.dispatch({ effects: Cm.of(e) });
};
function qR(t) {
  return t.sort((e, n) => e.to - n.to).map((e) => Te.widget({
    widget: new SD(e),
    side: 0,
    block: !0
  }).range(e.to));
}
const UR = Vt.define(
  /* <DecorationSet> */
  {
    create() {
      return Te.none;
    },
    update(t, e) {
      t = t.map(e.changes);
      for (let n of e.effects)
        if (n.is(Cm))
          try {
            t = t.update({
              filter: () => !1,
              add: qR(n.value)
            });
          } catch (r) {
            console.log("err", r);
          }
      return t;
    },
    provide: (t) => be.decorations.from(t)
  }
), wD = {};
function CD(t, e) {
  wD[t] = e, e.id = t;
}
class SD extends Ri {
  constructor(e) {
    super(), this.widgetConfig = e;
  }
  eq() {
    return !0;
  }
  toDOM() {
    const e = F2(this.widgetConfig);
    return wD[e];
  }
  ignoreEvent(e) {
    return !0;
  }
}
const AD = [UR];
function Rs(t, e) {
  g9(t), e && (de.prototype[t] = function(n, r = { fold: 1 }) {
    return e(n, r, this);
  });
}
function Za(t, e = {}) {
  const { width: n = 500, height: r = 60, pixelRatio: i = window.devicePixelRatio } = e;
  let s = document.getElementById(t) || document.createElement("canvas");
  return s.width = n * i, s.height = r * i, s.style.width = n + "px", s.style.height = r + "px", CD(t, s), s;
}
Rs("_pianoroll", (t, e = {}, n) => {
  const r = Za(t, e).getContext("2d");
  return n.tag(t).pianoroll({ fold: 1, ...e, ctx: r, id: t });
});
Rs("_punchcard", (t, e = {}, n) => {
  const r = Za(t, e).getContext("2d");
  return n.tag(t).punchcard({ fold: 1, ...e, ctx: r, id: t });
});
Rs("_spiral", (t, e = {}, n) => {
  let r = e.size || 275;
  e = { width: r, height: r, ...e, size: r / 5 };
  const i = Za(t, e).getContext("2d");
  return n.tag(t).spiral({ ...e, ctx: i, id: t });
});
Rs("_scope", (t, e = {}, n) => {
  e = { width: 500, height: 60, pos: 0.5, scale: 1, ...e };
  const r = Za(t, e).getContext("2d");
  return n.tag(t).scope({ ...e, ctx: r, id: t });
});
Rs("_pitchwheel", (t, e = {}, n) => {
  let r = e.size || 200;
  e = { width: r, height: r, ...e, size: r / 5 };
  const i = Za(t, e).getContext("2d");
  return n.pitchwheel({ ...e, ctx: i, id: t });
});
Rs("_spectrum", (t, e = {}, n) => {
  let r = e.size || 200;
  e = { width: r, height: r, ...e, size: r / 5 };
  const i = Za(t, e).getContext("2d");
  return n.spectrum({ ...e, ctx: i, id: t });
});
let lb = (t) => t, zs = {}, _f = { addEventListener() {
}, removeEventListener() {
} };
function GR() {
  try {
    return typeof localStorage < "u";
  } catch {
    return !1;
  }
}
GR() && (zs = localStorage);
let zR = {
  addEventListener(t, e, n) {
    window.addEventListener("storage", e), window.addEventListener("pageshow", n);
  },
  removeEventListener(t, e, n) {
    window.removeEventListener("storage", e), window.removeEventListener("pageshow", n);
  }
};
typeof window < "u" && (_f = zR);
function HR(t, e = void 0, n = {}) {
  let r = n.encode || lb, i = n.decode || lb, s = R2(e), a = s.set;
  s.set = (c) => {
    typeof c > "u" ? delete zs[t] : zs[t] = r(c), a(c);
  };
  function o(c) {
    c.key === t ? c.newValue === null ? a(void 0) : a(i(c.newValue)) : zs[t] || a(void 0);
  }
  function l() {
    s.set(zs[t] ? i(zs[t]) : e);
  }
  return q9(s, () => {
    if (l(), n.listen !== !1)
      return _f.addEventListener(t, o, l), () => {
        _f.removeEventListener(t, o, l);
      };
  }), s;
}
const ea = {
  isLineWrappingEnabled: (t) => t ? be.lineWrapping : [],
  isBracketMatchingEnabled: (t) => t ? YM({ brackets: "()[]{}<>" }) : [],
  isBracketClosingEnabled: (t) => t ? L7() : [],
  isLineNumbersDisplayed: (t) => t ? Y6() : [],
  theme: gD,
  isAutoCompletionEnabled: VT,
  isTooltipEnabled: qT,
  isPatternHighlightingEnabled: QA,
  isActiveLineHighlighted: (t) => t ? [M6(), eM()] : [],
  isFlashEnabled: FA,
  keybindings: x_
}, Rf = Object.fromEntries(Object.keys(ea).map((t) => [t, new qo()])), DD = {
  keybindings: "codemirror",
  isBracketMatchingEnabled: !1,
  isBracketClosingEnabled: !0,
  isLineNumbersDisplayed: !0,
  isActiveLineHighlighted: !1,
  isAutoCompletionEnabled: !1,
  isPatternHighlightingEnabled: !0,
  isFlashEnabled: !0,
  isTooltipEnabled: !1,
  isLineWrappingEnabled: !1,
  theme: "strudelTheme",
  fontFamily: "monospace",
  fontSize: 18
}, fa = HR("codemirror-settings", DD, {
  encode: JSON.stringify,
  decode: JSON.parse
});
function PD({ initialCode: t = "", onChange: e, onEvaluate: n, onStop: r, root: i }) {
  const s = fa.get(), a = Object.keys(Rf).map(
    (l) => Rf[l].of(ea[l](FD(s[l])))
  );
  yD(s.theme);
  let o = dt.create({
    doc: t,
    extensions: [
      /* search(),
      highlightSelectionMatches(), */
      ...a,
      BT(),
      xD,
      AD,
      // indentOnInput(), // works without. already brought with javascript extension?
      // bracketMatching(), // does not do anything
      gS(XM),
      aQ(),
      be.updateListener.of((l) => e(l)),
      P6({ cursorBlinkRate: 0 }),
      Tr.highest(
        js.of([
          {
            key: "Ctrl-Enter",
            run: () => n?.()
          },
          {
            key: "Alt-Enter",
            run: () => n?.()
          },
          {
            key: "Ctrl-.",
            run: () => r?.()
          },
          {
            key: "Alt-.",
            preventDefault: !0,
            run: () => r?.()
          }
          /* {
            key: 'Ctrl-Shift-.',
            run: () => (onPanic ? onPanic() : onStop?.()),
          },
          {
            key: 'Ctrl-Shift-Enter',
            run: () => (onReEvaluate ? onReEvaluate() : onEvaluate?.()),
          }, */
        ])
      )
    ]
  });
  return new be({
    state: o,
    parent: i
  });
}
class ED {
  constructor(e) {
    const {
      root: n,
      id: r,
      initialCode: i = "",
      onDraw: s,
      drawContext: a,
      drawTime: o = [0, 0],
      autodraw: l,
      prebake: c,
      bgFill: h = !0,
      solo: f = !0,
      ...m
    } = e;
    this.code = i, this.root = n, this.miniLocations = [], this.widgets = [], this.drawTime = o, this.drawContext = a, this.onDraw = s || this.draw, this.id = r || YR(), this.solo = f, this.drawer = new TF((C, S, M, Z) => {
      const q = C.filter((_) => _.isActive(S));
      this.highlight(q, S), this.onDraw(C, S, Z);
    }, o), this.prebaked = c(), l && this.drawFirstFrame(), this.repl = Qk({
      ...m,
      id: r,
      onToggle: (C) => {
        m?.onToggle?.(C), C ? (this.drawer.start(this.repl.scheduler), this.solo && document.dispatchEvent(
          new CustomEvent("start-repl", {
            detail: this.id
          })
        )) : (this.drawer.stop(), lc(this.editor, []), Fm(!0, r));
      },
      beforeEval: async () => {
        Fm(!0, r), await this.prebaked, await m?.beforeEval?.();
      },
      afterEval: (C) => {
        this.miniLocations = C.meta?.miniLocations, this.widgets = C.meta?.widgets;
        const S = this.widgets.filter((q) => q.type === "slider");
        vD(this.editor, S);
        const M = this.widgets.filter((q) => q.type !== "slider");
        kD(this.editor, M), lc(this.editor, this.miniLocations), m?.afterEval?.(C);
        const Z = C.pattern.getPainters().length ? this.drawTime : [0, 0];
        this.drawer.setDrawTime(Z), this.drawer.invalidate(this.repl.scheduler);
      }
    }), this.editor = PD({
      root: n,
      initialCode: i,
      onChange: (C) => {
        C.docChanged && (this.code = C.state.doc.toString(), this.repl.setCode?.(this.code));
      },
      onEvaluate: () => this.evaluate(),
      onStop: () => this.stop()
    });
    const y = this.root.querySelector(".cm-editor");
    y && (this.root.style.display = "block", h && (this.root.style.backgroundColor = "var(--background)"), y.style.backgroundColor = "transparent");
    const x = fa.get();
    this.setFontSize(x.fontSize), this.setFontFamily(x.fontFamily), this.onStartRepl = (C) => {
      this.solo && C.detail !== this.id && this.stop();
    }, document.addEventListener("start-repl", this.onStartRepl);
  }
  draw(e, n, r) {
    r?.forEach((i) => i(this.drawContext, n, e, this.drawTime));
  }
  async drawFirstFrame() {
    if (this.onDraw) {
      await this.prebaked;
      try {
        await this.repl.evaluate(this.code, !1), this.drawer.invalidate(this.repl.scheduler, -1e-3), this.onDraw?.(this.drawer.visibleHaps, -1e-3, this.drawer.painters);
      } catch {
        console.warn("first frame could not be painted");
      }
    }
  }
  async evaluate() {
    this.flash(), await this.repl.evaluate(this.code);
  }
  async stop() {
    this.repl.scheduler.stop();
  }
  async toggle() {
    this.repl.scheduler.started ? this.repl.stop() : this.evaluate();
  }
  flash(e) {
    EA(this.editor, e);
  }
  highlight(e, n) {
    BA(this.editor, n, e);
  }
  setFontSize(e) {
    this.root.style.fontSize = e + "px";
  }
  setFontFamily(e) {
    this.root.style.fontFamily = e;
    const n = this.root.querySelector(".cm-scroller");
    n && (n.style.fontFamily = e);
  }
  reconfigureExtension(e, n) {
    if (!ea[e]) {
      console.warn(`extension ${e} is not known`);
      return;
    }
    n = FD(n);
    const r = ea[e](n, this);
    this.editor.dispatch({
      effects: Rf[e].reconfigure(r)
    }), e === "theme" && km(n);
  }
  setLineWrappingEnabled(e) {
    this.reconfigureExtension("isLineWrappingEnabled", e);
  }
  setBracketMatchingEnabled(e) {
    this.reconfigureExtension("isBracketMatchingEnabled", e);
  }
  setLineNumbersDisplayed(e) {
    this.reconfigureExtension("isLineNumbersDisplayed", e);
  }
  setBracketClosingEnabled(e) {
    this.reconfigureExtension("isBracketClosingEnabled", e);
  }
  setTheme(e) {
    this.reconfigureExtension("theme", e);
  }
  setAutocompletionEnabled(e) {
    this.reconfigureExtension("isAutoCompletionEnabled", e);
  }
  updateSettings(e) {
    this.setFontSize(e.fontSize), this.setFontFamily(e.fontFamily);
    for (let r in ea)
      this.reconfigureExtension(r, e[r]);
    const n = { ...fa.get(), ...e };
    fa.set(n);
  }
  changeSetting(e, n) {
    if (ea[e]) {
      this.reconfigureExtension(e, n);
      return;
    } else e === "fontFamily" ? this.setFontFamily(n) : e === "fontSize" && this.setFontSize(n);
  }
  setCode(e) {
    const n = { from: 0, to: this.editor.state.doc.length, insert: e };
    this.editor.dispatch({ changes: n });
  }
  clear() {
    this.onStartRepl && document.removeEventListener("start-repl", this.onStartRepl);
  }
  getCursorLocation() {
    return this.editor.state.selection.main.head;
  }
  setCursorLocation(e) {
    return this.editor.dispatch({ selection: { anchor: e } });
  }
  appendCode(e) {
    const n = this.getCursorLocation();
    this.setCode(this.code + e), this.setCursorLocation(n);
  }
}
function FD(t) {
  return { true: !0, false: !1 }[t] ?? t;
}
function YR() {
  return Math.floor((1 + Math.random()) * 65536).toString(16).substring(1);
}
const KR = W("markcss"), JR = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  BlockWidget: SD,
  SliderWidget: OD,
  StrudelMirror: ED,
  activateTheme: km,
  addWidget: Cm,
  codemirrorSettings: fa,
  defaultSettings: DD,
  flash: EA,
  flashField: PA,
  highlightExtension: MA,
  highlightMiniLocations: BA,
  initEditor: PD,
  initTheme: yD,
  injectStyle: bD,
  isFlashEnabled: FA,
  isPatternHighlightingEnabled: QA,
  markcss: KR,
  registerWidget: Rs,
  setFlash: oc,
  setMiniLocations: fm,
  setSliderWidgets: wm,
  setWidget: CD,
  settings: hu,
  showMiniLocations: dm,
  slider: XR,
  sliderPlugin: xD,
  sliderValues: pa,
  sliderWithID: WR,
  theme: gD,
  themeColors: ZR,
  themes: jf,
  toggleBlockComment: om,
  toggleBlockCommentByLine: QS,
  toggleComment: _c,
  toggleLineComment: MS,
  updateMiniLocations: lc,
  updateSliderWidgets: vD,
  updateWidgets: kD,
  widgetPlugin: AD
}, Symbol.toStringTag, { value: "Module" }));
async function e$() {
  const t = hd(
    // import('@strudel/core'),
    jk,
    import("./index-CdjOWG_K.js"),
    Promise.resolve().then(() => GF),
    import("./index-COgyKC44.js"),
    Promise.resolve().then(() => C4),
    Promise.resolve().then(() => JR),
    import("./hydra-DWeTNsFI.js"),
    import("./index-8NBBbJ2z.js"),
    import("./index-CAoMeQn6.js")
    // import('@strudel/xen'),
    // import('@strudel/serial'),
    // import('@strudel/csound'),
    // import('@strudel/osc'),
  ), e = "https://raw.githubusercontent.com/felixroos/dough-samples/main/", n = "https://raw.githubusercontent.com/todepond/samples/main/";
  await Promise.all([
    t,
    sw(),
    uw(),
    //registerSoundfonts(),
    // need dynamic import here, because importing @strudel/soundfonts fails on server:
    // => getting "window is not defined", as soon as "@strudel/soundfonts" is imported statically
    // seems to be a problem with soundfont2
    import("./index-8NBBbJ2z.js").then(({ registerSoundfonts: r }) => r()),
    Ni(`${e}/tidal-drum-machines.json`),
    Ni(`${e}/piano.json`),
    Ni(`${e}/Dirt-Samples.json`),
    Ni(`${e}/EmuSP12.json`),
    Ni(`${e}/vcsl.json`),
    Ni(`${e}/mridangam.json`)
  ]), H2(`${n}/tidal-drum-machines-alias.json`);
}
const t$ = _s("C8"), n$ = (t, e) => t * e + (1 - e) / 2;
de.prototype.piano = function() {
  return this.fmap((t) => ({ ...t, clip: t.clip ?? 1 })).s("piano").release(0.1).fmap((t) => {
    const e = cb(t), n = n$(Math.min(Math.round(e) / t$, 1), 0.5);
    return { ...t, pan: (t.pan || 1) * n };
  });
};
if (typeof HTMLElement < "u") {
  class t extends HTMLElement {
    static observedAttributes = ["code"];
    settings = fa.get();
    editor = null;
    sync = !1;
    solo = !0;
    constructor() {
      super();
    }
    attributeChangedCallback(n, r, i) {
      n === "code" && (this.code = i, this.editor?.setCode(i));
    }
    connectedCallback() {
      setTimeout(() => {
        const s = (this.innerHTML + "").replace("<!--", "").replace("-->", "").trim();
        s && this.setAttribute("code", s);
      });
      const n = document.createElement("div");
      this.parentElement.insertBefore(n, this.nextSibling);
      const r = Ti(), i = [-2, 2];
      this.editor = new ED({
        defaultOutput: Fd,
        getTime: () => ht().currentTime,
        transpiler: b9,
        root: n,
        initialCode: "// LOADING",
        pattern: St,
        drawTime: i,
        drawContext: r,
        prebake: e$,
        onUpdateState: (s) => {
          const a = new CustomEvent("update", {
            detail: s
          });
          this.dispatchEvent(a);
        },
        solo: this.solo,
        sync: this.sync
      }), this.editor.updateSettings(this.settings), this.editor.setCode(this.code);
    }
    // Element functionality written in here
  }
  customElements.define("strudel-editor", t);
}
export {
  En as A,
  Jf as B,
  _s as C,
  TF as D,
  aP as E,
  QF as F,
  Kb as G,
  xs as H,
  Ai as I,
  uP as J,
  ht as K,
  Si as L,
  ko as M,
  xo as N,
  Lf as O,
  de as P,
  cP as Q,
  Zo as R,
  le as S,
  fc as T,
  hn as U,
  St as V,
  b$ as W,
  _B as X,
  Nt as Y,
  e$ as Z,
  pd as _,
  l$ as a,
  p$ as b,
  Fm as c,
  i$ as d,
  Di as e,
  c$ as f,
  Ti as g,
  o$ as h,
  jF as i,
  Zk as j,
  _F as k,
  g$ as l,
  f$ as m,
  LF as n,
  Yf as o,
  m$ as p,
  Cv as q,
  u$ as r,
  h$ as s,
  Oe as t,
  yp as u,
  mc as v,
  a$ as w,
  $k as x,
  s$ as y,
  d$ as z
};
